{"/home/travis/build/npmtest/node-npmtest-async/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2},"b":{"1":[2,1,1],"2":[2,1],"3":[1,1],"4":[2,1]},"f":{"1":2,"2":2,"3":2,"4":2},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":1},"end":{"line":13,"column":13}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":5},"end":{"line":20,"column":17}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":9},"end":{"line":24,"column":21}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":5},"end":{"line":47,"column":17}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":50,"column":5}},"2":{"start":{"line":15,"column":4},"end":{"line":15,"column":14}},"3":{"start":{"line":20,"column":4},"end":{"line":42,"column":9}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":19}},"5":{"start":{"line":24,"column":8},"end":{"line":32,"column":13}},"6":{"start":{"line":25,"column":12},"end":{"line":30,"column":13}},"7":{"start":{"line":26,"column":16},"end":{"line":28,"column":27}},"8":{"start":{"line":31,"column":12},"end":{"line":31,"column":53}},"9":{"start":{"line":34,"column":8},"end":{"line":36,"column":21}},"10":{"start":{"line":38,"column":8},"end":{"line":39,"column":49}},"11":{"start":{"line":41,"column":8},"end":{"line":41,"column":33}},"12":{"start":{"line":47,"column":4},"end":{"line":49,"column":9}},"13":{"start":{"line":48,"column":8},"end":{"line":48,"column":15}}},"branchMap":{"1":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":31},"end":{"line":26,"column":72}},{"start":{"line":27,"column":20},"end":{"line":27,"column":70}},{"start":{"line":28,"column":20},"end":{"line":28,"column":26}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":27},"end":{"line":31,"column":39}},{"start":{"line":31,"column":43},"end":{"line":31,"column":52}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":35,"column":14},"end":{"line":35,"column":20}},{"start":{"line":36,"column":14},"end":{"line":36,"column":20}}]},"4":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":38},"end":{"line":38,"column":59}},{"start":{"line":39,"column":12},"end":{"line":39,"column":31}}]}},"code":["/* istanbul instrument in package npmtest_async */","/* jslint-utility2 */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 4,","    maxlen: 100,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        (function () {","            try {","                local.modeJs = typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            } catch (ignore) {","            }","            local.modeJs = local.modeJs || 'browser';","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // re-init local","        local = local.global.local = (local.global.utility2 ||","            require('utility2')).requireReadme();","        // init test","        local.testRunInit(local);","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","}());",""],"l":{"13":2,"15":2,"20":2,"22":2,"24":2,"25":2,"26":2,"31":2,"34":2,"38":2,"41":2,"47":2,"48":2}},"/home/travis/build/npmtest/node-npmtest-async/lib.npmtest_async.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/lib.npmtest_async.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":0,"26":2,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":2,"63":2},"b":{"1":[2,1,1],"2":[2,0],"3":[2,1,1],"4":[2,1],"5":[1,1],"6":[2,2],"7":[1,1]},"f":{"1":2,"2":2,"3":2,"4":0,"5":2,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":1},"end":{"line":13,"column":13}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":5},"end":{"line":21,"column":17}},"skip":true},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":9},"end":{"line":23,"column":21}},"skip":true},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":27},"end":{"line":31,"column":43}},"skip":true},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":9},"end":{"line":47,"column":21}},"skip":true},"6":{"name":"(anonymous_6)","line":65,"loc":{"start":{"line":65,"column":20},"end":{"line":65,"column":32}},"skip":true}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":120,"column":5}},"2":{"start":{"line":15,"column":4},"end":{"line":15,"column":14}},"3":{"start":{"line":21,"column":4},"end":{"line":119,"column":9},"skip":true},"4":{"start":{"line":23,"column":8},"end":{"line":43,"column":13},"skip":true},"5":{"start":{"line":24,"column":12},"end":{"line":24,"column":43},"skip":true},"6":{"start":{"line":25,"column":12},"end":{"line":25,"column":71},"skip":true},"7":{"start":{"line":26,"column":12},"end":{"line":26,"column":52},"skip":true},"8":{"start":{"line":27,"column":12},"end":{"line":29,"column":13},"skip":true},"9":{"start":{"line":28,"column":16},"end":{"line":28,"column":23},"skip":true},"10":{"start":{"line":30,"column":12},"end":{"line":30,"column":41},"skip":true},"11":{"start":{"line":31,"column":12},"end":{"line":42,"column":14},"skip":true},"12":{"start":{"line":36,"column":16},"end":{"line":36,"column":61},"skip":true},"13":{"start":{"line":37,"column":16},"end":{"line":37,"column":43},"skip":true},"14":{"start":{"line":38,"column":16},"end":{"line":38,"column":55},"skip":true},"15":{"start":{"line":39,"column":16},"end":{"line":39,"column":35},"skip":true},"16":{"start":{"line":41,"column":16},"end":{"line":41,"column":28},"skip":true},"17":{"start":{"line":45,"column":8},"end":{"line":45,"column":19},"skip":true},"18":{"start":{"line":47,"column":8},"end":{"line":55,"column":13},"skip":true},"19":{"start":{"line":48,"column":12},"end":{"line":53,"column":13},"skip":true},"20":{"start":{"line":49,"column":16},"end":{"line":51,"column":27},"skip":true},"21":{"start":{"line":54,"column":12},"end":{"line":54,"column":53},"skip":true},"22":{"start":{"line":57,"column":8},"end":{"line":59,"column":21},"skip":true},"23":{"start":{"line":61,"column":8},"end":{"line":63,"column":18},"skip":true},"24":{"start":{"line":65,"column":8},"end":{"line":70,"column":10},"skip":true},"25":{"start":{"line":69,"column":12},"end":{"line":69,"column":19},"skip":true},"26":{"start":{"line":72,"column":8},"end":{"line":111,"column":9},"skip":true},"27":{"start":{"line":73,"column":12},"end":{"line":73,"column":56},"skip":true},"28":{"start":{"line":77,"column":12},"end":{"line":77,"column":45},"skip":true},"29":{"start":{"line":78,"column":12},"end":{"line":78,"column":59},"skip":true},"30":{"start":{"line":79,"column":12},"end":{"line":79,"column":47},"skip":true},"31":{"start":{"line":80,"column":12},"end":{"line":80,"column":47},"skip":true},"32":{"start":{"line":81,"column":12},"end":{"line":81,"column":51},"skip":true},"33":{"start":{"line":82,"column":12},"end":{"line":82,"column":45},"skip":true},"34":{"start":{"line":83,"column":12},"end":{"line":83,"column":43},"skip":true},"35":{"start":{"line":84,"column":12},"end":{"line":84,"column":39},"skip":true},"36":{"start":{"line":85,"column":12},"end":{"line":85,"column":45},"skip":true},"37":{"start":{"line":86,"column":12},"end":{"line":86,"column":45},"skip":true},"38":{"start":{"line":87,"column":12},"end":{"line":87,"column":37},"skip":true},"39":{"start":{"line":88,"column":12},"end":{"line":88,"column":41},"skip":true},"40":{"start":{"line":89,"column":12},"end":{"line":89,"column":43},"skip":true},"41":{"start":{"line":90,"column":12},"end":{"line":90,"column":45},"skip":true},"42":{"start":{"line":91,"column":12},"end":{"line":91,"column":39},"skip":true},"43":{"start":{"line":92,"column":12},"end":{"line":92,"column":37},"skip":true},"44":{"start":{"line":93,"column":12},"end":{"line":93,"column":41},"skip":true},"45":{"start":{"line":94,"column":12},"end":{"line":94,"column":47},"skip":true},"46":{"start":{"line":95,"column":12},"end":{"line":95,"column":49},"skip":true},"47":{"start":{"line":96,"column":12},"end":{"line":96,"column":55},"skip":true},"48":{"start":{"line":97,"column":12},"end":{"line":97,"column":49},"skip":true},"49":{"start":{"line":98,"column":12},"end":{"line":98,"column":41},"skip":true},"50":{"start":{"line":99,"column":12},"end":{"line":99,"column":45},"skip":true},"51":{"start":{"line":100,"column":12},"end":{"line":100,"column":61},"skip":true},"52":{"start":{"line":101,"column":12},"end":{"line":101,"column":45},"skip":true},"53":{"start":{"line":102,"column":12},"end":{"line":102,"column":39},"skip":true},"54":{"start":{"line":103,"column":12},"end":{"line":103,"column":39},"skip":true},"55":{"start":{"line":104,"column":12},"end":{"line":104,"column":39},"skip":true},"56":{"start":{"line":105,"column":12},"end":{"line":105,"column":41},"skip":true},"57":{"start":{"line":106,"column":12},"end":{"line":106,"column":37},"skip":true},"58":{"start":{"line":107,"column":12},"end":{"line":107,"column":37},"skip":true},"59":{"start":{"line":108,"column":12},"end":{"line":108,"column":41},"skip":true},"60":{"start":{"line":109,"column":12},"end":{"line":109,"column":35},"skip":true},"61":{"start":{"line":110,"column":12},"end":{"line":110,"column":49},"skip":true},"62":{"start":{"line":113,"column":8},"end":{"line":113,"column":50},"skip":true},"63":{"start":{"line":118,"column":8},"end":{"line":118,"column":15},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":49},"skip":true},{"start":{"line":25,"column":53},"end":{"line":25,"column":59},"skip":true},{"start":{"line":25,"column":64},"end":{"line":25,"column":70},"skip":true}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":12},"end":{"line":27,"column":12},"skip":true},{"start":{"line":27,"column":12},"end":{"line":27,"column":12},"skip":true}]},"3":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":31},"end":{"line":49,"column":72},"skip":true},{"start":{"line":50,"column":20},"end":{"line":50,"column":70},"skip":true},{"start":{"line":51,"column":20},"end":{"line":51,"column":26},"skip":true}]},"4":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":27},"end":{"line":54,"column":39},"skip":true},{"start":{"line":54,"column":43},"end":{"line":54,"column":52},"skip":true}]},"5":{"line":57,"type":"cond-expr","locations":[{"start":{"line":58,"column":14},"end":{"line":58,"column":20},"skip":true},{"start":{"line":59,"column":14},"end":{"line":59,"column":20},"skip":true}]},"6":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":16},"end":{"line":61,"column":44},"skip":true},{"start":{"line":63,"column":12},"end":{"line":63,"column":17},"skip":true}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":8},"skip":true},{"start":{"line":72,"column":8},"end":{"line":72,"column":8},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_async */","/* jslint-utility2 */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 4,","    maxlen: 100,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    /* istanbul ignore next */","    (function () {","        // init debug_inline","        (function () {","            var consoleError, context, key;","            context = (typeof window === \"object\" && window) || global;","            key = \"debug_inline\".replace(\"_i\", \"I\");","            if (context[key]) {","                return;","            }","            consoleError = console.error;","            context[key] = function (arg0) {","            /*","             * this function will both print arg0 to stderr and return it","             */","                // debug arguments","                context[\"_\" + key + \"Arguments\"] = arguments;","                consoleError(\"\\n\\n\" + key);","                consoleError.apply(console, arguments);","                consoleError(\"\\n\");","                // return arg0 for inspection","                return arg0;","            };","        }());","        // init local","        local = {};","        // init modeJs","        (function () {","            try {","                local.modeJs = typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            } catch (ignore) {","            }","            local.modeJs = local.modeJs || 'browser';","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // re-init local","        local = local.global.utility2_rollup ||","            // local.global.utility2_rollup_old || require('./assets.utility2.rollup.js') ||","            local;","        // init nop","        local.nop = function () {","        /*","         * this function will do nothing","         */","            return;","        };","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_async = local;","        } else {","            // require builtins","            // local.assert = require('assert');","            local.buffer = require('buffer');","            local.child_process = require('child_process');","            local.cluster = require('cluster');","            local.console = require('console');","            local.constants = require('constants');","            local.crypto = require('crypto');","            local.dgram = require('dgram');","            local.dns = require('dns');","            local.domain = require('domain');","            local.events = require('events');","            local.fs = require('fs');","            local.http = require('http');","            local.https = require('https');","            local.module = require('module');","            local.net = require('net');","            local.os = require('os');","            local.path = require('path');","            local.process = require('process');","            local.punycode = require('punycode');","            local.querystring = require('querystring');","            local.readline = require('readline');","            local.repl = require('repl');","            local.stream = require('stream');","            local.string_decoder = require('string_decoder');","            local.timers = require('timers');","            local.tls = require('tls');","            local.tty = require('tty');","            local.url = require('url');","            local.util = require('util');","            local.v8 = require('v8');","            local.vm = require('vm');","            local.zlib = require('zlib');","            module.exports = local;","            module.exports.__dirname = __dirname;","        }","        // init lib main","        local.local = local.npmtest_async = local;","","","","        /* validateLineSortedReset */","        return;","    }());","}());",""],"l":{"13":2,"15":2,"21":2,"23":2,"24":2,"25":2,"26":2,"27":2,"28":2,"30":1,"31":1,"36":1,"37":1,"38":1,"39":1,"41":1,"45":2,"47":2,"48":2,"49":2,"54":2,"57":2,"61":2,"65":2,"69":1,"72":2,"73":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"113":2,"118":2}},"/home/travis/build/npmtest/node-npmtest-async/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":20,"38":20,"39":20,"40":20,"41":0,"42":20,"43":20,"44":20,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":3,"86":3,"87":3,"88":0,"89":1,"90":1,"91":1,"92":6,"93":1,"94":2,"95":0,"96":2,"97":1,"98":1,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0},"b":{"1":[2,1,1],"2":[2,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,20],"16":[20,0],"17":[1,1],"18":[3,3],"19":[0,3],"20":[1,1],"21":[1,2,0,2,1],"22":[1,0],"23":[1,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":20,"8":20,"9":3,"10":1,"11":3,"12":6,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":28,"loc":{"start":{"line":28,"column":1},"end":{"line":28,"column":13}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":5},"end":{"line":35,"column":17}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":9},"end":{"line":39,"column":21}}},"4":{"name":"(anonymous_4)","line":66,"loc":{"start":{"line":66,"column":31},"end":{"line":66,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":75,"loc":{"start":{"line":75,"column":26},"end":{"line":75,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":119,"loc":{"start":{"line":119,"column":33},"end":{"line":119,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":121,"loc":{"start":{"line":121,"column":27},"end":{"line":121,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":59},"end":{"line":129,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":45},"end":{"line":139,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":140,"loc":{"start":{"line":140,"column":73},"end":{"line":140,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":196,"loc":{"start":{"line":196,"column":18},"end":{"line":196,"column":34}},"skip":true},"12":{"name":"(anonymous_12)","line":469,"loc":{"start":{"line":469,"column":47},"end":{"line":469,"column":73}},"skip":true},"13":{"name":"(anonymous_13)","line":502,"loc":{"start":{"line":502,"column":32},"end":{"line":502,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":28,"column":0},"end":{"line":513,"column":5}},"2":{"start":{"line":30,"column":4},"end":{"line":30,"column":14}},"3":{"start":{"line":35,"column":4},"end":{"line":58,"column":9}},"4":{"start":{"line":37,"column":8},"end":{"line":37,"column":19}},"5":{"start":{"line":39,"column":8},"end":{"line":47,"column":13}},"6":{"start":{"line":40,"column":12},"end":{"line":45,"column":13}},"7":{"start":{"line":41,"column":16},"end":{"line":43,"column":27}},"8":{"start":{"line":46,"column":12},"end":{"line":46,"column":53}},"9":{"start":{"line":49,"column":8},"end":{"line":51,"column":21}},"10":{"start":{"line":53,"column":8},"end":{"line":55,"column":45}},"11":{"start":{"line":57,"column":8},"end":{"line":57,"column":35}},"12":{"start":{"line":59,"column":4},"end":{"line":512,"column":5}},"13":{"start":{"line":66,"column":8},"end":{"line":117,"column":10},"skip":true},"14":{"start":{"line":67,"column":12},"end":{"line":85,"column":13},"skip":true},"15":{"start":{"line":73,"column":16},"end":{"line":84,"column":19},"skip":true},"16":{"start":{"line":76,"column":20},"end":{"line":83,"column":21},"skip":true},"17":{"start":{"line":79,"column":24},"end":{"line":79,"column":43},"skip":true},"18":{"start":{"line":80,"column":24},"end":{"line":80,"column":30},"skip":true},"19":{"start":{"line":82,"column":24},"end":{"line":82,"column":49},"skip":true},"20":{"start":{"line":86,"column":12},"end":{"line":103,"column":13},"skip":true},"21":{"start":{"line":89,"column":16},"end":{"line":98,"column":17},"skip":true},"22":{"start":{"line":90,"column":20},"end":{"line":90,"column":88},"skip":true},"23":{"start":{"line":91,"column":20},"end":{"line":91,"column":97},"skip":true},"24":{"start":{"line":92,"column":20},"end":{"line":92,"column":42},"skip":true},"25":{"start":{"line":93,"column":20},"end":{"line":93,"column":48},"skip":true},"26":{"start":{"line":96,"column":20},"end":{"line":96,"column":86},"skip":true},"27":{"start":{"line":97,"column":20},"end":{"line":97,"column":96},"skip":true},"28":{"start":{"line":99,"column":16},"end":{"line":99,"column":22},"skip":true},"29":{"start":{"line":102,"column":16},"end":{"line":102,"column":22},"skip":true},"30":{"start":{"line":104,"column":12},"end":{"line":116,"column":13},"skip":true},"31":{"start":{"line":110,"column":16},"end":{"line":115,"column":17},"skip":true},"32":{"start":{"line":112,"column":20},"end":{"line":112,"column":78},"skip":true},"33":{"start":{"line":114,"column":20},"end":{"line":114,"column":47},"skip":true},"34":{"start":{"line":119,"column":8},"end":{"line":137,"column":11},"skip":true},"35":{"start":{"line":120,"column":12},"end":{"line":120,"column":54},"skip":true},"36":{"start":{"line":121,"column":12},"end":{"line":136,"column":14},"skip":true},"37":{"start":{"line":122,"column":16},"end":{"line":122,"column":28},"skip":true},"38":{"start":{"line":123,"column":16},"end":{"line":123,"column":69},"skip":true},"39":{"start":{"line":124,"column":16},"end":{"line":124,"column":75},"skip":true},"40":{"start":{"line":125,"column":16},"end":{"line":127,"column":17},"skip":true},"41":{"start":{"line":126,"column":20},"end":{"line":126,"column":27},"skip":true},"42":{"start":{"line":129,"column":16},"end":{"line":133,"column":36},"skip":true},"43":{"start":{"line":130,"column":20},"end":{"line":132,"column":55},"skip":true},"44":{"start":{"line":135,"column":16},"end":{"line":135,"column":57},"skip":true},"45":{"start":{"line":139,"column":8},"end":{"line":143,"column":11},"skip":true},"46":{"start":{"line":140,"column":12},"end":{"line":142,"column":15},"skip":true},"47":{"start":{"line":141,"column":16},"end":{"line":141,"column":70},"skip":true},"48":{"start":{"line":145,"column":8},"end":{"line":145,"column":31},"skip":true},"49":{"start":{"line":146,"column":8},"end":{"line":146,"column":14},"skip":true},"50":{"start":{"line":154,"column":8},"end":{"line":154,"column":31},"skip":true},"51":{"start":{"line":157,"column":8},"end":{"line":157,"column":41},"skip":true},"52":{"start":{"line":158,"column":8},"end":{"line":158,"column":55},"skip":true},"53":{"start":{"line":159,"column":8},"end":{"line":159,"column":43},"skip":true},"54":{"start":{"line":160,"column":8},"end":{"line":160,"column":43},"skip":true},"55":{"start":{"line":161,"column":8},"end":{"line":161,"column":47},"skip":true},"56":{"start":{"line":162,"column":8},"end":{"line":162,"column":41},"skip":true},"57":{"start":{"line":163,"column":8},"end":{"line":163,"column":39},"skip":true},"58":{"start":{"line":164,"column":8},"end":{"line":164,"column":35},"skip":true},"59":{"start":{"line":165,"column":8},"end":{"line":165,"column":41},"skip":true},"60":{"start":{"line":166,"column":8},"end":{"line":166,"column":41},"skip":true},"61":{"start":{"line":167,"column":8},"end":{"line":167,"column":33},"skip":true},"62":{"start":{"line":168,"column":8},"end":{"line":168,"column":37},"skip":true},"63":{"start":{"line":169,"column":8},"end":{"line":169,"column":39},"skip":true},"64":{"start":{"line":170,"column":8},"end":{"line":170,"column":41},"skip":true},"65":{"start":{"line":171,"column":8},"end":{"line":171,"column":35},"skip":true},"66":{"start":{"line":172,"column":8},"end":{"line":172,"column":33},"skip":true},"67":{"start":{"line":173,"column":8},"end":{"line":173,"column":37},"skip":true},"68":{"start":{"line":174,"column":8},"end":{"line":174,"column":43},"skip":true},"69":{"start":{"line":175,"column":8},"end":{"line":175,"column":45},"skip":true},"70":{"start":{"line":176,"column":8},"end":{"line":176,"column":51},"skip":true},"71":{"start":{"line":177,"column":8},"end":{"line":177,"column":45},"skip":true},"72":{"start":{"line":178,"column":8},"end":{"line":178,"column":37},"skip":true},"73":{"start":{"line":179,"column":8},"end":{"line":179,"column":41},"skip":true},"74":{"start":{"line":180,"column":8},"end":{"line":180,"column":57},"skip":true},"75":{"start":{"line":181,"column":8},"end":{"line":181,"column":41},"skip":true},"76":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"77":{"start":{"line":183,"column":8},"end":{"line":183,"column":35},"skip":true},"78":{"start":{"line":184,"column":8},"end":{"line":184,"column":35},"skip":true},"79":{"start":{"line":185,"column":8},"end":{"line":185,"column":37},"skip":true},"80":{"start":{"line":186,"column":8},"end":{"line":186,"column":33},"skip":true},"81":{"start":{"line":187,"column":8},"end":{"line":187,"column":33},"skip":true},"82":{"start":{"line":188,"column":8},"end":{"line":188,"column":37},"skip":true},"83":{"start":{"line":191,"column":8},"end":{"line":191,"column":50},"skip":true},"84":{"start":{"line":192,"column":8},"end":{"line":205,"column":11},"skip":true},"85":{"start":{"line":197,"column":12},"end":{"line":197,"column":30},"skip":true},"86":{"start":{"line":198,"column":12},"end":{"line":198,"column":66},"skip":true},"87":{"start":{"line":199,"column":12},"end":{"line":204,"column":13},"skip":true},"88":{"start":{"line":200,"column":16},"end":{"line":203,"column":18},"skip":true},"89":{"start":{"line":207,"column":8},"end":{"line":455,"column":2},"skip":true},"90":{"start":{"line":460,"column":8},"end":{"line":463,"column":36},"skip":true},"91":{"start":{"line":466,"column":8},"end":{"line":482,"column":15},"skip":true},"92":{"start":{"line":470,"column":16},"end":{"line":481,"column":17},"skip":true},"93":{"start":{"line":472,"column":20},"end":{"line":472,"column":60},"skip":true},"94":{"start":{"line":474,"column":20},"end":{"line":474,"column":43},"skip":true},"95":{"start":{"line":476,"column":20},"end":{"line":476,"column":43},"skip":true},"96":{"start":{"line":478,"column":20},"end":{"line":478,"column":35},"skip":true},"97":{"start":{"line":480,"column":20},"end":{"line":480,"column":34},"skip":true},"98":{"start":{"line":484,"column":8},"end":{"line":486,"column":9},"skip":true},"99":{"start":{"line":485,"column":12},"end":{"line":485,"column":18},"skip":true},"100":{"start":{"line":487,"column":8},"end":{"line":489,"column":54},"skip":true},"101":{"start":{"line":490,"column":8},"end":{"line":490,"column":82},"skip":true},"102":{"start":{"line":493,"column":8},"end":{"line":495,"column":9},"skip":true},"103":{"start":{"line":494,"column":12},"end":{"line":494,"column":82},"skip":true},"104":{"start":{"line":497,"column":8},"end":{"line":499,"column":9},"skip":true},"105":{"start":{"line":498,"column":12},"end":{"line":498,"column":18},"skip":true},"106":{"start":{"line":500,"column":8},"end":{"line":500,"column":54},"skip":true},"107":{"start":{"line":501,"column":8},"end":{"line":501,"column":69},"skip":true},"108":{"start":{"line":502,"column":8},"end":{"line":510,"column":36},"skip":true},"109":{"start":{"line":503,"column":12},"end":{"line":503,"column":61},"skip":true},"110":{"start":{"line":504,"column":12},"end":{"line":507,"column":13},"skip":true},"111":{"start":{"line":505,"column":16},"end":{"line":505,"column":75},"skip":true},"112":{"start":{"line":506,"column":16},"end":{"line":506,"column":23},"skip":true},"113":{"start":{"line":508,"column":12},"end":{"line":508,"column":38},"skip":true},"114":{"start":{"line":509,"column":12},"end":{"line":509,"column":27},"skip":true},"115":{"start":{"line":511,"column":8},"end":{"line":511,"column":14},"skip":true}},"branchMap":{"1":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":31},"end":{"line":41,"column":72}},{"start":{"line":42,"column":20},"end":{"line":42,"column":70}},{"start":{"line":43,"column":20},"end":{"line":43,"column":26}}]},"2":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":27},"end":{"line":46,"column":39}},{"start":{"line":46,"column":43},"end":{"line":46,"column":52}}]},"3":{"line":49,"type":"cond-expr","locations":[{"start":{"line":50,"column":14},"end":{"line":50,"column":20}},{"start":{"line":51,"column":14},"end":{"line":51,"column":20}}]},"4":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":16},"end":{"line":53,"column":44}},{"start":{"line":53,"column":49},"end":{"line":55,"column":43}}]},"5":{"line":53,"type":"cond-expr","locations":[{"start":{"line":54,"column":14},"end":{"line":54,"column":49}},{"start":{"line":55,"column":14},"end":{"line":55,"column":43}}]},"6":{"line":59,"type":"switch","locations":[{"start":{"line":65,"column":4},"end":{"line":146,"column":14},"skip":true},{"start":{"line":152,"column":4},"end":{"line":511,"column":14},"skip":true}]},"7":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":12},"skip":true},{"start":{"line":67,"column":12},"end":{"line":67,"column":12},"skip":true}]},"8":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":16},"end":{"line":67,"column":22},"skip":true},{"start":{"line":67,"column":27},"end":{"line":67,"column":32},"skip":true},{"start":{"line":68,"column":20},"end":{"line":68,"column":39},"skip":true},{"start":{"line":69,"column":20},"end":{"line":69,"column":49},"skip":true},{"start":{"line":70,"column":20},"end":{"line":70,"column":58},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":69},"skip":true}]},"9":{"line":76,"type":"switch","locations":[{"start":{"line":77,"column":20},"end":{"line":77,"column":33},"skip":true},{"start":{"line":78,"column":20},"end":{"line":80,"column":30},"skip":true},{"start":{"line":81,"column":20},"end":{"line":82,"column":49},"skip":true}]},"10":{"line":86,"type":"switch","locations":[{"start":{"line":87,"column":12},"end":{"line":99,"column":22},"skip":true},{"start":{"line":101,"column":12},"end":{"line":102,"column":22},"skip":true}]},"11":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":20},"end":{"line":86,"column":25},"skip":true},{"start":{"line":86,"column":29},"end":{"line":86,"column":48},"skip":true},{"start":{"line":86,"column":52},"end":{"line":86,"column":74},"skip":true}]},"12":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":16},"end":{"line":89,"column":16},"skip":true},{"start":{"line":89,"column":16},"end":{"line":89,"column":16},"skip":true}]},"13":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":12},"end":{"line":104,"column":12},"skip":true},{"start":{"line":104,"column":12},"end":{"line":104,"column":12},"skip":true}]},"14":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":16},"end":{"line":104,"column":61},"skip":true},{"start":{"line":104,"column":66},"end":{"line":104,"column":72},"skip":true},{"start":{"line":104,"column":77},"end":{"line":104,"column":82},"skip":true},{"start":{"line":105,"column":20},"end":{"line":105,"column":39},"skip":true},{"start":{"line":106,"column":20},"end":{"line":106,"column":49},"skip":true},{"start":{"line":107,"column":20},"end":{"line":107,"column":58},"skip":true},{"start":{"line":108,"column":20},"end":{"line":108,"column":68},"skip":true}]},"15":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":16},"end":{"line":125,"column":16},"skip":true},{"start":{"line":125,"column":16},"end":{"line":125,"column":16},"skip":true}]},"16":{"line":130,"type":"cond-expr","locations":[{"start":{"line":131,"column":26},"end":{"line":131,"column":29},"skip":true},{"start":{"line":132,"column":26},"end":{"line":132,"column":54},"skip":true}]},"17":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":27},"end":{"line":191,"column":43},"skip":true},{"start":{"line":191,"column":47},"end":{"line":191,"column":49},"skip":true}]},"18":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":37},"end":{"line":198,"column":59},"skip":true},{"start":{"line":198,"column":63},"end":{"line":198,"column":65},"skip":true}]},"19":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":12},"end":{"line":199,"column":12},"skip":true},{"start":{"line":199,"column":12},"end":{"line":199,"column":12},"skip":true}]},"20":{"line":461,"type":"binary-expr","locations":[{"start":{"line":461,"column":12},"end":{"line":461,"column":56},"skip":true},{"start":{"line":462,"column":12},"end":{"line":463,"column":35},"skip":true}]},"21":{"line":470,"type":"switch","locations":[{"start":{"line":471,"column":16},"end":{"line":472,"column":60},"skip":true},{"start":{"line":473,"column":16},"end":{"line":474,"column":43},"skip":true},{"start":{"line":475,"column":16},"end":{"line":476,"column":43},"skip":true},{"start":{"line":477,"column":16},"end":{"line":478,"column":35},"skip":true},{"start":{"line":479,"column":16},"end":{"line":480,"column":34},"skip":true}]},"22":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":8},"end":{"line":484,"column":8},"skip":true},{"start":{"line":484,"column":8},"end":{"line":484,"column":8},"skip":true}]},"23":{"line":484,"type":"binary-expr","locations":[{"start":{"line":484,"column":12},"end":{"line":484,"column":35},"skip":true},{"start":{"line":484,"column":39},"end":{"line":484,"column":67},"skip":true}]},"24":{"line":488,"type":"binary-expr","locations":[{"start":{"line":488,"column":12},"end":{"line":488,"column":50},"skip":true},{"start":{"line":489,"column":12},"end":{"line":489,"column":53},"skip":true}]},"25":{"line":490,"type":"binary-expr","locations":[{"start":{"line":490,"column":43},"end":{"line":490,"column":75},"skip":true},{"start":{"line":490,"column":79},"end":{"line":490,"column":81},"skip":true}]},"26":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":8},"end":{"line":493,"column":8},"skip":true},{"start":{"line":493,"column":8},"end":{"line":493,"column":8},"skip":true}]},"27":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":8},"end":{"line":497,"column":8},"skip":true},{"start":{"line":497,"column":8},"end":{"line":497,"column":8},"skip":true}]},"28":{"line":500,"type":"binary-expr","locations":[{"start":{"line":500,"column":27},"end":{"line":500,"column":43},"skip":true},{"start":{"line":500,"column":47},"end":{"line":500,"column":53},"skip":true}]},"29":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":12},"end":{"line":504,"column":12},"skip":true},{"start":{"line":504,"column":12},"end":{"line":504,"column":12},"skip":true}]}},"code":["/*","example.js","","this script will run a web-demo of npmtest-async","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-async && PORT=8081 node example.js","    3. open a browser to http://127.0.0.1:8081 and play with the web-demo","    4. edit this script to suit your needs","*/","","","","/* istanbul instrument in package npmtest_async */","/* jslint-utility2 */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 4,","    maxlen: 100,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        (function () {","            try {","                local.modeJs = typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            } catch (ignore) {","            }","            local.modeJs = local.modeJs || 'browser';","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // re-init local","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_async","            : global.utility2_moduleExports);","        // init exports","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-test","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.maxHeight === '0px') {","                    local.uiAnimateSlideDown(document.querySelector('#testReportDiv1'));","                    document.querySelector('#testRunButton1').textContent = 'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    local.uiAnimateSlideUp(document.querySelector('#testReportDiv1'));","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-test","    /* istanbul ignore next */","    case 'node':","        // init exports","        module.exports = local;","        // require builtins","        // local.assert = require('assert');","        local.buffer = require('buffer');","        local.child_process = require('child_process');","        local.cluster = require('cluster');","        local.console = require('console');","        local.constants = require('constants');","        local.crypto = require('crypto');","        local.dgram = require('dgram');","        local.dns = require('dns');","        local.domain = require('domain');","        local.events = require('events');","        local.fs = require('fs');","        local.http = require('http');","        local.https = require('https');","        local.module = require('module');","        local.net = require('net');","        local.os = require('os');","        local.path = require('path');","        local.process = require('process');","        local.punycode = require('punycode');","        local.querystring = require('querystring');","        local.readline = require('readline');","        local.repl = require('repl');","        local.stream = require('stream');","        local.string_decoder = require('string_decoder');","        local.timers = require('timers');","        local.tls = require('tls');","        local.tty = require('tty');","        local.url = require('url');","        local.util = require('util');","        local.v8 = require('v8');","        local.vm = require('vm');","        local.zlib = require('zlib');","        /* validateLineSortedReset */","        // init assets","        local.assetsDict = local.assetsDict || {};","        [","            'assets.index.template.html',","            'assets.swgg.swagger.json',","            'assets.swgg.swagger.server.json'","        ].forEach(function (file) {","            file = '/' + file;","            local.assetsDict[file] = local.assetsDict[file] || '';","            if (local.fs.existsSync(local.__dirname + file)) {","                local.assetsDict[file] = local.fs.readFileSync(","                    local.__dirname + file,","                    'utf8'","                );","            }","        });","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<!-- \"assets.utility2.template.html\" -->\\n\\","<title>{{env.npm_package_name}} ({{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/* jslint-utility2 */\\n\\","/*csslint\\n\\","*/\\n\\","/* jslint-ignore-begin */\\n\\","*,\\n\\","*:after,\\n\\","*:before {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","/* jslint-ignore-end */\\n\\","@keyframes uiAnimateShake {\\n\\","    0%, 50% {\\n\\","        transform: translateX(10px);\\n\\","    }\\n\\","    25%, 75% {\\n\\","        transform: translateX(-10px);\\n\\","    }\\n\\","    100% {\\n\\","        transform: translateX(0);\\n\\","    }\\n\\","}\\n\\","@keyframes uiAnimateSpin {\\n\\","    0% {\\n\\","        transform: rotate(0deg);\\n\\","    }\\n\\","    100% {\\n\\","        transform: rotate(360deg);\\n\\","    }\\n\\","}\\n\\","a {\\n\\","    overflow-wrap: break-word;\\n\\","}\\n\\","body {\\n\\","    background: #eef;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 0 40px;\\n\\","}\\n\\","body > div,\\n\\","body > pre,\\n\\","body > textarea,\\n\\","body > .button {\\n\\","    margin-bottom: 20px;\\n\\","}\\n\\","body > textarea {\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","body > textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","body > .button {\\n\\","    width: 20rem;\\n\\","}\\n\\","code,\\n\\","pre,\\n\\","textarea {\\n\\","    font-family: Consolas, Menlo, monospace;\\n\\","    font-size: small;\\n\\","}\\n\\","pre {\\n\\","    overflow-wrap: break-word;\\n\\","    white-space: pre-wrap;\\n\\","}\\n\\","textarea {\\n\\","    overflow: auto;\\n\\","    white-space: pre;\\n\\","}\\n\\",".button {\\n\\","    background-color: #fff;\\n\\","    border: 1px solid;\\n\\","    border-bottom-color: rgb(186, 186, 186);\\n\\","    border-left-color: rgb(209, 209, 209);\\n\\","    border-radius: 4px;\\n\\","    border-right-color: rgb(209, 209, 209);\\n\\","    border-top-color: rgb(216, 216, 216);\\n\\","    color: #00d;\\n\\","    cursor: pointer;\\n\\","    display: inline-block;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    font-size: 12px;\\n\\","    font-style: normal;\\n\\","    font-weight: normal;\\n\\","    margin: 0;\\n\\","    padding: 2px 7px 3px 7px;\\n\\","    text-align: center;\\n\\","    text-decoration: underline;\\n\\","}\\n\\",".colorError {\\n\\","    color: #d00;\\n\\","}\\n\\",".uiAnimateShake {\\n\\","    animation-duration: 500ms;\\n\\","    animation-name: uiAnimateShake;\\n\\","}\\n\\",".uiAnimateSlide {\\n\\","    overflow-y: hidden;\\n\\","    transition: max-height ease-in 250ms, min-height ease-in 250ms, padding-bottom ease-in 250ms, padding-top ease-in 250ms;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    text-align: center;\\n\\","}\\n\\",".zeroPixel {\\n\\","    border: 0;\\n\\","    height: 0;\\n\\","    margin: 0;\\n\\","    padding: 0;\\n\\","    width: 0;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 500ms, width 1500ms; width: 0%; z-index: 1;\"></div>\\n\\","<div class=\"uiAnimateSpin\" style=\"animation: uiAnimateSpin 2s linear infinite; border: 5px solid #999; border-radius: 50%; border-top: 5px solid #7d7; display: none; height: 25px; vertical-align: middle; width: 25px;\"></div>\\n\\","<code style=\"display: none;\"></code><div class=\"button colorError uiAnimateShake uiAnimateSlide utility2FooterDiv zeroPixel\" style=\"display: none;\"></div><pre style=\"display: none;\"></pre><textarea readonly style=\"display: none;\"></textarea>\\n\\","<script>\\n\\","/* jslint-utility2 */\\n\\","/*jslint\\n\\","    bitwise: true,\\n\\","    browser: true,\\n\\","    maxerr: 4,\\n\\","    maxlen: 100,\\n\\","    node: true,\\n\\","    nomen: true,\\n\\","    regexp: true,\\n\\","    stupid: true\\n\\","*/\\n\\","// init timerIntervalAjaxProgressUpdate\\n\\","(function () {\\n\\","/*\\n\\"," * this function will increment the ajax-progress-bar until the webpage has loaded\\n\\"," */\\n\\","    \"use strict\";\\n\\","    var ajaxProgressDiv1,\\n\\","        ajaxProgressState,\\n\\","        ajaxProgressUpdate;\\n\\","    if (window.timerIntervalAjaxProgressUpdate) {\\n\\","        return;\\n\\","    }\\n\\","    ajaxProgressDiv1 = document.querySelector(\"#ajaxProgressDiv1\");\\n\\","    setTimeout(function () {\\n\\","        ajaxProgressDiv1.style.width = \"25%\";\\n\\","    });\\n\\","    ajaxProgressState = 0;\\n\\","    ajaxProgressUpdate = (window.local &&\\n\\","        window.local.ajaxProgressUpdate) || function () {\\n\\","        ajaxProgressDiv1.style.width = \"100%\";\\n\\","        setTimeout(function () {\\n\\","            ajaxProgressDiv1.style.background = \"transparent\";\\n\\","            setTimeout(function () {\\n\\","                ajaxProgressDiv1.style.width = \"0%\";\\n\\","            }, 500);\\n\\","        }, 1500);\\n\\","    };\\n\\","    window.timerIntervalAjaxProgressUpdate = setInterval(function () {\\n\\","        ajaxProgressState += 1;\\n\\","        ajaxProgressDiv1.style.width = Math.max(\\n\\","            100 - 75 * Math.exp(-0.125 * ajaxProgressState),\\n\\","            ajaxProgressDiv1.style.width.slice(0, -1) | 0\\n\\","        ) + \"%\";\\n\\","    }, 1000);\\n\\","    window.addEventListener(\"load\", function () {\\n\\","        clearInterval(window.timerIntervalAjaxProgressUpdate);\\n\\","        ajaxProgressUpdate();\\n\\","    });\\n\\","}());\\n\\","// init domOnEventSelectAllWithinPre\\n\\","(function () {\\n\\","/*\\n\\"," * this function will limit select-all within <pre tabIndex=\"0\"> elements\\n\\"," * https://stackoverflow.com/questions/985272/selecting-text-in-an-element-akin-to-highlighting-with-your-mouse\\n\\"," */\\n\\","    \"use strict\";\\n\\","    if (window.domOnEventSelectAllWithinPre) {\\n\\","        return;\\n\\","    }\\n\\","    window.domOnEventSelectAllWithinPre = function (event) {\\n\\","        var range, selection;\\n\\","        if (event &&\\n\\","                event.code === \"KeyA\" &&\\n\\","                (event.ctrlKey || event.metaKey) &&\\n\\","                event.target.closest(\"pre\")) {\\n\\","            range = document.createRange();\\n\\","            range.selectNodeContents(event.target.closest(\"pre\"));\\n\\","            selection = window.getSelection();\\n\\","            selection.removeAllRanges();\\n\\","            selection.addRange(range);\\n\\","            event.preventDefault();\\n\\","        }\\n\\","    };\\n\\","    document.addEventListener(\"keydown\", window.domOnEventSelectAllWithinPre);\\n\\","}());\\n\\","</script>\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} ({{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<a class=\"button\" download href=\"assets.app.js\">download standalone app</a><br>\\n\\","<button class=\"button onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div class=\"uiAnimateSlide\" id=\"testReportDiv1\" style=\"border-bottom: 0; border-top: 0; margin-bottom: 0; margin-top: 0; max-height: 0; padding-bottom: 0; padding-top: 0;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script>window.utility2.onResetBefore.counter += 1;</script>\\n\\","<script src=\"jsonp.utility2.stateInit?callback=window.utility2.stateInit\"></script>\\n\\","<script src=\"assets.npmtest_async.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<script>window.utility2.onResetBefore();</script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        /* validateLineSortedReset */","        /* jslint-ignore-begin */","        // bug-workaround - long $npm_package_buildCustomOrg","        local.assetsDict['/assets.npmtest_async.js'] =","            local.assetsDict['/assets.npmtest_async.js'] ||","            local.fs.readFileSync(local.__dirname + '/lib.npmtest_async.js', 'utf8'","        ).replace((/^#!\\//), '// ');","        /* jslint-ignore-end */","        /* validateLineSortedReset */","        local.assetsDict['/'] =","            local.assetsDict['/assets.example.html'] =","            local.assetsDict['/assets.index.template.html']","            .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                switch (match1) {","                case 'npm_package_description':","                    return 'the greatest app in the world!';","                case 'npm_package_name':","                    return 'npmtest-async';","                case 'npm_package_nameLib':","                    return 'npmtest_async';","                case 'npm_package_version':","                    return '0.0.1';","                default:","                    return match0;","                }","            });","        // init cli","        if (module !== require.main || local.global.utility2_rollup) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"28":2,"30":2,"35":2,"37":2,"39":2,"40":2,"41":2,"46":2,"49":2,"53":2,"57":2,"59":2,"66":1,"67":2,"73":2,"76":2,"79":2,"80":2,"82":1,"86":2,"89":1,"90":1,"91":1,"92":1,"93":1,"96":1,"97":1,"99":1,"102":1,"104":2,"110":1,"112":1,"114":1,"119":1,"120":2,"121":2,"122":20,"123":20,"124":20,"125":20,"126":1,"129":20,"130":20,"135":20,"139":1,"140":3,"141":1,"145":1,"146":1,"154":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"191":1,"192":1,"197":3,"198":3,"199":3,"200":1,"207":1,"460":1,"466":1,"470":6,"472":1,"474":2,"476":1,"478":2,"480":1,"484":1,"485":1,"487":1,"490":1,"493":1,"494":1,"497":1,"498":1,"500":1,"501":1,"502":1,"503":1,"504":1,"505":1,"506":1,"508":1,"509":1,"511":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/dist/async.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/dist/async.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":1,"24":1,"25":1,"26":0,"27":1,"28":2,"29":0,"30":0,"31":0,"32":1,"33":1,"34":1,"35":0,"36":0,"37":0,"38":1,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":1,"55":0,"56":1,"57":1,"58":0,"59":1,"60":0,"61":1,"62":2,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":0,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":0,"107":0,"108":0,"109":0,"110":1,"111":1,"112":0,"113":1,"114":0,"115":1,"116":1,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1,"125":1,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":0,"143":1,"144":1,"145":0,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":0,"156":0,"157":0,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":0,"187":1,"188":1,"189":0,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":0,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":0,"206":0,"207":0,"208":0,"209":0,"210":1,"211":1,"212":0,"213":0,"214":1,"215":1,"216":0,"217":1,"218":1,"219":1,"220":1,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":1,"229":0,"230":1,"231":0,"232":0,"233":0,"234":0,"235":1,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":1,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":1,"251":0,"252":0,"253":0,"254":0,"255":1,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":1,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":1,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":1,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":1,"295":0,"296":1,"297":17,"298":0,"299":1,"300":0,"301":0,"302":0,"303":0,"304":1,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":1,"312":1,"313":0,"314":0,"315":1,"316":6,"317":0,"318":1,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":1,"331":1,"332":1,"333":6,"334":0,"335":1,"336":1,"337":1,"338":1,"339":0,"340":0,"341":0,"342":0,"343":0,"344":1,"345":1,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":1,"353":1,"354":0,"355":1,"356":0,"357":0,"358":0,"359":0,"360":0,"361":1,"362":0,"363":1,"364":0,"365":0,"366":0,"367":0,"368":0,"369":1,"370":0,"371":1,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":1,"411":0,"412":0,"413":1,"414":0,"415":0,"416":0,"417":0,"418":0,"419":1,"420":0,"421":0,"422":0,"423":0,"424":1,"425":0,"426":0,"427":0,"428":0,"429":1,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":1,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":1,"463":0,"464":0,"465":0,"466":0,"467":0,"468":1,"469":0,"470":0,"471":0,"472":0,"473":1,"474":1,"475":0,"476":1,"477":1,"478":1,"479":1,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":1,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":1,"502":0,"503":0,"504":0,"505":1,"506":0,"507":0,"508":0,"509":1,"510":0,"511":0,"512":0,"513":1,"514":0,"515":1,"516":1,"517":1,"518":1,"519":1,"520":1,"521":1,"522":1,"523":1,"524":0,"525":1,"526":1,"527":1,"528":1,"529":1,"530":1,"531":1,"532":1,"533":1,"534":1,"535":1,"536":1,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1,"543":1,"544":1,"545":1,"546":0,"547":1,"548":0,"549":1,"550":0,"551":1,"552":1,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":1,"561":1,"562":1,"563":1,"564":1,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":1,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":1,"590":0,"591":0,"592":0,"593":0,"594":0,"595":1,"596":0,"597":0,"598":1,"599":0,"600":0,"601":1,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":1,"612":0,"613":0,"614":0,"615":1,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":1,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":1,"632":0,"633":0,"634":0,"635":1,"636":0,"637":0,"638":0,"639":1,"640":0,"641":1,"642":0,"643":1,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":1,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":1,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":1,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":1,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":1,"743":0,"744":1,"745":1,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":1,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":1,"768":0,"769":1,"770":1,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":1,"784":1,"785":1,"786":0,"787":0,"788":0,"789":0,"790":0,"791":1,"792":0,"793":1,"794":6,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":1,"811":0,"812":1,"813":1,"814":1,"815":1,"816":2,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":1,"829":1,"830":0,"831":0,"832":0,"833":1,"834":0,"835":0,"836":0,"837":0,"838":0,"839":1,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":1,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":1,"858":0,"859":0,"860":1,"861":0,"862":0,"863":0,"864":1,"865":0,"866":0,"867":0,"868":1,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":1,"876":0,"877":0,"878":1,"879":0,"880":1,"881":0,"882":1,"883":1,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":1,"897":0,"898":1,"899":1,"900":1,"901":1,"902":0,"903":0,"904":1,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":1,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":1,"931":0,"932":0,"933":1,"934":1,"935":1,"936":1,"937":0,"938":0,"939":1,"940":0,"941":0,"942":0,"943":0,"944":1,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":1,"963":1,"964":1,"965":1,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":1,"977":1,"978":1,"979":0,"980":1,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":1,"1004":1,"1005":1,"1006":0,"1007":0,"1008":0,"1009":1,"1010":1,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":1,"1021":0,"1022":1,"1023":0,"1024":1,"1025":0,"1026":0,"1027":0,"1028":1,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":1,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":1,"1062":0,"1063":0,"1064":1,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":1,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":1,"1085":0,"1086":0,"1087":0,"1088":1,"1089":1,"1090":1,"1091":1,"1092":0,"1093":0,"1094":1,"1095":0,"1096":0,"1097":0,"1098":1,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":1,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":1,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":1,"1128":0,"1129":0,"1130":0,"1131":0,"1132":1,"1133":0,"1134":1,"1135":1,"1136":1,"1137":1,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":1,"1148":0,"1149":0,"1150":1,"1151":0,"1152":0,"1153":0,"1154":0,"1155":1,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":1,"1170":1,"1171":1,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":1,"1178":0,"1179":0,"1180":1,"1181":1,"1182":1,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":1,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":1,"1205":0,"1206":0,"1207":1,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":1,"1221":0,"1222":0,"1223":1,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":1,"1231":0,"1232":0,"1233":0,"1234":1,"1235":0,"1236":0,"1237":0,"1238":0,"1239":1,"1240":1,"1241":1,"1242":1,"1243":1,"1244":1,"1245":1,"1246":1,"1247":1,"1248":1,"1249":1,"1250":1,"1251":1,"1252":1,"1253":1,"1254":1,"1255":1,"1256":1,"1257":1,"1258":1,"1259":1,"1260":1,"1261":1,"1262":1,"1263":1,"1264":1,"1265":1,"1266":1,"1267":1,"1268":1,"1269":1,"1270":1,"1271":1,"1272":1,"1273":1,"1274":1,"1275":1,"1276":1,"1277":1,"1278":1,"1279":1,"1280":1,"1281":1,"1282":1,"1283":1,"1284":1,"1285":1,"1286":1,"1287":1,"1288":1,"1289":1,"1290":1,"1291":1,"1292":1,"1293":1,"1294":1,"1295":1,"1296":1,"1297":1,"1298":1,"1299":1,"1300":1,"1301":1,"1302":1,"1303":1,"1304":1,"1305":1,"1306":1,"1307":1,"1308":1,"1309":1,"1310":1,"1311":1,"1312":1,"1313":1,"1314":1,"1315":1,"1316":1,"1317":1,"1318":1,"1319":1,"1320":1,"1321":1,"1322":1,"1323":1,"1324":1,"1325":1,"1326":1,"1327":1,"1328":1,"1329":1,"1330":1,"1331":1,"1332":1,"1333":1,"1334":1,"1335":1,"1336":1,"1337":1,"1338":1,"1339":1,"1340":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[1,1],"8":[1,1],"9":[1,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[1,1,1,1],"18":[1,0,0,0],"19":[1,0,0],"20":[1,0],"21":[0,0],"22":[0,0],"23":[1,0],"24":[0,1],"25":[0,0],"26":[0,1],"27":[1,1],"28":[0,0],"29":[0,0,0,0],"30":[0,0,0,0],"31":[0,0,0],"32":[0,0],"33":[1,1],"34":[0,0,0],"35":[1,1],"36":[1,1],"37":[1,0],"38":[0,0,0],"39":[1,1,1,1],"40":[1,1,1,1,1],"41":[1,1],"42":[1,0],"43":[1,0],"44":[1,0],"45":[0,0],"46":[0,0,0,0,0,0,0],"47":[0,0,0],"48":[1,1,1,1],"49":[1,1,1,1,1],"50":[1,1],"51":[1,1],"52":[1,1,1],"53":[0,1],"54":[1,1,1],"55":[1,1],"56":[1,0],"57":[0,0],"58":[0,0,0],"59":[0,0,0,0],"60":[0,0,0,0],"61":[0,0],"62":[0,0],"63":[0,0,0],"64":[0,0,0,0,0,0,0,0,0,0],"65":[0,0],"66":[0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0,0],"128":[1,0],"129":[1,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0,0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[1,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0,0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":2,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":2,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":1,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":17,"67":0,"68":0,"69":0,"70":0,"71":6,"72":0,"73":0,"74":0,"75":0,"76":0,"77":6,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":6,"171":0,"172":0,"173":0,"174":0,"175":0,"176":2,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":28}}},"2":{"name":"(anonymous_2)","line":5,"loc":{"start":{"line":5,"column":9},"end":{"line":5,"column":28}}},"3":{"name":"slice","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":12},"end":{"line":62,"column":38}}},"5":{"name":"(anonymous_5)","line":64,"loc":{"start":{"line":64,"column":11},"end":{"line":64,"column":34}}},"6":{"name":"(anonymous_6)","line":70,"loc":{"start":{"line":70,"column":20},"end":{"line":70,"column":34}}},"7":{"name":"(anonymous_7)","line":71,"loc":{"start":{"line":71,"column":11},"end":{"line":71,"column":44}}},"8":{"name":"isObject","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":25}}},"9":{"name":"fallback","line":111,"loc":{"start":{"line":111,"column":0},"end":{"line":111,"column":22}}},"10":{"name":"wrap","line":115,"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":21}}},"11":{"name":"(anonymous_11)","line":116,"loc":{"start":{"line":116,"column":11},"end":{"line":116,"column":38}}},"12":{"name":"(anonymous_12)","line":118,"loc":{"start":{"line":118,"column":14},"end":{"line":118,"column":26}}},"13":{"name":"asyncify","line":192,"loc":{"start":{"line":192,"column":0},"end":{"line":192,"column":24}}},"14":{"name":"(anonymous_14)","line":193,"loc":{"start":{"line":193,"column":25},"end":{"line":193,"column":51}}},"15":{"name":"(anonymous_15)","line":202,"loc":{"start":{"line":202,"column":24},"end":{"line":202,"column":40}}},"16":{"name":"(anonymous_16)","line":204,"loc":{"start":{"line":204,"column":15},"end":{"line":204,"column":29}}},"17":{"name":"invokeCallback","line":213,"loc":{"start":{"line":213,"column":0},"end":{"line":213,"column":48}}},"18":{"name":"rethrow","line":221,"loc":{"start":{"line":221,"column":0},"end":{"line":221,"column":24}}},"19":{"name":"isAsync","line":227,"loc":{"start":{"line":227,"column":0},"end":{"line":227,"column":21}}},"20":{"name":"wrapAsync","line":231,"loc":{"start":{"line":231,"column":0},"end":{"line":231,"column":28}}},"21":{"name":"applyEach$1","line":235,"loc":{"start":{"line":235,"column":0},"end":{"line":235,"column":29}}},"22":{"name":"(anonymous_22)","line":236,"loc":{"start":{"line":236,"column":11},"end":{"line":236,"column":38}}},"23":{"name":"(anonymous_23)","line":238,"loc":{"start":{"line":238,"column":31},"end":{"line":238,"column":56}}},"24":{"name":"(anonymous_24)","line":240,"loc":{"start":{"line":240,"column":31},"end":{"line":240,"column":49}}},"25":{"name":"getRawTag","line":288,"loc":{"start":{"line":288,"column":0},"end":{"line":288,"column":26}}},"26":{"name":"objectToString","line":325,"loc":{"start":{"line":325,"column":0},"end":{"line":325,"column":31}}},"27":{"name":"baseGetTag","line":343,"loc":{"start":{"line":343,"column":0},"end":{"line":343,"column":27}}},"28":{"name":"isFunction","line":375,"loc":{"start":{"line":375,"column":0},"end":{"line":375,"column":27}}},"29":{"name":"isLength","line":414,"loc":{"start":{"line":414,"column":0},"end":{"line":414,"column":25}}},"30":{"name":"isArrayLike","line":444,"loc":{"start":{"line":444,"column":0},"end":{"line":444,"column":28}}},"31":{"name":"noop","line":464,"loc":{"start":{"line":464,"column":0},"end":{"line":464,"column":16}}},"32":{"name":"once","line":468,"loc":{"start":{"line":468,"column":0},"end":{"line":468,"column":18}}},"33":{"name":"(anonymous_33)","line":469,"loc":{"start":{"line":469,"column":11},"end":{"line":469,"column":23}}},"34":{"name":"(anonymous_34)","line":479,"loc":{"start":{"line":479,"column":18},"end":{"line":479,"column":34}}},"35":{"name":"baseTimes","line":492,"loc":{"start":{"line":492,"column":0},"end":{"line":492,"column":32}}},"36":{"name":"isObjectLike","line":526,"loc":{"start":{"line":526,"column":0},"end":{"line":526,"column":29}}},"37":{"name":"baseIsArguments","line":540,"loc":{"start":{"line":540,"column":0},"end":{"line":540,"column":32}}},"38":{"name":"(anonymous_38)","line":571,"loc":{"start":{"line":571,"column":34},"end":{"line":571,"column":45}}},"39":{"name":"(anonymous_39)","line":571,"loc":{"start":{"line":571,"column":90},"end":{"line":571,"column":106}}},"40":{"name":"stubFalse","line":614,"loc":{"start":{"line":614,"column":0},"end":{"line":614,"column":21}}},"41":{"name":"isIndex","line":666,"loc":{"start":{"line":666,"column":0},"end":{"line":666,"column":32}}},"42":{"name":"baseIsTypedArray","line":726,"loc":{"start":{"line":726,"column":0},"end":{"line":726,"column":33}}},"43":{"name":"baseUnary","line":738,"loc":{"start":{"line":738,"column":0},"end":{"line":738,"column":25}}},"44":{"name":"(anonymous_44)","line":739,"loc":{"start":{"line":739,"column":9},"end":{"line":739,"column":25}}},"45":{"name":"(anonymous_45)","line":757,"loc":{"start":{"line":757,"column":16},"end":{"line":757,"column":27}}},"46":{"name":"arrayLikeKeys","line":807,"loc":{"start":{"line":807,"column":0},"end":{"line":807,"column":41}}},"47":{"name":"isPrototype","line":844,"loc":{"start":{"line":844,"column":0},"end":{"line":844,"column":28}}},"48":{"name":"overArg","line":859,"loc":{"start":{"line":859,"column":0},"end":{"line":859,"column":34}}},"49":{"name":"(anonymous_49)","line":860,"loc":{"start":{"line":860,"column":9},"end":{"line":860,"column":23}}},"50":{"name":"baseKeys","line":881,"loc":{"start":{"line":881,"column":0},"end":{"line":881,"column":26}}},"51":{"name":"keys","line":922,"loc":{"start":{"line":922,"column":0},"end":{"line":922,"column":22}}},"52":{"name":"createArrayIterator","line":926,"loc":{"start":{"line":926,"column":0},"end":{"line":926,"column":35}}},"53":{"name":"next","line":929,"loc":{"start":{"line":929,"column":11},"end":{"line":929,"column":27}}},"54":{"name":"createES2015Iterator","line":934,"loc":{"start":{"line":934,"column":0},"end":{"line":934,"column":40}}},"55":{"name":"next","line":936,"loc":{"start":{"line":936,"column":11},"end":{"line":936,"column":27}}},"56":{"name":"createObjectIterator","line":945,"loc":{"start":{"line":945,"column":0},"end":{"line":945,"column":35}}},"57":{"name":"next","line":949,"loc":{"start":{"line":949,"column":11},"end":{"line":949,"column":27}}},"58":{"name":"iterator","line":955,"loc":{"start":{"line":955,"column":0},"end":{"line":955,"column":24}}},"59":{"name":"onlyOnce","line":964,"loc":{"start":{"line":964,"column":0},"end":{"line":964,"column":22}}},"60":{"name":"(anonymous_60)","line":965,"loc":{"start":{"line":965,"column":11},"end":{"line":965,"column":22}}},"61":{"name":"_eachOfLimit","line":973,"loc":{"start":{"line":973,"column":0},"end":{"line":973,"column":29}}},"62":{"name":"(anonymous_62)","line":974,"loc":{"start":{"line":974,"column":11},"end":{"line":974,"column":46}}},"63":{"name":"iterateeCallback","line":984,"loc":{"start":{"line":984,"column":8},"end":{"line":984,"column":46}}},"64":{"name":"replenish","line":999,"loc":{"start":{"line":999,"column":8},"end":{"line":999,"column":30}}},"65":{"name":"eachOfLimit","line":1040,"loc":{"start":{"line":1040,"column":0},"end":{"line":1040,"column":54}}},"66":{"name":"doLimit","line":1044,"loc":{"start":{"line":1044,"column":0},"end":{"line":1044,"column":28}}},"67":{"name":"(anonymous_67)","line":1045,"loc":{"start":{"line":1045,"column":11},"end":{"line":1045,"column":51}}},"68":{"name":"eachOfArrayLike","line":1051,"loc":{"start":{"line":1051,"column":0},"end":{"line":1051,"column":51}}},"69":{"name":"iteratorCallback","line":1060,"loc":{"start":{"line":1060,"column":4},"end":{"line":1060,"column":42}}},"70":{"name":"(anonymous_70)","line":1115,"loc":{"start":{"line":1115,"column":13},"end":{"line":1115,"column":48}}},"71":{"name":"doParallel","line":1120,"loc":{"start":{"line":1120,"column":0},"end":{"line":1120,"column":24}}},"72":{"name":"(anonymous_72)","line":1121,"loc":{"start":{"line":1121,"column":11},"end":{"line":1121,"column":46}}},"73":{"name":"_asyncMap","line":1126,"loc":{"start":{"line":1126,"column":0},"end":{"line":1126,"column":52}}},"74":{"name":"(anonymous_74)","line":1133,"loc":{"start":{"line":1133,"column":16},"end":{"line":1133,"column":46}}},"75":{"name":"(anonymous_75)","line":1135,"loc":{"start":{"line":1135,"column":25},"end":{"line":1135,"column":43}}},"76":{"name":"(anonymous_76)","line":1139,"loc":{"start":{"line":1139,"column":7},"end":{"line":1139,"column":22}}},"77":{"name":"doParallelLimit","line":1217,"loc":{"start":{"line":1217,"column":0},"end":{"line":1217,"column":29}}},"78":{"name":"(anonymous_78)","line":1218,"loc":{"start":{"line":1218,"column":11},"end":{"line":1218,"column":53}}},"79":{"name":"arrayEach","line":1294,"loc":{"start":{"line":1294,"column":0},"end":{"line":1294,"column":36}}},"80":{"name":"createBaseFor","line":1313,"loc":{"start":{"line":1313,"column":0},"end":{"line":1313,"column":34}}},"81":{"name":"(anonymous_81)","line":1314,"loc":{"start":{"line":1314,"column":9},"end":{"line":1314,"column":46}}},"82":{"name":"baseForOwn","line":1351,"loc":{"start":{"line":1351,"column":0},"end":{"line":1351,"column":38}}},"83":{"name":"baseFindIndex","line":1366,"loc":{"start":{"line":1366,"column":0},"end":{"line":1366,"column":63}}},"84":{"name":"baseIsNaN","line":1385,"loc":{"start":{"line":1385,"column":0},"end":{"line":1385,"column":26}}},"85":{"name":"strictIndexOf","line":1399,"loc":{"start":{"line":1399,"column":0},"end":{"line":1399,"column":48}}},"86":{"name":"baseIndexOf","line":1420,"loc":{"start":{"line":1420,"column":0},"end":{"line":1420,"column":46}}},"87":{"name":"(anonymous_87)","line":1505,"loc":{"start":{"line":1505,"column":11},"end":{"line":1505,"column":51}}},"88":{"name":"(anonymous_88)","line":1534,"loc":{"start":{"line":1534,"column":22},"end":{"line":1534,"column":43}}},"89":{"name":"(anonymous_89)","line":1551,"loc":{"start":{"line":1551,"column":32},"end":{"line":1551,"column":58}}},"90":{"name":"(anonymous_90)","line":1558,"loc":{"start":{"line":1558,"column":40},"end":{"line":1558,"column":52}}},"91":{"name":"enqueueTask","line":1570,"loc":{"start":{"line":1570,"column":4},"end":{"line":1570,"column":36}}},"92":{"name":"(anonymous_92)","line":1571,"loc":{"start":{"line":1571,"column":24},"end":{"line":1571,"column":36}}},"93":{"name":"processQueue","line":1576,"loc":{"start":{"line":1576,"column":4},"end":{"line":1576,"column":28}}},"94":{"name":"addListener","line":1587,"loc":{"start":{"line":1587,"column":4},"end":{"line":1587,"column":39}}},"95":{"name":"taskComplete","line":1596,"loc":{"start":{"line":1596,"column":4},"end":{"line":1596,"column":36}}},"96":{"name":"(anonymous_96)","line":1598,"loc":{"start":{"line":1598,"column":33},"end":{"line":1598,"column":47}}},"97":{"name":"runTask","line":1605,"loc":{"start":{"line":1605,"column":4},"end":{"line":1605,"column":32}}},"98":{"name":"(anonymous_98)","line":1608,"loc":{"start":{"line":1608,"column":36},"end":{"line":1608,"column":58}}},"99":{"name":"(anonymous_99)","line":1615,"loc":{"start":{"line":1615,"column":36},"end":{"line":1615,"column":56}}},"100":{"name":"checkForDeadlocks","line":1638,"loc":{"start":{"line":1638,"column":4},"end":{"line":1638,"column":33}}},"101":{"name":"(anonymous_101)","line":1647,"loc":{"start":{"line":1647,"column":50},"end":{"line":1647,"column":71}}},"102":{"name":"getDependents","line":1661,"loc":{"start":{"line":1661,"column":4},"end":{"line":1661,"column":37}}},"103":{"name":"(anonymous_103)","line":1663,"loc":{"start":{"line":1663,"column":26},"end":{"line":1663,"column":47}}},"104":{"name":"arrayMap","line":1681,"loc":{"start":{"line":1681,"column":0},"end":{"line":1681,"column":35}}},"105":{"name":"isSymbol","line":1712,"loc":{"start":{"line":1712,"column":0},"end":{"line":1712,"column":25}}},"106":{"name":"baseToString","line":1732,"loc":{"start":{"line":1732,"column":0},"end":{"line":1732,"column":29}}},"107":{"name":"baseSlice","line":1757,"loc":{"start":{"line":1757,"column":0},"end":{"line":1757,"column":38}}},"108":{"name":"castSlice","line":1787,"loc":{"start":{"line":1787,"column":0},"end":{"line":1787,"column":38}}},"109":{"name":"charsEndIndex","line":1802,"loc":{"start":{"line":1802,"column":0},"end":{"line":1802,"column":47}}},"110":{"name":"charsStartIndex","line":1818,"loc":{"start":{"line":1818,"column":0},"end":{"line":1818,"column":49}}},"111":{"name":"asciiToArray","line":1833,"loc":{"start":{"line":1833,"column":0},"end":{"line":1833,"column":30}}},"112":{"name":"hasUnicode","line":1858,"loc":{"start":{"line":1858,"column":0},"end":{"line":1858,"column":28}}},"113":{"name":"unicodeToArray","line":1897,"loc":{"start":{"line":1897,"column":0},"end":{"line":1897,"column":32}}},"114":{"name":"stringToArray","line":1908,"loc":{"start":{"line":1908,"column":0},"end":{"line":1908,"column":31}}},"115":{"name":"toString","line":1935,"loc":{"start":{"line":1935,"column":0},"end":{"line":1935,"column":25}}},"116":{"name":"trim","line":1964,"loc":{"start":{"line":1964,"column":0},"end":{"line":1964,"column":36}}},"117":{"name":"parseParams","line":1985,"loc":{"start":{"line":1985,"column":0},"end":{"line":1985,"column":27}}},"118":{"name":"(anonymous_118)","line":1989,"loc":{"start":{"line":1989,"column":20},"end":{"line":1989,"column":34}}},"119":{"name":"autoInject","line":2077,"loc":{"start":{"line":2077,"column":0},"end":{"line":2077,"column":37}}},"120":{"name":"(anonymous_120)","line":2080,"loc":{"start":{"line":2080,"column":22},"end":{"line":2080,"column":45}}},"121":{"name":"newTask","line":2107,"loc":{"start":{"line":2107,"column":8},"end":{"line":2107,"column":42}}},"122":{"name":"(anonymous_122)","line":2108,"loc":{"start":{"line":2108,"column":43},"end":{"line":2108,"column":59}}},"123":{"name":"DLL","line":2123,"loc":{"start":{"line":2123,"column":0},"end":{"line":2123,"column":15}}},"124":{"name":"setInitial","line":2128,"loc":{"start":{"line":2128,"column":0},"end":{"line":2128,"column":31}}},"125":{"name":"(anonymous_125)","line":2133,"loc":{"start":{"line":2133,"column":27},"end":{"line":2133,"column":42}}},"126":{"name":"(anonymous_126)","line":2144,"loc":{"start":{"line":2144,"column":22},"end":{"line":2144,"column":34}}},"127":{"name":"(anonymous_127)","line":2149,"loc":{"start":{"line":2149,"column":28},"end":{"line":2149,"column":52}}},"128":{"name":"(anonymous_128)","line":2158,"loc":{"start":{"line":2158,"column":29},"end":{"line":2158,"column":53}}},"129":{"name":"(anonymous_129)","line":2167,"loc":{"start":{"line":2167,"column":24},"end":{"line":2167,"column":39}}},"130":{"name":"(anonymous_130)","line":2172,"loc":{"start":{"line":2172,"column":21},"end":{"line":2172,"column":36}}},"131":{"name":"(anonymous_131)","line":2177,"loc":{"start":{"line":2177,"column":22},"end":{"line":2177,"column":33}}},"132":{"name":"(anonymous_132)","line":2181,"loc":{"start":{"line":2181,"column":20},"end":{"line":2181,"column":31}}},"133":{"name":"(anonymous_133)","line":2185,"loc":{"start":{"line":2185,"column":24},"end":{"line":2185,"column":36}}},"134":{"name":"(anonymous_134)","line":2195,"loc":{"start":{"line":2195,"column":23},"end":{"line":2195,"column":41}}},"135":{"name":"queue","line":2207,"loc":{"start":{"line":2207,"column":0},"end":{"line":2207,"column":45}}},"136":{"name":"_insert","line":2220,"loc":{"start":{"line":2220,"column":4},"end":{"line":2220,"column":52}}},"137":{"name":"(anonymous_137)","line":2230,"loc":{"start":{"line":2230,"column":34},"end":{"line":2230,"column":45}}},"138":{"name":"(anonymous_138)","line":2250,"loc":{"start":{"line":2250,"column":27},"end":{"line":2250,"column":38}}},"139":{"name":"_next","line":2257,"loc":{"start":{"line":2257,"column":4},"end":{"line":2257,"column":26}}},"140":{"name":"(anonymous_140)","line":2258,"loc":{"start":{"line":2258,"column":15},"end":{"line":2258,"column":28}}},"141":{"name":"(anonymous_141)","line":2302,"loc":{"start":{"line":2302,"column":14},"end":{"line":2302,"column":40}}},"142":{"name":"(anonymous_142)","line":2305,"loc":{"start":{"line":2305,"column":14},"end":{"line":2305,"column":26}}},"143":{"name":"(anonymous_143)","line":2309,"loc":{"start":{"line":2309,"column":17},"end":{"line":2309,"column":43}}},"144":{"name":"(anonymous_144)","line":2312,"loc":{"start":{"line":2312,"column":16},"end":{"line":2312,"column":34}}},"145":{"name":"(anonymous_145)","line":2315,"loc":{"start":{"line":2315,"column":17},"end":{"line":2315,"column":29}}},"146":{"name":"(anonymous_146)","line":2348,"loc":{"start":{"line":2348,"column":16},"end":{"line":2348,"column":28}}},"147":{"name":"(anonymous_147)","line":2351,"loc":{"start":{"line":2351,"column":17},"end":{"line":2351,"column":29}}},"148":{"name":"(anonymous_148)","line":2354,"loc":{"start":{"line":2354,"column":21},"end":{"line":2354,"column":33}}},"149":{"name":"(anonymous_149)","line":2357,"loc":{"start":{"line":2357,"column":14},"end":{"line":2357,"column":25}}},"150":{"name":"(anonymous_150)","line":2360,"loc":{"start":{"line":2360,"column":15},"end":{"line":2360,"column":27}}},"151":{"name":"(anonymous_151)","line":2363,"loc":{"start":{"line":2363,"column":16},"end":{"line":2363,"column":28}}},"152":{"name":"cargo","line":2449,"loc":{"start":{"line":2449,"column":0},"end":{"line":2449,"column":32}}},"153":{"name":"reduce","line":2512,"loc":{"start":{"line":2512,"column":0},"end":{"line":2512,"column":48}}},"154":{"name":"(anonymous_154)","line":2515,"loc":{"start":{"line":2515,"column":23},"end":{"line":2515,"column":48}}},"155":{"name":"(anonymous_155)","line":2516,"loc":{"start":{"line":2516,"column":27},"end":{"line":2516,"column":44}}},"156":{"name":"(anonymous_156)","line":2520,"loc":{"start":{"line":2520,"column":7},"end":{"line":2520,"column":21}}},"157":{"name":"seq","line":2563,"loc":{"start":{"line":2563,"column":0},"end":{"line":2563,"column":31}}},"158":{"name":"(anonymous_158)","line":2565,"loc":{"start":{"line":2565,"column":11},"end":{"line":2565,"column":33}}},"159":{"name":"(anonymous_159)","line":2576,"loc":{"start":{"line":2576,"column":33},"end":{"line":2576,"column":59}}},"160":{"name":"(anonymous_160)","line":2577,"loc":{"start":{"line":2577,"column":42},"end":{"line":2577,"column":73}}},"161":{"name":"(anonymous_161)","line":2582,"loc":{"start":{"line":2582,"column":8},"end":{"line":2582,"column":31}}},"162":{"name":"(anonymous_162)","line":2623,"loc":{"start":{"line":2623,"column":14},"end":{"line":2623,"column":36}}},"163":{"name":"(anonymous_163)","line":2647,"loc":{"start":{"line":2647,"column":18},"end":{"line":2647,"column":60}}},"164":{"name":"(anonymous_164)","line":2650,"loc":{"start":{"line":2650,"column":26},"end":{"line":2650,"column":50}}},"165":{"name":"(anonymous_165)","line":2651,"loc":{"start":{"line":2651,"column":23},"end":{"line":2651,"column":51}}},"166":{"name":"(anonymous_166)","line":2655,"loc":{"start":{"line":2655,"column":7},"end":{"line":2655,"column":33}}},"167":{"name":"(anonymous_167)","line":2756,"loc":{"start":{"line":2756,"column":15},"end":{"line":2756,"column":39}}},"168":{"name":"(anonymous_168)","line":2759,"loc":{"start":{"line":2759,"column":11},"end":{"line":2759,"column":51}}},"169":{"name":"identity","line":2781,"loc":{"start":{"line":2781,"column":0},"end":{"line":2781,"column":25}}},"170":{"name":"_createTester","line":2785,"loc":{"start":{"line":2785,"column":0},"end":{"line":2785,"column":41}}},"171":{"name":"(anonymous_171)","line":2786,"loc":{"start":{"line":2786,"column":11},"end":{"line":2786,"column":47}}},"172":{"name":"(anonymous_172)","line":2790,"loc":{"start":{"line":2790,"column":20},"end":{"line":2790,"column":49}}},"173":{"name":"(anonymous_173)","line":2791,"loc":{"start":{"line":2791,"column":28},"end":{"line":2791,"column":50}}},"174":{"name":"(anonymous_174)","line":2802,"loc":{"start":{"line":2802,"column":11},"end":{"line":2802,"column":25}}},"175":{"name":"_findGetResult","line":2812,"loc":{"start":{"line":2812,"column":0},"end":{"line":2812,"column":30}}},"176":{"name":"consoleFunc","line":2899,"loc":{"start":{"line":2899,"column":0},"end":{"line":2899,"column":27}}},"177":{"name":"(anonymous_177)","line":2900,"loc":{"start":{"line":2900,"column":11},"end":{"line":2900,"column":38}}},"178":{"name":"(anonymous_178)","line":2902,"loc":{"start":{"line":2902,"column":18},"end":{"line":2902,"column":46}}},"179":{"name":"(anonymous_179)","line":2910,"loc":{"start":{"line":2910,"column":36},"end":{"line":2910,"column":49}}},"180":{"name":"doDuring","line":2971,"loc":{"start":{"line":2971,"column":0},"end":{"line":2971,"column":38}}},"181":{"name":"next","line":2976,"loc":{"start":{"line":2976,"column":4},"end":{"line":2976,"column":36}}},"182":{"name":"check","line":2983,"loc":{"start":{"line":2983,"column":4},"end":{"line":2983,"column":31}}},"183":{"name":"doWhilst","line":3015,"loc":{"start":{"line":3015,"column":0},"end":{"line":3015,"column":44}}},"184":{"name":"(anonymous_184)","line":3018,"loc":{"start":{"line":3018,"column":15},"end":{"line":3018,"column":42}}},"185":{"name":"doUntil","line":3047,"loc":{"start":{"line":3047,"column":0},"end":{"line":3047,"column":43}}},"186":{"name":"(anonymous_186)","line":3048,"loc":{"start":{"line":3048,"column":23},"end":{"line":3048,"column":34}}},"187":{"name":"during","line":3089,"loc":{"start":{"line":3089,"column":0},"end":{"line":3089,"column":36}}},"188":{"name":"next","line":3094,"loc":{"start":{"line":3094,"column":4},"end":{"line":3094,"column":23}}},"189":{"name":"check","line":3099,"loc":{"start":{"line":3099,"column":4},"end":{"line":3099,"column":31}}},"190":{"name":"_withoutIndex","line":3108,"loc":{"start":{"line":3108,"column":0},"end":{"line":3108,"column":33}}},"191":{"name":"(anonymous_191)","line":3109,"loc":{"start":{"line":3109,"column":11},"end":{"line":3109,"column":45}}},"192":{"name":"eachLimit","line":3171,"loc":{"start":{"line":3171,"column":0},"end":{"line":3171,"column":45}}},"193":{"name":"eachLimit$1","line":3195,"loc":{"start":{"line":3195,"column":0},"end":{"line":3195,"column":54}}},"194":{"name":"ensureAsync","line":3255,"loc":{"start":{"line":3255,"column":0},"end":{"line":3255,"column":25}}},"195":{"name":"(anonymous_195)","line":3257,"loc":{"start":{"line":3257,"column":25},"end":{"line":3257,"column":51}}},"196":{"name":"(anonymous_196)","line":3259,"loc":{"start":{"line":3259,"column":18},"end":{"line":3259,"column":30}}},"197":{"name":"(anonymous_197)","line":3262,"loc":{"start":{"line":3262,"column":31},"end":{"line":3262,"column":43}}},"198":{"name":"notId","line":3274,"loc":{"start":{"line":3274,"column":0},"end":{"line":3274,"column":18}}},"199":{"name":"baseProperty","line":3358,"loc":{"start":{"line":3358,"column":0},"end":{"line":3358,"column":27}}},"200":{"name":"(anonymous_200)","line":3359,"loc":{"start":{"line":3359,"column":9},"end":{"line":3359,"column":26}}},"201":{"name":"filterArray","line":3364,"loc":{"start":{"line":3364,"column":0},"end":{"line":3364,"column":54}}},"202":{"name":"(anonymous_202)","line":3366,"loc":{"start":{"line":3366,"column":16},"end":{"line":3366,"column":46}}},"203":{"name":"(anonymous_203)","line":3367,"loc":{"start":{"line":3367,"column":20},"end":{"line":3367,"column":38}}},"204":{"name":"(anonymous_204)","line":3371,"loc":{"start":{"line":3371,"column":7},"end":{"line":3371,"column":22}}},"205":{"name":"filterGeneric","line":3381,"loc":{"start":{"line":3381,"column":0},"end":{"line":3381,"column":57}}},"206":{"name":"(anonymous_206)","line":3383,"loc":{"start":{"line":3383,"column":17},"end":{"line":3383,"column":47}}},"207":{"name":"(anonymous_207)","line":3384,"loc":{"start":{"line":3384,"column":20},"end":{"line":3384,"column":38}}},"208":{"name":"(anonymous_208)","line":3394,"loc":{"start":{"line":3394,"column":7},"end":{"line":3394,"column":22}}},"209":{"name":"(anonymous_209)","line":3398,"loc":{"start":{"line":3398,"column":49},"end":{"line":3398,"column":65}}},"210":{"name":"_filter","line":3405,"loc":{"start":{"line":3405,"column":0},"end":{"line":3405,"column":51}}},"211":{"name":"forever","line":3508,"loc":{"start":{"line":3508,"column":0},"end":{"line":3508,"column":30}}},"212":{"name":"next","line":3512,"loc":{"start":{"line":3512,"column":4},"end":{"line":3512,"column":23}}},"213":{"name":"(anonymous_213)","line":3538,"loc":{"start":{"line":3538,"column":19},"end":{"line":3538,"column":61}}},"214":{"name":"(anonymous_214)","line":3541,"loc":{"start":{"line":3541,"column":26},"end":{"line":3541,"column":50}}},"215":{"name":"(anonymous_215)","line":3542,"loc":{"start":{"line":3542,"column":23},"end":{"line":3542,"column":42}}},"216":{"name":"(anonymous_216)","line":3546,"loc":{"start":{"line":3546,"column":7},"end":{"line":3546,"column":33}}},"217":{"name":"mapValuesLimit","line":3677,"loc":{"start":{"line":3677,"column":0},"end":{"line":3677,"column":56}}},"218":{"name":"(anonymous_218)","line":3681,"loc":{"start":{"line":3681,"column":28},"end":{"line":3681,"column":53}}},"219":{"name":"(anonymous_219)","line":3682,"loc":{"start":{"line":3682,"column":28},"end":{"line":3682,"column":51}}},"220":{"name":"(anonymous_220)","line":3687,"loc":{"start":{"line":3687,"column":7},"end":{"line":3687,"column":22}}},"221":{"name":"has","line":3760,"loc":{"start":{"line":3760,"column":0},"end":{"line":3760,"column":23}}},"222":{"name":"memoize","line":3801,"loc":{"start":{"line":3801,"column":0},"end":{"line":3801,"column":29}}},"223":{"name":"memoized","line":3806,"loc":{"start":{"line":3806,"column":33},"end":{"line":3806,"column":67}}},"224":{"name":"(anonymous_224)","line":3809,"loc":{"start":{"line":3809,"column":27},"end":{"line":3809,"column":38}}},"225":{"name":"(anonymous_225)","line":3816,"loc":{"start":{"line":3816,"column":40},"end":{"line":3816,"column":59}}},"226":{"name":"_parallel","line":3875,"loc":{"start":{"line":3875,"column":0},"end":{"line":3875,"column":44}}},"227":{"name":"(anonymous_227)","line":3879,"loc":{"start":{"line":3879,"column":18},"end":{"line":3879,"column":49}}},"228":{"name":"(anonymous_228)","line":3880,"loc":{"start":{"line":3880,"column":24},"end":{"line":3880,"column":47}}},"229":{"name":"(anonymous_229)","line":3887,"loc":{"start":{"line":3887,"column":7},"end":{"line":3887,"column":22}}},"230":{"name":"parallelLimit","line":3961,"loc":{"start":{"line":3961,"column":0},"end":{"line":3961,"column":40}}},"231":{"name":"parallelLimit$1","line":3984,"loc":{"start":{"line":3984,"column":0},"end":{"line":3984,"column":49}}},"232":{"name":"(anonymous_232)","line":4093,"loc":{"start":{"line":4093,"column":14},"end":{"line":4093,"column":45}}},"233":{"name":"(anonymous_233)","line":4095,"loc":{"start":{"line":4095,"column":17},"end":{"line":4095,"column":38}}},"234":{"name":"(anonymous_234)","line":4123,"loc":{"start":{"line":4123,"column":20},"end":{"line":4123,"column":50}}},"235":{"name":"(anonymous_235)","line":4128,"loc":{"start":{"line":4128,"column":13},"end":{"line":4128,"column":48}}},"236":{"name":"(anonymous_236)","line":4139,"loc":{"start":{"line":4139,"column":34},"end":{"line":4139,"column":45}}},"237":{"name":"race","line":4208,"loc":{"start":{"line":4208,"column":0},"end":{"line":4208,"column":31}}},"238":{"name":"reduceRight","line":4239,"loc":{"start":{"line":4239,"column":0},"end":{"line":4239,"column":55}}},"239":{"name":"reflect","line":4283,"loc":{"start":{"line":4283,"column":0},"end":{"line":4283,"column":21}}},"240":{"name":"reflectOn","line":4285,"loc":{"start":{"line":4285,"column":25},"end":{"line":4285,"column":67}}},"241":{"name":"callback","line":4286,"loc":{"start":{"line":4286,"column":18},"end":{"line":4286,"column":50}}},"242":{"name":"reflectAll","line":4371,"loc":{"start":{"line":4371,"column":0},"end":{"line":4371,"column":27}}},"243":{"name":"(anonymous_243)","line":4377,"loc":{"start":{"line":4377,"column":26},"end":{"line":4377,"column":46}}},"244":{"name":"reject$1","line":4384,"loc":{"start":{"line":4384,"column":0},"end":{"line":4384,"column":51}}},"245":{"name":"(anonymous_245)","line":4385,"loc":{"start":{"line":4385,"column":25},"end":{"line":4385,"column":45}}},"246":{"name":"(anonymous_246)","line":4386,"loc":{"start":{"line":4386,"column":24},"end":{"line":4386,"column":41}}},"247":{"name":"constant$1","line":4480,"loc":{"start":{"line":4480,"column":0},"end":{"line":4480,"column":27}}},"248":{"name":"(anonymous_248)","line":4481,"loc":{"start":{"line":4481,"column":9},"end":{"line":4481,"column":20}}},"249":{"name":"retry","line":4570,"loc":{"start":{"line":4570,"column":0},"end":{"line":4570,"column":37}}},"250":{"name":"parseTimes","line":4579,"loc":{"start":{"line":4579,"column":4},"end":{"line":4579,"column":32}}},"251":{"name":"retryAttempt","line":4610,"loc":{"start":{"line":4610,"column":4},"end":{"line":4610,"column":28}}},"252":{"name":"(anonymous_252)","line":4611,"loc":{"start":{"line":4611,"column":14},"end":{"line":4611,"column":28}}},"253":{"name":"(anonymous_253)","line":4653,"loc":{"start":{"line":4653,"column":16},"end":{"line":4653,"column":38}}},"254":{"name":"(anonymous_254)","line":4659,"loc":{"start":{"line":4659,"column":25},"end":{"line":4659,"column":51}}},"255":{"name":"taskFn","line":4660,"loc":{"start":{"line":4660,"column":8},"end":{"line":4660,"column":28}}},"256":{"name":"series","line":4734,"loc":{"start":{"line":4734,"column":0},"end":{"line":4734,"column":33}}},"257":{"name":"sortBy","line":4862,"loc":{"start":{"line":4862,"column":0},"end":{"line":4862,"column":43}}},"258":{"name":"(anonymous_258)","line":4864,"loc":{"start":{"line":4864,"column":14},"end":{"line":4864,"column":37}}},"259":{"name":"(anonymous_259)","line":4865,"loc":{"start":{"line":4865,"column":21},"end":{"line":4865,"column":46}}},"260":{"name":"(anonymous_260)","line":4869,"loc":{"start":{"line":4869,"column":7},"end":{"line":4869,"column":31}}},"261":{"name":"comparator","line":4874,"loc":{"start":{"line":4874,"column":4},"end":{"line":4874,"column":37}}},"262":{"name":"timeout","line":4921,"loc":{"start":{"line":4921,"column":0},"end":{"line":4921,"column":46}}},"263":{"name":"(anonymous_263)","line":4924,"loc":{"start":{"line":4924,"column":25},"end":{"line":4924,"column":51}}},"264":{"name":"timeoutCallback","line":4928,"loc":{"start":{"line":4928,"column":8},"end":{"line":4928,"column":35}}},"265":{"name":"(anonymous_265)","line":4939,"loc":{"start":{"line":4939,"column":18},"end":{"line":4939,"column":30}}},"266":{"name":"baseRange","line":4967,"loc":{"start":{"line":4967,"column":0},"end":{"line":4967,"column":48}}},"267":{"name":"timeLimit","line":4995,"loc":{"start":{"line":4995,"column":0},"end":{"line":4995,"column":53}}},"268":{"name":"transform","line":5092,"loc":{"start":{"line":5092,"column":0},"end":{"line":5092,"column":59}}},"269":{"name":"(anonymous_269)","line":5101,"loc":{"start":{"line":5101,"column":17},"end":{"line":5101,"column":36}}},"270":{"name":"(anonymous_270)","line":5103,"loc":{"start":{"line":5103,"column":7},"end":{"line":5103,"column":21}}},"271":{"name":"tryEach","line":5145,"loc":{"start":{"line":5145,"column":0},"end":{"line":5145,"column":34}}},"272":{"name":"(anonymous_272)","line":5149,"loc":{"start":{"line":5149,"column":22},"end":{"line":5149,"column":47}}},"273":{"name":"(anonymous_273)","line":5150,"loc":{"start":{"line":5150,"column":24},"end":{"line":5150,"column":57}}},"274":{"name":"(anonymous_274)","line":5159,"loc":{"start":{"line":5159,"column":7},"end":{"line":5159,"column":19}}},"275":{"name":"unmemoize","line":5177,"loc":{"start":{"line":5177,"column":0},"end":{"line":5177,"column":23}}},"276":{"name":"(anonymous_276)","line":5178,"loc":{"start":{"line":5178,"column":11},"end":{"line":5178,"column":23}}},"277":{"name":"whilst","line":5217,"loc":{"start":{"line":5217,"column":0},"end":{"line":5217,"column":42}}},"278":{"name":"(anonymous_278)","line":5221,"loc":{"start":{"line":5221,"column":15},"end":{"line":5221,"column":42}}},"279":{"name":"until","line":5252,"loc":{"start":{"line":5252,"column":0},"end":{"line":5252,"column":41}}},"280":{"name":"(anonymous_280)","line":5253,"loc":{"start":{"line":5253,"column":11},"end":{"line":5253,"column":22}}},"281":{"name":"(anonymous_281)","line":5315,"loc":{"start":{"line":5315,"column":16},"end":{"line":5315,"column":42}}},"282":{"name":"nextTask","line":5321,"loc":{"start":{"line":5321,"column":4},"end":{"line":5321,"column":28}}},"283":{"name":"next","line":5327,"loc":{"start":{"line":5327,"column":4},"end":{"line":5327,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5609,"column":5}},"2":{"start":{"line":2,"column":2},"end":{"line":4,"column":49}},"3":{"start":{"line":7,"column":0},"end":{"line":15,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":20}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":55}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":31}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":45}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":18}},"10":{"start":{"line":62,"column":0},"end":{"line":68,"column":2}},"11":{"start":{"line":63,"column":4},"end":{"line":63,"column":35}},"12":{"start":{"line":64,"column":4},"end":{"line":67,"column":6}},"13":{"start":{"line":65,"column":8},"end":{"line":65,"column":40}},"14":{"start":{"line":66,"column":8},"end":{"line":66,"column":53}},"15":{"start":{"line":70,"column":0},"end":{"line":76,"column":2}},"16":{"start":{"line":71,"column":4},"end":{"line":75,"column":6}},"17":{"start":{"line":72,"column":8},"end":{"line":72,"column":36}},"18":{"start":{"line":73,"column":8},"end":{"line":73,"column":34}},"19":{"start":{"line":74,"column":8},"end":{"line":74,"column":38}},"20":{"start":{"line":103,"column":0},"end":{"line":106,"column":1}},"21":{"start":{"line":104,"column":2},"end":{"line":104,"column":26}},"22":{"start":{"line":105,"column":2},"end":{"line":105,"column":67}},"23":{"start":{"line":108,"column":0},"end":{"line":108,"column":73}},"24":{"start":{"line":109,"column":0},"end":{"line":109,"column":88}},"25":{"start":{"line":111,"column":0},"end":{"line":113,"column":1}},"26":{"start":{"line":112,"column":4},"end":{"line":112,"column":22}},"27":{"start":{"line":115,"column":0},"end":{"line":122,"column":1}},"28":{"start":{"line":116,"column":4},"end":{"line":121,"column":6}},"29":{"start":{"line":117,"column":8},"end":{"line":117,"column":39}},"30":{"start":{"line":118,"column":8},"end":{"line":120,"column":11}},"31":{"start":{"line":119,"column":12},"end":{"line":119,"column":33}},"32":{"start":{"line":124,"column":0},"end":{"line":124,"column":11}},"33":{"start":{"line":126,"column":0},"end":{"line":132,"column":1}},"34":{"start":{"line":127,"column":4},"end":{"line":127,"column":26}},"35":{"start":{"line":128,"column":7},"end":{"line":132,"column":1}},"36":{"start":{"line":129,"column":4},"end":{"line":129,"column":30}},"37":{"start":{"line":131,"column":4},"end":{"line":131,"column":22}},"38":{"start":{"line":134,"column":0},"end":{"line":134,"column":34}},"39":{"start":{"line":192,"column":0},"end":{"line":211,"column":1}},"40":{"start":{"line":193,"column":4},"end":{"line":210,"column":7}},"41":{"start":{"line":194,"column":8},"end":{"line":194,"column":19}},"42":{"start":{"line":195,"column":8},"end":{"line":199,"column":9}},"43":{"start":{"line":196,"column":12},"end":{"line":196,"column":44}},"44":{"start":{"line":198,"column":12},"end":{"line":198,"column":31}},"45":{"start":{"line":201,"column":8},"end":{"line":209,"column":9}},"46":{"start":{"line":202,"column":12},"end":{"line":206,"column":15}},"47":{"start":{"line":203,"column":16},"end":{"line":203,"column":54}},"48":{"start":{"line":205,"column":16},"end":{"line":205,"column":77}},"49":{"start":{"line":208,"column":12},"end":{"line":208,"column":35}},"50":{"start":{"line":213,"column":0},"end":{"line":219,"column":1}},"51":{"start":{"line":214,"column":4},"end":{"line":218,"column":5}},"52":{"start":{"line":215,"column":8},"end":{"line":215,"column":31}},"53":{"start":{"line":217,"column":8},"end":{"line":217,"column":35}},"54":{"start":{"line":221,"column":0},"end":{"line":223,"column":1}},"55":{"start":{"line":222,"column":4},"end":{"line":222,"column":16}},"56":{"start":{"line":225,"column":0},"end":{"line":225,"column":50}},"57":{"start":{"line":227,"column":0},"end":{"line":229,"column":1}},"58":{"start":{"line":228,"column":4},"end":{"line":228,"column":72}},"59":{"start":{"line":231,"column":0},"end":{"line":233,"column":1}},"60":{"start":{"line":232,"column":4},"end":{"line":232,"column":58}},"61":{"start":{"line":235,"column":0},"end":{"line":251,"column":1}},"62":{"start":{"line":236,"column":4},"end":{"line":250,"column":6}},"63":{"start":{"line":237,"column":8},"end":{"line":237,"column":39}},"64":{"start":{"line":238,"column":8},"end":{"line":243,"column":11}},"65":{"start":{"line":239,"column":12},"end":{"line":239,"column":28}},"66":{"start":{"line":240,"column":12},"end":{"line":242,"column":25}},"67":{"start":{"line":241,"column":16},"end":{"line":241,"column":59}},"68":{"start":{"line":244,"column":8},"end":{"line":249,"column":9}},"69":{"start":{"line":245,"column":12},"end":{"line":245,"column":40}},"70":{"start":{"line":248,"column":12},"end":{"line":248,"column":22}},"71":{"start":{"line":254,"column":0},"end":{"line":254,"column":91}},"72":{"start":{"line":257,"column":0},"end":{"line":257,"column":81}},"73":{"start":{"line":260,"column":0},"end":{"line":260,"column":63}},"74":{"start":{"line":263,"column":0},"end":{"line":263,"column":27}},"75":{"start":{"line":266,"column":0},"end":{"line":266,"column":35}},"76":{"start":{"line":269,"column":0},"end":{"line":269,"column":48}},"77":{"start":{"line":276,"column":0},"end":{"line":276,"column":48}},"78":{"start":{"line":279,"column":0},"end":{"line":279,"column":67}},"79":{"start":{"line":288,"column":0},"end":{"line":306,"column":1}},"80":{"start":{"line":289,"column":2},"end":{"line":290,"column":36}},"81":{"start":{"line":292,"column":2},"end":{"line":295,"column":16}},"82":{"start":{"line":293,"column":4},"end":{"line":293,"column":40}},"83":{"start":{"line":294,"column":4},"end":{"line":294,"column":24}},"84":{"start":{"line":297,"column":2},"end":{"line":297,"column":48}},"85":{"start":{"line":298,"column":2},"end":{"line":304,"column":3}},"86":{"start":{"line":299,"column":4},"end":{"line":303,"column":5}},"87":{"start":{"line":300,"column":6},"end":{"line":300,"column":36}},"88":{"start":{"line":302,"column":6},"end":{"line":302,"column":37}},"89":{"start":{"line":305,"column":2},"end":{"line":305,"column":16}},"90":{"start":{"line":309,"column":0},"end":{"line":309,"column":37}},"91":{"start":{"line":316,"column":0},"end":{"line":316,"column":52}},"92":{"start":{"line":325,"column":0},"end":{"line":327,"column":1}},"93":{"start":{"line":326,"column":2},"end":{"line":326,"column":44}},"94":{"start":{"line":330,"column":0},"end":{"line":330,"column":30}},"95":{"start":{"line":331,"column":0},"end":{"line":331,"column":40}},"96":{"start":{"line":334,"column":0},"end":{"line":334,"column":65}},"97":{"start":{"line":343,"column":0},"end":{"line":350,"column":1}},"98":{"start":{"line":344,"column":2},"end":{"line":346,"column":3}},"99":{"start":{"line":345,"column":4},"end":{"line":345,"column":56}},"100":{"start":{"line":347,"column":2},"end":{"line":349,"column":28}},"101":{"start":{"line":353,"column":0},"end":{"line":353,"column":40}},"102":{"start":{"line":354,"column":0},"end":{"line":354,"column":34}},"103":{"start":{"line":355,"column":0},"end":{"line":355,"column":42}},"104":{"start":{"line":356,"column":0},"end":{"line":356,"column":32}},"105":{"start":{"line":375,"column":0},"end":{"line":383,"column":1}},"106":{"start":{"line":376,"column":2},"end":{"line":378,"column":3}},"107":{"start":{"line":377,"column":4},"end":{"line":377,"column":17}},"108":{"start":{"line":381,"column":2},"end":{"line":381,"column":30}},"109":{"start":{"line":382,"column":2},"end":{"line":382,"column":79}},"110":{"start":{"line":386,"column":0},"end":{"line":386,"column":40}},"111":{"start":{"line":414,"column":0},"end":{"line":417,"column":1}},"112":{"start":{"line":415,"column":2},"end":{"line":416,"column":62}},"113":{"start":{"line":444,"column":0},"end":{"line":446,"column":1}},"114":{"start":{"line":445,"column":2},"end":{"line":445,"column":71}},"115":{"start":{"line":450,"column":0},"end":{"line":450,"column":19}},"116":{"start":{"line":464,"column":0},"end":{"line":466,"column":1}},"117":{"start":{"line":468,"column":0},"end":{"line":475,"column":1}},"118":{"start":{"line":469,"column":4},"end":{"line":474,"column":6}},"119":{"start":{"line":470,"column":8},"end":{"line":470,"column":32}},"120":{"start":{"line":470,"column":25},"end":{"line":470,"column":32}},"121":{"start":{"line":471,"column":8},"end":{"line":471,"column":24}},"122":{"start":{"line":472,"column":8},"end":{"line":472,"column":18}},"123":{"start":{"line":473,"column":8},"end":{"line":473,"column":38}},"124":{"start":{"line":477,"column":0},"end":{"line":477,"column":69}},"125":{"start":{"line":479,"column":0},"end":{"line":481,"column":2}},"126":{"start":{"line":480,"column":4},"end":{"line":480,"column":76}},"127":{"start":{"line":492,"column":0},"end":{"line":500,"column":1}},"128":{"start":{"line":493,"column":2},"end":{"line":494,"column":24}},"129":{"start":{"line":496,"column":2},"end":{"line":498,"column":3}},"130":{"start":{"line":497,"column":4},"end":{"line":497,"column":36}},"131":{"start":{"line":499,"column":2},"end":{"line":499,"column":16}},"132":{"start":{"line":526,"column":0},"end":{"line":528,"column":1}},"133":{"start":{"line":527,"column":2},"end":{"line":527,"column":51}},"134":{"start":{"line":531,"column":0},"end":{"line":531,"column":35}},"135":{"start":{"line":540,"column":0},"end":{"line":542,"column":1}},"136":{"start":{"line":541,"column":2},"end":{"line":541,"column":61}},"137":{"start":{"line":545,"column":0},"end":{"line":545,"column":37}},"138":{"start":{"line":548,"column":0},"end":{"line":548,"column":52}},"139":{"start":{"line":551,"column":0},"end":{"line":551,"column":62}},"140":{"start":{"line":571,"column":0},"end":{"line":574,"column":2}},"141":{"start":{"line":571,"column":47},"end":{"line":571,"column":64}},"142":{"start":{"line":572,"column":2},"end":{"line":573,"column":48}},"143":{"start":{"line":599,"column":0},"end":{"line":599,"column":28}},"144":{"start":{"line":614,"column":0},"end":{"line":616,"column":1}},"145":{"start":{"line":615,"column":2},"end":{"line":615,"column":15}},"146":{"start":{"line":619,"column":0},"end":{"line":619,"column":88}},"147":{"start":{"line":622,"column":0},"end":{"line":622,"column":98}},"148":{"start":{"line":625,"column":0},"end":{"line":625,"column":69}},"149":{"start":{"line":628,"column":0},"end":{"line":628,"column":53}},"150":{"start":{"line":631,"column":0},"end":{"line":631,"column":58}},"151":{"start":{"line":650,"column":0},"end":{"line":650,"column":43}},"152":{"start":{"line":653,"column":0},"end":{"line":653,"column":42}},"153":{"start":{"line":656,"column":0},"end":{"line":656,"column":34}},"154":{"start":{"line":666,"column":0},"end":{"line":674,"column":1}},"155":{"start":{"line":667,"column":2},"end":{"line":667,"column":26}},"156":{"start":{"line":668,"column":2},"end":{"line":668,"column":56}},"157":{"start":{"line":670,"column":2},"end":{"line":673,"column":57}},"158":{"start":{"line":677,"column":0},"end":{"line":677,"column":37}},"159":{"start":{"line":678,"column":0},"end":{"line":678,"column":32}},"160":{"start":{"line":679,"column":0},"end":{"line":679,"column":33}},"161":{"start":{"line":680,"column":0},"end":{"line":680,"column":30}},"162":{"start":{"line":681,"column":0},"end":{"line":681,"column":32}},"163":{"start":{"line":682,"column":0},"end":{"line":682,"column":36}},"164":{"start":{"line":683,"column":0},"end":{"line":683,"column":28}},"165":{"start":{"line":684,"column":0},"end":{"line":684,"column":34}},"166":{"start":{"line":685,"column":0},"end":{"line":685,"column":34}},"167":{"start":{"line":686,"column":0},"end":{"line":686,"column":34}},"168":{"start":{"line":687,"column":0},"end":{"line":687,"column":28}},"169":{"start":{"line":688,"column":0},"end":{"line":688,"column":34}},"170":{"start":{"line":689,"column":0},"end":{"line":689,"column":36}},"171":{"start":{"line":691,"column":0},"end":{"line":691,"column":44}},"172":{"start":{"line":692,"column":0},"end":{"line":692,"column":38}},"173":{"start":{"line":693,"column":0},"end":{"line":693,"column":41}},"174":{"start":{"line":694,"column":0},"end":{"line":694,"column":41}},"175":{"start":{"line":695,"column":0},"end":{"line":695,"column":35}},"176":{"start":{"line":696,"column":0},"end":{"line":696,"column":37}},"177":{"start":{"line":697,"column":0},"end":{"line":697,"column":37}},"178":{"start":{"line":698,"column":0},"end":{"line":698,"column":37}},"179":{"start":{"line":699,"column":0},"end":{"line":699,"column":51}},"180":{"start":{"line":700,"column":0},"end":{"line":700,"column":39}},"181":{"start":{"line":701,"column":0},"end":{"line":701,"column":39}},"182":{"start":{"line":704,"column":0},"end":{"line":704,"column":24}},"183":{"start":{"line":705,"column":0},"end":{"line":709,"column":33}},"184":{"start":{"line":710,"column":0},"end":{"line":717,"column":35}},"185":{"start":{"line":726,"column":0},"end":{"line":729,"column":1}},"186":{"start":{"line":727,"column":2},"end":{"line":728,"column":66}},"187":{"start":{"line":738,"column":0},"end":{"line":742,"column":1}},"188":{"start":{"line":739,"column":2},"end":{"line":741,"column":4}},"189":{"start":{"line":740,"column":4},"end":{"line":740,"column":23}},"190":{"start":{"line":745,"column":0},"end":{"line":745,"column":90}},"191":{"start":{"line":748,"column":0},"end":{"line":748,"column":102}},"192":{"start":{"line":751,"column":0},"end":{"line":751,"column":77}},"193":{"start":{"line":754,"column":0},"end":{"line":754,"column":56}},"194":{"start":{"line":757,"column":0},"end":{"line":769,"column":5}},"195":{"start":{"line":758,"column":2},"end":{"line":768,"column":16}},"196":{"start":{"line":760,"column":4},"end":{"line":760,"column":91}},"197":{"start":{"line":762,"column":4},"end":{"line":764,"column":5}},"198":{"start":{"line":763,"column":6},"end":{"line":763,"column":19}},"199":{"start":{"line":767,"column":4},"end":{"line":767,"column":77}},"200":{"start":{"line":772,"column":0},"end":{"line":772,"column":57}},"201":{"start":{"line":791,"column":0},"end":{"line":791,"column":85}},"202":{"start":{"line":794,"column":0},"end":{"line":794,"column":37}},"203":{"start":{"line":797,"column":0},"end":{"line":797,"column":52}},"204":{"start":{"line":807,"column":0},"end":{"line":832,"column":1}},"205":{"start":{"line":808,"column":2},"end":{"line":814,"column":29}},"206":{"start":{"line":816,"column":2},"end":{"line":830,"column":3}},"207":{"start":{"line":817,"column":4},"end":{"line":829,"column":5}},"208":{"start":{"line":828,"column":6},"end":{"line":828,"column":23}},"209":{"start":{"line":831,"column":2},"end":{"line":831,"column":16}},"210":{"start":{"line":835,"column":0},"end":{"line":835,"column":37}},"211":{"start":{"line":844,"column":0},"end":{"line":849,"column":1}},"212":{"start":{"line":845,"column":2},"end":{"line":846,"column":77}},"213":{"start":{"line":848,"column":2},"end":{"line":848,"column":25}},"214":{"start":{"line":859,"column":0},"end":{"line":863,"column":1}},"215":{"start":{"line":860,"column":2},"end":{"line":862,"column":4}},"216":{"start":{"line":861,"column":4},"end":{"line":861,"column":32}},"217":{"start":{"line":866,"column":0},"end":{"line":866,"column":46}},"218":{"start":{"line":869,"column":0},"end":{"line":869,"column":37}},"219":{"start":{"line":872,"column":0},"end":{"line":872,"column":52}},"220":{"start":{"line":881,"column":0},"end":{"line":892,"column":1}},"221":{"start":{"line":882,"column":2},"end":{"line":884,"column":3}},"222":{"start":{"line":883,"column":4},"end":{"line":883,"column":30}},"223":{"start":{"line":885,"column":2},"end":{"line":885,"column":18}},"224":{"start":{"line":886,"column":2},"end":{"line":890,"column":3}},"225":{"start":{"line":887,"column":4},"end":{"line":889,"column":5}},"226":{"start":{"line":888,"column":6},"end":{"line":888,"column":23}},"227":{"start":{"line":891,"column":2},"end":{"line":891,"column":16}},"228":{"start":{"line":922,"column":0},"end":{"line":924,"column":1}},"229":{"start":{"line":923,"column":2},"end":{"line":923,"column":72}},"230":{"start":{"line":926,"column":0},"end":{"line":932,"column":1}},"231":{"start":{"line":927,"column":4},"end":{"line":927,"column":15}},"232":{"start":{"line":928,"column":4},"end":{"line":928,"column":26}},"233":{"start":{"line":929,"column":4},"end":{"line":931,"column":5}},"234":{"start":{"line":930,"column":8},"end":{"line":930,"column":59}},"235":{"start":{"line":934,"column":0},"end":{"line":943,"column":1}},"236":{"start":{"line":935,"column":4},"end":{"line":935,"column":15}},"237":{"start":{"line":936,"column":4},"end":{"line":942,"column":5}},"238":{"start":{"line":937,"column":8},"end":{"line":937,"column":35}},"239":{"start":{"line":938,"column":8},"end":{"line":939,"column":24}},"240":{"start":{"line":939,"column":12},"end":{"line":939,"column":24}},"241":{"start":{"line":940,"column":8},"end":{"line":940,"column":12}},"242":{"start":{"line":941,"column":8},"end":{"line":941,"column":43}},"243":{"start":{"line":945,"column":0},"end":{"line":953,"column":1}},"244":{"start":{"line":946,"column":4},"end":{"line":946,"column":26}},"245":{"start":{"line":947,"column":4},"end":{"line":947,"column":15}},"246":{"start":{"line":948,"column":4},"end":{"line":948,"column":27}},"247":{"start":{"line":949,"column":4},"end":{"line":952,"column":6}},"248":{"start":{"line":950,"column":8},"end":{"line":950,"column":29}},"249":{"start":{"line":951,"column":8},"end":{"line":951,"column":60}},"250":{"start":{"line":955,"column":0},"end":{"line":962,"column":1}},"251":{"start":{"line":956,"column":4},"end":{"line":958,"column":5}},"252":{"start":{"line":957,"column":8},"end":{"line":957,"column":41}},"253":{"start":{"line":960,"column":4},"end":{"line":960,"column":37}},"254":{"start":{"line":961,"column":4},"end":{"line":961,"column":82}},"255":{"start":{"line":964,"column":0},"end":{"line":971,"column":1}},"256":{"start":{"line":965,"column":4},"end":{"line":970,"column":6}},"257":{"start":{"line":966,"column":8},"end":{"line":966,"column":73}},"258":{"start":{"line":966,"column":25},"end":{"line":966,"column":73}},"259":{"start":{"line":967,"column":8},"end":{"line":967,"column":24}},"260":{"start":{"line":968,"column":8},"end":{"line":968,"column":18}},"261":{"start":{"line":969,"column":8},"end":{"line":969,"column":38}},"262":{"start":{"line":973,"column":0},"end":{"line":1018,"column":1}},"263":{"start":{"line":974,"column":4},"end":{"line":1017,"column":6}},"264":{"start":{"line":975,"column":8},"end":{"line":975,"column":42}},"265":{"start":{"line":976,"column":8},"end":{"line":978,"column":9}},"266":{"start":{"line":977,"column":12},"end":{"line":977,"column":34}},"267":{"start":{"line":979,"column":8},"end":{"line":979,"column":37}},"268":{"start":{"line":980,"column":8},"end":{"line":980,"column":25}},"269":{"start":{"line":981,"column":8},"end":{"line":981,"column":24}},"270":{"start":{"line":982,"column":8},"end":{"line":982,"column":28}},"271":{"start":{"line":984,"column":8},"end":{"line":997,"column":9}},"272":{"start":{"line":985,"column":12},"end":{"line":985,"column":25}},"273":{"start":{"line":986,"column":12},"end":{"line":996,"column":13}},"274":{"start":{"line":987,"column":16},"end":{"line":987,"column":28}},"275":{"start":{"line":988,"column":16},"end":{"line":988,"column":30}},"276":{"start":{"line":990,"column":17},"end":{"line":996,"column":13}},"277":{"start":{"line":991,"column":16},"end":{"line":991,"column":28}},"278":{"start":{"line":992,"column":16},"end":{"line":992,"column":38}},"279":{"start":{"line":994,"column":17},"end":{"line":996,"column":13}},"280":{"start":{"line":995,"column":16},"end":{"line":995,"column":28}},"281":{"start":{"line":999,"column":8},"end":{"line":1014,"column":9}},"282":{"start":{"line":1000,"column":12},"end":{"line":1000,"column":27}},"283":{"start":{"line":1001,"column":12},"end":{"line":1012,"column":13}},"284":{"start":{"line":1002,"column":16},"end":{"line":1002,"column":38}},"285":{"start":{"line":1003,"column":16},"end":{"line":1009,"column":17}},"286":{"start":{"line":1004,"column":20},"end":{"line":1004,"column":32}},"287":{"start":{"line":1005,"column":20},"end":{"line":1007,"column":21}},"288":{"start":{"line":1006,"column":24},"end":{"line":1006,"column":39}},"289":{"start":{"line":1008,"column":20},"end":{"line":1008,"column":27}},"290":{"start":{"line":1010,"column":16},"end":{"line":1010,"column":29}},"291":{"start":{"line":1011,"column":16},"end":{"line":1011,"column":75}},"292":{"start":{"line":1013,"column":12},"end":{"line":1013,"column":28}},"293":{"start":{"line":1016,"column":8},"end":{"line":1016,"column":20}},"294":{"start":{"line":1040,"column":0},"end":{"line":1042,"column":1}},"295":{"start":{"line":1041,"column":4},"end":{"line":1041,"column":61}},"296":{"start":{"line":1044,"column":0},"end":{"line":1048,"column":1}},"297":{"start":{"line":1045,"column":4},"end":{"line":1047,"column":6}},"298":{"start":{"line":1046,"column":8},"end":{"line":1046,"column":55}},"299":{"start":{"line":1051,"column":0},"end":{"line":1071,"column":1}},"300":{"start":{"line":1052,"column":4},"end":{"line":1052,"column":38}},"301":{"start":{"line":1053,"column":4},"end":{"line":1055,"column":29}},"302":{"start":{"line":1056,"column":4},"end":{"line":1058,"column":5}},"303":{"start":{"line":1057,"column":8},"end":{"line":1057,"column":23}},"304":{"start":{"line":1060,"column":4},"end":{"line":1066,"column":5}},"305":{"start":{"line":1061,"column":8},"end":{"line":1065,"column":9}},"306":{"start":{"line":1062,"column":12},"end":{"line":1062,"column":26}},"307":{"start":{"line":1063,"column":15},"end":{"line":1065,"column":9}},"308":{"start":{"line":1064,"column":12},"end":{"line":1064,"column":27}},"309":{"start":{"line":1068,"column":4},"end":{"line":1070,"column":5}},"310":{"start":{"line":1069,"column":8},"end":{"line":1069,"column":65}},"311":{"start":{"line":1074,"column":0},"end":{"line":1074,"column":51}},"312":{"start":{"line":1115,"column":0},"end":{"line":1118,"column":2}},"313":{"start":{"line":1116,"column":4},"end":{"line":1116,"column":83}},"314":{"start":{"line":1117,"column":4},"end":{"line":1117,"column":62}},"315":{"start":{"line":1120,"column":0},"end":{"line":1124,"column":1}},"316":{"start":{"line":1121,"column":4},"end":{"line":1123,"column":6}},"317":{"start":{"line":1122,"column":8},"end":{"line":1122,"column":62}},"318":{"start":{"line":1126,"column":0},"end":{"line":1142,"column":1}},"319":{"start":{"line":1127,"column":4},"end":{"line":1127,"column":32}},"320":{"start":{"line":1128,"column":4},"end":{"line":1128,"column":20}},"321":{"start":{"line":1129,"column":4},"end":{"line":1129,"column":21}},"322":{"start":{"line":1130,"column":4},"end":{"line":1130,"column":20}},"323":{"start":{"line":1131,"column":4},"end":{"line":1131,"column":40}},"324":{"start":{"line":1133,"column":4},"end":{"line":1141,"column":7}},"325":{"start":{"line":1134,"column":8},"end":{"line":1134,"column":30}},"326":{"start":{"line":1135,"column":8},"end":{"line":1138,"column":11}},"327":{"start":{"line":1136,"column":12},"end":{"line":1136,"column":31}},"328":{"start":{"line":1137,"column":12},"end":{"line":1137,"column":26}},"329":{"start":{"line":1140,"column":8},"end":{"line":1140,"column":31}},"330":{"start":{"line":1180,"column":0},"end":{"line":1180,"column":32}},"331":{"start":{"line":1215,"column":0},"end":{"line":1215,"column":33}},"332":{"start":{"line":1217,"column":0},"end":{"line":1221,"column":1}},"333":{"start":{"line":1218,"column":4},"end":{"line":1220,"column":6}},"334":{"start":{"line":1219,"column":8},"end":{"line":1219,"column":75}},"335":{"start":{"line":1242,"column":0},"end":{"line":1242,"column":42}},"336":{"start":{"line":1262,"column":0},"end":{"line":1262,"column":37}},"337":{"start":{"line":1283,"column":0},"end":{"line":1283,"column":45}},"338":{"start":{"line":1294,"column":0},"end":{"line":1304,"column":1}},"339":{"start":{"line":1295,"column":2},"end":{"line":1296,"column":48}},"340":{"start":{"line":1298,"column":2},"end":{"line":1302,"column":3}},"341":{"start":{"line":1299,"column":4},"end":{"line":1301,"column":5}},"342":{"start":{"line":1300,"column":6},"end":{"line":1300,"column":12}},"343":{"start":{"line":1303,"column":2},"end":{"line":1303,"column":15}},"344":{"start":{"line":1313,"column":0},"end":{"line":1328,"column":1}},"345":{"start":{"line":1314,"column":2},"end":{"line":1327,"column":4}},"346":{"start":{"line":1315,"column":4},"end":{"line":1318,"column":30}},"347":{"start":{"line":1320,"column":4},"end":{"line":1325,"column":5}},"348":{"start":{"line":1321,"column":6},"end":{"line":1321,"column":52}},"349":{"start":{"line":1322,"column":6},"end":{"line":1324,"column":7}},"350":{"start":{"line":1323,"column":8},"end":{"line":1323,"column":14}},"351":{"start":{"line":1326,"column":4},"end":{"line":1326,"column":18}},"352":{"start":{"line":1341,"column":0},"end":{"line":1341,"column":30}},"353":{"start":{"line":1351,"column":0},"end":{"line":1353,"column":1}},"354":{"start":{"line":1352,"column":2},"end":{"line":1352,"column":51}},"355":{"start":{"line":1366,"column":0},"end":{"line":1376,"column":1}},"356":{"start":{"line":1367,"column":2},"end":{"line":1368,"column":47}},"357":{"start":{"line":1370,"column":2},"end":{"line":1374,"column":3}},"358":{"start":{"line":1371,"column":4},"end":{"line":1373,"column":5}},"359":{"start":{"line":1372,"column":6},"end":{"line":1372,"column":19}},"360":{"start":{"line":1375,"column":2},"end":{"line":1375,"column":12}},"361":{"start":{"line":1385,"column":0},"end":{"line":1387,"column":1}},"362":{"start":{"line":1386,"column":2},"end":{"line":1386,"column":25}},"363":{"start":{"line":1399,"column":0},"end":{"line":1409,"column":1}},"364":{"start":{"line":1400,"column":2},"end":{"line":1401,"column":28}},"365":{"start":{"line":1403,"column":2},"end":{"line":1407,"column":3}},"366":{"start":{"line":1404,"column":4},"end":{"line":1406,"column":5}},"367":{"start":{"line":1405,"column":6},"end":{"line":1405,"column":19}},"368":{"start":{"line":1408,"column":2},"end":{"line":1408,"column":12}},"369":{"start":{"line":1420,"column":0},"end":{"line":1424,"column":1}},"370":{"start":{"line":1421,"column":2},"end":{"line":1423,"column":49}},"371":{"start":{"line":1505,"column":0},"end":{"line":1670,"column":2}},"372":{"start":{"line":1506,"column":4},"end":{"line":1510,"column":5}},"373":{"start":{"line":1508,"column":8},"end":{"line":1508,"column":31}},"374":{"start":{"line":1509,"column":8},"end":{"line":1509,"column":27}},"375":{"start":{"line":1511,"column":4},"end":{"line":1511,"column":38}},"376":{"start":{"line":1512,"column":4},"end":{"line":1512,"column":30}},"377":{"start":{"line":1513,"column":4},"end":{"line":1513,"column":34}},"378":{"start":{"line":1514,"column":4},"end":{"line":1516,"column":5}},"379":{"start":{"line":1515,"column":8},"end":{"line":1515,"column":30}},"380":{"start":{"line":1517,"column":4},"end":{"line":1519,"column":5}},"381":{"start":{"line":1518,"column":8},"end":{"line":1518,"column":31}},"382":{"start":{"line":1521,"column":4},"end":{"line":1521,"column":21}},"383":{"start":{"line":1522,"column":4},"end":{"line":1522,"column":25}},"384":{"start":{"line":1523,"column":4},"end":{"line":1523,"column":25}},"385":{"start":{"line":1525,"column":4},"end":{"line":1525,"column":40}},"386":{"start":{"line":1527,"column":4},"end":{"line":1527,"column":24}},"387":{"start":{"line":1530,"column":4},"end":{"line":1530,"column":26}},"388":{"start":{"line":1532,"column":4},"end":{"line":1532,"column":35}},"389":{"start":{"line":1534,"column":4},"end":{"line":1565,"column":7}},"390":{"start":{"line":1535,"column":8},"end":{"line":1540,"column":9}},"391":{"start":{"line":1537,"column":12},"end":{"line":1537,"column":37}},"392":{"start":{"line":1538,"column":12},"end":{"line":1538,"column":35}},"393":{"start":{"line":1539,"column":12},"end":{"line":1539,"column":19}},"394":{"start":{"line":1542,"column":8},"end":{"line":1542,"column":58}},"395":{"start":{"line":1543,"column":8},"end":{"line":1543,"column":56}},"396":{"start":{"line":1544,"column":8},"end":{"line":1548,"column":9}},"397":{"start":{"line":1545,"column":12},"end":{"line":1545,"column":35}},"398":{"start":{"line":1546,"column":12},"end":{"line":1546,"column":35}},"399":{"start":{"line":1547,"column":12},"end":{"line":1547,"column":19}},"400":{"start":{"line":1549,"column":8},"end":{"line":1549,"column":59}},"401":{"start":{"line":1551,"column":8},"end":{"line":1564,"column":11}},"402":{"start":{"line":1552,"column":12},"end":{"line":1557,"column":13}},"403":{"start":{"line":1553,"column":16},"end":{"line":1556,"column":45}},"404":{"start":{"line":1558,"column":12},"end":{"line":1563,"column":15}},"405":{"start":{"line":1559,"column":16},"end":{"line":1559,"column":40}},"406":{"start":{"line":1560,"column":16},"end":{"line":1562,"column":17}},"407":{"start":{"line":1561,"column":20},"end":{"line":1561,"column":43}},"408":{"start":{"line":1567,"column":4},"end":{"line":1567,"column":24}},"409":{"start":{"line":1568,"column":4},"end":{"line":1568,"column":19}},"410":{"start":{"line":1570,"column":4},"end":{"line":1574,"column":5}},"411":{"start":{"line":1571,"column":8},"end":{"line":1573,"column":11}},"412":{"start":{"line":1572,"column":12},"end":{"line":1572,"column":31}},"413":{"start":{"line":1576,"column":4},"end":{"line":1585,"column":5}},"414":{"start":{"line":1577,"column":8},"end":{"line":1579,"column":9}},"415":{"start":{"line":1578,"column":12},"end":{"line":1578,"column":43}},"416":{"start":{"line":1580,"column":8},"end":{"line":1583,"column":9}},"417":{"start":{"line":1581,"column":12},"end":{"line":1581,"column":41}},"418":{"start":{"line":1582,"column":12},"end":{"line":1582,"column":18}},"419":{"start":{"line":1587,"column":4},"end":{"line":1594,"column":5}},"420":{"start":{"line":1588,"column":8},"end":{"line":1588,"column":48}},"421":{"start":{"line":1589,"column":8},"end":{"line":1591,"column":9}},"422":{"start":{"line":1590,"column":12},"end":{"line":1590,"column":53}},"423":{"start":{"line":1593,"column":8},"end":{"line":1593,"column":31}},"424":{"start":{"line":1596,"column":4},"end":{"line":1602,"column":5}},"425":{"start":{"line":1597,"column":8},"end":{"line":1597,"column":54}},"426":{"start":{"line":1598,"column":8},"end":{"line":1600,"column":11}},"427":{"start":{"line":1599,"column":12},"end":{"line":1599,"column":17}},"428":{"start":{"line":1601,"column":8},"end":{"line":1601,"column":23}},"429":{"start":{"line":1605,"column":4},"end":{"line":1636,"column":5}},"430":{"start":{"line":1606,"column":8},"end":{"line":1606,"column":29}},"431":{"start":{"line":1606,"column":22},"end":{"line":1606,"column":29}},"432":{"start":{"line":1608,"column":8},"end":{"line":1627,"column":11}},"433":{"start":{"line":1609,"column":12},"end":{"line":1609,"column":27}},"434":{"start":{"line":1610,"column":12},"end":{"line":1612,"column":13}},"435":{"start":{"line":1611,"column":16},"end":{"line":1611,"column":45}},"436":{"start":{"line":1613,"column":12},"end":{"line":1626,"column":13}},"437":{"start":{"line":1614,"column":16},"end":{"line":1614,"column":37}},"438":{"start":{"line":1615,"column":16},"end":{"line":1617,"column":19}},"439":{"start":{"line":1616,"column":20},"end":{"line":1616,"column":44}},"440":{"start":{"line":1618,"column":16},"end":{"line":1618,"column":42}},"441":{"start":{"line":1619,"column":16},"end":{"line":1619,"column":32}},"442":{"start":{"line":1620,"column":16},"end":{"line":1620,"column":48}},"443":{"start":{"line":1622,"column":16},"end":{"line":1622,"column":43}},"444":{"start":{"line":1624,"column":16},"end":{"line":1624,"column":38}},"445":{"start":{"line":1625,"column":16},"end":{"line":1625,"column":34}},"446":{"start":{"line":1629,"column":8},"end":{"line":1629,"column":23}},"447":{"start":{"line":1630,"column":8},"end":{"line":1630,"column":54}},"448":{"start":{"line":1631,"column":8},"end":{"line":1635,"column":9}},"449":{"start":{"line":1632,"column":12},"end":{"line":1632,"column":42}},"450":{"start":{"line":1634,"column":12},"end":{"line":1634,"column":33}},"451":{"start":{"line":1638,"column":4},"end":{"line":1659,"column":5}},"452":{"start":{"line":1642,"column":8},"end":{"line":1642,"column":24}},"453":{"start":{"line":1643,"column":8},"end":{"line":1643,"column":24}},"454":{"start":{"line":1644,"column":8},"end":{"line":1652,"column":9}},"455":{"start":{"line":1645,"column":12},"end":{"line":1645,"column":45}},"456":{"start":{"line":1646,"column":12},"end":{"line":1646,"column":22}},"457":{"start":{"line":1647,"column":12},"end":{"line":1651,"column":15}},"458":{"start":{"line":1648,"column":16},"end":{"line":1650,"column":17}},"459":{"start":{"line":1649,"column":20},"end":{"line":1649,"column":49}},"460":{"start":{"line":1654,"column":8},"end":{"line":1658,"column":9}},"461":{"start":{"line":1655,"column":12},"end":{"line":1657,"column":14}},"462":{"start":{"line":1661,"column":4},"end":{"line":1669,"column":5}},"463":{"start":{"line":1662,"column":8},"end":{"line":1662,"column":24}},"464":{"start":{"line":1663,"column":8},"end":{"line":1667,"column":11}},"465":{"start":{"line":1664,"column":12},"end":{"line":1666,"column":13}},"466":{"start":{"line":1665,"column":16},"end":{"line":1665,"column":33}},"467":{"start":{"line":1668,"column":8},"end":{"line":1668,"column":22}},"468":{"start":{"line":1681,"column":0},"end":{"line":1690,"column":1}},"469":{"start":{"line":1682,"column":2},"end":{"line":1684,"column":29}},"470":{"start":{"line":1686,"column":2},"end":{"line":1688,"column":3}},"471":{"start":{"line":1687,"column":4},"end":{"line":1687,"column":57}},"472":{"start":{"line":1689,"column":2},"end":{"line":1689,"column":16}},"473":{"start":{"line":1693,"column":0},"end":{"line":1693,"column":34}},"474":{"start":{"line":1712,"column":0},"end":{"line":1715,"column":1}},"475":{"start":{"line":1713,"column":2},"end":{"line":1714,"column":60}},"476":{"start":{"line":1718,"column":0},"end":{"line":1718,"column":21}},"477":{"start":{"line":1721,"column":0},"end":{"line":1721,"column":60}},"478":{"start":{"line":1722,"column":0},"end":{"line":1722,"column":68}},"479":{"start":{"line":1732,"column":0},"end":{"line":1746,"column":1}},"480":{"start":{"line":1734,"column":2},"end":{"line":1736,"column":3}},"481":{"start":{"line":1735,"column":4},"end":{"line":1735,"column":17}},"482":{"start":{"line":1737,"column":2},"end":{"line":1740,"column":3}},"483":{"start":{"line":1739,"column":4},"end":{"line":1739,"column":46}},"484":{"start":{"line":1741,"column":2},"end":{"line":1743,"column":3}},"485":{"start":{"line":1742,"column":4},"end":{"line":1742,"column":60}},"486":{"start":{"line":1744,"column":2},"end":{"line":1744,"column":28}},"487":{"start":{"line":1745,"column":2},"end":{"line":1745,"column":69}},"488":{"start":{"line":1757,"column":0},"end":{"line":1776,"column":1}},"489":{"start":{"line":1758,"column":2},"end":{"line":1759,"column":28}},"490":{"start":{"line":1761,"column":2},"end":{"line":1763,"column":3}},"491":{"start":{"line":1762,"column":4},"end":{"line":1762,"column":51}},"492":{"start":{"line":1764,"column":2},"end":{"line":1764,"column":36}},"493":{"start":{"line":1765,"column":2},"end":{"line":1767,"column":3}},"494":{"start":{"line":1766,"column":4},"end":{"line":1766,"column":18}},"495":{"start":{"line":1768,"column":2},"end":{"line":1768,"column":51}},"496":{"start":{"line":1769,"column":2},"end":{"line":1769,"column":15}},"497":{"start":{"line":1771,"column":2},"end":{"line":1771,"column":29}},"498":{"start":{"line":1772,"column":2},"end":{"line":1774,"column":3}},"499":{"start":{"line":1773,"column":4},"end":{"line":1773,"column":41}},"500":{"start":{"line":1775,"column":2},"end":{"line":1775,"column":16}},"501":{"start":{"line":1787,"column":0},"end":{"line":1791,"column":1}},"502":{"start":{"line":1788,"column":2},"end":{"line":1788,"column":28}},"503":{"start":{"line":1789,"column":2},"end":{"line":1789,"column":41}},"504":{"start":{"line":1790,"column":2},"end":{"line":1790,"column":74}},"505":{"start":{"line":1802,"column":0},"end":{"line":1807,"column":1}},"506":{"start":{"line":1803,"column":2},"end":{"line":1803,"column":32}},"507":{"start":{"line":1805,"column":2},"end":{"line":1805,"column":74}},"508":{"start":{"line":1806,"column":2},"end":{"line":1806,"column":15}},"509":{"start":{"line":1818,"column":0},"end":{"line":1824,"column":1}},"510":{"start":{"line":1819,"column":2},"end":{"line":1820,"column":33}},"511":{"start":{"line":1822,"column":2},"end":{"line":1822,"column":83}},"512":{"start":{"line":1823,"column":2},"end":{"line":1823,"column":15}},"513":{"start":{"line":1833,"column":0},"end":{"line":1835,"column":1}},"514":{"start":{"line":1834,"column":2},"end":{"line":1834,"column":26}},"515":{"start":{"line":1838,"column":0},"end":{"line":1838,"column":38}},"516":{"start":{"line":1839,"column":0},"end":{"line":1839,"column":42}},"517":{"start":{"line":1840,"column":0},"end":{"line":1840,"column":46}},"518":{"start":{"line":1841,"column":0},"end":{"line":1841,"column":44}},"519":{"start":{"line":1842,"column":0},"end":{"line":1842,"column":83}},"520":{"start":{"line":1843,"column":0},"end":{"line":1843,"column":34}},"521":{"start":{"line":1846,"column":0},"end":{"line":1846,"column":22}},"522":{"start":{"line":1849,"column":0},"end":{"line":1849,"column":90}},"523":{"start":{"line":1858,"column":0},"end":{"line":1860,"column":1}},"524":{"start":{"line":1859,"column":2},"end":{"line":1859,"column":35}},"525":{"start":{"line":1863,"column":0},"end":{"line":1863,"column":40}},"526":{"start":{"line":1864,"column":0},"end":{"line":1864,"column":44}},"527":{"start":{"line":1865,"column":0},"end":{"line":1865,"column":48}},"528":{"start":{"line":1866,"column":0},"end":{"line":1866,"column":46}},"529":{"start":{"line":1867,"column":0},"end":{"line":1867,"column":91}},"530":{"start":{"line":1868,"column":0},"end":{"line":1868,"column":36}},"531":{"start":{"line":1871,"column":0},"end":{"line":1871,"column":43}},"532":{"start":{"line":1872,"column":0},"end":{"line":1872,"column":41}},"533":{"start":{"line":1873,"column":0},"end":{"line":1873,"column":40}},"534":{"start":{"line":1874,"column":0},"end":{"line":1874,"column":54}},"535":{"start":{"line":1875,"column":0},"end":{"line":1875,"column":47}},"536":{"start":{"line":1876,"column":0},"end":{"line":1876,"column":51}},"537":{"start":{"line":1877,"column":0},"end":{"line":1877,"column":54}},"538":{"start":{"line":1878,"column":0},"end":{"line":1878,"column":24}},"539":{"start":{"line":1881,"column":0},"end":{"line":1881,"column":32}},"540":{"start":{"line":1882,"column":0},"end":{"line":1882,"column":41}},"541":{"start":{"line":1883,"column":0},"end":{"line":1883,"column":125}},"542":{"start":{"line":1884,"column":0},"end":{"line":1884,"column":44}},"543":{"start":{"line":1885,"column":0},"end":{"line":1885,"column":112}},"544":{"start":{"line":1888,"column":0},"end":{"line":1888,"column":79}},"545":{"start":{"line":1897,"column":0},"end":{"line":1899,"column":1}},"546":{"start":{"line":1898,"column":2},"end":{"line":1898,"column":39}},"547":{"start":{"line":1908,"column":0},"end":{"line":1912,"column":1}},"548":{"start":{"line":1909,"column":2},"end":{"line":1911,"column":27}},"549":{"start":{"line":1935,"column":0},"end":{"line":1937,"column":1}},"550":{"start":{"line":1936,"column":2},"end":{"line":1936,"column":50}},"551":{"start":{"line":1940,"column":0},"end":{"line":1940,"column":26}},"552":{"start":{"line":1964,"column":0},"end":{"line":1978,"column":1}},"553":{"start":{"line":1965,"column":2},"end":{"line":1965,"column":28}},"554":{"start":{"line":1966,"column":2},"end":{"line":1968,"column":3}},"555":{"start":{"line":1967,"column":4},"end":{"line":1967,"column":38}},"556":{"start":{"line":1969,"column":2},"end":{"line":1971,"column":3}},"557":{"start":{"line":1970,"column":4},"end":{"line":1970,"column":18}},"558":{"start":{"line":1972,"column":2},"end":{"line":1975,"column":54}},"559":{"start":{"line":1977,"column":2},"end":{"line":1977,"column":52}},"560":{"start":{"line":1980,"column":0},"end":{"line":1980,"column":67}},"561":{"start":{"line":1981,"column":0},"end":{"line":1981,"column":23}},"562":{"start":{"line":1982,"column":0},"end":{"line":1982,"column":28}},"563":{"start":{"line":1983,"column":0},"end":{"line":1983,"column":56}},"564":{"start":{"line":1985,"column":0},"end":{"line":1993,"column":1}},"565":{"start":{"line":1986,"column":4},"end":{"line":1986,"column":55}},"566":{"start":{"line":1987,"column":4},"end":{"line":1987,"column":51}},"567":{"start":{"line":1988,"column":4},"end":{"line":1988,"column":48}},"568":{"start":{"line":1989,"column":4},"end":{"line":1991,"column":7}},"569":{"start":{"line":1990,"column":8},"end":{"line":1990,"column":45}},"570":{"start":{"line":1992,"column":4},"end":{"line":1992,"column":16}},"571":{"start":{"line":2077,"column":0},"end":{"line":2117,"column":1}},"572":{"start":{"line":2078,"column":4},"end":{"line":2078,"column":22}},"573":{"start":{"line":2080,"column":4},"end":{"line":2114,"column":7}},"574":{"start":{"line":2081,"column":8},"end":{"line":2081,"column":19}},"575":{"start":{"line":2082,"column":8},"end":{"line":2082,"column":40}},"576":{"start":{"line":2083,"column":8},"end":{"line":2085,"column":47}},"577":{"start":{"line":2087,"column":8},"end":{"line":2105,"column":9}},"578":{"start":{"line":2088,"column":12},"end":{"line":2088,"column":41}},"579":{"start":{"line":2089,"column":12},"end":{"line":2089,"column":47}},"580":{"start":{"line":2091,"column":12},"end":{"line":2091,"column":80}},"581":{"start":{"line":2092,"column":15},"end":{"line":2105,"column":9}},"582":{"start":{"line":2094,"column":12},"end":{"line":2094,"column":35}},"583":{"start":{"line":2096,"column":12},"end":{"line":2096,"column":41}},"584":{"start":{"line":2097,"column":12},"end":{"line":2099,"column":13}},"585":{"start":{"line":2098,"column":16},"end":{"line":2098,"column":90}},"586":{"start":{"line":2102,"column":12},"end":{"line":2102,"column":41}},"587":{"start":{"line":2102,"column":28},"end":{"line":2102,"column":41}},"588":{"start":{"line":2104,"column":12},"end":{"line":2104,"column":51}},"589":{"start":{"line":2107,"column":8},"end":{"line":2113,"column":9}},"590":{"start":{"line":2108,"column":12},"end":{"line":2110,"column":15}},"591":{"start":{"line":2109,"column":16},"end":{"line":2109,"column":37}},"592":{"start":{"line":2111,"column":12},"end":{"line":2111,"column":33}},"593":{"start":{"line":2112,"column":12},"end":{"line":2112,"column":51}},"594":{"start":{"line":2116,"column":4},"end":{"line":2116,"column":29}},"595":{"start":{"line":2123,"column":0},"end":{"line":2126,"column":1}},"596":{"start":{"line":2124,"column":4},"end":{"line":2124,"column":33}},"597":{"start":{"line":2125,"column":4},"end":{"line":2125,"column":20}},"598":{"start":{"line":2128,"column":0},"end":{"line":2131,"column":1}},"599":{"start":{"line":2129,"column":4},"end":{"line":2129,"column":19}},"600":{"start":{"line":2130,"column":4},"end":{"line":2130,"column":31}},"601":{"start":{"line":2133,"column":0},"end":{"line":2142,"column":2}},"602":{"start":{"line":2134,"column":4},"end":{"line":2135,"column":31}},"603":{"start":{"line":2134,"column":19},"end":{"line":2134,"column":46}},"604":{"start":{"line":2135,"column":9},"end":{"line":2135,"column":31}},"605":{"start":{"line":2136,"column":4},"end":{"line":2137,"column":31}},"606":{"start":{"line":2136,"column":19},"end":{"line":2136,"column":46}},"607":{"start":{"line":2137,"column":9},"end":{"line":2137,"column":31}},"608":{"start":{"line":2139,"column":4},"end":{"line":2139,"column":33}},"609":{"start":{"line":2140,"column":4},"end":{"line":2140,"column":21}},"610":{"start":{"line":2141,"column":4},"end":{"line":2141,"column":16}},"611":{"start":{"line":2144,"column":0},"end":{"line":2147,"column":2}},"612":{"start":{"line":2145,"column":4},"end":{"line":2145,"column":34}},"613":{"start":{"line":2145,"column":21},"end":{"line":2145,"column":34}},"614":{"start":{"line":2146,"column":4},"end":{"line":2146,"column":16}},"615":{"start":{"line":2149,"column":0},"end":{"line":2156,"column":2}},"616":{"start":{"line":2150,"column":4},"end":{"line":2150,"column":24}},"617":{"start":{"line":2151,"column":4},"end":{"line":2151,"column":29}},"618":{"start":{"line":2152,"column":4},"end":{"line":2153,"column":29}},"619":{"start":{"line":2152,"column":19},"end":{"line":2152,"column":44}},"620":{"start":{"line":2153,"column":9},"end":{"line":2153,"column":29}},"621":{"start":{"line":2154,"column":4},"end":{"line":2154,"column":24}},"622":{"start":{"line":2155,"column":4},"end":{"line":2155,"column":21}},"623":{"start":{"line":2158,"column":0},"end":{"line":2165,"column":2}},"624":{"start":{"line":2159,"column":4},"end":{"line":2159,"column":29}},"625":{"start":{"line":2160,"column":4},"end":{"line":2160,"column":24}},"626":{"start":{"line":2161,"column":4},"end":{"line":2162,"column":29}},"627":{"start":{"line":2161,"column":19},"end":{"line":2161,"column":44}},"628":{"start":{"line":2162,"column":9},"end":{"line":2162,"column":29}},"629":{"start":{"line":2163,"column":4},"end":{"line":2163,"column":24}},"630":{"start":{"line":2164,"column":4},"end":{"line":2164,"column":21}},"631":{"start":{"line":2167,"column":0},"end":{"line":2170,"column":2}},"632":{"start":{"line":2168,"column":4},"end":{"line":2169,"column":32}},"633":{"start":{"line":2168,"column":19},"end":{"line":2168,"column":54}},"634":{"start":{"line":2169,"column":9},"end":{"line":2169,"column":32}},"635":{"start":{"line":2172,"column":0},"end":{"line":2175,"column":2}},"636":{"start":{"line":2173,"column":4},"end":{"line":2174,"column":32}},"637":{"start":{"line":2173,"column":19},"end":{"line":2173,"column":53}},"638":{"start":{"line":2174,"column":9},"end":{"line":2174,"column":32}},"639":{"start":{"line":2177,"column":0},"end":{"line":2179,"column":2}},"640":{"start":{"line":2178,"column":4},"end":{"line":2178,"column":51}},"641":{"start":{"line":2181,"column":0},"end":{"line":2183,"column":2}},"642":{"start":{"line":2182,"column":4},"end":{"line":2182,"column":51}},"643":{"start":{"line":2185,"column":0},"end":{"line":2193,"column":2}},"644":{"start":{"line":2186,"column":4},"end":{"line":2186,"column":33}},"645":{"start":{"line":2187,"column":4},"end":{"line":2187,"column":25}},"646":{"start":{"line":2188,"column":4},"end":{"line":2191,"column":5}},"647":{"start":{"line":2189,"column":8},"end":{"line":2189,"column":29}},"648":{"start":{"line":2190,"column":8},"end":{"line":2190,"column":25}},"649":{"start":{"line":2192,"column":4},"end":{"line":2192,"column":15}},"650":{"start":{"line":2195,"column":0},"end":{"line":2205,"column":2}},"651":{"start":{"line":2196,"column":4},"end":{"line":2196,"column":25}},"652":{"start":{"line":2197,"column":4},"end":{"line":2203,"column":5}},"653":{"start":{"line":2198,"column":8},"end":{"line":2198,"column":29}},"654":{"start":{"line":2199,"column":8},"end":{"line":2201,"column":9}},"655":{"start":{"line":2200,"column":12},"end":{"line":2200,"column":34}},"656":{"start":{"line":2202,"column":8},"end":{"line":2202,"column":20}},"657":{"start":{"line":2204,"column":4},"end":{"line":2204,"column":16}},"658":{"start":{"line":2207,"column":0},"end":{"line":2370,"column":1}},"659":{"start":{"line":2208,"column":4},"end":{"line":2213,"column":5}},"660":{"start":{"line":2209,"column":8},"end":{"line":2209,"column":24}},"661":{"start":{"line":2211,"column":9},"end":{"line":2213,"column":5}},"662":{"start":{"line":2212,"column":8},"end":{"line":2212,"column":56}},"663":{"start":{"line":2215,"column":4},"end":{"line":2215,"column":36}},"664":{"start":{"line":2216,"column":4},"end":{"line":2216,"column":23}},"665":{"start":{"line":2217,"column":4},"end":{"line":2217,"column":25}},"666":{"start":{"line":2219,"column":4},"end":{"line":2219,"column":36}},"667":{"start":{"line":2220,"column":4},"end":{"line":2255,"column":5}},"668":{"start":{"line":2221,"column":8},"end":{"line":2223,"column":9}},"669":{"start":{"line":2222,"column":12},"end":{"line":2222,"column":64}},"670":{"start":{"line":2224,"column":8},"end":{"line":2224,"column":25}},"671":{"start":{"line":2225,"column":8},"end":{"line":2227,"column":9}},"672":{"start":{"line":2226,"column":12},"end":{"line":2226,"column":26}},"673":{"start":{"line":2228,"column":8},"end":{"line":2233,"column":9}},"674":{"start":{"line":2230,"column":12},"end":{"line":2232,"column":15}},"675":{"start":{"line":2231,"column":16},"end":{"line":2231,"column":26}},"676":{"start":{"line":2235,"column":8},"end":{"line":2246,"column":9}},"677":{"start":{"line":2236,"column":12},"end":{"line":2239,"column":14}},"678":{"start":{"line":2241,"column":12},"end":{"line":2245,"column":13}},"679":{"start":{"line":2242,"column":16},"end":{"line":2242,"column":39}},"680":{"start":{"line":2244,"column":16},"end":{"line":2244,"column":36}},"681":{"start":{"line":2248,"column":8},"end":{"line":2254,"column":9}},"682":{"start":{"line":2249,"column":12},"end":{"line":2249,"column":39}},"683":{"start":{"line":2250,"column":12},"end":{"line":2253,"column":15}},"684":{"start":{"line":2251,"column":16},"end":{"line":2251,"column":44}},"685":{"start":{"line":2252,"column":16},"end":{"line":2252,"column":28}},"686":{"start":{"line":2257,"column":4},"end":{"line":2287,"column":5}},"687":{"start":{"line":2258,"column":8},"end":{"line":2286,"column":10}},"688":{"start":{"line":2259,"column":12},"end":{"line":2259,"column":28}},"689":{"start":{"line":2261,"column":12},"end":{"line":2276,"column":13}},"690":{"start":{"line":2262,"column":16},"end":{"line":2262,"column":36}},"691":{"start":{"line":2264,"column":16},"end":{"line":2264,"column":62}},"692":{"start":{"line":2265,"column":16},"end":{"line":2269,"column":17}},"693":{"start":{"line":2266,"column":20},"end":{"line":2266,"column":40}},"694":{"start":{"line":2267,"column":23},"end":{"line":2269,"column":17}},"695":{"start":{"line":2268,"column":20},"end":{"line":2268,"column":49}},"696":{"start":{"line":2271,"column":16},"end":{"line":2271,"column":53}},"697":{"start":{"line":2273,"column":16},"end":{"line":2275,"column":17}},"698":{"start":{"line":2274,"column":20},"end":{"line":2274,"column":44}},"699":{"start":{"line":2278,"column":12},"end":{"line":2280,"column":13}},"700":{"start":{"line":2279,"column":16},"end":{"line":2279,"column":32}},"701":{"start":{"line":2282,"column":12},"end":{"line":2284,"column":13}},"702":{"start":{"line":2283,"column":16},"end":{"line":2283,"column":26}},"703":{"start":{"line":2285,"column":12},"end":{"line":2285,"column":24}},"704":{"start":{"line":2289,"column":4},"end":{"line":2289,"column":29}},"705":{"start":{"line":2290,"column":4},"end":{"line":2368,"column":6}},"706":{"start":{"line":2303,"column":12},"end":{"line":2303,"column":43}},"707":{"start":{"line":2306,"column":12},"end":{"line":2306,"column":27}},"708":{"start":{"line":2307,"column":12},"end":{"line":2307,"column":29}},"709":{"start":{"line":2310,"column":12},"end":{"line":2310,"column":42}},"710":{"start":{"line":2313,"column":12},"end":{"line":2313,"column":36}},"711":{"start":{"line":2318,"column":12},"end":{"line":2320,"column":13}},"712":{"start":{"line":2319,"column":16},"end":{"line":2319,"column":23}},"713":{"start":{"line":2321,"column":12},"end":{"line":2321,"column":32}},"714":{"start":{"line":2322,"column":12},"end":{"line":2345,"column":13}},"715":{"start":{"line":2323,"column":16},"end":{"line":2323,"column":42}},"716":{"start":{"line":2324,"column":16},"end":{"line":2324,"column":40}},"717":{"start":{"line":2325,"column":16},"end":{"line":2325,"column":58}},"718":{"start":{"line":2325,"column":31},"end":{"line":2325,"column":58}},"719":{"start":{"line":2326,"column":16},"end":{"line":2331,"column":17}},"720":{"start":{"line":2327,"column":20},"end":{"line":2327,"column":48}},"721":{"start":{"line":2328,"column":20},"end":{"line":2328,"column":37}},"722":{"start":{"line":2329,"column":20},"end":{"line":2329,"column":43}},"723":{"start":{"line":2330,"column":20},"end":{"line":2330,"column":41}},"724":{"start":{"line":2333,"column":16},"end":{"line":2333,"column":32}},"725":{"start":{"line":2335,"column":16},"end":{"line":2337,"column":17}},"726":{"start":{"line":2336,"column":20},"end":{"line":2336,"column":30}},"727":{"start":{"line":2339,"column":16},"end":{"line":2341,"column":17}},"728":{"start":{"line":2340,"column":20},"end":{"line":2340,"column":34}},"729":{"start":{"line":2343,"column":16},"end":{"line":2343,"column":48}},"730":{"start":{"line":2344,"column":16},"end":{"line":2344,"column":34}},"731":{"start":{"line":2346,"column":12},"end":{"line":2346,"column":33}},"732":{"start":{"line":2349,"column":12},"end":{"line":2349,"column":35}},"733":{"start":{"line":2352,"column":12},"end":{"line":2352,"column":30}},"734":{"start":{"line":2355,"column":12},"end":{"line":2355,"column":31}},"735":{"start":{"line":2358,"column":12},"end":{"line":2358,"column":54}},"736":{"start":{"line":2361,"column":12},"end":{"line":2361,"column":28}},"737":{"start":{"line":2364,"column":12},"end":{"line":2364,"column":47}},"738":{"start":{"line":2364,"column":38},"end":{"line":2364,"column":45}},"739":{"start":{"line":2365,"column":12},"end":{"line":2365,"column":29}},"740":{"start":{"line":2366,"column":12},"end":{"line":2366,"column":38}},"741":{"start":{"line":2369,"column":4},"end":{"line":2369,"column":13}},"742":{"start":{"line":2449,"column":0},"end":{"line":2451,"column":1}},"743":{"start":{"line":2450,"column":4},"end":{"line":2450,"column":37}},"744":{"start":{"line":2470,"column":0},"end":{"line":2470,"column":43}},"745":{"start":{"line":2512,"column":0},"end":{"line":2523,"column":1}},"746":{"start":{"line":2513,"column":4},"end":{"line":2513,"column":38}},"747":{"start":{"line":2514,"column":4},"end":{"line":2514,"column":40}},"748":{"start":{"line":2515,"column":4},"end":{"line":2522,"column":7}},"749":{"start":{"line":2516,"column":8},"end":{"line":2519,"column":11}},"750":{"start":{"line":2517,"column":12},"end":{"line":2517,"column":21}},"751":{"start":{"line":2518,"column":12},"end":{"line":2518,"column":26}},"752":{"start":{"line":2521,"column":8},"end":{"line":2521,"column":28}},"753":{"start":{"line":2563,"column":0},"end":{"line":2586,"column":1}},"754":{"start":{"line":2564,"column":4},"end":{"line":2564,"column":52}},"755":{"start":{"line":2565,"column":4},"end":{"line":2585,"column":6}},"756":{"start":{"line":2566,"column":8},"end":{"line":2566,"column":36}},"757":{"start":{"line":2567,"column":8},"end":{"line":2567,"column":24}},"758":{"start":{"line":2569,"column":8},"end":{"line":2569,"column":39}},"759":{"start":{"line":2570,"column":8},"end":{"line":2574,"column":9}},"760":{"start":{"line":2571,"column":12},"end":{"line":2571,"column":23}},"761":{"start":{"line":2573,"column":12},"end":{"line":2573,"column":22}},"762":{"start":{"line":2576,"column":8},"end":{"line":2584,"column":11}},"763":{"start":{"line":2577,"column":12},"end":{"line":2580,"column":16}},"764":{"start":{"line":2578,"column":16},"end":{"line":2578,"column":51}},"765":{"start":{"line":2579,"column":16},"end":{"line":2579,"column":34}},"766":{"start":{"line":2583,"column":12},"end":{"line":2583,"column":50}},"767":{"start":{"line":2623,"column":0},"end":{"line":2625,"column":2}},"768":{"start":{"line":2624,"column":4},"end":{"line":2624,"column":55}},"769":{"start":{"line":2627,"column":0},"end":{"line":2627,"column":37}},"770":{"start":{"line":2647,"column":0},"end":{"line":2665,"column":2}},"771":{"start":{"line":2648,"column":4},"end":{"line":2648,"column":32}},"772":{"start":{"line":2649,"column":4},"end":{"line":2649,"column":40}},"773":{"start":{"line":2650,"column":4},"end":{"line":2664,"column":7}},"774":{"start":{"line":2651,"column":8},"end":{"line":2654,"column":11}},"775":{"start":{"line":2652,"column":12},"end":{"line":2652,"column":42}},"776":{"start":{"line":2652,"column":21},"end":{"line":2652,"column":42}},"777":{"start":{"line":2653,"column":12},"end":{"line":2653,"column":55}},"778":{"start":{"line":2656,"column":8},"end":{"line":2656,"column":24}},"779":{"start":{"line":2657,"column":8},"end":{"line":2661,"column":9}},"780":{"start":{"line":2658,"column":12},"end":{"line":2660,"column":13}},"781":{"start":{"line":2659,"column":16},"end":{"line":2659,"column":62}},"782":{"start":{"line":2663,"column":8},"end":{"line":2663,"column":37}},"783":{"start":{"line":2692,"column":0},"end":{"line":2692,"column":44}},"784":{"start":{"line":2712,"column":0},"end":{"line":2712,"column":43}},"785":{"start":{"line":2756,"column":0},"end":{"line":2763,"column":2}},"786":{"start":{"line":2757,"column":4},"end":{"line":2757,"column":34}},"787":{"start":{"line":2758,"column":4},"end":{"line":2758,"column":37}},"788":{"start":{"line":2759,"column":4},"end":{"line":2762,"column":6}},"789":{"start":{"line":2760,"column":8},"end":{"line":2760,"column":55}},"790":{"start":{"line":2761,"column":8},"end":{"line":2761,"column":42}},"791":{"start":{"line":2781,"column":0},"end":{"line":2783,"column":1}},"792":{"start":{"line":2782,"column":2},"end":{"line":2782,"column":15}},"793":{"start":{"line":2785,"column":0},"end":{"line":2810,"column":1}},"794":{"start":{"line":2786,"column":4},"end":{"line":2809,"column":6}},"795":{"start":{"line":2787,"column":8},"end":{"line":2787,"column":24}},"796":{"start":{"line":2788,"column":8},"end":{"line":2788,"column":31}},"797":{"start":{"line":2789,"column":8},"end":{"line":2789,"column":23}},"798":{"start":{"line":2790,"column":8},"end":{"line":2808,"column":11}},"799":{"start":{"line":2791,"column":12},"end":{"line":2801,"column":15}},"800":{"start":{"line":2792,"column":16},"end":{"line":2800,"column":17}},"801":{"start":{"line":2793,"column":20},"end":{"line":2793,"column":34}},"802":{"start":{"line":2794,"column":23},"end":{"line":2800,"column":17}},"803":{"start":{"line":2795,"column":20},"end":{"line":2795,"column":38}},"804":{"start":{"line":2796,"column":20},"end":{"line":2796,"column":56}},"805":{"start":{"line":2797,"column":20},"end":{"line":2797,"column":46}},"806":{"start":{"line":2799,"column":20},"end":{"line":2799,"column":31}},"807":{"start":{"line":2803,"column":12},"end":{"line":2807,"column":13}},"808":{"start":{"line":2804,"column":16},"end":{"line":2804,"column":24}},"809":{"start":{"line":2806,"column":16},"end":{"line":2806,"column":69}},"810":{"start":{"line":2812,"column":0},"end":{"line":2814,"column":1}},"811":{"start":{"line":2813,"column":4},"end":{"line":2813,"column":13}},"812":{"start":{"line":2851,"column":0},"end":{"line":2851,"column":65}},"813":{"start":{"line":2875,"column":0},"end":{"line":2875,"column":75}},"814":{"start":{"line":2897,"column":0},"end":{"line":2897,"column":43}},"815":{"start":{"line":2899,"column":0},"end":{"line":2918,"column":1}},"816":{"start":{"line":2900,"column":4},"end":{"line":2917,"column":6}},"817":{"start":{"line":2901,"column":8},"end":{"line":2901,"column":39}},"818":{"start":{"line":2902,"column":8},"end":{"line":2915,"column":11}},"819":{"start":{"line":2903,"column":12},"end":{"line":2903,"column":43}},"820":{"start":{"line":2904,"column":12},"end":{"line":2914,"column":13}},"821":{"start":{"line":2905,"column":16},"end":{"line":2913,"column":17}},"822":{"start":{"line":2906,"column":20},"end":{"line":2908,"column":21}},"823":{"start":{"line":2907,"column":24},"end":{"line":2907,"column":43}},"824":{"start":{"line":2909,"column":23},"end":{"line":2913,"column":17}},"825":{"start":{"line":2910,"column":20},"end":{"line":2912,"column":23}},"826":{"start":{"line":2911,"column":24},"end":{"line":2911,"column":41}},"827":{"start":{"line":2916,"column":8},"end":{"line":2916,"column":40}},"828":{"start":{"line":2949,"column":0},"end":{"line":2949,"column":29}},"829":{"start":{"line":2971,"column":0},"end":{"line":2991,"column":1}},"830":{"start":{"line":2972,"column":4},"end":{"line":2972,"column":42}},"831":{"start":{"line":2973,"column":4},"end":{"line":2973,"column":28}},"832":{"start":{"line":2974,"column":4},"end":{"line":2974,"column":32}},"833":{"start":{"line":2976,"column":4},"end":{"line":2981,"column":5}},"834":{"start":{"line":2977,"column":8},"end":{"line":2977,"column":38}},"835":{"start":{"line":2977,"column":17},"end":{"line":2977,"column":38}},"836":{"start":{"line":2978,"column":8},"end":{"line":2978,"column":39}},"837":{"start":{"line":2979,"column":8},"end":{"line":2979,"column":25}},"838":{"start":{"line":2980,"column":8},"end":{"line":2980,"column":32}},"839":{"start":{"line":2983,"column":4},"end":{"line":2987,"column":5}},"840":{"start":{"line":2984,"column":8},"end":{"line":2984,"column":38}},"841":{"start":{"line":2984,"column":17},"end":{"line":2984,"column":38}},"842":{"start":{"line":2985,"column":8},"end":{"line":2985,"column":42}},"843":{"start":{"line":2985,"column":20},"end":{"line":2985,"column":42}},"844":{"start":{"line":2986,"column":8},"end":{"line":2986,"column":18}},"845":{"start":{"line":2989,"column":4},"end":{"line":2989,"column":22}},"846":{"start":{"line":3015,"column":0},"end":{"line":3025,"column":1}},"847":{"start":{"line":3016,"column":4},"end":{"line":3016,"column":42}},"848":{"start":{"line":3017,"column":4},"end":{"line":3017,"column":40}},"849":{"start":{"line":3018,"column":4},"end":{"line":3023,"column":6}},"850":{"start":{"line":3019,"column":8},"end":{"line":3019,"column":38}},"851":{"start":{"line":3019,"column":17},"end":{"line":3019,"column":38}},"852":{"start":{"line":3020,"column":8},"end":{"line":3020,"column":39}},"853":{"start":{"line":3021,"column":8},"end":{"line":3021,"column":59}},"854":{"start":{"line":3021,"column":36},"end":{"line":3021,"column":59}},"855":{"start":{"line":3022,"column":8},"end":{"line":3022,"column":50}},"856":{"start":{"line":3024,"column":4},"end":{"line":3024,"column":20}},"857":{"start":{"line":3047,"column":0},"end":{"line":3051,"column":1}},"858":{"start":{"line":3048,"column":4},"end":{"line":3050,"column":17}},"859":{"start":{"line":3049,"column":8},"end":{"line":3049,"column":44}},"860":{"start":{"line":3089,"column":0},"end":{"line":3106,"column":1}},"861":{"start":{"line":3090,"column":4},"end":{"line":3090,"column":42}},"862":{"start":{"line":3091,"column":4},"end":{"line":3091,"column":28}},"863":{"start":{"line":3092,"column":4},"end":{"line":3092,"column":32}},"864":{"start":{"line":3094,"column":4},"end":{"line":3097,"column":5}},"865":{"start":{"line":3095,"column":8},"end":{"line":3095,"column":38}},"866":{"start":{"line":3095,"column":17},"end":{"line":3095,"column":38}},"867":{"start":{"line":3096,"column":8},"end":{"line":3096,"column":21}},"868":{"start":{"line":3099,"column":4},"end":{"line":3103,"column":5}},"869":{"start":{"line":3100,"column":8},"end":{"line":3100,"column":38}},"870":{"start":{"line":3100,"column":17},"end":{"line":3100,"column":38}},"871":{"start":{"line":3101,"column":8},"end":{"line":3101,"column":42}},"872":{"start":{"line":3101,"column":20},"end":{"line":3101,"column":42}},"873":{"start":{"line":3102,"column":8},"end":{"line":3102,"column":18}},"874":{"start":{"line":3105,"column":4},"end":{"line":3105,"column":17}},"875":{"start":{"line":3108,"column":0},"end":{"line":3112,"column":1}},"876":{"start":{"line":3109,"column":4},"end":{"line":3111,"column":6}},"877":{"start":{"line":3110,"column":8},"end":{"line":3110,"column":41}},"878":{"start":{"line":3171,"column":0},"end":{"line":3173,"column":1}},"879":{"start":{"line":3172,"column":4},"end":{"line":3172,"column":63}},"880":{"start":{"line":3195,"column":0},"end":{"line":3197,"column":1}},"881":{"start":{"line":3196,"column":4},"end":{"line":3196,"column":76}},"882":{"start":{"line":3218,"column":0},"end":{"line":3218,"column":41}},"883":{"start":{"line":3255,"column":0},"end":{"line":3272,"column":1}},"884":{"start":{"line":3256,"column":4},"end":{"line":3256,"column":31}},"885":{"start":{"line":3256,"column":21},"end":{"line":3256,"column":31}},"886":{"start":{"line":3257,"column":4},"end":{"line":3271,"column":7}},"887":{"start":{"line":3258,"column":8},"end":{"line":3258,"column":24}},"888":{"start":{"line":3259,"column":8},"end":{"line":3268,"column":11}},"889":{"start":{"line":3260,"column":12},"end":{"line":3260,"column":38}},"890":{"start":{"line":3261,"column":12},"end":{"line":3267,"column":13}},"891":{"start":{"line":3262,"column":16},"end":{"line":3264,"column":19}},"892":{"start":{"line":3263,"column":20},"end":{"line":3263,"column":52}},"893":{"start":{"line":3266,"column":16},"end":{"line":3266,"column":48}},"894":{"start":{"line":3269,"column":8},"end":{"line":3269,"column":29}},"895":{"start":{"line":3270,"column":8},"end":{"line":3270,"column":21}},"896":{"start":{"line":3274,"column":0},"end":{"line":3276,"column":1}},"897":{"start":{"line":3275,"column":4},"end":{"line":3275,"column":14}},"898":{"start":{"line":3306,"column":0},"end":{"line":3306,"column":52}},"899":{"start":{"line":3328,"column":0},"end":{"line":3328,"column":62}},"900":{"start":{"line":3349,"column":0},"end":{"line":3349,"column":41}},"901":{"start":{"line":3358,"column":0},"end":{"line":3362,"column":1}},"902":{"start":{"line":3359,"column":2},"end":{"line":3361,"column":4}},"903":{"start":{"line":3360,"column":4},"end":{"line":3360,"column":52}},"904":{"start":{"line":3364,"column":0},"end":{"line":3379,"column":1}},"905":{"start":{"line":3365,"column":4},"end":{"line":3365,"column":44}},"906":{"start":{"line":3366,"column":4},"end":{"line":3378,"column":7}},"907":{"start":{"line":3367,"column":8},"end":{"line":3370,"column":11}},"908":{"start":{"line":3368,"column":12},"end":{"line":3368,"column":37}},"909":{"start":{"line":3369,"column":12},"end":{"line":3369,"column":26}},"910":{"start":{"line":3372,"column":8},"end":{"line":3372,"column":38}},"911":{"start":{"line":3372,"column":17},"end":{"line":3372,"column":38}},"912":{"start":{"line":3373,"column":8},"end":{"line":3373,"column":25}},"913":{"start":{"line":3374,"column":8},"end":{"line":3376,"column":9}},"914":{"start":{"line":3375,"column":12},"end":{"line":3375,"column":53}},"915":{"start":{"line":3375,"column":32},"end":{"line":3375,"column":53}},"916":{"start":{"line":3377,"column":8},"end":{"line":3377,"column":32}},"917":{"start":{"line":3381,"column":0},"end":{"line":3403,"column":1}},"918":{"start":{"line":3382,"column":4},"end":{"line":3382,"column":21}},"919":{"start":{"line":3383,"column":4},"end":{"line":3402,"column":7}},"920":{"start":{"line":3384,"column":8},"end":{"line":3393,"column":11}},"921":{"start":{"line":3385,"column":12},"end":{"line":3392,"column":13}},"922":{"start":{"line":3386,"column":16},"end":{"line":3386,"column":30}},"923":{"start":{"line":3388,"column":16},"end":{"line":3390,"column":17}},"924":{"start":{"line":3389,"column":20},"end":{"line":3389,"column":59}},"925":{"start":{"line":3391,"column":16},"end":{"line":3391,"column":27}},"926":{"start":{"line":3395,"column":8},"end":{"line":3401,"column":9}},"927":{"start":{"line":3396,"column":12},"end":{"line":3396,"column":26}},"928":{"start":{"line":3398,"column":12},"end":{"line":3400,"column":40}},"929":{"start":{"line":3399,"column":16},"end":{"line":3399,"column":41}},"930":{"start":{"line":3405,"column":0},"end":{"line":3408,"column":1}},"931":{"start":{"line":3406,"column":4},"end":{"line":3406,"column":65}},"932":{"start":{"line":3407,"column":4},"end":{"line":3407,"column":64}},"933":{"start":{"line":3437,"column":0},"end":{"line":3437,"column":33}},"934":{"start":{"line":3458,"column":0},"end":{"line":3458,"column":43}},"935":{"start":{"line":3477,"column":0},"end":{"line":3477,"column":43}},"936":{"start":{"line":3508,"column":0},"end":{"line":3517,"column":1}},"937":{"start":{"line":3509,"column":4},"end":{"line":3509,"column":41}},"938":{"start":{"line":3510,"column":4},"end":{"line":3510,"column":42}},"939":{"start":{"line":3512,"column":4},"end":{"line":3515,"column":5}},"940":{"start":{"line":3513,"column":8},"end":{"line":3513,"column":34}},"941":{"start":{"line":3513,"column":17},"end":{"line":3513,"column":34}},"942":{"start":{"line":3514,"column":8},"end":{"line":3514,"column":19}},"943":{"start":{"line":3516,"column":4},"end":{"line":3516,"column":11}},"944":{"start":{"line":3538,"column":0},"end":{"line":3566,"column":2}},"945":{"start":{"line":3539,"column":4},"end":{"line":3539,"column":32}},"946":{"start":{"line":3540,"column":4},"end":{"line":3540,"column":40}},"947":{"start":{"line":3541,"column":4},"end":{"line":3565,"column":7}},"948":{"start":{"line":3542,"column":8},"end":{"line":3545,"column":11}},"949":{"start":{"line":3543,"column":12},"end":{"line":3543,"column":42}},"950":{"start":{"line":3543,"column":21},"end":{"line":3543,"column":42}},"951":{"start":{"line":3544,"column":12},"end":{"line":3544,"column":56}},"952":{"start":{"line":3547,"column":8},"end":{"line":3547,"column":24}},"953":{"start":{"line":3549,"column":8},"end":{"line":3549,"column":61}},"954":{"start":{"line":3551,"column":8},"end":{"line":3562,"column":9}},"955":{"start":{"line":3552,"column":12},"end":{"line":3561,"column":13}},"956":{"start":{"line":3553,"column":16},"end":{"line":3553,"column":44}},"957":{"start":{"line":3554,"column":16},"end":{"line":3554,"column":44}},"958":{"start":{"line":3556,"column":16},"end":{"line":3560,"column":17}},"959":{"start":{"line":3557,"column":20},"end":{"line":3557,"column":42}},"960":{"start":{"line":3559,"column":20},"end":{"line":3559,"column":40}},"961":{"start":{"line":3564,"column":8},"end":{"line":3564,"column":37}},"962":{"start":{"line":3604,"column":0},"end":{"line":3604,"column":46}},"963":{"start":{"line":3625,"column":0},"end":{"line":3625,"column":45}},"964":{"start":{"line":3654,"column":0},"end":{"line":3654,"column":29}},"965":{"start":{"line":3677,"column":0},"end":{"line":3690,"column":1}},"966":{"start":{"line":3678,"column":4},"end":{"line":3678,"column":38}},"967":{"start":{"line":3679,"column":4},"end":{"line":3679,"column":20}},"968":{"start":{"line":3680,"column":4},"end":{"line":3680,"column":40}},"969":{"start":{"line":3681,"column":4},"end":{"line":3689,"column":7}},"970":{"start":{"line":3682,"column":8},"end":{"line":3686,"column":11}},"971":{"start":{"line":3683,"column":12},"end":{"line":3683,"column":38}},"972":{"start":{"line":3683,"column":21},"end":{"line":3683,"column":38}},"973":{"start":{"line":3684,"column":12},"end":{"line":3684,"column":33}},"974":{"start":{"line":3685,"column":12},"end":{"line":3685,"column":19}},"975":{"start":{"line":3688,"column":8},"end":{"line":3688,"column":30}},"976":{"start":{"line":3737,"column":0},"end":{"line":3737,"column":50}},"977":{"start":{"line":3758,"column":0},"end":{"line":3758,"column":49}},"978":{"start":{"line":3760,"column":0},"end":{"line":3762,"column":1}},"979":{"start":{"line":3761,"column":4},"end":{"line":3761,"column":22}},"980":{"start":{"line":3801,"column":0},"end":{"line":3830,"column":1}},"981":{"start":{"line":3802,"column":4},"end":{"line":3802,"column":35}},"982":{"start":{"line":3803,"column":4},"end":{"line":3803,"column":37}},"983":{"start":{"line":3804,"column":4},"end":{"line":3804,"column":32}},"984":{"start":{"line":3805,"column":4},"end":{"line":3805,"column":28}},"985":{"start":{"line":3806,"column":4},"end":{"line":3826,"column":7}},"986":{"start":{"line":3807,"column":8},"end":{"line":3807,"column":43}},"987":{"start":{"line":3808,"column":8},"end":{"line":3825,"column":9}},"988":{"start":{"line":3809,"column":12},"end":{"line":3811,"column":15}},"989":{"start":{"line":3810,"column":16},"end":{"line":3810,"column":48}},"990":{"start":{"line":3812,"column":15},"end":{"line":3825,"column":9}},"991":{"start":{"line":3813,"column":12},"end":{"line":3813,"column":39}},"992":{"start":{"line":3815,"column":12},"end":{"line":3815,"column":37}},"993":{"start":{"line":3816,"column":12},"end":{"line":3824,"column":16}},"994":{"start":{"line":3817,"column":16},"end":{"line":3817,"column":44}},"995":{"start":{"line":3818,"column":16},"end":{"line":3818,"column":33}},"996":{"start":{"line":3819,"column":16},"end":{"line":3819,"column":36}},"997":{"start":{"line":3820,"column":16},"end":{"line":3820,"column":35}},"998":{"start":{"line":3821,"column":16},"end":{"line":3823,"column":17}},"999":{"start":{"line":3822,"column":20},"end":{"line":3822,"column":43}},"1000":{"start":{"line":3827,"column":4},"end":{"line":3827,"column":25}},"1001":{"start":{"line":3828,"column":4},"end":{"line":3828,"column":29}},"1002":{"start":{"line":3829,"column":4},"end":{"line":3829,"column":20}},"1003":{"start":{"line":3863,"column":0},"end":{"line":3863,"column":13}},"1004":{"start":{"line":3865,"column":0},"end":{"line":3871,"column":1}},"1005":{"start":{"line":3866,"column":4},"end":{"line":3866,"column":32}},"1006":{"start":{"line":3867,"column":7},"end":{"line":3871,"column":1}},"1007":{"start":{"line":3868,"column":4},"end":{"line":3868,"column":28}},"1008":{"start":{"line":3870,"column":4},"end":{"line":3870,"column":24}},"1009":{"start":{"line":3873,"column":0},"end":{"line":3873,"column":30}},"1010":{"start":{"line":3875,"column":0},"end":{"line":3890,"column":1}},"1011":{"start":{"line":3876,"column":4},"end":{"line":3876,"column":32}},"1012":{"start":{"line":3877,"column":4},"end":{"line":3877,"column":47}},"1013":{"start":{"line":3879,"column":4},"end":{"line":3889,"column":7}},"1014":{"start":{"line":3880,"column":8},"end":{"line":3886,"column":11}},"1015":{"start":{"line":3881,"column":12},"end":{"line":3883,"column":13}},"1016":{"start":{"line":3882,"column":16},"end":{"line":3882,"column":45}},"1017":{"start":{"line":3884,"column":12},"end":{"line":3884,"column":34}},"1018":{"start":{"line":3885,"column":12},"end":{"line":3885,"column":26}},"1019":{"start":{"line":3888,"column":8},"end":{"line":3888,"column":31}},"1020":{"start":{"line":3961,"column":0},"end":{"line":3963,"column":1}},"1021":{"start":{"line":3962,"column":4},"end":{"line":3962,"column":39}},"1022":{"start":{"line":3984,"column":0},"end":{"line":3986,"column":1}},"1023":{"start":{"line":3985,"column":4},"end":{"line":3985,"column":52}},"1024":{"start":{"line":4093,"column":0},"end":{"line":4098,"column":2}},"1025":{"start":{"line":4094,"column":4},"end":{"line":4094,"column":36}},"1026":{"start":{"line":4095,"column":4},"end":{"line":4097,"column":23}},"1027":{"start":{"line":4096,"column":8},"end":{"line":4096,"column":30}},"1028":{"start":{"line":4123,"column":0},"end":{"line":4170,"column":2}},"1029":{"start":{"line":4125,"column":4},"end":{"line":4125,"column":41}},"1030":{"start":{"line":4128,"column":4},"end":{"line":4164,"column":6}},"1031":{"start":{"line":4129,"column":8},"end":{"line":4129,"column":46}},"1032":{"start":{"line":4129,"column":30},"end":{"line":4129,"column":46}},"1033":{"start":{"line":4130,"column":8},"end":{"line":4132,"column":9}},"1034":{"start":{"line":4131,"column":12},"end":{"line":4131,"column":64}},"1035":{"start":{"line":4133,"column":8},"end":{"line":4133,"column":25}},"1036":{"start":{"line":4134,"column":8},"end":{"line":4136,"column":9}},"1037":{"start":{"line":4135,"column":12},"end":{"line":4135,"column":26}},"1038":{"start":{"line":4137,"column":8},"end":{"line":4142,"column":9}},"1039":{"start":{"line":4139,"column":12},"end":{"line":4141,"column":15}},"1040":{"start":{"line":4140,"column":16},"end":{"line":4140,"column":26}},"1041":{"start":{"line":4144,"column":8},"end":{"line":4144,"column":33}},"1042":{"start":{"line":4145,"column":8},"end":{"line":4145,"column":37}},"1043":{"start":{"line":4146,"column":8},"end":{"line":4148,"column":9}},"1044":{"start":{"line":4147,"column":12},"end":{"line":4147,"column":37}},"1045":{"start":{"line":4150,"column":8},"end":{"line":4162,"column":9}},"1046":{"start":{"line":4151,"column":12},"end":{"line":4155,"column":14}},"1047":{"start":{"line":4157,"column":12},"end":{"line":4161,"column":13}},"1048":{"start":{"line":4158,"column":16},"end":{"line":4158,"column":54}},"1049":{"start":{"line":4160,"column":16},"end":{"line":4160,"column":36}},"1050":{"start":{"line":4163,"column":8},"end":{"line":4163,"column":34}},"1051":{"start":{"line":4167,"column":4},"end":{"line":4167,"column":21}},"1052":{"start":{"line":4169,"column":4},"end":{"line":4169,"column":13}},"1053":{"start":{"line":4208,"column":0},"end":{"line":4215,"column":1}},"1054":{"start":{"line":4209,"column":4},"end":{"line":4209,"column":38}},"1055":{"start":{"line":4210,"column":4},"end":{"line":4210,"column":112}},"1056":{"start":{"line":4210,"column":25},"end":{"line":4210,"column":112}},"1057":{"start":{"line":4211,"column":4},"end":{"line":4211,"column":41}},"1058":{"start":{"line":4211,"column":23},"end":{"line":4211,"column":41}},"1059":{"start":{"line":4212,"column":4},"end":{"line":4214,"column":5}},"1060":{"start":{"line":4213,"column":8},"end":{"line":4213,"column":38}},"1061":{"start":{"line":4239,"column":0},"end":{"line":4242,"column":1}},"1062":{"start":{"line":4240,"column":4},"end":{"line":4240,"column":42}},"1063":{"start":{"line":4241,"column":4},"end":{"line":4241,"column":47}},"1064":{"start":{"line":4283,"column":0},"end":{"line":4302,"column":1}},"1065":{"start":{"line":4284,"column":4},"end":{"line":4284,"column":28}},"1066":{"start":{"line":4285,"column":4},"end":{"line":4301,"column":7}},"1067":{"start":{"line":4286,"column":8},"end":{"line":4298,"column":11}},"1068":{"start":{"line":4287,"column":12},"end":{"line":4297,"column":13}},"1069":{"start":{"line":4288,"column":16},"end":{"line":4288,"column":56}},"1070":{"start":{"line":4290,"column":16},"end":{"line":4290,"column":26}},"1071":{"start":{"line":4291,"column":16},"end":{"line":4295,"column":17}},"1072":{"start":{"line":4292,"column":20},"end":{"line":4292,"column":34}},"1073":{"start":{"line":4294,"column":20},"end":{"line":4294,"column":48}},"1074":{"start":{"line":4296,"column":16},"end":{"line":4296,"column":56}},"1075":{"start":{"line":4300,"column":8},"end":{"line":4300,"column":37}},"1076":{"start":{"line":4371,"column":0},"end":{"line":4382,"column":1}},"1077":{"start":{"line":4372,"column":4},"end":{"line":4372,"column":16}},"1078":{"start":{"line":4373,"column":4},"end":{"line":4380,"column":5}},"1079":{"start":{"line":4374,"column":8},"end":{"line":4374,"column":43}},"1080":{"start":{"line":4376,"column":8},"end":{"line":4376,"column":21}},"1081":{"start":{"line":4377,"column":8},"end":{"line":4379,"column":11}},"1082":{"start":{"line":4378,"column":12},"end":{"line":4378,"column":52}},"1083":{"start":{"line":4381,"column":4},"end":{"line":4381,"column":19}},"1084":{"start":{"line":4384,"column":0},"end":{"line":4390,"column":1}},"1085":{"start":{"line":4385,"column":4},"end":{"line":4389,"column":17}},"1086":{"start":{"line":4386,"column":8},"end":{"line":4388,"column":11}},"1087":{"start":{"line":4387,"column":12},"end":{"line":4387,"column":24}},"1088":{"start":{"line":4419,"column":0},"end":{"line":4419,"column":34}},"1089":{"start":{"line":4440,"column":0},"end":{"line":4440,"column":44}},"1090":{"start":{"line":4459,"column":0},"end":{"line":4459,"column":43}},"1091":{"start":{"line":4480,"column":0},"end":{"line":4484,"column":1}},"1092":{"start":{"line":4481,"column":2},"end":{"line":4483,"column":4}},"1093":{"start":{"line":4482,"column":4},"end":{"line":4482,"column":17}},"1094":{"start":{"line":4570,"column":0},"end":{"line":4623,"column":1}},"1095":{"start":{"line":4571,"column":4},"end":{"line":4571,"column":26}},"1096":{"start":{"line":4572,"column":4},"end":{"line":4572,"column":29}},"1097":{"start":{"line":4574,"column":4},"end":{"line":4577,"column":6}},"1098":{"start":{"line":4579,"column":4},"end":{"line":4593,"column":5}},"1099":{"start":{"line":4580,"column":8},"end":{"line":4592,"column":9}},"1100":{"start":{"line":4581,"column":12},"end":{"line":4581,"column":50}},"1101":{"start":{"line":4583,"column":12},"end":{"line":4585,"column":60}},"1102":{"start":{"line":4587,"column":12},"end":{"line":4587,"column":44}},"1103":{"start":{"line":4588,"column":15},"end":{"line":4592,"column":9}},"1104":{"start":{"line":4589,"column":12},"end":{"line":4589,"column":44}},"1105":{"start":{"line":4591,"column":12},"end":{"line":4591,"column":65}},"1106":{"start":{"line":4595,"column":4},"end":{"line":4601,"column":5}},"1107":{"start":{"line":4596,"column":8},"end":{"line":4596,"column":32}},"1108":{"start":{"line":4597,"column":8},"end":{"line":4597,"column":20}},"1109":{"start":{"line":4599,"column":8},"end":{"line":4599,"column":34}},"1110":{"start":{"line":4600,"column":8},"end":{"line":4600,"column":36}},"1111":{"start":{"line":4603,"column":4},"end":{"line":4605,"column":5}},"1112":{"start":{"line":4604,"column":8},"end":{"line":4604,"column":61}},"1113":{"start":{"line":4607,"column":4},"end":{"line":4607,"column":32}},"1114":{"start":{"line":4609,"column":4},"end":{"line":4609,"column":20}},"1115":{"start":{"line":4610,"column":4},"end":{"line":4620,"column":5}},"1116":{"start":{"line":4611,"column":8},"end":{"line":4619,"column":11}},"1117":{"start":{"line":4612,"column":12},"end":{"line":4618,"column":13}},"1118":{"start":{"line":4615,"column":16},"end":{"line":4615,"column":72}},"1119":{"start":{"line":4617,"column":16},"end":{"line":4617,"column":48}},"1120":{"start":{"line":4622,"column":4},"end":{"line":4622,"column":19}},"1121":{"start":{"line":4653,"column":0},"end":{"line":4668,"column":2}},"1122":{"start":{"line":4654,"column":4},"end":{"line":4657,"column":5}},"1123":{"start":{"line":4655,"column":8},"end":{"line":4655,"column":20}},"1124":{"start":{"line":4656,"column":8},"end":{"line":4656,"column":20}},"1125":{"start":{"line":4658,"column":4},"end":{"line":4658,"column":32}},"1126":{"start":{"line":4659,"column":4},"end":{"line":4667,"column":7}},"1127":{"start":{"line":4660,"column":8},"end":{"line":4662,"column":9}},"1128":{"start":{"line":4661,"column":12},"end":{"line":4661,"column":47}},"1129":{"start":{"line":4664,"column":8},"end":{"line":4665,"column":37}},"1130":{"start":{"line":4664,"column":18},"end":{"line":4664,"column":48}},"1131":{"start":{"line":4665,"column":13},"end":{"line":4665,"column":37}},"1132":{"start":{"line":4734,"column":0},"end":{"line":4736,"column":1}},"1133":{"start":{"line":4735,"column":4},"end":{"line":4735,"column":45}},"1134":{"start":{"line":4768,"column":0},"end":{"line":4768,"column":56}},"1135":{"start":{"line":4791,"column":0},"end":{"line":4791,"column":66}},"1136":{"start":{"line":4813,"column":0},"end":{"line":4813,"column":39}},"1137":{"start":{"line":4862,"column":0},"end":{"line":4878,"column":1}},"1138":{"start":{"line":4863,"column":4},"end":{"line":4863,"column":40}},"1139":{"start":{"line":4864,"column":4},"end":{"line":4872,"column":7}},"1140":{"start":{"line":4865,"column":8},"end":{"line":4868,"column":11}},"1141":{"start":{"line":4866,"column":12},"end":{"line":4866,"column":42}},"1142":{"start":{"line":4866,"column":21},"end":{"line":4866,"column":42}},"1143":{"start":{"line":4867,"column":12},"end":{"line":4867,"column":59}},"1144":{"start":{"line":4870,"column":8},"end":{"line":4870,"column":38}},"1145":{"start":{"line":4870,"column":17},"end":{"line":4870,"column":38}},"1146":{"start":{"line":4871,"column":8},"end":{"line":4871,"column":82}},"1147":{"start":{"line":4874,"column":4},"end":{"line":4877,"column":5}},"1148":{"start":{"line":4875,"column":8},"end":{"line":4875,"column":50}},"1149":{"start":{"line":4876,"column":8},"end":{"line":4876,"column":42}},"1150":{"start":{"line":4921,"column":0},"end":{"line":4950,"column":1}},"1151":{"start":{"line":4922,"column":4},"end":{"line":4922,"column":32}},"1152":{"start":{"line":4924,"column":4},"end":{"line":4949,"column":7}},"1153":{"start":{"line":4925,"column":8},"end":{"line":4925,"column":29}},"1154":{"start":{"line":4926,"column":8},"end":{"line":4926,"column":18}},"1155":{"start":{"line":4928,"column":8},"end":{"line":4937,"column":9}},"1156":{"start":{"line":4929,"column":12},"end":{"line":4929,"column":51}},"1157":{"start":{"line":4930,"column":12},"end":{"line":4930,"column":82}},"1158":{"start":{"line":4931,"column":12},"end":{"line":4931,"column":37}},"1159":{"start":{"line":4932,"column":12},"end":{"line":4934,"column":13}},"1160":{"start":{"line":4933,"column":16},"end":{"line":4933,"column":34}},"1161":{"start":{"line":4935,"column":12},"end":{"line":4935,"column":28}},"1162":{"start":{"line":4936,"column":12},"end":{"line":4936,"column":28}},"1163":{"start":{"line":4939,"column":8},"end":{"line":4944,"column":11}},"1164":{"start":{"line":4940,"column":12},"end":{"line":4943,"column":13}},"1165":{"start":{"line":4941,"column":16},"end":{"line":4941,"column":48}},"1166":{"start":{"line":4942,"column":16},"end":{"line":4942,"column":36}},"1167":{"start":{"line":4947,"column":8},"end":{"line":4947,"column":58}},"1168":{"start":{"line":4948,"column":8},"end":{"line":4948,"column":29}},"1169":{"start":{"line":4953,"column":0},"end":{"line":4953,"column":27}},"1170":{"start":{"line":4954,"column":0},"end":{"line":4954,"column":25}},"1171":{"start":{"line":4967,"column":0},"end":{"line":4977,"column":1}},"1172":{"start":{"line":4968,"column":2},"end":{"line":4970,"column":29}},"1173":{"start":{"line":4972,"column":2},"end":{"line":4975,"column":3}},"1174":{"start":{"line":4973,"column":4},"end":{"line":4973,"column":49}},"1175":{"start":{"line":4974,"column":4},"end":{"line":4974,"column":18}},"1176":{"start":{"line":4976,"column":2},"end":{"line":4976,"column":16}},"1177":{"start":{"line":4995,"column":0},"end":{"line":4998,"column":1}},"1178":{"start":{"line":4996,"column":4},"end":{"line":4996,"column":40}},"1179":{"start":{"line":4997,"column":4},"end":{"line":4997,"column":65}},"1180":{"start":{"line":5032,"column":0},"end":{"line":5032,"column":41}},"1181":{"start":{"line":5048,"column":0},"end":{"line":5048,"column":40}},"1182":{"start":{"line":5092,"column":0},"end":{"line":5106,"column":1}},"1183":{"start":{"line":5093,"column":4},"end":{"line":5097,"column":5}},"1184":{"start":{"line":5094,"column":8},"end":{"line":5094,"column":28}},"1185":{"start":{"line":5095,"column":8},"end":{"line":5095,"column":31}},"1186":{"start":{"line":5096,"column":8},"end":{"line":5096,"column":46}},"1187":{"start":{"line":5098,"column":4},"end":{"line":5098,"column":38}},"1188":{"start":{"line":5099,"column":4},"end":{"line":5099,"column":40}},"1189":{"start":{"line":5101,"column":4},"end":{"line":5105,"column":7}},"1190":{"start":{"line":5102,"column":8},"end":{"line":5102,"column":41}},"1191":{"start":{"line":5104,"column":8},"end":{"line":5104,"column":35}},"1192":{"start":{"line":5145,"column":0},"end":{"line":5162,"column":1}},"1193":{"start":{"line":5146,"column":4},"end":{"line":5146,"column":21}},"1194":{"start":{"line":5147,"column":4},"end":{"line":5147,"column":15}},"1195":{"start":{"line":5148,"column":4},"end":{"line":5148,"column":32}},"1196":{"start":{"line":5149,"column":4},"end":{"line":5161,"column":7}},"1197":{"start":{"line":5150,"column":8},"end":{"line":5158,"column":11}},"1198":{"start":{"line":5151,"column":12},"end":{"line":5155,"column":13}},"1199":{"start":{"line":5152,"column":16},"end":{"line":5152,"column":45}},"1200":{"start":{"line":5154,"column":16},"end":{"line":5154,"column":29}},"1201":{"start":{"line":5156,"column":12},"end":{"line":5156,"column":24}},"1202":{"start":{"line":5157,"column":12},"end":{"line":5157,"column":27}},"1203":{"start":{"line":5160,"column":8},"end":{"line":5160,"column":32}},"1204":{"start":{"line":5177,"column":0},"end":{"line":5181,"column":1}},"1205":{"start":{"line":5178,"column":4},"end":{"line":5180,"column":6}},"1206":{"start":{"line":5179,"column":8},"end":{"line":5179,"column":60}},"1207":{"start":{"line":5217,"column":0},"end":{"line":5228,"column":1}},"1208":{"start":{"line":5218,"column":4},"end":{"line":5218,"column":42}},"1209":{"start":{"line":5219,"column":4},"end":{"line":5219,"column":40}},"1210":{"start":{"line":5220,"column":4},"end":{"line":5220,"column":39}},"1211":{"start":{"line":5220,"column":17},"end":{"line":5220,"column":39}},"1212":{"start":{"line":5221,"column":4},"end":{"line":5226,"column":6}},"1213":{"start":{"line":5222,"column":8},"end":{"line":5222,"column":38}},"1214":{"start":{"line":5222,"column":17},"end":{"line":5222,"column":38}},"1215":{"start":{"line":5223,"column":8},"end":{"line":5223,"column":43}},"1216":{"start":{"line":5223,"column":20},"end":{"line":5223,"column":43}},"1217":{"start":{"line":5224,"column":8},"end":{"line":5224,"column":39}},"1218":{"start":{"line":5225,"column":8},"end":{"line":5225,"column":50}},"1219":{"start":{"line":5227,"column":4},"end":{"line":5227,"column":20}},"1220":{"start":{"line":5252,"column":0},"end":{"line":5256,"column":1}},"1221":{"start":{"line":5253,"column":4},"end":{"line":5255,"column":27}},"1222":{"start":{"line":5254,"column":8},"end":{"line":5254,"column":44}},"1223":{"start":{"line":5315,"column":0},"end":{"line":5335,"column":2}},"1224":{"start":{"line":5316,"column":4},"end":{"line":5316,"column":38}},"1225":{"start":{"line":5317,"column":4},"end":{"line":5317,"column":113}},"1226":{"start":{"line":5317,"column":25},"end":{"line":5317,"column":113}},"1227":{"start":{"line":5318,"column":4},"end":{"line":5318,"column":41}},"1228":{"start":{"line":5318,"column":23},"end":{"line":5318,"column":41}},"1229":{"start":{"line":5319,"column":4},"end":{"line":5319,"column":22}},"1230":{"start":{"line":5321,"column":4},"end":{"line":5325,"column":5}},"1231":{"start":{"line":5322,"column":8},"end":{"line":5322,"column":49}},"1232":{"start":{"line":5323,"column":8},"end":{"line":5323,"column":34}},"1233":{"start":{"line":5324,"column":8},"end":{"line":5324,"column":31}},"1234":{"start":{"line":5327,"column":4},"end":{"line":5332,"column":5}},"1235":{"start":{"line":5328,"column":8},"end":{"line":5330,"column":9}},"1236":{"start":{"line":5329,"column":12},"end":{"line":5329,"column":51}},"1237":{"start":{"line":5331,"column":8},"end":{"line":5331,"column":38}},"1238":{"start":{"line":5334,"column":4},"end":{"line":5334,"column":17}},"1239":{"start":{"line":5402,"column":0},"end":{"line":5504,"column":2}},"1240":{"start":{"line":5506,"column":0},"end":{"line":5506,"column":27}},"1241":{"start":{"line":5507,"column":0},"end":{"line":5507,"column":22}},"1242":{"start":{"line":5508,"column":0},"end":{"line":5508,"column":30}},"1243":{"start":{"line":5509,"column":0},"end":{"line":5509,"column":42}},"1244":{"start":{"line":5510,"column":0},"end":{"line":5510,"column":28}},"1245":{"start":{"line":5511,"column":0},"end":{"line":5511,"column":20}},"1246":{"start":{"line":5512,"column":0},"end":{"line":5512,"column":32}},"1247":{"start":{"line":5513,"column":0},"end":{"line":5513,"column":22}},"1248":{"start":{"line":5514,"column":0},"end":{"line":5514,"column":26}},"1249":{"start":{"line":5515,"column":0},"end":{"line":5515,"column":24}},"1250":{"start":{"line":5516,"column":0},"end":{"line":5516,"column":34}},"1251":{"start":{"line":5517,"column":0},"end":{"line":5517,"column":36}},"1252":{"start":{"line":5518,"column":0},"end":{"line":5518,"column":28}},"1253":{"start":{"line":5519,"column":0},"end":{"line":5519,"column":24}},"1254":{"start":{"line":5520,"column":0},"end":{"line":5520,"column":34}},"1255":{"start":{"line":5521,"column":0},"end":{"line":5521,"column":36}},"1256":{"start":{"line":5522,"column":0},"end":{"line":5522,"column":18}},"1257":{"start":{"line":5523,"column":0},"end":{"line":5523,"column":28}},"1258":{"start":{"line":5524,"column":0},"end":{"line":5524,"column":26}},"1259":{"start":{"line":5525,"column":0},"end":{"line":5525,"column":28}},"1260":{"start":{"line":5526,"column":0},"end":{"line":5526,"column":24}},"1261":{"start":{"line":5527,"column":0},"end":{"line":5527,"column":25}},"1262":{"start":{"line":5528,"column":0},"end":{"line":5528,"column":32}},"1263":{"start":{"line":5529,"column":0},"end":{"line":5529,"column":24}},"1264":{"start":{"line":5530,"column":0},"end":{"line":5530,"column":34}},"1265":{"start":{"line":5531,"column":0},"end":{"line":5531,"column":36}},"1266":{"start":{"line":5532,"column":0},"end":{"line":5532,"column":32}},"1267":{"start":{"line":5533,"column":0},"end":{"line":5533,"column":34}},"1268":{"start":{"line":5534,"column":0},"end":{"line":5534,"column":22}},"1269":{"start":{"line":5535,"column":0},"end":{"line":5535,"column":32}},"1270":{"start":{"line":5536,"column":0},"end":{"line":5536,"column":34}},"1271":{"start":{"line":5537,"column":0},"end":{"line":5537,"column":24}},"1272":{"start":{"line":5538,"column":0},"end":{"line":5538,"column":34}},"1273":{"start":{"line":5539,"column":0},"end":{"line":5539,"column":36}},"1274":{"start":{"line":5540,"column":0},"end":{"line":5540,"column":26}},"1275":{"start":{"line":5541,"column":0},"end":{"line":5541,"column":26}},"1276":{"start":{"line":5542,"column":0},"end":{"line":5542,"column":36}},"1277":{"start":{"line":5543,"column":0},"end":{"line":5543,"column":38}},"1278":{"start":{"line":5544,"column":0},"end":{"line":5544,"column":18}},"1279":{"start":{"line":5545,"column":0},"end":{"line":5545,"column":18}},"1280":{"start":{"line":5546,"column":0},"end":{"line":5546,"column":28}},"1281":{"start":{"line":5547,"column":0},"end":{"line":5547,"column":30}},"1282":{"start":{"line":5548,"column":0},"end":{"line":5548,"column":30}},"1283":{"start":{"line":5549,"column":0},"end":{"line":5549,"column":40}},"1284":{"start":{"line":5550,"column":0},"end":{"line":5550,"column":42}},"1285":{"start":{"line":5551,"column":0},"end":{"line":5551,"column":26}},"1286":{"start":{"line":5552,"column":0},"end":{"line":5552,"column":28}},"1287":{"start":{"line":5553,"column":0},"end":{"line":5553,"column":33}},"1288":{"start":{"line":5554,"column":0},"end":{"line":5554,"column":40}},"1289":{"start":{"line":5555,"column":0},"end":{"line":5555,"column":38}},"1290":{"start":{"line":5556,"column":0},"end":{"line":5556,"column":24}},"1291":{"start":{"line":5557,"column":0},"end":{"line":5557,"column":20}},"1292":{"start":{"line":5558,"column":0},"end":{"line":5558,"column":24}},"1293":{"start":{"line":5559,"column":0},"end":{"line":5559,"column":34}},"1294":{"start":{"line":5560,"column":0},"end":{"line":5560,"column":26}},"1295":{"start":{"line":5561,"column":0},"end":{"line":5561,"column":32}},"1296":{"start":{"line":5562,"column":0},"end":{"line":5562,"column":24}},"1297":{"start":{"line":5563,"column":0},"end":{"line":5563,"column":34}},"1298":{"start":{"line":5564,"column":0},"end":{"line":5564,"column":36}},"1299":{"start":{"line":5565,"column":0},"end":{"line":5565,"column":22}},"1300":{"start":{"line":5566,"column":0},"end":{"line":5566,"column":30}},"1301":{"start":{"line":5567,"column":0},"end":{"line":5567,"column":18}},"1302":{"start":{"line":5568,"column":0},"end":{"line":5568,"column":24}},"1303":{"start":{"line":5569,"column":0},"end":{"line":5569,"column":38}},"1304":{"start":{"line":5570,"column":0},"end":{"line":5570,"column":20}},"1305":{"start":{"line":5571,"column":0},"end":{"line":5571,"column":30}},"1306":{"start":{"line":5572,"column":0},"end":{"line":5572,"column":32}},"1307":{"start":{"line":5573,"column":0},"end":{"line":5573,"column":24}},"1308":{"start":{"line":5574,"column":0},"end":{"line":5574,"column":26}},"1309":{"start":{"line":5575,"column":0},"end":{"line":5575,"column":22}},"1310":{"start":{"line":5576,"column":0},"end":{"line":5576,"column":31}},"1311":{"start":{"line":5577,"column":0},"end":{"line":5577,"column":34}},"1312":{"start":{"line":5578,"column":0},"end":{"line":5578,"column":30}},"1313":{"start":{"line":5579,"column":0},"end":{"line":5579,"column":26}},"1314":{"start":{"line":5580,"column":0},"end":{"line":5580,"column":30}},"1315":{"start":{"line":5581,"column":0},"end":{"line":5581,"column":22}},"1316":{"start":{"line":5582,"column":0},"end":{"line":5582,"column":30}},"1317":{"start":{"line":5583,"column":0},"end":{"line":5583,"column":24}},"1318":{"start":{"line":5584,"column":0},"end":{"line":5584,"column":20}},"1319":{"start":{"line":5585,"column":0},"end":{"line":5585,"column":30}},"1320":{"start":{"line":5586,"column":0},"end":{"line":5586,"column":32}},"1321":{"start":{"line":5587,"column":0},"end":{"line":5587,"column":19}},"1322":{"start":{"line":5588,"column":0},"end":{"line":5588,"column":29}},"1323":{"start":{"line":5589,"column":0},"end":{"line":5589,"column":31}},"1324":{"start":{"line":5590,"column":0},"end":{"line":5590,"column":22}},"1325":{"start":{"line":5591,"column":0},"end":{"line":5591,"column":32}},"1326":{"start":{"line":5592,"column":0},"end":{"line":5592,"column":34}},"1327":{"start":{"line":5593,"column":0},"end":{"line":5593,"column":28}},"1328":{"start":{"line":5594,"column":0},"end":{"line":5594,"column":35}},"1329":{"start":{"line":5595,"column":0},"end":{"line":5595,"column":35}},"1330":{"start":{"line":5596,"column":0},"end":{"line":5596,"column":27}},"1331":{"start":{"line":5597,"column":0},"end":{"line":5597,"column":39}},"1332":{"start":{"line":5598,"column":0},"end":{"line":5598,"column":37}},"1333":{"start":{"line":5599,"column":0},"end":{"line":5599,"column":24}},"1334":{"start":{"line":5600,"column":0},"end":{"line":5600,"column":23}},"1335":{"start":{"line":5601,"column":0},"end":{"line":5601,"column":28}},"1336":{"start":{"line":5602,"column":0},"end":{"line":5602,"column":24}},"1337":{"start":{"line":5603,"column":0},"end":{"line":5603,"column":34}},"1338":{"start":{"line":5604,"column":0},"end":{"line":5604,"column":36}},"1339":{"start":{"line":5605,"column":0},"end":{"line":5605,"column":28}},"1340":{"start":{"line":5607,"column":0},"end":{"line":5607,"column":62}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":65},"end":{"line":2,"column":81}},{"start":{"line":3,"column":2},"end":{"line":4,"column":48}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":29}},{"start":{"line":2,"column":33},"end":{"line":2,"column":62}}]},"3":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":47},"end":{"line":3,"column":75}},{"start":{"line":4,"column":3},"end":{"line":4,"column":47}}]},"4":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":2},"end":{"line":3,"column":30}},{"start":{"line":3,"column":34},"end":{"line":3,"column":44}}]},"5":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":27},"end":{"line":4,"column":39}},{"start":{"line":4,"column":43},"end":{"line":4,"column":45}}]},"6":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":9},"end":{"line":105,"column":22}},{"start":{"line":105,"column":27},"end":{"line":105,"column":43}},{"start":{"line":105,"column":47},"end":{"line":105,"column":65}}]},"7":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":22},"end":{"line":108,"column":56}},{"start":{"line":108,"column":60},"end":{"line":108,"column":72}}]},"8":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":18},"end":{"line":109,"column":45}},{"start":{"line":109,"column":49},"end":{"line":109,"column":87}}]},"9":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":0},"end":{"line":126,"column":0}},{"start":{"line":126,"column":0},"end":{"line":126,"column":0}}]},"10":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":7},"end":{"line":128,"column":7}},{"start":{"line":128,"column":7},"end":{"line":128,"column":7}}]},"11":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":201,"column":8}},{"start":{"line":201,"column":8},"end":{"line":201,"column":8}}]},"12":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":12},"end":{"line":201,"column":28}},{"start":{"line":201,"column":32},"end":{"line":201,"column":65}}]},"13":{"line":205,"type":"cond-expr","locations":[{"start":{"line":205,"column":55},"end":{"line":205,"column":58}},{"start":{"line":205,"column":61},"end":{"line":205,"column":75}}]},"14":{"line":228,"type":"binary-expr","locations":[{"start":{"line":228,"column":11},"end":{"line":228,"column":25}},{"start":{"line":228,"column":29},"end":{"line":228,"column":71}}]},"15":{"line":232,"type":"cond-expr","locations":[{"start":{"line":232,"column":30},"end":{"line":232,"column":47}},{"start":{"line":232,"column":50},"end":{"line":232,"column":57}}]},"16":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":8},"end":{"line":244,"column":8}},{"start":{"line":244,"column":8},"end":{"line":244,"column":8}}]},"17":{"line":254,"type":"binary-expr","locations":[{"start":{"line":254,"column":17},"end":{"line":254,"column":42}},{"start":{"line":254,"column":46},"end":{"line":254,"column":52}},{"start":{"line":254,"column":56},"end":{"line":254,"column":80}},{"start":{"line":254,"column":84},"end":{"line":254,"column":90}}]},"18":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":15},"end":{"line":257,"column":38}},{"start":{"line":257,"column":42},"end":{"line":257,"column":46}},{"start":{"line":257,"column":50},"end":{"line":257,"column":72}},{"start":{"line":257,"column":76},"end":{"line":257,"column":80}}]},"19":{"line":260,"type":"binary-expr","locations":[{"start":{"line":260,"column":11},"end":{"line":260,"column":21}},{"start":{"line":260,"column":25},"end":{"line":260,"column":33}},{"start":{"line":260,"column":37},"end":{"line":260,"column":62}}]},"20":{"line":279,"type":"cond-expr","locations":[{"start":{"line":279,"column":34},"end":{"line":279,"column":54}},{"start":{"line":279,"column":57},"end":{"line":279,"column":66}}]},"21":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":2},"end":{"line":298,"column":2}},{"start":{"line":298,"column":2},"end":{"line":298,"column":2}}]},"22":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"23":{"line":334,"type":"cond-expr","locations":[{"start":{"line":334,"column":32},"end":{"line":334,"column":52}},{"start":{"line":334,"column":55},"end":{"line":334,"column":64}}]},"24":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":2},"end":{"line":344,"column":2}},{"start":{"line":344,"column":2},"end":{"line":344,"column":2}}]},"25":{"line":345,"type":"cond-expr","locations":[{"start":{"line":345,"column":33},"end":{"line":345,"column":45}},{"start":{"line":345,"column":48},"end":{"line":345,"column":55}}]},"26":{"line":347,"type":"cond-expr","locations":[{"start":{"line":348,"column":6},"end":{"line":348,"column":22}},{"start":{"line":349,"column":6},"end":{"line":349,"column":27}}]},"27":{"line":347,"type":"binary-expr","locations":[{"start":{"line":347,"column":10},"end":{"line":347,"column":24}},{"start":{"line":347,"column":28},"end":{"line":347,"column":59}}]},"28":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":2},"end":{"line":376,"column":2}},{"start":{"line":376,"column":2},"end":{"line":376,"column":2}}]},"29":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":9},"end":{"line":382,"column":23}},{"start":{"line":382,"column":27},"end":{"line":382,"column":40}},{"start":{"line":382,"column":44},"end":{"line":382,"column":59}},{"start":{"line":382,"column":63},"end":{"line":382,"column":78}}]},"30":{"line":415,"type":"binary-expr","locations":[{"start":{"line":415,"column":9},"end":{"line":415,"column":33}},{"start":{"line":416,"column":4},"end":{"line":416,"column":14}},{"start":{"line":416,"column":18},"end":{"line":416,"column":32}},{"start":{"line":416,"column":36},"end":{"line":416,"column":61}}]},"31":{"line":445,"type":"binary-expr","locations":[{"start":{"line":445,"column":9},"end":{"line":445,"column":22}},{"start":{"line":445,"column":26},"end":{"line":445,"column":48}},{"start":{"line":445,"column":52},"end":{"line":445,"column":70}}]},"32":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":8},"end":{"line":470,"column":8}},{"start":{"line":470,"column":8},"end":{"line":470,"column":8}}]},"33":{"line":477,"type":"binary-expr","locations":[{"start":{"line":477,"column":21},"end":{"line":477,"column":49}},{"start":{"line":477,"column":53},"end":{"line":477,"column":68}}]},"34":{"line":480,"type":"binary-expr","locations":[{"start":{"line":480,"column":11},"end":{"line":480,"column":25}},{"start":{"line":480,"column":29},"end":{"line":480,"column":49}},{"start":{"line":480,"column":53},"end":{"line":480,"column":75}}]},"35":{"line":527,"type":"binary-expr","locations":[{"start":{"line":527,"column":9},"end":{"line":527,"column":22}},{"start":{"line":527,"column":26},"end":{"line":527,"column":50}}]},"36":{"line":541,"type":"binary-expr","locations":[{"start":{"line":541,"column":9},"end":{"line":541,"column":28}},{"start":{"line":541,"column":32},"end":{"line":541,"column":60}}]},"37":{"line":571,"type":"cond-expr","locations":[{"start":{"line":571,"column":72},"end":{"line":571,"column":87}},{"start":{"line":571,"column":90},"end":{"line":574,"column":1}}]},"38":{"line":572,"type":"binary-expr","locations":[{"start":{"line":572,"column":9},"end":{"line":572,"column":28}},{"start":{"line":572,"column":32},"end":{"line":572,"column":70}},{"start":{"line":573,"column":4},"end":{"line":573,"column":47}}]},"39":{"line":619,"type":"binary-expr","locations":[{"start":{"line":619,"column":18},"end":{"line":619,"column":44}},{"start":{"line":619,"column":48},"end":{"line":619,"column":55}},{"start":{"line":619,"column":59},"end":{"line":619,"column":76}},{"start":{"line":619,"column":80},"end":{"line":619,"column":87}}]},"40":{"line":622,"type":"binary-expr","locations":[{"start":{"line":622,"column":17},"end":{"line":622,"column":28}},{"start":{"line":622,"column":32},"end":{"line":622,"column":57}},{"start":{"line":622,"column":61},"end":{"line":622,"column":67}},{"start":{"line":622,"column":71},"end":{"line":622,"column":87}},{"start":{"line":622,"column":91},"end":{"line":622,"column":97}}]},"41":{"line":625,"type":"binary-expr","locations":[{"start":{"line":625,"column":20},"end":{"line":625,"column":30}},{"start":{"line":625,"column":34},"end":{"line":625,"column":68}}]},"42":{"line":628,"type":"cond-expr","locations":[{"start":{"line":628,"column":29},"end":{"line":628,"column":40}},{"start":{"line":628,"column":43},"end":{"line":628,"column":52}}]},"43":{"line":631,"type":"cond-expr","locations":[{"start":{"line":631,"column":30},"end":{"line":631,"column":45}},{"start":{"line":631,"column":48},"end":{"line":631,"column":57}}]},"44":{"line":650,"type":"binary-expr","locations":[{"start":{"line":650,"column":15},"end":{"line":650,"column":29}},{"start":{"line":650,"column":33},"end":{"line":650,"column":42}}]},"45":{"line":668,"type":"cond-expr","locations":[{"start":{"line":668,"column":28},"end":{"line":668,"column":46}},{"start":{"line":668,"column":49},"end":{"line":668,"column":55}}]},"46":{"line":670,"type":"binary-expr","locations":[{"start":{"line":670,"column":9},"end":{"line":670,"column":17}},{"start":{"line":671,"column":5},"end":{"line":671,"column":21}},{"start":{"line":672,"column":7},"end":{"line":672,"column":23}},{"start":{"line":672,"column":27},"end":{"line":672,"column":47}},{"start":{"line":673,"column":9},"end":{"line":673,"column":19}},{"start":{"line":673,"column":23},"end":{"line":673,"column":37}},{"start":{"line":673,"column":41},"end":{"line":673,"column":55}}]},"47":{"line":727,"type":"binary-expr","locations":[{"start":{"line":727,"column":9},"end":{"line":727,"column":28}},{"start":{"line":728,"column":4},"end":{"line":728,"column":26}},{"start":{"line":728,"column":30},"end":{"line":728,"column":65}}]},"48":{"line":745,"type":"binary-expr","locations":[{"start":{"line":745,"column":20},"end":{"line":745,"column":46}},{"start":{"line":745,"column":50},"end":{"line":745,"column":57}},{"start":{"line":745,"column":61},"end":{"line":745,"column":78}},{"start":{"line":745,"column":82},"end":{"line":745,"column":89}}]},"49":{"line":748,"type":"binary-expr","locations":[{"start":{"line":748,"column":19},"end":{"line":748,"column":32}},{"start":{"line":748,"column":36},"end":{"line":748,"column":61}},{"start":{"line":748,"column":65},"end":{"line":748,"column":71}},{"start":{"line":748,"column":75},"end":{"line":748,"column":91}},{"start":{"line":748,"column":95},"end":{"line":748,"column":101}}]},"50":{"line":751,"type":"binary-expr","locations":[{"start":{"line":751,"column":22},"end":{"line":751,"column":34}},{"start":{"line":751,"column":38},"end":{"line":751,"column":76}}]},"51":{"line":754,"type":"binary-expr","locations":[{"start":{"line":754,"column":18},"end":{"line":754,"column":33}},{"start":{"line":754,"column":37},"end":{"line":754,"column":55}}]},"52":{"line":760,"type":"binary-expr","locations":[{"start":{"line":760,"column":16},"end":{"line":760,"column":28}},{"start":{"line":760,"column":32},"end":{"line":760,"column":52}},{"start":{"line":760,"column":56},"end":{"line":760,"column":90}}]},"53":{"line":762,"type":"if","locations":[{"start":{"line":762,"column":4},"end":{"line":762,"column":4}},{"start":{"line":762,"column":4},"end":{"line":762,"column":4}}]},"54":{"line":767,"type":"binary-expr","locations":[{"start":{"line":767,"column":11},"end":{"line":767,"column":22}},{"start":{"line":767,"column":26},"end":{"line":767,"column":45}},{"start":{"line":767,"column":49},"end":{"line":767,"column":76}}]},"55":{"line":772,"type":"binary-expr","locations":[{"start":{"line":772,"column":23},"end":{"line":772,"column":31}},{"start":{"line":772,"column":35},"end":{"line":772,"column":56}}]},"56":{"line":791,"type":"cond-expr","locations":[{"start":{"line":791,"column":38},"end":{"line":791,"column":65}},{"start":{"line":791,"column":68},"end":{"line":791,"column":84}}]},"57":{"line":809,"type":"binary-expr","locations":[{"start":{"line":809,"column":14},"end":{"line":809,"column":20}},{"start":{"line":809,"column":24},"end":{"line":809,"column":42}}]},"58":{"line":810,"type":"binary-expr","locations":[{"start":{"line":810,"column":15},"end":{"line":810,"column":21}},{"start":{"line":810,"column":25},"end":{"line":810,"column":31}},{"start":{"line":810,"column":35},"end":{"line":810,"column":50}}]},"59":{"line":811,"type":"binary-expr","locations":[{"start":{"line":811,"column":15},"end":{"line":811,"column":21}},{"start":{"line":811,"column":25},"end":{"line":811,"column":31}},{"start":{"line":811,"column":35},"end":{"line":811,"column":42}},{"start":{"line":811,"column":46},"end":{"line":811,"column":65}}]},"60":{"line":812,"type":"binary-expr","locations":[{"start":{"line":812,"column":20},"end":{"line":812,"column":25}},{"start":{"line":812,"column":29},"end":{"line":812,"column":34}},{"start":{"line":812,"column":38},"end":{"line":812,"column":44}},{"start":{"line":812,"column":48},"end":{"line":812,"column":54}}]},"61":{"line":813,"type":"cond-expr","locations":[{"start":{"line":813,"column":29},"end":{"line":813,"column":60}},{"start":{"line":813,"column":63},"end":{"line":813,"column":65}}]},"62":{"line":817,"type":"if","locations":[{"start":{"line":817,"column":4},"end":{"line":817,"column":4}},{"start":{"line":817,"column":4},"end":{"line":817,"column":4}}]},"63":{"line":817,"type":"binary-expr","locations":[{"start":{"line":817,"column":9},"end":{"line":817,"column":18}},{"start":{"line":817,"column":22},"end":{"line":817,"column":55}},{"start":{"line":818,"column":8},"end":{"line":827,"column":10}}]},"64":{"line":818,"type":"binary-expr","locations":[{"start":{"line":818,"column":10},"end":{"line":818,"column":21}},{"start":{"line":820,"column":11},"end":{"line":820,"column":26}},{"start":{"line":822,"column":12},"end":{"line":822,"column":18}},{"start":{"line":822,"column":23},"end":{"line":822,"column":38}},{"start":{"line":822,"column":42},"end":{"line":822,"column":57}},{"start":{"line":824,"column":12},"end":{"line":824,"column":18}},{"start":{"line":824,"column":23},"end":{"line":824,"column":38}},{"start":{"line":824,"column":42},"end":{"line":824,"column":61}},{"start":{"line":824,"column":65},"end":{"line":824,"column":84}},{"start":{"line":826,"column":11},"end":{"line":826,"column":31}}]},"65":{"line":845,"type":"binary-expr","locations":[{"start":{"line":845,"column":13},"end":{"line":845,"column":18}},{"start":{"line":845,"column":22},"end":{"line":845,"column":39}}]},"66":{"line":846,"type":"binary-expr","locations":[{"start":{"line":846,"column":15},"end":{"line":846,"column":40}},{"start":{"line":846,"column":44},"end":{"line":846,"column":58}},{"start":{"line":846,"column":63},"end":{"line":846,"column":76}}]},"67":{"line":882,"type":"if","locations":[{"start":{"line":882,"column":2},"end":{"line":882,"column":2}},{"start":{"line":882,"column":2},"end":{"line":882,"column":2}}]},"68":{"line":887,"type":"if","locations":[{"start":{"line":887,"column":4},"end":{"line":887,"column":4}},{"start":{"line":887,"column":4},"end":{"line":887,"column":4}}]},"69":{"line":887,"type":"binary-expr","locations":[{"start":{"line":887,"column":8},"end":{"line":887,"column":42}},{"start":{"line":887,"column":46},"end":{"line":887,"column":66}}]},"70":{"line":923,"type":"cond-expr","locations":[{"start":{"line":923,"column":31},"end":{"line":923,"column":52}},{"start":{"line":923,"column":55},"end":{"line":923,"column":71}}]},"71":{"line":930,"type":"cond-expr","locations":[{"start":{"line":930,"column":27},"end":{"line":930,"column":51}},{"start":{"line":930,"column":54},"end":{"line":930,"column":58}}]},"72":{"line":938,"type":"if","locations":[{"start":{"line":938,"column":8},"end":{"line":938,"column":8}},{"start":{"line":938,"column":8},"end":{"line":938,"column":8}}]},"73":{"line":951,"type":"cond-expr","locations":[{"start":{"line":951,"column":25},"end":{"line":951,"column":52}},{"start":{"line":951,"column":55},"end":{"line":951,"column":59}}]},"74":{"line":956,"type":"if","locations":[{"start":{"line":956,"column":4},"end":{"line":956,"column":4}},{"start":{"line":956,"column":4},"end":{"line":956,"column":4}}]},"75":{"line":961,"type":"cond-expr","locations":[{"start":{"line":961,"column":22},"end":{"line":961,"column":52}},{"start":{"line":961,"column":55},"end":{"line":961,"column":81}}]},"76":{"line":966,"type":"if","locations":[{"start":{"line":966,"column":8},"end":{"line":966,"column":8}},{"start":{"line":966,"column":8},"end":{"line":966,"column":8}}]},"77":{"line":975,"type":"binary-expr","locations":[{"start":{"line":975,"column":24},"end":{"line":975,"column":32}},{"start":{"line":975,"column":36},"end":{"line":975,"column":40}}]},"78":{"line":976,"type":"if","locations":[{"start":{"line":976,"column":8},"end":{"line":976,"column":8}},{"start":{"line":976,"column":8},"end":{"line":976,"column":8}}]},"79":{"line":976,"type":"binary-expr","locations":[{"start":{"line":976,"column":12},"end":{"line":976,"column":22}},{"start":{"line":976,"column":26},"end":{"line":976,"column":30}}]},"80":{"line":986,"type":"if","locations":[{"start":{"line":986,"column":12},"end":{"line":986,"column":12}},{"start":{"line":986,"column":12},"end":{"line":986,"column":12}}]},"81":{"line":990,"type":"if","locations":[{"start":{"line":990,"column":17},"end":{"line":990,"column":17}},{"start":{"line":990,"column":17},"end":{"line":990,"column":17}}]},"82":{"line":990,"type":"binary-expr","locations":[{"start":{"line":990,"column":21},"end":{"line":990,"column":40}},{"start":{"line":990,"column":45},"end":{"line":990,"column":49}},{"start":{"line":990,"column":53},"end":{"line":990,"column":65}}]},"83":{"line":994,"type":"if","locations":[{"start":{"line":994,"column":17},"end":{"line":994,"column":17}},{"start":{"line":994,"column":17},"end":{"line":994,"column":17}}]},"84":{"line":1001,"type":"binary-expr","locations":[{"start":{"line":1001,"column":19},"end":{"line":1001,"column":34}},{"start":{"line":1001,"column":38},"end":{"line":1001,"column":43}}]},"85":{"line":1003,"type":"if","locations":[{"start":{"line":1003,"column":16},"end":{"line":1003,"column":16}},{"start":{"line":1003,"column":16},"end":{"line":1003,"column":16}}]},"86":{"line":1005,"type":"if","locations":[{"start":{"line":1005,"column":20},"end":{"line":1005,"column":20}},{"start":{"line":1005,"column":20},"end":{"line":1005,"column":20}}]},"87":{"line":1052,"type":"binary-expr","locations":[{"start":{"line":1052,"column":20},"end":{"line":1052,"column":28}},{"start":{"line":1052,"column":32},"end":{"line":1052,"column":36}}]},"88":{"line":1056,"type":"if","locations":[{"start":{"line":1056,"column":4},"end":{"line":1056,"column":4}},{"start":{"line":1056,"column":4},"end":{"line":1056,"column":4}}]},"89":{"line":1061,"type":"if","locations":[{"start":{"line":1061,"column":8},"end":{"line":1061,"column":8}},{"start":{"line":1061,"column":8},"end":{"line":1061,"column":8}}]},"90":{"line":1063,"type":"if","locations":[{"start":{"line":1063,"column":15},"end":{"line":1063,"column":15}},{"start":{"line":1063,"column":15},"end":{"line":1063,"column":15}}]},"91":{"line":1063,"type":"binary-expr","locations":[{"start":{"line":1063,"column":20},"end":{"line":1063,"column":42}},{"start":{"line":1063,"column":47},"end":{"line":1063,"column":66}}]},"92":{"line":1116,"type":"cond-expr","locations":[{"start":{"line":1116,"column":51},"end":{"line":1116,"column":66}},{"start":{"line":1116,"column":69},"end":{"line":1116,"column":82}}]},"93":{"line":1127,"type":"binary-expr","locations":[{"start":{"line":1127,"column":15},"end":{"line":1127,"column":23}},{"start":{"line":1127,"column":27},"end":{"line":1127,"column":31}}]},"94":{"line":1128,"type":"binary-expr","locations":[{"start":{"line":1128,"column":10},"end":{"line":1128,"column":13}},{"start":{"line":1128,"column":17},"end":{"line":1128,"column":19}}]},"95":{"line":1296,"type":"cond-expr","locations":[{"start":{"line":1296,"column":31},"end":{"line":1296,"column":32}},{"start":{"line":1296,"column":35},"end":{"line":1296,"column":47}}]},"96":{"line":1299,"type":"if","locations":[{"start":{"line":1299,"column":4},"end":{"line":1299,"column":4}},{"start":{"line":1299,"column":4},"end":{"line":1299,"column":4}}]},"97":{"line":1321,"type":"cond-expr","locations":[{"start":{"line":1321,"column":34},"end":{"line":1321,"column":40}},{"start":{"line":1321,"column":43},"end":{"line":1321,"column":50}}]},"98":{"line":1322,"type":"if","locations":[{"start":{"line":1322,"column":6},"end":{"line":1322,"column":6}},{"start":{"line":1322,"column":6},"end":{"line":1322,"column":6}}]},"99":{"line":1352,"type":"binary-expr","locations":[{"start":{"line":1352,"column":9},"end":{"line":1352,"column":15}},{"start":{"line":1352,"column":19},"end":{"line":1352,"column":50}}]},"100":{"line":1368,"type":"cond-expr","locations":[{"start":{"line":1368,"column":39},"end":{"line":1368,"column":40}},{"start":{"line":1368,"column":43},"end":{"line":1368,"column":45}}]},"101":{"line":1370,"type":"cond-expr","locations":[{"start":{"line":1370,"column":22},"end":{"line":1370,"column":29}},{"start":{"line":1370,"column":32},"end":{"line":1370,"column":48}}]},"102":{"line":1371,"type":"if","locations":[{"start":{"line":1371,"column":4},"end":{"line":1371,"column":4}},{"start":{"line":1371,"column":4},"end":{"line":1371,"column":4}}]},"103":{"line":1404,"type":"if","locations":[{"start":{"line":1404,"column":4},"end":{"line":1404,"column":4}},{"start":{"line":1404,"column":4},"end":{"line":1404,"column":4}}]},"104":{"line":1421,"type":"cond-expr","locations":[{"start":{"line":1422,"column":6},"end":{"line":1422,"column":44}},{"start":{"line":1423,"column":6},"end":{"line":1423,"column":48}}]},"105":{"line":1506,"type":"if","locations":[{"start":{"line":1506,"column":4},"end":{"line":1506,"column":4}},{"start":{"line":1506,"column":4},"end":{"line":1506,"column":4}}]},"106":{"line":1511,"type":"binary-expr","locations":[{"start":{"line":1511,"column":20},"end":{"line":1511,"column":28}},{"start":{"line":1511,"column":32},"end":{"line":1511,"column":36}}]},"107":{"line":1514,"type":"if","locations":[{"start":{"line":1514,"column":4},"end":{"line":1514,"column":4}},{"start":{"line":1514,"column":4},"end":{"line":1514,"column":4}}]},"108":{"line":1517,"type":"if","locations":[{"start":{"line":1517,"column":4},"end":{"line":1517,"column":4}},{"start":{"line":1517,"column":4},"end":{"line":1517,"column":4}}]},"109":{"line":1535,"type":"if","locations":[{"start":{"line":1535,"column":8},"end":{"line":1535,"column":8}},{"start":{"line":1535,"column":8},"end":{"line":1535,"column":8}}]},"110":{"line":1544,"type":"if","locations":[{"start":{"line":1544,"column":8},"end":{"line":1544,"column":8}},{"start":{"line":1544,"column":8},"end":{"line":1544,"column":8}}]},"111":{"line":1552,"type":"if","locations":[{"start":{"line":1552,"column":12},"end":{"line":1552,"column":12}},{"start":{"line":1552,"column":12},"end":{"line":1552,"column":12}}]},"112":{"line":1560,"type":"if","locations":[{"start":{"line":1560,"column":16},"end":{"line":1560,"column":16}},{"start":{"line":1560,"column":16},"end":{"line":1560,"column":16}}]},"113":{"line":1577,"type":"if","locations":[{"start":{"line":1577,"column":8},"end":{"line":1577,"column":8}},{"start":{"line":1577,"column":8},"end":{"line":1577,"column":8}}]},"114":{"line":1577,"type":"binary-expr","locations":[{"start":{"line":1577,"column":12},"end":{"line":1577,"column":35}},{"start":{"line":1577,"column":39},"end":{"line":1577,"column":57}}]},"115":{"line":1580,"type":"binary-expr","locations":[{"start":{"line":1580,"column":14},"end":{"line":1580,"column":31}},{"start":{"line":1580,"column":35},"end":{"line":1580,"column":61}}]},"116":{"line":1589,"type":"if","locations":[{"start":{"line":1589,"column":8},"end":{"line":1589,"column":8}},{"start":{"line":1589,"column":8},"end":{"line":1589,"column":8}}]},"117":{"line":1597,"type":"binary-expr","locations":[{"start":{"line":1597,"column":28},"end":{"line":1597,"column":47}},{"start":{"line":1597,"column":51},"end":{"line":1597,"column":53}}]},"118":{"line":1606,"type":"if","locations":[{"start":{"line":1606,"column":8},"end":{"line":1606,"column":8}},{"start":{"line":1606,"column":8},"end":{"line":1606,"column":8}}]},"119":{"line":1610,"type":"if","locations":[{"start":{"line":1610,"column":12},"end":{"line":1610,"column":12}},{"start":{"line":1610,"column":12},"end":{"line":1610,"column":12}}]},"120":{"line":1613,"type":"if","locations":[{"start":{"line":1613,"column":12},"end":{"line":1613,"column":12}},{"start":{"line":1613,"column":12},"end":{"line":1613,"column":12}}]},"121":{"line":1631,"type":"if","locations":[{"start":{"line":1631,"column":8},"end":{"line":1631,"column":8}},{"start":{"line":1631,"column":8},"end":{"line":1631,"column":8}}]},"122":{"line":1648,"type":"if","locations":[{"start":{"line":1648,"column":16},"end":{"line":1648,"column":16}},{"start":{"line":1648,"column":16},"end":{"line":1648,"column":16}}]},"123":{"line":1654,"type":"if","locations":[{"start":{"line":1654,"column":8},"end":{"line":1654,"column":8}},{"start":{"line":1654,"column":8},"end":{"line":1654,"column":8}}]},"124":{"line":1664,"type":"if","locations":[{"start":{"line":1664,"column":12},"end":{"line":1664,"column":12}},{"start":{"line":1664,"column":12},"end":{"line":1664,"column":12}}]},"125":{"line":1664,"type":"binary-expr","locations":[{"start":{"line":1664,"column":16},"end":{"line":1664,"column":29}},{"start":{"line":1664,"column":33},"end":{"line":1664,"column":68}}]},"126":{"line":1683,"type":"cond-expr","locations":[{"start":{"line":1683,"column":31},"end":{"line":1683,"column":32}},{"start":{"line":1683,"column":35},"end":{"line":1683,"column":47}}]},"127":{"line":1713,"type":"binary-expr","locations":[{"start":{"line":1713,"column":9},"end":{"line":1713,"column":33}},{"start":{"line":1714,"column":5},"end":{"line":1714,"column":24}},{"start":{"line":1714,"column":28},"end":{"line":1714,"column":58}}]},"128":{"line":1721,"type":"cond-expr","locations":[{"start":{"line":1721,"column":29},"end":{"line":1721,"column":47}},{"start":{"line":1721,"column":50},"end":{"line":1721,"column":59}}]},"129":{"line":1722,"type":"cond-expr","locations":[{"start":{"line":1722,"column":35},"end":{"line":1722,"column":55}},{"start":{"line":1722,"column":58},"end":{"line":1722,"column":67}}]},"130":{"line":1734,"type":"if","locations":[{"start":{"line":1734,"column":2},"end":{"line":1734,"column":2}},{"start":{"line":1734,"column":2},"end":{"line":1734,"column":2}}]},"131":{"line":1737,"type":"if","locations":[{"start":{"line":1737,"column":2},"end":{"line":1737,"column":2}},{"start":{"line":1737,"column":2},"end":{"line":1737,"column":2}}]},"132":{"line":1741,"type":"if","locations":[{"start":{"line":1741,"column":2},"end":{"line":1741,"column":2}},{"start":{"line":1741,"column":2},"end":{"line":1741,"column":2}}]},"133":{"line":1742,"type":"cond-expr","locations":[{"start":{"line":1742,"column":28},"end":{"line":1742,"column":54}},{"start":{"line":1742,"column":57},"end":{"line":1742,"column":59}}]},"134":{"line":1745,"type":"cond-expr","locations":[{"start":{"line":1745,"column":55},"end":{"line":1745,"column":59}},{"start":{"line":1745,"column":62},"end":{"line":1745,"column":68}}]},"135":{"line":1745,"type":"binary-expr","locations":[{"start":{"line":1745,"column":10},"end":{"line":1745,"column":23}},{"start":{"line":1745,"column":27},"end":{"line":1745,"column":51}}]},"136":{"line":1761,"type":"if","locations":[{"start":{"line":1761,"column":2},"end":{"line":1761,"column":2}},{"start":{"line":1761,"column":2},"end":{"line":1761,"column":2}}]},"137":{"line":1762,"type":"cond-expr","locations":[{"start":{"line":1762,"column":30},"end":{"line":1762,"column":31}},{"start":{"line":1762,"column":35},"end":{"line":1762,"column":49}}]},"138":{"line":1764,"type":"cond-expr","locations":[{"start":{"line":1764,"column":23},"end":{"line":1764,"column":29}},{"start":{"line":1764,"column":32},"end":{"line":1764,"column":35}}]},"139":{"line":1765,"type":"if","locations":[{"start":{"line":1765,"column":2},"end":{"line":1765,"column":2}},{"start":{"line":1765,"column":2},"end":{"line":1765,"column":2}}]},"140":{"line":1768,"type":"cond-expr","locations":[{"start":{"line":1768,"column":25},"end":{"line":1768,"column":26}},{"start":{"line":1768,"column":30},"end":{"line":1768,"column":49}}]},"141":{"line":1789,"type":"cond-expr","locations":[{"start":{"line":1789,"column":28},"end":{"line":1789,"column":34}},{"start":{"line":1789,"column":37},"end":{"line":1789,"column":40}}]},"142":{"line":1790,"type":"cond-expr","locations":[{"start":{"line":1790,"column":37},"end":{"line":1790,"column":42}},{"start":{"line":1790,"column":45},"end":{"line":1790,"column":73}}]},"143":{"line":1790,"type":"binary-expr","locations":[{"start":{"line":1790,"column":10},"end":{"line":1790,"column":16}},{"start":{"line":1790,"column":20},"end":{"line":1790,"column":33}}]},"144":{"line":1805,"type":"binary-expr","locations":[{"start":{"line":1805,"column":9},"end":{"line":1805,"column":16}},{"start":{"line":1805,"column":20},"end":{"line":1805,"column":70}}]},"145":{"line":1822,"type":"binary-expr","locations":[{"start":{"line":1822,"column":9},"end":{"line":1822,"column":25}},{"start":{"line":1822,"column":29},"end":{"line":1822,"column":79}}]},"146":{"line":1898,"type":"binary-expr","locations":[{"start":{"line":1898,"column":9},"end":{"line":1898,"column":32}},{"start":{"line":1898,"column":36},"end":{"line":1898,"column":38}}]},"147":{"line":1909,"type":"cond-expr","locations":[{"start":{"line":1910,"column":6},"end":{"line":1910,"column":28}},{"start":{"line":1911,"column":6},"end":{"line":1911,"column":26}}]},"148":{"line":1936,"type":"cond-expr","locations":[{"start":{"line":1936,"column":25},"end":{"line":1936,"column":27}},{"start":{"line":1936,"column":30},"end":{"line":1936,"column":49}}]},"149":{"line":1966,"type":"if","locations":[{"start":{"line":1966,"column":2},"end":{"line":1966,"column":2}},{"start":{"line":1966,"column":2},"end":{"line":1966,"column":2}}]},"150":{"line":1966,"type":"binary-expr","locations":[{"start":{"line":1966,"column":6},"end":{"line":1966,"column":12}},{"start":{"line":1966,"column":17},"end":{"line":1966,"column":22}},{"start":{"line":1966,"column":26},"end":{"line":1966,"column":45}}]},"151":{"line":1969,"type":"if","locations":[{"start":{"line":1969,"column":2},"end":{"line":1969,"column":2}},{"start":{"line":1969,"column":2},"end":{"line":1969,"column":2}}]},"152":{"line":1969,"type":"binary-expr","locations":[{"start":{"line":1969,"column":6},"end":{"line":1969,"column":13}},{"start":{"line":1969,"column":17},"end":{"line":1969,"column":47}}]},"153":{"line":1988,"type":"cond-expr","locations":[{"start":{"line":1988,"column":18},"end":{"line":1988,"column":42}},{"start":{"line":1988,"column":45},"end":{"line":1988,"column":47}}]},"154":{"line":2084,"type":"binary-expr","locations":[{"start":{"line":2084,"column":13},"end":{"line":2084,"column":23}},{"start":{"line":2084,"column":27},"end":{"line":2084,"column":46}},{"start":{"line":2085,"column":13},"end":{"line":2085,"column":22}},{"start":{"line":2085,"column":26},"end":{"line":2085,"column":45}}]},"155":{"line":2087,"type":"if","locations":[{"start":{"line":2087,"column":8},"end":{"line":2087,"column":8}},{"start":{"line":2087,"column":8},"end":{"line":2087,"column":8}}]},"156":{"line":2091,"type":"cond-expr","locations":[{"start":{"line":2091,"column":62},"end":{"line":2091,"column":69}},{"start":{"line":2091,"column":72},"end":{"line":2091,"column":78}}]},"157":{"line":2092,"type":"if","locations":[{"start":{"line":2092,"column":15},"end":{"line":2092,"column":15}},{"start":{"line":2092,"column":15},"end":{"line":2092,"column":15}}]},"158":{"line":2097,"type":"if","locations":[{"start":{"line":2097,"column":12},"end":{"line":2097,"column":12}},{"start":{"line":2097,"column":12},"end":{"line":2097,"column":12}}]},"159":{"line":2097,"type":"binary-expr","locations":[{"start":{"line":2097,"column":16},"end":{"line":2097,"column":35}},{"start":{"line":2097,"column":39},"end":{"line":2097,"column":49}},{"start":{"line":2097,"column":53},"end":{"line":2097,"column":72}}]},"160":{"line":2102,"type":"if","locations":[{"start":{"line":2102,"column":12},"end":{"line":2102,"column":12}},{"start":{"line":2102,"column":12},"end":{"line":2102,"column":12}}]},"161":{"line":2134,"type":"if","locations":[{"start":{"line":2134,"column":4},"end":{"line":2134,"column":4}},{"start":{"line":2134,"column":4},"end":{"line":2134,"column":4}}]},"162":{"line":2136,"type":"if","locations":[{"start":{"line":2136,"column":4},"end":{"line":2136,"column":4}},{"start":{"line":2136,"column":4},"end":{"line":2136,"column":4}}]},"163":{"line":2152,"type":"if","locations":[{"start":{"line":2152,"column":4},"end":{"line":2152,"column":4}},{"start":{"line":2152,"column":4},"end":{"line":2152,"column":4}}]},"164":{"line":2161,"type":"if","locations":[{"start":{"line":2161,"column":4},"end":{"line":2161,"column":4}},{"start":{"line":2161,"column":4},"end":{"line":2161,"column":4}}]},"165":{"line":2168,"type":"if","locations":[{"start":{"line":2168,"column":4},"end":{"line":2168,"column":4}},{"start":{"line":2168,"column":4},"end":{"line":2168,"column":4}}]},"166":{"line":2173,"type":"if","locations":[{"start":{"line":2173,"column":4},"end":{"line":2173,"column":4}},{"start":{"line":2173,"column":4},"end":{"line":2173,"column":4}}]},"167":{"line":2178,"type":"binary-expr","locations":[{"start":{"line":2178,"column":11},"end":{"line":2178,"column":20}},{"start":{"line":2178,"column":24},"end":{"line":2178,"column":50}}]},"168":{"line":2182,"type":"binary-expr","locations":[{"start":{"line":2182,"column":11},"end":{"line":2182,"column":20}},{"start":{"line":2182,"column":24},"end":{"line":2182,"column":50}}]},"169":{"line":2199,"type":"if","locations":[{"start":{"line":2199,"column":8},"end":{"line":2199,"column":8}},{"start":{"line":2199,"column":8},"end":{"line":2199,"column":8}}]},"170":{"line":2208,"type":"if","locations":[{"start":{"line":2208,"column":4},"end":{"line":2208,"column":4}},{"start":{"line":2208,"column":4},"end":{"line":2208,"column":4}}]},"171":{"line":2211,"type":"if","locations":[{"start":{"line":2211,"column":9},"end":{"line":2211,"column":9}},{"start":{"line":2211,"column":9},"end":{"line":2211,"column":9}}]},"172":{"line":2221,"type":"if","locations":[{"start":{"line":2221,"column":8},"end":{"line":2221,"column":8}},{"start":{"line":2221,"column":8},"end":{"line":2221,"column":8}}]},"173":{"line":2221,"type":"binary-expr","locations":[{"start":{"line":2221,"column":12},"end":{"line":2221,"column":28}},{"start":{"line":2221,"column":32},"end":{"line":2221,"column":62}}]},"174":{"line":2225,"type":"if","locations":[{"start":{"line":2225,"column":8},"end":{"line":2225,"column":8}},{"start":{"line":2225,"column":8},"end":{"line":2225,"column":8}}]},"175":{"line":2228,"type":"if","locations":[{"start":{"line":2228,"column":8},"end":{"line":2228,"column":8}},{"start":{"line":2228,"column":8},"end":{"line":2228,"column":8}}]},"176":{"line":2228,"type":"binary-expr","locations":[{"start":{"line":2228,"column":12},"end":{"line":2228,"column":29}},{"start":{"line":2228,"column":33},"end":{"line":2228,"column":41}}]},"177":{"line":2238,"type":"binary-expr","locations":[{"start":{"line":2238,"column":26},"end":{"line":2238,"column":34}},{"start":{"line":2238,"column":38},"end":{"line":2238,"column":42}}]},"178":{"line":2241,"type":"if","locations":[{"start":{"line":2241,"column":12},"end":{"line":2241,"column":12}},{"start":{"line":2241,"column":12},"end":{"line":2241,"column":12}}]},"179":{"line":2248,"type":"if","locations":[{"start":{"line":2248,"column":8},"end":{"line":2248,"column":8}},{"start":{"line":2248,"column":8},"end":{"line":2248,"column":8}}]},"180":{"line":2265,"type":"if","locations":[{"start":{"line":2265,"column":16},"end":{"line":2265,"column":16}},{"start":{"line":2265,"column":16},"end":{"line":2265,"column":16}}]},"181":{"line":2267,"type":"if","locations":[{"start":{"line":2267,"column":23},"end":{"line":2267,"column":23}},{"start":{"line":2267,"column":23},"end":{"line":2267,"column":23}}]},"182":{"line":2273,"type":"if","locations":[{"start":{"line":2273,"column":16},"end":{"line":2273,"column":16}},{"start":{"line":2273,"column":16},"end":{"line":2273,"column":16}}]},"183":{"line":2278,"type":"if","locations":[{"start":{"line":2278,"column":12},"end":{"line":2278,"column":12}},{"start":{"line":2278,"column":12},"end":{"line":2278,"column":12}}]},"184":{"line":2282,"type":"if","locations":[{"start":{"line":2282,"column":12},"end":{"line":2282,"column":12}},{"start":{"line":2282,"column":12},"end":{"line":2282,"column":12}}]},"185":{"line":2318,"type":"if","locations":[{"start":{"line":2318,"column":12},"end":{"line":2318,"column":12}},{"start":{"line":2318,"column":12},"end":{"line":2318,"column":12}}]},"186":{"line":2322,"type":"binary-expr","locations":[{"start":{"line":2322,"column":18},"end":{"line":2322,"column":27}},{"start":{"line":2322,"column":31},"end":{"line":2322,"column":57}},{"start":{"line":2322,"column":61},"end":{"line":2322,"column":76}}]},"187":{"line":2325,"type":"if","locations":[{"start":{"line":2325,"column":16},"end":{"line":2325,"column":16}},{"start":{"line":2325,"column":16},"end":{"line":2325,"column":16}}]},"188":{"line":2335,"type":"if","locations":[{"start":{"line":2335,"column":16},"end":{"line":2335,"column":16}},{"start":{"line":2335,"column":16},"end":{"line":2335,"column":16}}]},"189":{"line":2339,"type":"if","locations":[{"start":{"line":2339,"column":16},"end":{"line":2339,"column":16}},{"start":{"line":2339,"column":16},"end":{"line":2339,"column":16}}]},"190":{"line":2364,"type":"if","locations":[{"start":{"line":2364,"column":12},"end":{"line":2364,"column":12}},{"start":{"line":2364,"column":12},"end":{"line":2364,"column":12}}]},"191":{"line":2513,"type":"binary-expr","locations":[{"start":{"line":2513,"column":20},"end":{"line":2513,"column":28}},{"start":{"line":2513,"column":32},"end":{"line":2513,"column":36}}]},"192":{"line":2570,"type":"if","locations":[{"start":{"line":2570,"column":8},"end":{"line":2570,"column":8}},{"start":{"line":2570,"column":8},"end":{"line":2570,"column":8}}]},"193":{"line":2648,"type":"binary-expr","locations":[{"start":{"line":2648,"column":15},"end":{"line":2648,"column":23}},{"start":{"line":2648,"column":27},"end":{"line":2648,"column":31}}]},"194":{"line":2652,"type":"if","locations":[{"start":{"line":2652,"column":12},"end":{"line":2652,"column":12}},{"start":{"line":2652,"column":12},"end":{"line":2652,"column":12}}]},"195":{"line":2658,"type":"if","locations":[{"start":{"line":2658,"column":12},"end":{"line":2658,"column":12}},{"start":{"line":2658,"column":12},"end":{"line":2658,"column":12}}]},"196":{"line":2787,"type":"binary-expr","locations":[{"start":{"line":2787,"column":13},"end":{"line":2787,"column":15}},{"start":{"line":2787,"column":19},"end":{"line":2787,"column":23}}]},"197":{"line":2792,"type":"if","locations":[{"start":{"line":2792,"column":16},"end":{"line":2792,"column":16}},{"start":{"line":2792,"column":16},"end":{"line":2792,"column":16}}]},"198":{"line":2794,"type":"if","locations":[{"start":{"line":2794,"column":23},"end":{"line":2794,"column":23}},{"start":{"line":2794,"column":23},"end":{"line":2794,"column":23}}]},"199":{"line":2794,"type":"binary-expr","locations":[{"start":{"line":2794,"column":27},"end":{"line":2794,"column":40}},{"start":{"line":2794,"column":44},"end":{"line":2794,"column":55}}]},"200":{"line":2803,"type":"if","locations":[{"start":{"line":2803,"column":12},"end":{"line":2803,"column":12}},{"start":{"line":2803,"column":12},"end":{"line":2803,"column":12}}]},"201":{"line":2806,"type":"cond-expr","locations":[{"start":{"line":2806,"column":38},"end":{"line":2806,"column":48}},{"start":{"line":2806,"column":51},"end":{"line":2806,"column":67}}]},"202":{"line":2904,"type":"if","locations":[{"start":{"line":2904,"column":12},"end":{"line":2904,"column":12}},{"start":{"line":2904,"column":12},"end":{"line":2904,"column":12}}]},"203":{"line":2905,"type":"if","locations":[{"start":{"line":2905,"column":16},"end":{"line":2905,"column":16}},{"start":{"line":2905,"column":16},"end":{"line":2905,"column":16}}]},"204":{"line":2906,"type":"if","locations":[{"start":{"line":2906,"column":20},"end":{"line":2906,"column":20}},{"start":{"line":2906,"column":20},"end":{"line":2906,"column":20}}]},"205":{"line":2909,"type":"if","locations":[{"start":{"line":2909,"column":23},"end":{"line":2909,"column":23}},{"start":{"line":2909,"column":23},"end":{"line":2909,"column":23}}]},"206":{"line":2972,"type":"binary-expr","locations":[{"start":{"line":2972,"column":24},"end":{"line":2972,"column":32}},{"start":{"line":2972,"column":36},"end":{"line":2972,"column":40}}]},"207":{"line":2977,"type":"if","locations":[{"start":{"line":2977,"column":8},"end":{"line":2977,"column":8}},{"start":{"line":2977,"column":8},"end":{"line":2977,"column":8}}]},"208":{"line":2984,"type":"if","locations":[{"start":{"line":2984,"column":8},"end":{"line":2984,"column":8}},{"start":{"line":2984,"column":8},"end":{"line":2984,"column":8}}]},"209":{"line":2985,"type":"if","locations":[{"start":{"line":2985,"column":8},"end":{"line":2985,"column":8}},{"start":{"line":2985,"column":8},"end":{"line":2985,"column":8}}]},"210":{"line":3016,"type":"binary-expr","locations":[{"start":{"line":3016,"column":24},"end":{"line":3016,"column":32}},{"start":{"line":3016,"column":36},"end":{"line":3016,"column":40}}]},"211":{"line":3019,"type":"if","locations":[{"start":{"line":3019,"column":8},"end":{"line":3019,"column":8}},{"start":{"line":3019,"column":8},"end":{"line":3019,"column":8}}]},"212":{"line":3021,"type":"if","locations":[{"start":{"line":3021,"column":8},"end":{"line":3021,"column":8}},{"start":{"line":3021,"column":8},"end":{"line":3021,"column":8}}]},"213":{"line":3090,"type":"binary-expr","locations":[{"start":{"line":3090,"column":24},"end":{"line":3090,"column":32}},{"start":{"line":3090,"column":36},"end":{"line":3090,"column":40}}]},"214":{"line":3095,"type":"if","locations":[{"start":{"line":3095,"column":8},"end":{"line":3095,"column":8}},{"start":{"line":3095,"column":8},"end":{"line":3095,"column":8}}]},"215":{"line":3100,"type":"if","locations":[{"start":{"line":3100,"column":8},"end":{"line":3100,"column":8}},{"start":{"line":3100,"column":8},"end":{"line":3100,"column":8}}]},"216":{"line":3101,"type":"if","locations":[{"start":{"line":3101,"column":8},"end":{"line":3101,"column":8}},{"start":{"line":3101,"column":8},"end":{"line":3101,"column":8}}]},"217":{"line":3256,"type":"if","locations":[{"start":{"line":3256,"column":4},"end":{"line":3256,"column":4}},{"start":{"line":3256,"column":4},"end":{"line":3256,"column":4}}]},"218":{"line":3261,"type":"if","locations":[{"start":{"line":3261,"column":12},"end":{"line":3261,"column":12}},{"start":{"line":3261,"column":12},"end":{"line":3261,"column":12}}]},"219":{"line":3360,"type":"cond-expr","locations":[{"start":{"line":3360,"column":28},"end":{"line":3360,"column":37}},{"start":{"line":3360,"column":40},"end":{"line":3360,"column":51}}]},"220":{"line":3372,"type":"if","locations":[{"start":{"line":3372,"column":8},"end":{"line":3372,"column":8}},{"start":{"line":3372,"column":8},"end":{"line":3372,"column":8}}]},"221":{"line":3375,"type":"if","locations":[{"start":{"line":3375,"column":12},"end":{"line":3375,"column":12}},{"start":{"line":3375,"column":12},"end":{"line":3375,"column":12}}]},"222":{"line":3385,"type":"if","locations":[{"start":{"line":3385,"column":12},"end":{"line":3385,"column":12}},{"start":{"line":3385,"column":12},"end":{"line":3385,"column":12}}]},"223":{"line":3388,"type":"if","locations":[{"start":{"line":3388,"column":16},"end":{"line":3388,"column":16}},{"start":{"line":3388,"column":16},"end":{"line":3388,"column":16}}]},"224":{"line":3395,"type":"if","locations":[{"start":{"line":3395,"column":8},"end":{"line":3395,"column":8}},{"start":{"line":3395,"column":8},"end":{"line":3395,"column":8}}]},"225":{"line":3406,"type":"cond-expr","locations":[{"start":{"line":3406,"column":37},"end":{"line":3406,"column":48}},{"start":{"line":3406,"column":51},"end":{"line":3406,"column":64}}]},"226":{"line":3407,"type":"binary-expr","locations":[{"start":{"line":3407,"column":46},"end":{"line":3407,"column":54}},{"start":{"line":3407,"column":58},"end":{"line":3407,"column":62}}]},"227":{"line":3509,"type":"binary-expr","locations":[{"start":{"line":3509,"column":24},"end":{"line":3509,"column":31}},{"start":{"line":3509,"column":35},"end":{"line":3509,"column":39}}]},"228":{"line":3513,"type":"if","locations":[{"start":{"line":3513,"column":8},"end":{"line":3513,"column":8}},{"start":{"line":3513,"column":8},"end":{"line":3513,"column":8}}]},"229":{"line":3539,"type":"binary-expr","locations":[{"start":{"line":3539,"column":15},"end":{"line":3539,"column":23}},{"start":{"line":3539,"column":27},"end":{"line":3539,"column":31}}]},"230":{"line":3543,"type":"if","locations":[{"start":{"line":3543,"column":12},"end":{"line":3543,"column":12}},{"start":{"line":3543,"column":12},"end":{"line":3543,"column":12}}]},"231":{"line":3552,"type":"if","locations":[{"start":{"line":3552,"column":12},"end":{"line":3552,"column":12}},{"start":{"line":3552,"column":12},"end":{"line":3552,"column":12}}]},"232":{"line":3556,"type":"if","locations":[{"start":{"line":3556,"column":16},"end":{"line":3556,"column":16}},{"start":{"line":3556,"column":16},"end":{"line":3556,"column":16}}]},"233":{"line":3678,"type":"binary-expr","locations":[{"start":{"line":3678,"column":20},"end":{"line":3678,"column":28}},{"start":{"line":3678,"column":32},"end":{"line":3678,"column":36}}]},"234":{"line":3683,"type":"if","locations":[{"start":{"line":3683,"column":12},"end":{"line":3683,"column":12}},{"start":{"line":3683,"column":12},"end":{"line":3683,"column":12}}]},"235":{"line":3804,"type":"binary-expr","locations":[{"start":{"line":3804,"column":13},"end":{"line":3804,"column":19}},{"start":{"line":3804,"column":23},"end":{"line":3804,"column":31}}]},"236":{"line":3808,"type":"if","locations":[{"start":{"line":3808,"column":8},"end":{"line":3808,"column":8}},{"start":{"line":3808,"column":8},"end":{"line":3808,"column":8}}]},"237":{"line":3812,"type":"if","locations":[{"start":{"line":3812,"column":15},"end":{"line":3812,"column":15}},{"start":{"line":3812,"column":15},"end":{"line":3812,"column":15}}]},"238":{"line":3865,"type":"if","locations":[{"start":{"line":3865,"column":0},"end":{"line":3865,"column":0}},{"start":{"line":3865,"column":0},"end":{"line":3865,"column":0}}]},"239":{"line":3867,"type":"if","locations":[{"start":{"line":3867,"column":7},"end":{"line":3867,"column":7}},{"start":{"line":3867,"column":7},"end":{"line":3867,"column":7}}]},"240":{"line":3876,"type":"binary-expr","locations":[{"start":{"line":3876,"column":15},"end":{"line":3876,"column":23}},{"start":{"line":3876,"column":27},"end":{"line":3876,"column":31}}]},"241":{"line":3877,"type":"cond-expr","locations":[{"start":{"line":3877,"column":39},"end":{"line":3877,"column":41}},{"start":{"line":3877,"column":44},"end":{"line":3877,"column":46}}]},"242":{"line":3881,"type":"if","locations":[{"start":{"line":3881,"column":12},"end":{"line":3881,"column":12}},{"start":{"line":3881,"column":12},"end":{"line":3881,"column":12}}]},"243":{"line":4129,"type":"if","locations":[{"start":{"line":4129,"column":8},"end":{"line":4129,"column":8}},{"start":{"line":4129,"column":8},"end":{"line":4129,"column":8}}]},"244":{"line":4130,"type":"if","locations":[{"start":{"line":4130,"column":8},"end":{"line":4130,"column":8}},{"start":{"line":4130,"column":8},"end":{"line":4130,"column":8}}]},"245":{"line":4134,"type":"if","locations":[{"start":{"line":4134,"column":8},"end":{"line":4134,"column":8}},{"start":{"line":4134,"column":8},"end":{"line":4134,"column":8}}]},"246":{"line":4137,"type":"if","locations":[{"start":{"line":4137,"column":8},"end":{"line":4137,"column":8}},{"start":{"line":4137,"column":8},"end":{"line":4137,"column":8}}]},"247":{"line":4144,"type":"binary-expr","locations":[{"start":{"line":4144,"column":19},"end":{"line":4144,"column":27}},{"start":{"line":4144,"column":31},"end":{"line":4144,"column":32}}]},"248":{"line":4146,"type":"binary-expr","locations":[{"start":{"line":4146,"column":15},"end":{"line":4146,"column":23}},{"start":{"line":4146,"column":27},"end":{"line":4146,"column":56}}]},"249":{"line":4157,"type":"if","locations":[{"start":{"line":4157,"column":12},"end":{"line":4157,"column":12}},{"start":{"line":4157,"column":12},"end":{"line":4157,"column":12}}]},"250":{"line":4209,"type":"binary-expr","locations":[{"start":{"line":4209,"column":20},"end":{"line":4209,"column":28}},{"start":{"line":4209,"column":32},"end":{"line":4209,"column":36}}]},"251":{"line":4210,"type":"if","locations":[{"start":{"line":4210,"column":4},"end":{"line":4210,"column":4}},{"start":{"line":4210,"column":4},"end":{"line":4210,"column":4}}]},"252":{"line":4211,"type":"if","locations":[{"start":{"line":4211,"column":4},"end":{"line":4211,"column":4}},{"start":{"line":4211,"column":4},"end":{"line":4211,"column":4}}]},"253":{"line":4287,"type":"if","locations":[{"start":{"line":4287,"column":12},"end":{"line":4287,"column":12}},{"start":{"line":4287,"column":12},"end":{"line":4287,"column":12}}]},"254":{"line":4291,"type":"if","locations":[{"start":{"line":4291,"column":16},"end":{"line":4291,"column":16}},{"start":{"line":4291,"column":16},"end":{"line":4291,"column":16}}]},"255":{"line":4373,"type":"if","locations":[{"start":{"line":4373,"column":4},"end":{"line":4373,"column":4}},{"start":{"line":4373,"column":4},"end":{"line":4373,"column":4}}]},"256":{"line":4580,"type":"if","locations":[{"start":{"line":4580,"column":8},"end":{"line":4580,"column":8}},{"start":{"line":4580,"column":8},"end":{"line":4580,"column":8}}]},"257":{"line":4581,"type":"binary-expr","locations":[{"start":{"line":4581,"column":24},"end":{"line":4581,"column":32}},{"start":{"line":4581,"column":36},"end":{"line":4581,"column":49}}]},"258":{"line":4583,"type":"cond-expr","locations":[{"start":{"line":4584,"column":16},"end":{"line":4584,"column":26}},{"start":{"line":4585,"column":16},"end":{"line":4585,"column":59}}]},"259":{"line":4585,"type":"binary-expr","locations":[{"start":{"line":4585,"column":27},"end":{"line":4585,"column":38}},{"start":{"line":4585,"column":42},"end":{"line":4585,"column":58}}]},"260":{"line":4588,"type":"if","locations":[{"start":{"line":4588,"column":15},"end":{"line":4588,"column":15}},{"start":{"line":4588,"column":15},"end":{"line":4588,"column":15}}]},"261":{"line":4588,"type":"binary-expr","locations":[{"start":{"line":4588,"column":19},"end":{"line":4588,"column":40}},{"start":{"line":4588,"column":44},"end":{"line":4588,"column":65}}]},"262":{"line":4589,"type":"binary-expr","locations":[{"start":{"line":4589,"column":24},"end":{"line":4589,"column":26}},{"start":{"line":4589,"column":30},"end":{"line":4589,"column":43}}]},"263":{"line":4595,"type":"if","locations":[{"start":{"line":4595,"column":4},"end":{"line":4595,"column":4}},{"start":{"line":4595,"column":4},"end":{"line":4595,"column":4}}]},"264":{"line":4595,"type":"binary-expr","locations":[{"start":{"line":4595,"column":8},"end":{"line":4595,"column":28}},{"start":{"line":4595,"column":32},"end":{"line":4595,"column":58}}]},"265":{"line":4596,"type":"binary-expr","locations":[{"start":{"line":4596,"column":19},"end":{"line":4596,"column":23}},{"start":{"line":4596,"column":27},"end":{"line":4596,"column":31}}]},"266":{"line":4600,"type":"binary-expr","locations":[{"start":{"line":4600,"column":19},"end":{"line":4600,"column":27}},{"start":{"line":4600,"column":31},"end":{"line":4600,"column":35}}]},"267":{"line":4603,"type":"if","locations":[{"start":{"line":4603,"column":4},"end":{"line":4603,"column":4}},{"start":{"line":4603,"column":4},"end":{"line":4603,"column":4}}]},"268":{"line":4612,"type":"if","locations":[{"start":{"line":4612,"column":12},"end":{"line":4612,"column":12}},{"start":{"line":4612,"column":12},"end":{"line":4612,"column":12}}]},"269":{"line":4612,"type":"binary-expr","locations":[{"start":{"line":4612,"column":16},"end":{"line":4612,"column":19}},{"start":{"line":4612,"column":23},"end":{"line":4612,"column":48}},{"start":{"line":4613,"column":17},"end":{"line":4613,"column":57}},{"start":{"line":4614,"column":20},"end":{"line":4614,"column":44}}]},"270":{"line":4654,"type":"if","locations":[{"start":{"line":4654,"column":4},"end":{"line":4654,"column":4}},{"start":{"line":4654,"column":4},"end":{"line":4654,"column":4}}]},"271":{"line":4664,"type":"if","locations":[{"start":{"line":4664,"column":8},"end":{"line":4664,"column":8}},{"start":{"line":4664,"column":8},"end":{"line":4664,"column":8}}]},"272":{"line":4866,"type":"if","locations":[{"start":{"line":4866,"column":12},"end":{"line":4866,"column":12}},{"start":{"line":4866,"column":12},"end":{"line":4866,"column":12}}]},"273":{"line":4870,"type":"if","locations":[{"start":{"line":4870,"column":8},"end":{"line":4870,"column":8}},{"start":{"line":4870,"column":8},"end":{"line":4870,"column":8}}]},"274":{"line":4876,"type":"cond-expr","locations":[{"start":{"line":4876,"column":23},"end":{"line":4876,"column":25}},{"start":{"line":4876,"column":28},"end":{"line":4876,"column":41}}]},"275":{"line":4876,"type":"cond-expr","locations":[{"start":{"line":4876,"column":36},"end":{"line":4876,"column":37}},{"start":{"line":4876,"column":40},"end":{"line":4876,"column":41}}]},"276":{"line":4929,"type":"binary-expr","locations":[{"start":{"line":4929,"column":23},"end":{"line":4929,"column":35}},{"start":{"line":4929,"column":39},"end":{"line":4929,"column":50}}]},"277":{"line":4932,"type":"if","locations":[{"start":{"line":4932,"column":12},"end":{"line":4932,"column":12}},{"start":{"line":4932,"column":12},"end":{"line":4932,"column":12}}]},"278":{"line":4940,"type":"if","locations":[{"start":{"line":4940,"column":12},"end":{"line":4940,"column":12}},{"start":{"line":4940,"column":12},"end":{"line":4940,"column":12}}]},"279":{"line":4969,"type":"binary-expr","locations":[{"start":{"line":4969,"column":53},"end":{"line":4969,"column":57}},{"start":{"line":4969,"column":61},"end":{"line":4969,"column":62}}]},"280":{"line":4973,"type":"cond-expr","locations":[{"start":{"line":4973,"column":23},"end":{"line":4973,"column":29}},{"start":{"line":4973,"column":32},"end":{"line":4973,"column":39}}]},"281":{"line":5093,"type":"if","locations":[{"start":{"line":5093,"column":4},"end":{"line":5093,"column":4}},{"start":{"line":5093,"column":4},"end":{"line":5093,"column":4}}]},"282":{"line":5096,"type":"cond-expr","locations":[{"start":{"line":5096,"column":38},"end":{"line":5096,"column":40}},{"start":{"line":5096,"column":43},"end":{"line":5096,"column":45}}]},"283":{"line":5098,"type":"binary-expr","locations":[{"start":{"line":5098,"column":20},"end":{"line":5098,"column":28}},{"start":{"line":5098,"column":32},"end":{"line":5098,"column":36}}]},"284":{"line":5148,"type":"binary-expr","locations":[{"start":{"line":5148,"column":15},"end":{"line":5148,"column":23}},{"start":{"line":5148,"column":27},"end":{"line":5148,"column":31}}]},"285":{"line":5151,"type":"if","locations":[{"start":{"line":5151,"column":12},"end":{"line":5151,"column":12}},{"start":{"line":5151,"column":12},"end":{"line":5151,"column":12}}]},"286":{"line":5179,"type":"binary-expr","locations":[{"start":{"line":5179,"column":16},"end":{"line":5179,"column":29}},{"start":{"line":5179,"column":33},"end":{"line":5179,"column":35}}]},"287":{"line":5218,"type":"binary-expr","locations":[{"start":{"line":5218,"column":24},"end":{"line":5218,"column":32}},{"start":{"line":5218,"column":36},"end":{"line":5218,"column":40}}]},"288":{"line":5220,"type":"if","locations":[{"start":{"line":5220,"column":4},"end":{"line":5220,"column":4}},{"start":{"line":5220,"column":4},"end":{"line":5220,"column":4}}]},"289":{"line":5222,"type":"if","locations":[{"start":{"line":5222,"column":8},"end":{"line":5222,"column":8}},{"start":{"line":5222,"column":8},"end":{"line":5222,"column":8}}]},"290":{"line":5223,"type":"if","locations":[{"start":{"line":5223,"column":8},"end":{"line":5223,"column":8}},{"start":{"line":5223,"column":8},"end":{"line":5223,"column":8}}]},"291":{"line":5316,"type":"binary-expr","locations":[{"start":{"line":5316,"column":20},"end":{"line":5316,"column":28}},{"start":{"line":5316,"column":32},"end":{"line":5316,"column":36}}]},"292":{"line":5317,"type":"if","locations":[{"start":{"line":5317,"column":4},"end":{"line":5317,"column":4}},{"start":{"line":5317,"column":4},"end":{"line":5317,"column":4}}]},"293":{"line":5318,"type":"if","locations":[{"start":{"line":5318,"column":4},"end":{"line":5318,"column":4}},{"start":{"line":5318,"column":4},"end":{"line":5318,"column":4}}]},"294":{"line":5328,"type":"if","locations":[{"start":{"line":5328,"column":8},"end":{"line":5328,"column":8}},{"start":{"line":5328,"column":8},"end":{"line":5328,"column":8}}]},"295":{"line":5328,"type":"binary-expr","locations":[{"start":{"line":5328,"column":12},"end":{"line":5328,"column":15}},{"start":{"line":5328,"column":19},"end":{"line":5328,"column":45}}]}},"code":["(function (global, factory) {","  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :","  typeof define === 'function' && define.amd ? define(['exports'], factory) :","  (factory((global.async = global.async || {})));","}(this, (function (exports) { 'use strict';","","function slice(arrayLike, start) {","    start = start|0;","    var newLen = Math.max(arrayLike.length - start, 0);","    var newArr = Array(newLen);","    for(var idx = 0; idx < newLen; idx++)  {","        newArr[idx] = arrayLike[start + idx];","    }","    return newArr;","}","","/**"," * Creates a continuation function with some arguments already applied."," *"," * Useful as a shorthand when combined with other control flow functions. Any"," * arguments passed to the returned function are added to the arguments"," * originally passed to apply."," *"," * @name apply"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {Function} fn - The function you want to eventually apply all"," * arguments to. Invokes with (arguments...)."," * @param {...*} arguments... - Any number of arguments to automatically apply"," * when the continuation is called."," * @returns {Function} the partially-applied function"," * @example"," *"," * // using apply"," * async.parallel(["," *     async.apply(fs.writeFile, 'testfile1', 'test1'),"," *     async.apply(fs.writeFile, 'testfile2', 'test2')"," * ]);"," *"," *"," * // the same process without using apply"," * async.parallel(["," *     function(callback) {"," *         fs.writeFile('testfile1', 'test1', callback);"," *     },"," *     function(callback) {"," *         fs.writeFile('testfile2', 'test2', callback);"," *     }"," * ]);"," *"," * // It's possible to pass any number of additional arguments when calling the"," * // continuation:"," *"," * node> var fn = async.apply(sys.puts, 'one');"," * node> fn('two', 'three');"," * one"," * two"," * three"," */","var apply = function(fn/*, ...args*/) {","    var args = slice(arguments, 1);","    return function(/*callArgs*/) {","        var callArgs = slice(arguments);","        return fn.apply(null, args.concat(callArgs));","    };","};","","var initialParams = function (fn) {","    return function (/*...args, callback*/) {","        var args = slice(arguments);","        var callback = args.pop();","        fn.call(this, args, callback);","    };","};","","/**"," * Checks if `value` is the"," * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)"," * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)"," *"," * @static"," * @memberOf _"," * @since 0.1.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is an object, else `false`."," * @example"," *"," * _.isObject({});"," * // => true"," *"," * _.isObject([1, 2, 3]);"," * // => true"," *"," * _.isObject(_.noop);"," * // => true"," *"," * _.isObject(null);"," * // => false"," */","function isObject(value) {","  var type = typeof value;","  return value != null && (type == 'object' || type == 'function');","}","","var hasSetImmediate = typeof setImmediate === 'function' && setImmediate;","var hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';","","function fallback(fn) {","    setTimeout(fn, 0);","}","","function wrap(defer) {","    return function (fn/*, ...args*/) {","        var args = slice(arguments, 1);","        defer(function () {","            fn.apply(null, args);","        });","    };","}","","var _defer;","","if (hasSetImmediate) {","    _defer = setImmediate;","} else if (hasNextTick) {","    _defer = process.nextTick;","} else {","    _defer = fallback;","}","","var setImmediate$1 = wrap(_defer);","","/**"," * Take a sync function and make it async, passing its return value to a"," * callback. This is useful for plugging sync functions into a waterfall,"," * series, or other async functions. Any arguments passed to the generated"," * function will be passed to the wrapped function (except for the final"," * callback argument). Errors thrown will be passed to the callback."," *"," * If the function passed to `asyncify` returns a Promise, that promises's"," * resolved/rejected state will be used to call the callback, rather than simply"," * the synchronous return value."," *"," * This also means you can asyncify ES2017 `async` functions."," *"," * @name asyncify"," * @static"," * @memberOf module:Utils"," * @method"," * @alias wrapSync"," * @category Util"," * @param {Function} func - The synchronous function, or Promise-returning"," * function to convert to an {@link AsyncFunction}."," * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be"," * invoked with `(args..., callback)`."," * @example"," *"," * // passing a regular synchronous function"," * async.waterfall(["," *     async.apply(fs.readFile, filename, \"utf8\"),"," *     async.asyncify(JSON.parse),"," *     function (data, next) {"," *         // data is the result of parsing the text."," *         // If there was a parsing error, it would have been caught."," *     }"," * ], callback);"," *"," * // passing a function returning a promise"," * async.waterfall(["," *     async.apply(fs.readFile, filename, \"utf8\"),"," *     async.asyncify(function (contents) {"," *         return db.model.create(contents);"," *     }),"," *     function (model, next) {"," *         // `model` is the instantiated model object."," *         // If there was an error, this function would be skipped."," *     }"," * ], callback);"," *"," * // es2017 example, though `asyncify` is not needed if your JS environment"," * // supports async functions out of the box"," * var q = async.queue(async.asyncify(async function(file) {"," *     var intermediateStep = await processFile(file);"," *     return await somePromise(intermediateStep)"," * }));"," *"," * q.push(files);"," */","function asyncify(func) {","    return initialParams(function (args, callback) {","        var result;","        try {","            result = func.apply(this, args);","        } catch (e) {","            return callback(e);","        }","        // if result is Promise object","        if (isObject(result) && typeof result.then === 'function') {","            result.then(function(value) {","                invokeCallback(callback, null, value);","            }, function(err) {","                invokeCallback(callback, err.message ? err : new Error(err));","            });","        } else {","            callback(null, result);","        }","    });","}","","function invokeCallback(callback, error, value) {","    try {","        callback(error, value);","    } catch (e) {","        setImmediate$1(rethrow, e);","    }","}","","function rethrow(error) {","    throw error;","}","","var supportsSymbol = typeof Symbol === 'function';","","function isAsync(fn) {","    return supportsSymbol && fn[Symbol.toStringTag] === 'AsyncFunction';","}","","function wrapAsync(asyncFn) {","    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;","}","","function applyEach$1(eachfn) {","    return function(fns/*, ...args*/) {","        var args = slice(arguments, 1);","        var go = initialParams(function(args, callback) {","            var that = this;","            return eachfn(fns, function (fn, cb) {","                wrapAsync(fn).apply(that, args.concat(cb));","            }, callback);","        });","        if (args.length) {","            return go.apply(this, args);","        }","        else {","            return go;","        }","    };","}","","/** Detect free variable `global` from Node.js. */","var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;","","/** Detect free variable `self`. */","var freeSelf = typeof self == 'object' && self && self.Object === Object && self;","","/** Used as a reference to the global object. */","var root = freeGlobal || freeSelf || Function('return this')();","","/** Built-in value references. */","var Symbol$1 = root.Symbol;","","/** Used for built-in method references. */","var objectProto = Object.prototype;","","/** Used to check objects for own properties. */","var hasOwnProperty = objectProto.hasOwnProperty;","","/**"," * Used to resolve the"," * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)"," * of values."," */","var nativeObjectToString = objectProto.toString;","","/** Built-in value references. */","var symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;","","/**"," * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values."," *"," * @private"," * @param {*} value The value to query."," * @returns {string} Returns the raw `toStringTag`."," */","function getRawTag(value) {","  var isOwn = hasOwnProperty.call(value, symToStringTag$1),","      tag = value[symToStringTag$1];","","  try {","    value[symToStringTag$1] = undefined;","    var unmasked = true;","  } catch (e) {}","","  var result = nativeObjectToString.call(value);","  if (unmasked) {","    if (isOwn) {","      value[symToStringTag$1] = tag;","    } else {","      delete value[symToStringTag$1];","    }","  }","  return result;","}","","/** Used for built-in method references. */","var objectProto$1 = Object.prototype;","","/**"," * Used to resolve the"," * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)"," * of values."," */","var nativeObjectToString$1 = objectProto$1.toString;","","/**"," * Converts `value` to a string using `Object.prototype.toString`."," *"," * @private"," * @param {*} value The value to convert."," * @returns {string} Returns the converted string."," */","function objectToString(value) {","  return nativeObjectToString$1.call(value);","}","","/** `Object#toString` result references. */","var nullTag = '[object Null]';","var undefinedTag = '[object Undefined]';","","/** Built-in value references. */","var symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;","","/**"," * The base implementation of `getTag` without fallbacks for buggy environments."," *"," * @private"," * @param {*} value The value to query."," * @returns {string} Returns the `toStringTag`."," */","function baseGetTag(value) {","  if (value == null) {","    return value === undefined ? undefinedTag : nullTag;","  }","  return (symToStringTag && symToStringTag in Object(value))","    ? getRawTag(value)","    : objectToString(value);","}","","/** `Object#toString` result references. */","var asyncTag = '[object AsyncFunction]';","var funcTag = '[object Function]';","var genTag = '[object GeneratorFunction]';","var proxyTag = '[object Proxy]';","","/**"," * Checks if `value` is classified as a `Function` object."," *"," * @static"," * @memberOf _"," * @since 0.1.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a function, else `false`."," * @example"," *"," * _.isFunction(_);"," * // => true"," *"," * _.isFunction(/abc/);"," * // => false"," */","function isFunction(value) {","  if (!isObject(value)) {","    return false;","  }","  // The use of `Object#toString` avoids issues with the `typeof` operator","  // in Safari 9 which returns 'object' for typed arrays and other constructors.","  var tag = baseGetTag(value);","  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;","}","","/** Used as references for various `Number` constants. */","var MAX_SAFE_INTEGER = 9007199254740991;","","/**"," * Checks if `value` is a valid array-like length."," *"," * **Note:** This method is loosely based on"," * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength)."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a valid length, else `false`."," * @example"," *"," * _.isLength(3);"," * // => true"," *"," * _.isLength(Number.MIN_VALUE);"," * // => false"," *"," * _.isLength(Infinity);"," * // => false"," *"," * _.isLength('3');"," * // => false"," */","function isLength(value) {","  return typeof value == 'number' &&","    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;","}","","/**"," * Checks if `value` is array-like. A value is considered array-like if it's"," * not a function and has a `value.length` that's an integer greater than or"," * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is array-like, else `false`."," * @example"," *"," * _.isArrayLike([1, 2, 3]);"," * // => true"," *"," * _.isArrayLike(document.body.children);"," * // => true"," *"," * _.isArrayLike('abc');"," * // => true"," *"," * _.isArrayLike(_.noop);"," * // => false"," */","function isArrayLike(value) {","  return value != null && isLength(value.length) && !isFunction(value);","}","","// A temporary value used to identify if the loop should be broken.","// See #1064, #1293","var breakLoop = {};","","/**"," * This method returns `undefined`."," *"," * @static"," * @memberOf _"," * @since 2.3.0"," * @category Util"," * @example"," *"," * _.times(2, _.noop);"," * // => [undefined, undefined]"," */","function noop() {","  // No operation performed.","}","","function once(fn) {","    return function () {","        if (fn === null) return;","        var callFn = fn;","        fn = null;","        callFn.apply(this, arguments);","    };","}","","var iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;","","var getIterator = function (coll) {","    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();","};","","/**"," * The base implementation of `_.times` without support for iteratee shorthands"," * or max array length checks."," *"," * @private"," * @param {number} n The number of times to invoke `iteratee`."," * @param {Function} iteratee The function invoked per iteration."," * @returns {Array} Returns the array of results."," */","function baseTimes(n, iteratee) {","  var index = -1,","      result = Array(n);","","  while (++index < n) {","    result[index] = iteratee(index);","  }","  return result;","}","","/**"," * Checks if `value` is object-like. A value is object-like if it's not `null`"," * and has a `typeof` result of \"object\"."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is object-like, else `false`."," * @example"," *"," * _.isObjectLike({});"," * // => true"," *"," * _.isObjectLike([1, 2, 3]);"," * // => true"," *"," * _.isObjectLike(_.noop);"," * // => false"," *"," * _.isObjectLike(null);"," * // => false"," */","function isObjectLike(value) {","  return value != null && typeof value == 'object';","}","","/** `Object#toString` result references. */","var argsTag = '[object Arguments]';","","/**"," * The base implementation of `_.isArguments`."," *"," * @private"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is an `arguments` object,"," */","function baseIsArguments(value) {","  return isObjectLike(value) && baseGetTag(value) == argsTag;","}","","/** Used for built-in method references. */","var objectProto$3 = Object.prototype;","","/** Used to check objects for own properties. */","var hasOwnProperty$2 = objectProto$3.hasOwnProperty;","","/** Built-in value references. */","var propertyIsEnumerable = objectProto$3.propertyIsEnumerable;","","/**"," * Checks if `value` is likely an `arguments` object."," *"," * @static"," * @memberOf _"," * @since 0.1.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is an `arguments` object,"," *  else `false`."," * @example"," *"," * _.isArguments(function() { return arguments; }());"," * // => true"," *"," * _.isArguments([1, 2, 3]);"," * // => false"," */","var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {","  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&","    !propertyIsEnumerable.call(value, 'callee');","};","","/**"," * Checks if `value` is classified as an `Array` object."," *"," * @static"," * @memberOf _"," * @since 0.1.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is an array, else `false`."," * @example"," *"," * _.isArray([1, 2, 3]);"," * // => true"," *"," * _.isArray(document.body.children);"," * // => false"," *"," * _.isArray('abc');"," * // => false"," *"," * _.isArray(_.noop);"," * // => false"," */","var isArray = Array.isArray;","","/**"," * This method returns `false`."," *"," * @static"," * @memberOf _"," * @since 4.13.0"," * @category Util"," * @returns {boolean} Returns `false`."," * @example"," *"," * _.times(2, _.stubFalse);"," * // => [false, false]"," */","function stubFalse() {","  return false;","}","","/** Detect free variable `exports`. */","var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;","","/** Detect free variable `module`. */","var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;","","/** Detect the popular CommonJS extension `module.exports`. */","var moduleExports = freeModule && freeModule.exports === freeExports;","","/** Built-in value references. */","var Buffer = moduleExports ? root.Buffer : undefined;","","/* Built-in method references for those with the same name as other `lodash` methods. */","var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;","","/**"," * Checks if `value` is a buffer."," *"," * @static"," * @memberOf _"," * @since 4.3.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a buffer, else `false`."," * @example"," *"," * _.isBuffer(new Buffer(2));"," * // => true"," *"," * _.isBuffer(new Uint8Array(2));"," * // => false"," */","var isBuffer = nativeIsBuffer || stubFalse;","","/** Used as references for various `Number` constants. */","var MAX_SAFE_INTEGER$1 = 9007199254740991;","","/** Used to detect unsigned integer values. */","var reIsUint = /^(?:0|[1-9]\\d*)$/;","","/**"," * Checks if `value` is a valid array-like index."," *"," * @private"," * @param {*} value The value to check."," * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index."," * @returns {boolean} Returns `true` if `value` is a valid index, else `false`."," */","function isIndex(value, length) {","  var type = typeof value;","  length = length == null ? MAX_SAFE_INTEGER$1 : length;","","  return !!length &&","    (type == 'number' ||","      (type != 'symbol' && reIsUint.test(value))) &&","        (value > -1 && value % 1 == 0 && value < length);","}","","/** `Object#toString` result references. */","var argsTag$1 = '[object Arguments]';","var arrayTag = '[object Array]';","var boolTag = '[object Boolean]';","var dateTag = '[object Date]';","var errorTag = '[object Error]';","var funcTag$1 = '[object Function]';","var mapTag = '[object Map]';","var numberTag = '[object Number]';","var objectTag = '[object Object]';","var regexpTag = '[object RegExp]';","var setTag = '[object Set]';","var stringTag = '[object String]';","var weakMapTag = '[object WeakMap]';","","var arrayBufferTag = '[object ArrayBuffer]';","var dataViewTag = '[object DataView]';","var float32Tag = '[object Float32Array]';","var float64Tag = '[object Float64Array]';","var int8Tag = '[object Int8Array]';","var int16Tag = '[object Int16Array]';","var int32Tag = '[object Int32Array]';","var uint8Tag = '[object Uint8Array]';","var uint8ClampedTag = '[object Uint8ClampedArray]';","var uint16Tag = '[object Uint16Array]';","var uint32Tag = '[object Uint32Array]';","","/** Used to identify `toStringTag` values of typed arrays. */","var typedArrayTags = {};","typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =","typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =","typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =","typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =","typedArrayTags[uint32Tag] = true;","typedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =","typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =","typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =","typedArrayTags[errorTag] = typedArrayTags[funcTag$1] =","typedArrayTags[mapTag] = typedArrayTags[numberTag] =","typedArrayTags[objectTag] = typedArrayTags[regexpTag] =","typedArrayTags[setTag] = typedArrayTags[stringTag] =","typedArrayTags[weakMapTag] = false;","","/**"," * The base implementation of `_.isTypedArray` without Node.js optimizations."," *"," * @private"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a typed array, else `false`."," */","function baseIsTypedArray(value) {","  return isObjectLike(value) &&","    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];","}","","/**"," * The base implementation of `_.unary` without support for storing metadata."," *"," * @private"," * @param {Function} func The function to cap arguments for."," * @returns {Function} Returns the new capped function."," */","function baseUnary(func) {","  return function(value) {","    return func(value);","  };","}","","/** Detect free variable `exports`. */","var freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;","","/** Detect free variable `module`. */","var freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;","","/** Detect the popular CommonJS extension `module.exports`. */","var moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;","","/** Detect free variable `process` from Node.js. */","var freeProcess = moduleExports$1 && freeGlobal.process;","","/** Used to access faster Node.js helpers. */","var nodeUtil = (function() {","  try {","    // Use `util.types` for Node.js 10+.","    var types = freeModule$1 && freeModule$1.require && freeModule$1.require('util').types;","","    if (types) {","      return types;","    }","","    // Legacy `process.binding('util')` for Node.js < 10.","    return freeProcess && freeProcess.binding && freeProcess.binding('util');","  } catch (e) {}","}());","","/* Node.js helper references. */","var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;","","/**"," * Checks if `value` is classified as a typed array."," *"," * @static"," * @memberOf _"," * @since 3.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a typed array, else `false`."," * @example"," *"," * _.isTypedArray(new Uint8Array);"," * // => true"," *"," * _.isTypedArray([]);"," * // => false"," */","var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;","","/** Used for built-in method references. */","var objectProto$2 = Object.prototype;","","/** Used to check objects for own properties. */","var hasOwnProperty$1 = objectProto$2.hasOwnProperty;","","/**"," * Creates an array of the enumerable property names of the array-like `value`."," *"," * @private"," * @param {*} value The value to query."," * @param {boolean} inherited Specify returning inherited property names."," * @returns {Array} Returns the array of property names."," */","function arrayLikeKeys(value, inherited) {","  var isArr = isArray(value),","      isArg = !isArr && isArguments(value),","      isBuff = !isArr && !isArg && isBuffer(value),","      isType = !isArr && !isArg && !isBuff && isTypedArray(value),","      skipIndexes = isArr || isArg || isBuff || isType,","      result = skipIndexes ? baseTimes(value.length, String) : [],","      length = result.length;","","  for (var key in value) {","    if ((inherited || hasOwnProperty$1.call(value, key)) &&","        !(skipIndexes && (","           // Safari 9 has enumerable `arguments.length` in strict mode.","           key == 'length' ||","           // Node.js 0.10 has enumerable non-index properties on buffers.","           (isBuff && (key == 'offset' || key == 'parent')) ||","           // PhantomJS 2 has enumerable non-index properties on typed arrays.","           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||","           // Skip index properties.","           isIndex(key, length)","        ))) {","      result.push(key);","    }","  }","  return result;","}","","/** Used for built-in method references. */","var objectProto$5 = Object.prototype;","","/**"," * Checks if `value` is likely a prototype object."," *"," * @private"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a prototype, else `false`."," */","function isPrototype(value) {","  var Ctor = value && value.constructor,","      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;","","  return value === proto;","}","","/**"," * Creates a unary function that invokes `func` with its argument transformed."," *"," * @private"," * @param {Function} func The function to wrap."," * @param {Function} transform The argument transform."," * @returns {Function} Returns the new function."," */","function overArg(func, transform) {","  return function(arg) {","    return func(transform(arg));","  };","}","","/* Built-in method references for those with the same name as other `lodash` methods. */","var nativeKeys = overArg(Object.keys, Object);","","/** Used for built-in method references. */","var objectProto$4 = Object.prototype;","","/** Used to check objects for own properties. */","var hasOwnProperty$3 = objectProto$4.hasOwnProperty;","","/**"," * The base implementation of `_.keys` which doesn't treat sparse arrays as dense."," *"," * @private"," * @param {Object} object The object to query."," * @returns {Array} Returns the array of property names."," */","function baseKeys(object) {","  if (!isPrototype(object)) {","    return nativeKeys(object);","  }","  var result = [];","  for (var key in Object(object)) {","    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {","      result.push(key);","    }","  }","  return result;","}","","/**"," * Creates an array of the own enumerable property names of `object`."," *"," * **Note:** Non-object values are coerced to objects. See the"," * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)"," * for more details."," *"," * @static"," * @since 0.1.0"," * @memberOf _"," * @category Object"," * @param {Object} object The object to query."," * @returns {Array} Returns the array of property names."," * @example"," *"," * function Foo() {"," *   this.a = 1;"," *   this.b = 2;"," * }"," *"," * Foo.prototype.c = 3;"," *"," * _.keys(new Foo);"," * // => ['a', 'b'] (iteration order is not guaranteed)"," *"," * _.keys('hi');"," * // => ['0', '1']"," */","function keys(object) {","  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);","}","","function createArrayIterator(coll) {","    var i = -1;","    var len = coll.length;","    return function next() {","        return ++i < len ? {value: coll[i], key: i} : null;","    }","}","","function createES2015Iterator(iterator) {","    var i = -1;","    return function next() {","        var item = iterator.next();","        if (item.done)","            return null;","        i++;","        return {value: item.value, key: i};","    }","}","","function createObjectIterator(obj) {","    var okeys = keys(obj);","    var i = -1;","    var len = okeys.length;","    return function next() {","        var key = okeys[++i];","        return i < len ? {value: obj[key], key: key} : null;","    };","}","","function iterator(coll) {","    if (isArrayLike(coll)) {","        return createArrayIterator(coll);","    }","","    var iterator = getIterator(coll);","    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);","}","","function onlyOnce(fn) {","    return function() {","        if (fn === null) throw new Error(\"Callback was already called.\");","        var callFn = fn;","        fn = null;","        callFn.apply(this, arguments);","    };","}","","function _eachOfLimit(limit) {","    return function (obj, iteratee, callback) {","        callback = once(callback || noop);","        if (limit <= 0 || !obj) {","            return callback(null);","        }","        var nextElem = iterator(obj);","        var done = false;","        var running = 0;","        var looping = false;","","        function iterateeCallback(err, value) {","            running -= 1;","            if (err) {","                done = true;","                callback(err);","            }","            else if (value === breakLoop || (done && running <= 0)) {","                done = true;","                return callback(null);","            }","            else if (!looping) {","                replenish();","            }","        }","","        function replenish () {","            looping = true;","            while (running < limit && !done) {","                var elem = nextElem();","                if (elem === null) {","                    done = true;","                    if (running <= 0) {","                        callback(null);","                    }","                    return;","                }","                running += 1;","                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));","            }","            looping = false;","        }","","        replenish();","    };","}","","/**"," * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name eachOfLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.eachOf]{@link module:Collections.eachOf}"," * @alias forEachOfLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each"," * item in `coll`. The `key` is the item's key, or index in the case of an"," * array."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","function eachOfLimit(coll, limit, iteratee, callback) {","    _eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);","}","","function doLimit(fn, limit) {","    return function (iterable, iteratee, callback) {","        return fn(iterable, limit, iteratee, callback);","    };","}","","// eachOf implementation optimized for array-likes","function eachOfArrayLike(coll, iteratee, callback) {","    callback = once(callback || noop);","    var index = 0,","        completed = 0,","        length = coll.length;","    if (length === 0) {","        callback(null);","    }","","    function iteratorCallback(err, value) {","        if (err) {","            callback(err);","        } else if ((++completed === length) || value === breakLoop) {","            callback(null);","        }","    }","","    for (; index < length; index++) {","        iteratee(coll[index], index, onlyOnce(iteratorCallback));","    }","}","","// a generic version of eachOf which can handle array, object, and iterator cases.","var eachOfGeneric = doLimit(eachOfLimit, Infinity);","","/**"," * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument"," * to the iteratee."," *"," * @name eachOf"," * @static"," * @memberOf module:Collections"," * @method"," * @alias forEachOf"," * @category Collection"," * @see [async.each]{@link module:Collections.each}"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each"," * item in `coll`."," * The `key` is the item's key, or index in the case of an array."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," * @example"," *"," * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};"," * var configs = {};"," *"," * async.forEachOf(obj, function (value, key, callback) {"," *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {"," *         if (err) return callback(err);"," *         try {"," *             configs[key] = JSON.parse(data);"," *         } catch (e) {"," *             return callback(e);"," *         }"," *         callback();"," *     });"," * }, function (err) {"," *     if (err) console.error(err.message);"," *     // configs is now a map of JSON data"," *     doSomethingWith(configs);"," * });"," */","var eachOf = function(coll, iteratee, callback) {","    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;","    eachOfImplementation(coll, wrapAsync(iteratee), callback);","};","","function doParallel(fn) {","    return function (obj, iteratee, callback) {","        return fn(eachOf, obj, wrapAsync(iteratee), callback);","    };","}","","function _asyncMap(eachfn, arr, iteratee, callback) {","    callback = callback || noop;","    arr = arr || [];","    var results = [];","    var counter = 0;","    var _iteratee = wrapAsync(iteratee);","","    eachfn(arr, function (value, _, callback) {","        var index = counter++;","        _iteratee(value, function (err, v) {","            results[index] = v;","            callback(err);","        });","    }, function (err) {","        callback(err, results);","    });","}","","/**"," * Produces a new collection of values by mapping each value in `coll` through"," * the `iteratee` function. The `iteratee` is called with an item from `coll`"," * and a callback for when it has finished processing. Each of these callback"," * takes 2 arguments: an `error`, and the transformed item from `coll`. If"," * `iteratee` passes an error to its callback, the main `callback` (for the"," * `map` function) is immediately called with the error."," *"," * Note, that since this function applies the `iteratee` to each item in"," * parallel, there is no guarantee that the `iteratee` functions will complete"," * in order. However, the results array will be in the same order as the"," * original `coll`."," *"," * If `map` is passed an Object, the results will be an Array.  The results"," * will roughly be in the order of the original Objects' keys (but this can"," * vary across JavaScript engines)."," *"," * @name map"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with the transformed item."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an Array of the"," * transformed items from the `coll`. Invoked with (err, results)."," * @example"," *"," * async.map(['file1','file2','file3'], fs.stat, function(err, results) {"," *     // results is now an array of stats for each file"," * });"," */","var map = doParallel(_asyncMap);","","/**"," * Applies the provided arguments to each function in the array, calling"," * `callback` after all functions have completed. If you only provide the first"," * argument, `fns`, then it will return a function which lets you pass in the"," * arguments as if it were a single function call. If more arguments are"," * provided, `callback` is required while `args` is still optional."," *"," * @name applyEach"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s"," * to all call with the same arguments"," * @param {...*} [args] - any number of separate arguments to pass to the"," * function."," * @param {Function} [callback] - the final argument should be the callback,"," * called when all functions have completed processing."," * @returns {Function} - If only the first argument, `fns`, is provided, it will"," * return a function which lets you pass in the arguments as if it were a single"," * function call. The signature is `(..args, callback)`. If invoked with any"," * arguments, `callback` is required."," * @example"," *"," * async.applyEach([enableSearch, updateSchema], 'bucket', callback);"," *"," * // partial application example:"," * async.each("," *     buckets,"," *     async.applyEach([enableSearch, updateSchema]),"," *     callback"," * );"," */","var applyEach = applyEach$1(map);","","function doParallelLimit(fn) {","    return function (obj, limit, iteratee, callback) {","        return fn(_eachOfLimit(limit), obj, wrapAsync(iteratee), callback);","    };","}","","/**"," * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time."," *"," * @name mapLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with the transformed item."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an array of the"," * transformed items from the `coll`. Invoked with (err, results)."," */","var mapLimit = doParallelLimit(_asyncMap);","","/**"," * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time."," *"," * @name mapSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with the transformed item."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an array of the"," * transformed items from the `coll`. Invoked with (err, results)."," */","var mapSeries = doLimit(mapLimit, 1);","","/**"," * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time."," *"," * @name applyEachSeries"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.applyEach]{@link module:ControlFlow.applyEach}"," * @category Control Flow"," * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s to all"," * call with the same arguments"," * @param {...*} [args] - any number of separate arguments to pass to the"," * function."," * @param {Function} [callback] - the final argument should be the callback,"," * called when all functions have completed processing."," * @returns {Function} - If only the first argument is provided, it will return"," * a function which lets you pass in the arguments as if it were a single"," * function call."," */","var applyEachSeries = applyEach$1(mapSeries);","","/**"," * A specialized version of `_.forEach` for arrays without support for"," * iteratee shorthands."," *"," * @private"," * @param {Array} [array] The array to iterate over."," * @param {Function} iteratee The function invoked per iteration."," * @returns {Array} Returns `array`."," */","function arrayEach(array, iteratee) {","  var index = -1,","      length = array == null ? 0 : array.length;","","  while (++index < length) {","    if (iteratee(array[index], index, array) === false) {","      break;","    }","  }","  return array;","}","","/**"," * Creates a base function for methods like `_.forIn` and `_.forOwn`."," *"," * @private"," * @param {boolean} [fromRight] Specify iterating from right to left."," * @returns {Function} Returns the new base function."," */","function createBaseFor(fromRight) {","  return function(object, iteratee, keysFunc) {","    var index = -1,","        iterable = Object(object),","        props = keysFunc(object),","        length = props.length;","","    while (length--) {","      var key = props[fromRight ? length : ++index];","      if (iteratee(iterable[key], key, iterable) === false) {","        break;","      }","    }","    return object;","  };","}","","/**"," * The base implementation of `baseForOwn` which iterates over `object`"," * properties returned by `keysFunc` and invokes `iteratee` for each property."," * Iteratee functions may exit iteration early by explicitly returning `false`."," *"," * @private"," * @param {Object} object The object to iterate over."," * @param {Function} iteratee The function invoked per iteration."," * @param {Function} keysFunc The function to get the keys of `object`."," * @returns {Object} Returns `object`."," */","var baseFor = createBaseFor();","","/**"," * The base implementation of `_.forOwn` without support for iteratee shorthands."," *"," * @private"," * @param {Object} object The object to iterate over."," * @param {Function} iteratee The function invoked per iteration."," * @returns {Object} Returns `object`."," */","function baseForOwn(object, iteratee) {","  return object && baseFor(object, iteratee, keys);","}","","/**"," * The base implementation of `_.findIndex` and `_.findLastIndex` without"," * support for iteratee shorthands."," *"," * @private"," * @param {Array} array The array to inspect."," * @param {Function} predicate The function invoked per iteration."," * @param {number} fromIndex The index to search from."," * @param {boolean} [fromRight] Specify iterating from right to left."," * @returns {number} Returns the index of the matched value, else `-1`."," */","function baseFindIndex(array, predicate, fromIndex, fromRight) {","  var length = array.length,","      index = fromIndex + (fromRight ? 1 : -1);","","  while ((fromRight ? index-- : ++index < length)) {","    if (predicate(array[index], index, array)) {","      return index;","    }","  }","  return -1;","}","","/**"," * The base implementation of `_.isNaN` without support for number objects."," *"," * @private"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`."," */","function baseIsNaN(value) {","  return value !== value;","}","","/**"," * A specialized version of `_.indexOf` which performs strict equality"," * comparisons of values, i.e. `===`."," *"," * @private"," * @param {Array} array The array to inspect."," * @param {*} value The value to search for."," * @param {number} fromIndex The index to search from."," * @returns {number} Returns the index of the matched value, else `-1`."," */","function strictIndexOf(array, value, fromIndex) {","  var index = fromIndex - 1,","      length = array.length;","","  while (++index < length) {","    if (array[index] === value) {","      return index;","    }","  }","  return -1;","}","","/**"," * The base implementation of `_.indexOf` without `fromIndex` bounds checks."," *"," * @private"," * @param {Array} array The array to inspect."," * @param {*} value The value to search for."," * @param {number} fromIndex The index to search from."," * @returns {number} Returns the index of the matched value, else `-1`."," */","function baseIndexOf(array, value, fromIndex) {","  return value === value","    ? strictIndexOf(array, value, fromIndex)","    : baseFindIndex(array, baseIsNaN, fromIndex);","}","","/**"," * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on"," * their requirements. Each function can optionally depend on other functions"," * being completed first, and each function is run as soon as its requirements"," * are satisfied."," *"," * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence"," * will stop. Further tasks will not execute (so any other functions depending"," * on it will not run), and the main `callback` is immediately called with the"," * error."," *"," * {@link AsyncFunction}s also receive an object containing the results of functions which"," * have completed so far as the first argument, if they have dependencies. If a"," * task function has no dependencies, it will only be passed a callback."," *"," * @name auto"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Object} tasks - An object. Each of its properties is either a"," * function or an array of requirements, with the {@link AsyncFunction} itself the last item"," * in the array. The object's key of a property serves as the name of the task"," * defined by that property, i.e. can be used when specifying requirements for"," * other tasks. The function receives one or two arguments:"," * * a `results` object, containing the results of the previously executed"," *   functions, only passed if the task has any dependencies,"," * * a `callback(err, result)` function, which must be called when finished,"," *   passing an `error` (which can be `null`) and the result of the function's"," *   execution."," * @param {number} [concurrency=Infinity] - An optional `integer` for"," * determining the maximum number of tasks that can be run in parallel. By"," * default, as many as possible."," * @param {Function} [callback] - An optional callback which is called when all"," * the tasks have been completed. It receives the `err` argument if any `tasks`"," * pass an error to their callback. Results are always returned; however, if an"," * error occurs, no further `tasks` will be performed, and the results object"," * will only contain partial results. Invoked with (err, results)."," * @returns undefined"," * @example"," *"," * async.auto({"," *     // this function will just be passed a callback"," *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),"," *     showData: ['readData', function(results, cb) {"," *         // results.readData is the file's contents"," *         // ..."," *     }]"," * }, callback);"," *"," * async.auto({"," *     get_data: function(callback) {"," *         console.log('in get_data');"," *         // async code to get some data"," *         callback(null, 'data', 'converted to array');"," *     },"," *     make_folder: function(callback) {"," *         console.log('in make_folder');"," *         // async code to create a directory to store a file in"," *         // this is run at the same time as getting the data"," *         callback(null, 'folder');"," *     },"," *     write_file: ['get_data', 'make_folder', function(results, callback) {"," *         console.log('in write_file', JSON.stringify(results));"," *         // once there is some data and the directory exists,"," *         // write the data to a file in the directory"," *         callback(null, 'filename');"," *     }],"," *     email_link: ['write_file', function(results, callback) {"," *         console.log('in email_link', JSON.stringify(results));"," *         // once the file is written let's email a link to it..."," *         // results.write_file contains the filename returned by write_file."," *         callback(null, {'file':results.write_file, 'email':'user@example.com'});"," *     }]"," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('results = ', results);"," * });"," */","var auto = function (tasks, concurrency, callback) {","    if (typeof concurrency === 'function') {","        // concurrency is optional, shift the args.","        callback = concurrency;","        concurrency = null;","    }","    callback = once(callback || noop);","    var keys$$1 = keys(tasks);","    var numTasks = keys$$1.length;","    if (!numTasks) {","        return callback(null);","    }","    if (!concurrency) {","        concurrency = numTasks;","    }","","    var results = {};","    var runningTasks = 0;","    var hasError = false;","","    var listeners = Object.create(null);","","    var readyTasks = [];","","    // for cycle detection:","    var readyToCheck = []; // tasks that have been identified as reachable","    // without the possibility of returning to an ancestor task","    var uncheckedDependencies = {};","","    baseForOwn(tasks, function (task, key) {","        if (!isArray(task)) {","            // no dependencies","            enqueueTask(key, [task]);","            readyToCheck.push(key);","            return;","        }","","        var dependencies = task.slice(0, task.length - 1);","        var remainingDependencies = dependencies.length;","        if (remainingDependencies === 0) {","            enqueueTask(key, task);","            readyToCheck.push(key);","            return;","        }","        uncheckedDependencies[key] = remainingDependencies;","","        arrayEach(dependencies, function (dependencyName) {","            if (!tasks[dependencyName]) {","                throw new Error('async.auto task `' + key +","                    '` has a non-existent dependency `' +","                    dependencyName + '` in ' +","                    dependencies.join(', '));","            }","            addListener(dependencyName, function () {","                remainingDependencies--;","                if (remainingDependencies === 0) {","                    enqueueTask(key, task);","                }","            });","        });","    });","","    checkForDeadlocks();","    processQueue();","","    function enqueueTask(key, task) {","        readyTasks.push(function () {","            runTask(key, task);","        });","    }","","    function processQueue() {","        if (readyTasks.length === 0 && runningTasks === 0) {","            return callback(null, results);","        }","        while(readyTasks.length && runningTasks < concurrency) {","            var run = readyTasks.shift();","            run();","        }","","    }","","    function addListener(taskName, fn) {","        var taskListeners = listeners[taskName];","        if (!taskListeners) {","            taskListeners = listeners[taskName] = [];","        }","","        taskListeners.push(fn);","    }","","    function taskComplete(taskName) {","        var taskListeners = listeners[taskName] || [];","        arrayEach(taskListeners, function (fn) {","            fn();","        });","        processQueue();","    }","","","    function runTask(key, task) {","        if (hasError) return;","","        var taskCallback = onlyOnce(function(err, result) {","            runningTasks--;","            if (arguments.length > 2) {","                result = slice(arguments, 1);","            }","            if (err) {","                var safeResults = {};","                baseForOwn(results, function(val, rkey) {","                    safeResults[rkey] = val;","                });","                safeResults[key] = result;","                hasError = true;","                listeners = Object.create(null);","","                callback(err, safeResults);","            } else {","                results[key] = result;","                taskComplete(key);","            }","        });","","        runningTasks++;","        var taskFn = wrapAsync(task[task.length - 1]);","        if (task.length > 1) {","            taskFn(results, taskCallback);","        } else {","            taskFn(taskCallback);","        }","    }","","    function checkForDeadlocks() {","        // Kahn's algorithm","        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm","        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html","        var currentTask;","        var counter = 0;","        while (readyToCheck.length) {","            currentTask = readyToCheck.pop();","            counter++;","            arrayEach(getDependents(currentTask), function (dependent) {","                if (--uncheckedDependencies[dependent] === 0) {","                    readyToCheck.push(dependent);","                }","            });","        }","","        if (counter !== numTasks) {","            throw new Error(","                'async.auto cannot execute tasks due to a recursive dependency'","            );","        }","    }","","    function getDependents(taskName) {","        var result = [];","        baseForOwn(tasks, function (task, key) {","            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {","                result.push(key);","            }","        });","        return result;","    }","};","","/**"," * A specialized version of `_.map` for arrays without support for iteratee"," * shorthands."," *"," * @private"," * @param {Array} [array] The array to iterate over."," * @param {Function} iteratee The function invoked per iteration."," * @returns {Array} Returns the new mapped array."," */","function arrayMap(array, iteratee) {","  var index = -1,","      length = array == null ? 0 : array.length,","      result = Array(length);","","  while (++index < length) {","    result[index] = iteratee(array[index], index, array);","  }","  return result;","}","","/** `Object#toString` result references. */","var symbolTag = '[object Symbol]';","","/**"," * Checks if `value` is classified as a `Symbol` primitive or object."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a symbol, else `false`."," * @example"," *"," * _.isSymbol(Symbol.iterator);"," * // => true"," *"," * _.isSymbol('abc');"," * // => false"," */","function isSymbol(value) {","  return typeof value == 'symbol' ||","    (isObjectLike(value) && baseGetTag(value) == symbolTag);","}","","/** Used as references for various `Number` constants. */","var INFINITY = 1 / 0;","","/** Used to convert symbols to primitives and strings. */","var symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;","var symbolToString = symbolProto ? symbolProto.toString : undefined;","","/**"," * The base implementation of `_.toString` which doesn't convert nullish"," * values to empty strings."," *"," * @private"," * @param {*} value The value to process."," * @returns {string} Returns the string."," */","function baseToString(value) {","  // Exit early for strings to avoid a performance hit in some environments.","  if (typeof value == 'string') {","    return value;","  }","  if (isArray(value)) {","    // Recursively convert values (susceptible to call stack limits).","    return arrayMap(value, baseToString) + '';","  }","  if (isSymbol(value)) {","    return symbolToString ? symbolToString.call(value) : '';","  }","  var result = (value + '');","  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;","}","","/**"," * The base implementation of `_.slice` without an iteratee call guard."," *"," * @private"," * @param {Array} array The array to slice."," * @param {number} [start=0] The start position."," * @param {number} [end=array.length] The end position."," * @returns {Array} Returns the slice of `array`."," */","function baseSlice(array, start, end) {","  var index = -1,","      length = array.length;","","  if (start < 0) {","    start = -start > length ? 0 : (length + start);","  }","  end = end > length ? length : end;","  if (end < 0) {","    end += length;","  }","  length = start > end ? 0 : ((end - start) >>> 0);","  start >>>= 0;","","  var result = Array(length);","  while (++index < length) {","    result[index] = array[index + start];","  }","  return result;","}","","/**"," * Casts `array` to a slice if it's needed."," *"," * @private"," * @param {Array} array The array to inspect."," * @param {number} start The start position."," * @param {number} [end=array.length] The end position."," * @returns {Array} Returns the cast slice."," */","function castSlice(array, start, end) {","  var length = array.length;","  end = end === undefined ? length : end;","  return (!start && end >= length) ? array : baseSlice(array, start, end);","}","","/**"," * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol"," * that is not found in the character symbols."," *"," * @private"," * @param {Array} strSymbols The string symbols to inspect."," * @param {Array} chrSymbols The character symbols to find."," * @returns {number} Returns the index of the last unmatched string symbol."," */","function charsEndIndex(strSymbols, chrSymbols) {","  var index = strSymbols.length;","","  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}","  return index;","}","","/**"," * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol"," * that is not found in the character symbols."," *"," * @private"," * @param {Array} strSymbols The string symbols to inspect."," * @param {Array} chrSymbols The character symbols to find."," * @returns {number} Returns the index of the first unmatched string symbol."," */","function charsStartIndex(strSymbols, chrSymbols) {","  var index = -1,","      length = strSymbols.length;","","  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}","  return index;","}","","/**"," * Converts an ASCII `string` to an array."," *"," * @private"," * @param {string} string The string to convert."," * @returns {Array} Returns the converted array."," */","function asciiToArray(string) {","  return string.split('');","}","","/** Used to compose unicode character classes. */","var rsAstralRange = '\\\\ud800-\\\\udfff';","var rsComboMarksRange = '\\\\u0300-\\\\u036f';","var reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f';","var rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff';","var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;","var rsVarRange = '\\\\ufe0e\\\\ufe0f';","","/** Used to compose unicode capture groups. */","var rsZWJ = '\\\\u200d';","","/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */","var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');","","/**"," * Checks if `string` contains Unicode symbols."," *"," * @private"," * @param {string} string The string to inspect."," * @returns {boolean} Returns `true` if a symbol is found, else `false`."," */","function hasUnicode(string) {","  return reHasUnicode.test(string);","}","","/** Used to compose unicode character classes. */","var rsAstralRange$1 = '\\\\ud800-\\\\udfff';","var rsComboMarksRange$1 = '\\\\u0300-\\\\u036f';","var reComboHalfMarksRange$1 = '\\\\ufe20-\\\\ufe2f';","var rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20ff';","var rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1;","var rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';","","/** Used to compose unicode capture groups. */","var rsAstral = '[' + rsAstralRange$1 + ']';","var rsCombo = '[' + rsComboRange$1 + ']';","var rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';","var rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';","var rsNonAstral = '[^' + rsAstralRange$1 + ']';","var rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';","var rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';","var rsZWJ$1 = '\\\\u200d';","","/** Used to compose unicode regexes. */","var reOptMod = rsModifier + '?';","var rsOptVar = '[' + rsVarRange$1 + ']?';","var rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';","var rsSeq = rsOptVar + reOptMod + rsOptJoin;","var rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';","","/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */","var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');","","/**"," * Converts a Unicode `string` to an array."," *"," * @private"," * @param {string} string The string to convert."," * @returns {Array} Returns the converted array."," */","function unicodeToArray(string) {","  return string.match(reUnicode) || [];","}","","/**"," * Converts `string` to an array."," *"," * @private"," * @param {string} string The string to convert."," * @returns {Array} Returns the converted array."," */","function stringToArray(string) {","  return hasUnicode(string)","    ? unicodeToArray(string)","    : asciiToArray(string);","}","","/**"," * Converts `value` to a string. An empty string is returned for `null`"," * and `undefined` values. The sign of `-0` is preserved."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to convert."," * @returns {string} Returns the converted string."," * @example"," *"," * _.toString(null);"," * // => ''"," *"," * _.toString(-0);"," * // => '-0'"," *"," * _.toString([1, 2, 3]);"," * // => '1,2,3'"," */","function toString(value) {","  return value == null ? '' : baseToString(value);","}","","/** Used to match leading and trailing whitespace. */","var reTrim = /^\\s+|\\s+$/g;","","/**"," * Removes leading and trailing whitespace or specified characters from `string`."," *"," * @static"," * @memberOf _"," * @since 3.0.0"," * @category String"," * @param {string} [string=''] The string to trim."," * @param {string} [chars=whitespace] The characters to trim."," * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`."," * @returns {string} Returns the trimmed string."," * @example"," *"," * _.trim('  abc  ');"," * // => 'abc'"," *"," * _.trim('-_-abc-_-', '_-');"," * // => 'abc'"," *"," * _.map(['  foo  ', '  bar  '], _.trim);"," * // => ['foo', 'bar']"," */","function trim(string, chars, guard) {","  string = toString(string);","  if (string && (guard || chars === undefined)) {","    return string.replace(reTrim, '');","  }","  if (!string || !(chars = baseToString(chars))) {","    return string;","  }","  var strSymbols = stringToArray(string),","      chrSymbols = stringToArray(chars),","      start = charsStartIndex(strSymbols, chrSymbols),","      end = charsEndIndex(strSymbols, chrSymbols) + 1;","","  return castSlice(strSymbols, start, end).join('');","}","","var FN_ARGS = /^(?:async\\s+)?(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;","var FN_ARG_SPLIT = /,/;","var FN_ARG = /(=.+)?(\\s*)$/;","var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;","","function parseParams(func) {","    func = func.toString().replace(STRIP_COMMENTS, '');","    func = func.match(FN_ARGS)[2].replace(' ', '');","    func = func ? func.split(FN_ARG_SPLIT) : [];","    func = func.map(function (arg){","        return trim(arg.replace(FN_ARG, ''));","    });","    return func;","}","","/**"," * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent"," * tasks are specified as parameters to the function, after the usual callback"," * parameter, with the parameter names matching the names of the tasks it"," * depends on. This can provide even more readable task graphs which can be"," * easier to maintain."," *"," * If a final callback is specified, the task results are similarly injected,"," * specified as named parameters after the initial error parameter."," *"," * The autoInject function is purely syntactic sugar and its semantics are"," * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}."," *"," * @name autoInject"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.auto]{@link module:ControlFlow.auto}"," * @category Control Flow"," * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of"," * the form 'func([dependencies...], callback). The object's key of a property"," * serves as the name of the task defined by that property, i.e. can be used"," * when specifying requirements for other tasks."," * * The `callback` parameter is a `callback(err, result)` which must be called"," *   when finished, passing an `error` (which can be `null`) and the result of"," *   the function's execution. The remaining parameters name other tasks on"," *   which the task is dependent, and the results from those tasks are the"," *   arguments of those parameters."," * @param {Function} [callback] - An optional callback which is called when all"," * the tasks have been completed. It receives the `err` argument if any `tasks`"," * pass an error to their callback, and a `results` object with any completed"," * task results, similar to `auto`."," * @example"," *"," * //  The example from `auto` can be rewritten as follows:"," * async.autoInject({"," *     get_data: function(callback) {"," *         // async code to get some data"," *         callback(null, 'data', 'converted to array');"," *     },"," *     make_folder: function(callback) {"," *         // async code to create a directory to store a file in"," *         // this is run at the same time as getting the data"," *         callback(null, 'folder');"," *     },"," *     write_file: function(get_data, make_folder, callback) {"," *         // once there is some data and the directory exists,"," *         // write the data to a file in the directory"," *         callback(null, 'filename');"," *     },"," *     email_link: function(write_file, callback) {"," *         // once the file is written let's email a link to it..."," *         // write_file contains the filename returned by write_file."," *         callback(null, {'file':write_file, 'email':'user@example.com'});"," *     }"," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('email_link = ', results.email_link);"," * });"," *"," * // If you are using a JS minifier that mangles parameter names, `autoInject`"," * // will not work with plain functions, since the parameter names will be"," * // collapsed to a single letter identifier.  To work around this, you can"," * // explicitly specify the names of the parameters your task function needs"," * // in an array, similar to Angular.js dependency injection."," *"," * // This still has an advantage over plain `auto`, since the results a task"," * // depends on are still spread into arguments."," * async.autoInject({"," *     //..."," *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {"," *         callback(null, 'filename');"," *     }],"," *     email_link: ['write_file', function(write_file, callback) {"," *         callback(null, {'file':write_file, 'email':'user@example.com'});"," *     }]"," *     //..."," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('email_link = ', results.email_link);"," * });"," */","function autoInject(tasks, callback) {","    var newTasks = {};","","    baseForOwn(tasks, function (taskFn, key) {","        var params;","        var fnIsAsync = isAsync(taskFn);","        var hasNoDeps =","            (!fnIsAsync && taskFn.length === 1) ||","            (fnIsAsync && taskFn.length === 0);","","        if (isArray(taskFn)) {","            params = taskFn.slice(0, -1);","            taskFn = taskFn[taskFn.length - 1];","","            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);","        } else if (hasNoDeps) {","            // no dependencies, use the function as-is","            newTasks[key] = taskFn;","        } else {","            params = parseParams(taskFn);","            if (taskFn.length === 0 && !fnIsAsync && params.length === 0) {","                throw new Error(\"autoInject task functions require explicit parameters.\");","            }","","            // remove callback param","            if (!fnIsAsync) params.pop();","","            newTasks[key] = params.concat(newTask);","        }","","        function newTask(results, taskCb) {","            var newArgs = arrayMap(params, function (name) {","                return results[name];","            });","            newArgs.push(taskCb);","            wrapAsync(taskFn).apply(null, newArgs);","        }","    });","","    auto(newTasks, callback);","}","","// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation","// used for queues. This implementation assumes that the node provided by the user can be modified","// to adjust the next and last properties. We implement only the minimal functionality","// for queue support.","function DLL() {","    this.head = this.tail = null;","    this.length = 0;","}","","function setInitial(dll, node) {","    dll.length = 1;","    dll.head = dll.tail = node;","}","","DLL.prototype.removeLink = function(node) {","    if (node.prev) node.prev.next = node.next;","    else this.head = node.next;","    if (node.next) node.next.prev = node.prev;","    else this.tail = node.prev;","","    node.prev = node.next = null;","    this.length -= 1;","    return node;","};","","DLL.prototype.empty = function () {","    while(this.head) this.shift();","    return this;","};","","DLL.prototype.insertAfter = function(node, newNode) {","    newNode.prev = node;","    newNode.next = node.next;","    if (node.next) node.next.prev = newNode;","    else this.tail = newNode;","    node.next = newNode;","    this.length += 1;","};","","DLL.prototype.insertBefore = function(node, newNode) {","    newNode.prev = node.prev;","    newNode.next = node;","    if (node.prev) node.prev.next = newNode;","    else this.head = newNode;","    node.prev = newNode;","    this.length += 1;","};","","DLL.prototype.unshift = function(node) {","    if (this.head) this.insertBefore(this.head, node);","    else setInitial(this, node);","};","","DLL.prototype.push = function(node) {","    if (this.tail) this.insertAfter(this.tail, node);","    else setInitial(this, node);","};","","DLL.prototype.shift = function() {","    return this.head && this.removeLink(this.head);","};","","DLL.prototype.pop = function() {","    return this.tail && this.removeLink(this.tail);","};","","DLL.prototype.toArray = function () {","    var arr = Array(this.length);","    var curr = this.head;","    for(var idx = 0; idx < this.length; idx++) {","        arr[idx] = curr.data;","        curr = curr.next;","    }","    return arr;","};","","DLL.prototype.remove = function (testFn) {","    var curr = this.head;","    while(!!curr) {","        var next = curr.next;","        if (testFn(curr)) {","            this.removeLink(curr);","        }","        curr = next;","    }","    return this;","};","","function queue(worker, concurrency, payload) {","    if (concurrency == null) {","        concurrency = 1;","    }","    else if(concurrency === 0) {","        throw new Error('Concurrency must not be zero');","    }","","    var _worker = wrapAsync(worker);","    var numRunning = 0;","    var workersList = [];","","    var processingScheduled = false;","    function _insert(data, insertAtFront, callback) {","        if (callback != null && typeof callback !== 'function') {","            throw new Error('task callback must be a function');","        }","        q.started = true;","        if (!isArray(data)) {","            data = [data];","        }","        if (data.length === 0 && q.idle()) {","            // call drain immediately if there are no tasks","            return setImmediate$1(function() {","                q.drain();","            });","        }","","        for (var i = 0, l = data.length; i < l; i++) {","            var item = {","                data: data[i],","                callback: callback || noop","            };","","            if (insertAtFront) {","                q._tasks.unshift(item);","            } else {","                q._tasks.push(item);","            }","        }","","        if (!processingScheduled) {","            processingScheduled = true;","            setImmediate$1(function() {","                processingScheduled = false;","                q.process();","            });","        }","    }","","    function _next(tasks) {","        return function(err){","            numRunning -= 1;","","            for (var i = 0, l = tasks.length; i < l; i++) {","                var task = tasks[i];","","                var index = baseIndexOf(workersList, task, 0);","                if (index === 0) {","                    workersList.shift();","                } else if (index > 0) {","                    workersList.splice(index, 1);","                }","","                task.callback.apply(task, arguments);","","                if (err != null) {","                    q.error(err, task.data);","                }","            }","","            if (numRunning <= (q.concurrency - q.buffer) ) {","                q.unsaturated();","            }","","            if (q.idle()) {","                q.drain();","            }","            q.process();","        };","    }","","    var isProcessing = false;","    var q = {","        _tasks: new DLL(),","        concurrency: concurrency,","        payload: payload,","        saturated: noop,","        unsaturated:noop,","        buffer: concurrency / 4,","        empty: noop,","        drain: noop,","        error: noop,","        started: false,","        paused: false,","        push: function (data, callback) {","            _insert(data, false, callback);","        },","        kill: function () {","            q.drain = noop;","            q._tasks.empty();","        },","        unshift: function (data, callback) {","            _insert(data, true, callback);","        },","        remove: function (testFn) {","            q._tasks.remove(testFn);","        },","        process: function () {","            // Avoid trying to start too many processing operations. This can occur","            // when callbacks resolve synchronously (#1267).","            if (isProcessing) {","                return;","            }","            isProcessing = true;","            while(!q.paused && numRunning < q.concurrency && q._tasks.length){","                var tasks = [], data = [];","                var l = q._tasks.length;","                if (q.payload) l = Math.min(l, q.payload);","                for (var i = 0; i < l; i++) {","                    var node = q._tasks.shift();","                    tasks.push(node);","                    workersList.push(node);","                    data.push(node.data);","                }","","                numRunning += 1;","","                if (q._tasks.length === 0) {","                    q.empty();","                }","","                if (numRunning === q.concurrency) {","                    q.saturated();","                }","","                var cb = onlyOnce(_next(tasks));","                _worker(data, cb);","            }","            isProcessing = false;","        },","        length: function () {","            return q._tasks.length;","        },","        running: function () {","            return numRunning;","        },","        workersList: function () {","            return workersList;","        },","        idle: function() {","            return q._tasks.length + numRunning === 0;","        },","        pause: function () {","            q.paused = true;","        },","        resume: function () {","            if (q.paused === false) { return; }","            q.paused = false;","            setImmediate$1(q.process);","        }","    };","    return q;","}","","/**"," * A cargo of tasks for the worker function to complete. Cargo inherits all of"," * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}."," * @typedef {Object} CargoObject"," * @memberOf module:ControlFlow"," * @property {Function} length - A function returning the number of items"," * waiting to be processed. Invoke like `cargo.length()`."," * @property {number} payload - An `integer` for determining how many tasks"," * should be process per round. This property can be changed after a `cargo` is"," * created to alter the payload on-the-fly."," * @property {Function} push - Adds `task` to the `queue`. The callback is"," * called once the `worker` has finished processing the task. Instead of a"," * single task, an array of `tasks` can be submitted. The respective callback is"," * used for every task in the list. Invoke like `cargo.push(task, [callback])`."," * @property {Function} saturated - A callback that is called when the"," * `queue.length()` hits the concurrency and further tasks will be queued."," * @property {Function} empty - A callback that is called when the last item"," * from the `queue` is given to a `worker`."," * @property {Function} drain - A callback that is called when the last item"," * from the `queue` has returned from the `worker`."," * @property {Function} idle - a function returning false if there are items"," * waiting or being processed, or true if not. Invoke like `cargo.idle()`."," * @property {Function} pause - a function that pauses the processing of tasks"," * until `resume()` is called. Invoke like `cargo.pause()`."," * @property {Function} resume - a function that resumes the processing of"," * queued tasks when the queue is paused. Invoke like `cargo.resume()`."," * @property {Function} kill - a function that removes the `drain` callback and"," * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`."," */","","/**"," * Creates a `cargo` object with the specified payload. Tasks added to the"," * cargo will be processed altogether (up to the `payload` limit). If the"," * `worker` is in progress, the task is queued until it becomes available. Once"," * the `worker` has completed some tasks, each callback of those tasks is"," * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)"," * for how `cargo` and `queue` work."," *"," * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers"," * at a time, cargo passes an array of tasks to a single worker, repeating"," * when the worker is finished."," *"," * @name cargo"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.queue]{@link module:ControlFlow.queue}"," * @category Control Flow"," * @param {AsyncFunction} worker - An asynchronous function for processing an array"," * of queued tasks. Invoked with `(tasks, callback)`."," * @param {number} [payload=Infinity] - An optional `integer` for determining"," * how many tasks should be processed per round; if omitted, the default is"," * unlimited."," * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can"," * attached as certain properties to listen for specific events during the"," * lifecycle of the cargo and inner queue."," * @example"," *"," * // create a cargo object with payload 2"," * var cargo = async.cargo(function(tasks, callback) {"," *     for (var i=0; i<tasks.length; i++) {"," *         console.log('hello ' + tasks[i].name);"," *     }"," *     callback();"," * }, 2);"," *"," * // add some items"," * cargo.push({name: 'foo'}, function(err) {"," *     console.log('finished processing foo');"," * });"," * cargo.push({name: 'bar'}, function(err) {"," *     console.log('finished processing bar');"," * });"," * cargo.push({name: 'baz'}, function(err) {"," *     console.log('finished processing baz');"," * });"," */","function cargo(worker, payload) {","    return queue(worker, 1, payload);","}","","/**"," * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time."," *"," * @name eachOfSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.eachOf]{@link module:Collections.eachOf}"," * @alias forEachOfSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Invoked with (err)."," */","var eachOfSeries = doLimit(eachOfLimit, 1);","","/**"," * Reduces `coll` into a single value using an async `iteratee` to return each"," * successive step. `memo` is the initial state of the reduction. This function"," * only operates in series."," *"," * For performance reasons, it may make sense to split a call to this function"," * into a parallel map, and then use the normal `Array.prototype.reduce` on the"," * results. This function is for situations where each step in the reduction"," * needs to be async; if you can get the data before reducing it, then it's"," * probably a good idea to do so."," *"," * @name reduce"," * @static"," * @memberOf module:Collections"," * @method"," * @alias inject"," * @alias foldl"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {*} memo - The initial state of the reduction."," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * array to produce the next step in the reduction."," * The `iteratee` should complete with the next state of the reduction."," * If the iteratee complete with an error, the reduction is stopped and the"," * main `callback` is immediately called with the error."," * Invoked with (memo, item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the reduced value. Invoked with"," * (err, result)."," * @example"," *"," * async.reduce([1,2,3], 0, function(memo, item, callback) {"," *     // pointless async:"," *     process.nextTick(function() {"," *         callback(null, memo + item)"," *     });"," * }, function(err, result) {"," *     // result is now equal to the last value of memo, which is 6"," * });"," */","function reduce(coll, memo, iteratee, callback) {","    callback = once(callback || noop);","    var _iteratee = wrapAsync(iteratee);","    eachOfSeries(coll, function(x, i, callback) {","        _iteratee(memo, x, function(err, v) {","            memo = v;","            callback(err);","        });","    }, function(err) {","        callback(err, memo);","    });","}","","/**"," * Version of the compose function that is more natural to read. Each function"," * consumes the return value of the previous function. It is the equivalent of"," * [compose]{@link module:ControlFlow.compose} with the arguments reversed."," *"," * Each function is executed with the `this` binding of the composed function."," *"," * @name seq"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.compose]{@link module:ControlFlow.compose}"," * @category Control Flow"," * @param {...AsyncFunction} functions - the asynchronous functions to compose"," * @returns {Function} a function that composes the `functions` in order"," * @example"," *"," * // Requires lodash (or underscore), express3 and dresende's orm2."," * // Part of an app, that fetches cats of the logged user."," * // This example uses `seq` function to avoid overnesting and error"," * // handling clutter."," * app.get('/cats', function(request, response) {"," *     var User = request.models.User;"," *     async.seq("," *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))"," *         function(user, fn) {"," *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))"," *         }"," *     )(req.session.user_id, function (err, cats) {"," *         if (err) {"," *             console.error(err);"," *             response.json({ status: 'error', message: err.message });"," *         } else {"," *             response.json({ status: 'ok', message: 'Cats found', data: cats });"," *         }"," *     });"," * });"," */","function seq(/*...functions*/) {","    var _functions = arrayMap(arguments, wrapAsync);","    return function(/*...args*/) {","        var args = slice(arguments);","        var that = this;","","        var cb = args[args.length - 1];","        if (typeof cb == 'function') {","            args.pop();","        } else {","            cb = noop;","        }","","        reduce(_functions, args, function(newargs, fn, cb) {","            fn.apply(that, newargs.concat(function(err/*, ...nextargs*/) {","                var nextargs = slice(arguments, 1);","                cb(err, nextargs);","            }));","        },","        function(err, results) {","            cb.apply(that, [err].concat(results));","        });","    };","}","","/**"," * Creates a function which is a composition of the passed asynchronous"," * functions. Each function consumes the return value of the function that"," * follows. Composing functions `f()`, `g()`, and `h()` would produce the result"," * of `f(g(h()))`, only this version uses callbacks to obtain the return values."," *"," * Each function is executed with the `this` binding of the composed function."," *"," * @name compose"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {...AsyncFunction} functions - the asynchronous functions to compose"," * @returns {Function} an asynchronous function that is the composed"," * asynchronous `functions`"," * @example"," *"," * function add1(n, callback) {"," *     setTimeout(function () {"," *         callback(null, n + 1);"," *     }, 10);"," * }"," *"," * function mul3(n, callback) {"," *     setTimeout(function () {"," *         callback(null, n * 3);"," *     }, 10);"," * }"," *"," * var add1mul3 = async.compose(mul3, add1);"," * add1mul3(4, function (err, result) {"," *     // result now equals 15"," * });"," */","var compose = function(/*...args*/) {","    return seq.apply(null, slice(arguments).reverse());","};","","var _concat = Array.prototype.concat;","","/**"," * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time."," *"," * @name concatLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.concat]{@link module:Collections.concat}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,"," * which should use an array as its result. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is an array"," * containing the concatenated results of the `iteratee` function. Invoked with"," * (err, results)."," */","var concatLimit = function(coll, limit, iteratee, callback) {","    callback = callback || noop;","    var _iteratee = wrapAsync(iteratee);","    mapLimit(coll, limit, function(val, callback) {","        _iteratee(val, function(err /*, ...args*/) {","            if (err) return callback(err);","            return callback(null, slice(arguments, 1));","        });","    }, function(err, mapResults) {","        var result = [];","        for (var i = 0; i < mapResults.length; i++) {","            if (mapResults[i]) {","                result = _concat.apply(result, mapResults[i]);","            }","        }","","        return callback(err, result);","    });","};","","/**"," * Applies `iteratee` to each item in `coll`, concatenating the results. Returns"," * the concatenated list. The `iteratee`s are called in parallel, and the"," * results are concatenated as they return. There is no guarantee that the"," * results array will be returned in the original order of `coll` passed to the"," * `iteratee` function."," *"," * @name concat"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,"," * which should use an array as its result. Invoked with (item, callback)."," * @param {Function} [callback(err)] - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is an array"," * containing the concatenated results of the `iteratee` function. Invoked with"," * (err, results)."," * @example"," *"," * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {"," *     // files is now a list of filenames that exist in the 3 directories"," * });"," */","var concat = doLimit(concatLimit, Infinity);","","/**"," * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time."," *"," * @name concatSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.concat]{@link module:Collections.concat}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`."," * The iteratee should complete with an array an array of results."," * Invoked with (item, callback)."," * @param {Function} [callback(err)] - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is an array"," * containing the concatenated results of the `iteratee` function. Invoked with"," * (err, results)."," */","var concatSeries = doLimit(concatLimit, 1);","","/**"," * Returns a function that when called, calls-back with the values provided."," * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to"," * [`auto`]{@link module:ControlFlow.auto}."," *"," * @name constant"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {...*} arguments... - Any number of arguments to automatically invoke"," * callback with."," * @returns {AsyncFunction} Returns a function that when invoked, automatically"," * invokes the callback with the previous given arguments."," * @example"," *"," * async.waterfall(["," *     async.constant(42),"," *     function (value, next) {"," *         // value === 42"," *     },"," *     //..."," * ], callback);"," *"," * async.waterfall(["," *     async.constant(filename, \"utf8\"),"," *     fs.readFile,"," *     function (fileData, next) {"," *         //..."," *     }"," *     //..."," * ], callback);"," *"," * async.auto({"," *     hostname: async.constant(\"https://server.net/\"),"," *     port: findFreePort,"," *     launchServer: [\"hostname\", \"port\", function (options, cb) {"," *         startServer(options, cb);"," *     }],"," *     //..."," * }, callback);"," */","var constant = function(/*...values*/) {","    var values = slice(arguments);","    var args = [null].concat(values);","    return function (/*...ignoredArgs, callback*/) {","        var callback = arguments[arguments.length - 1];","        return callback.apply(this, args);","    };","};","","/**"," * This method returns the first argument it receives."," *"," * @static"," * @since 0.1.0"," * @memberOf _"," * @category Util"," * @param {*} value Any value."," * @returns {*} Returns `value`."," * @example"," *"," * var object = { 'a': 1 };"," *"," * console.log(_.identity(object) === object);"," * // => true"," */","function identity(value) {","  return value;","}","","function _createTester(check, getResult) {","    return function(eachfn, arr, iteratee, cb) {","        cb = cb || noop;","        var testPassed = false;","        var testResult;","        eachfn(arr, function(value, _, callback) {","            iteratee(value, function(err, result) {","                if (err) {","                    callback(err);","                } else if (check(result) && !testResult) {","                    testPassed = true;","                    testResult = getResult(true, value);","                    callback(null, breakLoop);","                } else {","                    callback();","                }","            });","        }, function(err) {","            if (err) {","                cb(err);","            } else {","                cb(null, testPassed ? testResult : getResult(false));","            }","        });","    };","}","","function _findGetResult(v, x) {","    return x;","}","","/**"," * Returns the first value in `coll` that passes an async truth test. The"," * `iteratee` is applied in parallel, meaning the first iteratee to return"," * `true` will fire the detect `callback` with that result. That means the"," * result might not be the first item in the original `coll` (in terms of order)"," * that passes the test.",""," * If order within the original `coll` is important, then look at"," * [`detectSeries`]{@link module:Collections.detectSeries}."," *"," * @name detect"," * @static"," * @memberOf module:Collections"," * @method"," * @alias find"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," * @example"," *"," * async.detect(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // result now equals the first file in the list that exists"," * });"," */","var detect = doParallel(_createTester(identity, _findGetResult));","","/**"," * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name detectLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.detect]{@link module:Collections.detect}"," * @alias findLimit"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," */","var detectLimit = doParallelLimit(_createTester(identity, _findGetResult));","","/**"," * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time."," *"," * @name detectSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.detect]{@link module:Collections.detect}"," * @alias findSeries"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," */","var detectSeries = doLimit(detectLimit, 1);","","function consoleFunc(name) {","    return function (fn/*, ...args*/) {","        var args = slice(arguments, 1);","        args.push(function (err/*, ...args*/) {","            var args = slice(arguments, 1);","            if (typeof console === 'object') {","                if (err) {","                    if (console.error) {","                        console.error(err);","                    }","                } else if (console[name]) {","                    arrayEach(args, function (x) {","                        console[name](x);","                    });","                }","            }","        });","        wrapAsync(fn).apply(null, args);","    };","}","","/**"," * Logs the result of an [`async` function]{@link AsyncFunction} to the"," * `console` using `console.dir` to display the properties of the resulting object."," * Only works in Node.js or in browsers that support `console.dir` and"," * `console.error` (such as FF and Chrome)."," * If multiple arguments are returned from the async function,"," * `console.dir` is called on each argument in order."," *"," * @name dir"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} function - The function you want to eventually apply"," * all arguments to."," * @param {...*} arguments... - Any number of arguments to apply to the function."," * @example"," *"," * // in a module"," * var hello = function(name, callback) {"," *     setTimeout(function() {"," *         callback(null, {hello: name});"," *     }, 1000);"," * };"," *"," * // in the node repl"," * node> async.dir(hello, 'world');"," * {hello: 'world'}"," */","var dir = consoleFunc('dir');","","/**"," * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in"," * the order of operations, the arguments `test` and `fn` are switched."," *"," * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function."," * @name doDuring"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.during]{@link module:ControlFlow.during}"," * @category Control Flow"," * @param {AsyncFunction} fn - An async function which is called each time"," * `test` passes. Invoked with (callback)."," * @param {AsyncFunction} test - asynchronous truth test to perform before each"," * execution of `fn`. Invoked with (...args, callback), where `...args` are the"," * non-error args from the previous callback of `fn`."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `fn` has stopped. `callback`"," * will be passed an error if one occurred, otherwise `null`."," */","function doDuring(fn, test, callback) {","    callback = onlyOnce(callback || noop);","    var _fn = wrapAsync(fn);","    var _test = wrapAsync(test);","","    function next(err/*, ...args*/) {","        if (err) return callback(err);","        var args = slice(arguments, 1);","        args.push(check);","        _test.apply(this, args);","    }","","    function check(err, truth) {","        if (err) return callback(err);","        if (!truth) return callback(null);","        _fn(next);","    }","","    check(null, true);","","}","","/**"," * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in"," * the order of operations, the arguments `test` and `iteratee` are switched."," *"," * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript."," *"," * @name doWhilst"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {AsyncFunction} iteratee - A function which is called each time `test`"," * passes. Invoked with (callback)."," * @param {Function} test - synchronous truth test to perform after each"," * execution of `iteratee`. Invoked with any non-error callback results of"," * `iteratee`."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `iteratee` has stopped."," * `callback` will be passed an error and any arguments passed to the final"," * `iteratee`'s callback. Invoked with (err, [results]);"," */","function doWhilst(iteratee, test, callback) {","    callback = onlyOnce(callback || noop);","    var _iteratee = wrapAsync(iteratee);","    var next = function(err/*, ...args*/) {","        if (err) return callback(err);","        var args = slice(arguments, 1);","        if (test.apply(this, args)) return _iteratee(next);","        callback.apply(null, [null].concat(args));","    };","    _iteratee(next);","}","","/**"," * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the"," * argument ordering differs from `until`."," *"," * @name doUntil"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}"," * @category Control Flow"," * @param {AsyncFunction} iteratee - An async function which is called each time"," * `test` fails. Invoked with (callback)."," * @param {Function} test - synchronous truth test to perform after each"," * execution of `iteratee`. Invoked with any non-error callback results of"," * `iteratee`."," * @param {Function} [callback] - A callback which is called after the test"," * function has passed and repeated execution of `iteratee` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `iteratee`'s"," * callback. Invoked with (err, [results]);"," */","function doUntil(iteratee, test, callback) {","    doWhilst(iteratee, function() {","        return !test.apply(this, arguments);","    }, callback);","}","","/**"," * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that"," * is passed a callback in the form of `function (err, truth)`. If error is"," * passed to `test` or `fn`, the main callback is immediately called with the"," * value of the error."," *"," * @name during"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {AsyncFunction} test - asynchronous truth test to perform before each"," * execution of `fn`. Invoked with (callback)."," * @param {AsyncFunction} fn - An async function which is called each time"," * `test` passes. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `fn` has stopped. `callback`"," * will be passed an error, if one occurred, otherwise `null`."," * @example"," *"," * var count = 0;"," *"," * async.during("," *     function (callback) {"," *         return callback(null, count < 5);"," *     },"," *     function (callback) {"," *         count++;"," *         setTimeout(callback, 1000);"," *     },"," *     function (err) {"," *         // 5 seconds have passed"," *     }"," * );"," */","function during(test, fn, callback) {","    callback = onlyOnce(callback || noop);","    var _fn = wrapAsync(fn);","    var _test = wrapAsync(test);","","    function next(err) {","        if (err) return callback(err);","        _test(check);","    }","","    function check(err, truth) {","        if (err) return callback(err);","        if (!truth) return callback(null);","        _fn(next);","    }","","    _test(check);","}","","function _withoutIndex(iteratee) {","    return function (value, index, callback) {","        return iteratee(value, callback);","    };","}","","/**"," * Applies the function `iteratee` to each item in `coll`, in parallel."," * The `iteratee` is called with an item from the list, and a callback for when"," * it has finished. If the `iteratee` passes an error to its `callback`, the"," * main `callback` (for the `each` function) is immediately called with the"," * error."," *"," * Note, that since this function applies `iteratee` to each item in parallel,"," * there is no guarantee that the iteratee functions will complete in order."," *"," * @name each"," * @static"," * @memberOf module:Collections"," * @method"," * @alias forEach"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to"," * each item in `coll`. Invoked with (item, callback)."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOf`."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," * @example"," *"," * // assuming openFiles is an array of file names and saveFile is a function"," * // to save the modified contents of that file:"," *"," * async.each(openFiles, saveFile, function(err){"," *   // if any of the saves produced an error, err would equal that error"," * });"," *"," * // assuming openFiles is an array of file names"," * async.each(openFiles, function(file, callback) {"," *"," *     // Perform operation on file here."," *     console.log('Processing file ' + file);"," *"," *     if( file.length > 32 ) {"," *       console.log('This file name is too long');"," *       callback('File name too long');"," *     } else {"," *       // Do work to process file here"," *       console.log('File processed');"," *       callback();"," *     }"," * }, function(err) {"," *     // if any of the file processing produced an error, err would equal that error"," *     if( err ) {"," *       // One of the iterations produced an error."," *       // All processing will now stop."," *       console.log('A file failed to process');"," *     } else {"," *       console.log('All files have been processed successfully');"," *     }"," * });"," */","function eachLimit(coll, iteratee, callback) {","    eachOf(coll, _withoutIndex(wrapAsync(iteratee)), callback);","}","","/**"," * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time."," *"," * @name eachLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.each]{@link module:Collections.each}"," * @alias forEachLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOfLimit`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","function eachLimit$1(coll, limit, iteratee, callback) {","    _eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);","}","","/**"," * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time."," *"," * @name eachSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.each]{@link module:Collections.each}"," * @alias forEachSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each"," * item in `coll`."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOfSeries`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","var eachSeries = doLimit(eachLimit$1, 1);","","/**"," * Wrap an async function and ensure it calls its callback on a later tick of"," * the event loop.  If the function already calls its callback on a next tick,"," * no extra deferral is added. This is useful for preventing stack overflows"," * (`RangeError: Maximum call stack size exceeded`) and generally keeping"," * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)"," * contained. ES2017 `async` functions are returned as-is -- they are immune"," * to Zalgo's corrupting influences, as they always resolve on a later tick."," *"," * @name ensureAsync"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} fn - an async function, one that expects a node-style"," * callback as its last argument."," * @returns {AsyncFunction} Returns a wrapped function with the exact same call"," * signature as the function passed in."," * @example"," *"," * function sometimesAsync(arg, callback) {"," *     if (cache[arg]) {"," *         return callback(null, cache[arg]); // this would be synchronous!!"," *     } else {"," *         doSomeIO(arg, callback); // this IO would be asynchronous"," *     }"," * }"," *"," * // this has a risk of stack overflows if many results are cached in a row"," * async.mapSeries(args, sometimesAsync, done);"," *"," * // this will defer sometimesAsync's callback if necessary,"," * // preventing stack overflows"," * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);"," */","function ensureAsync(fn) {","    if (isAsync(fn)) return fn;","    return initialParams(function (args, callback) {","        var sync = true;","        args.push(function () {","            var innerArgs = arguments;","            if (sync) {","                setImmediate$1(function () {","                    callback.apply(null, innerArgs);","                });","            } else {","                callback.apply(null, innerArgs);","            }","        });","        fn.apply(this, args);","        sync = false;","    });","}","","function notId(v) {","    return !v;","}","","/**"," * Returns `true` if every element in `coll` satisfies an async test. If any"," * iteratee call returns `false`, the main `callback` is immediately called."," *"," * @name every"," * @static"," * @memberOf module:Collections"," * @method"," * @alias all"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in parallel."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," * @example"," *"," * async.every(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // if result is true then every file exists"," * });"," */","var every = doParallel(_createTester(notId, notId));","","/**"," * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time."," *"," * @name everyLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.every]{@link module:Collections.every}"," * @alias allLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in parallel."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," */","var everyLimit = doParallelLimit(_createTester(notId, notId));","","/**"," * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time."," *"," * @name everySeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.every]{@link module:Collections.every}"," * @alias allSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in series."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," */","var everySeries = doLimit(everyLimit, 1);","","/**"," * The base implementation of `_.property` without support for deep paths."," *"," * @private"," * @param {string} key The key of the property to get."," * @returns {Function} Returns the new accessor function."," */","function baseProperty(key) {","  return function(object) {","    return object == null ? undefined : object[key];","  };","}","","function filterArray(eachfn, arr, iteratee, callback) {","    var truthValues = new Array(arr.length);","    eachfn(arr, function (x, index, callback) {","        iteratee(x, function (err, v) {","            truthValues[index] = !!v;","            callback(err);","        });","    }, function (err) {","        if (err) return callback(err);","        var results = [];","        for (var i = 0; i < arr.length; i++) {","            if (truthValues[i]) results.push(arr[i]);","        }","        callback(null, results);","    });","}","","function filterGeneric(eachfn, coll, iteratee, callback) {","    var results = [];","    eachfn(coll, function (x, index, callback) {","        iteratee(x, function (err, v) {","            if (err) {","                callback(err);","            } else {","                if (v) {","                    results.push({index: index, value: x});","                }","                callback();","            }","        });","    }, function (err) {","        if (err) {","            callback(err);","        } else {","            callback(null, arrayMap(results.sort(function (a, b) {","                return a.index - b.index;","            }), baseProperty('value')));","        }","    });","}","","function _filter(eachfn, coll, iteratee, callback) {","    var filter = isArrayLike(coll) ? filterArray : filterGeneric;","    filter(eachfn, coll, wrapAsync(iteratee), callback || noop);","}","","/**"," * Returns a new array of all the values in `coll` which pass an async truth"," * test. This operation is performed in parallel, but the results array will be"," * in the same order as the original."," *"," * @name filter"," * @static"," * @memberOf module:Collections"," * @method"," * @alias select"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," * @example"," *"," * async.filter(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, results) {"," *     // results now equals an array of the existing files"," * });"," */","var filter = doParallel(_filter);","","/**"," * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name filterLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @alias selectLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","var filterLimit = doParallelLimit(_filter);","","/**"," * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time."," *"," * @name filterSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @alias selectSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)"," */","var filterSeries = doLimit(filterLimit, 1);","","/**"," * Calls the asynchronous function `fn` with a callback parameter that allows it"," * to call itself again, in series, indefinitely.",""," * If an error is passed to the callback then `errback` is called with the"," * error, and execution stops, otherwise it will never be called."," *"," * @name forever"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {AsyncFunction} fn - an async function to call repeatedly."," * Invoked with (next)."," * @param {Function} [errback] - when `fn` passes an error to it's callback,"," * this function will be called, and execution stops. Invoked with (err)."," * @example"," *"," * async.forever("," *     function(next) {"," *         // next is suitable for passing to things that need a callback(err [, whatever]);"," *         // it will result in this function being called again."," *     },"," *     function(err) {"," *         // if next is called with a value in its first parameter, it will appear"," *         // in here as 'err', and execution will stop."," *     }"," * );"," */","function forever(fn, errback) {","    var done = onlyOnce(errback || noop);","    var task = wrapAsync(ensureAsync(fn));","","    function next(err) {","        if (err) return done(err);","        task(next);","    }","    next();","}","","/**"," * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time."," *"," * @name groupByLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.groupBy]{@link module:Collections.groupBy}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a `key` to group the value under."," * Invoked with (value, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Result is an `Object` whoses"," * properties are arrays of values which returned the corresponding key."," */","var groupByLimit = function(coll, limit, iteratee, callback) {","    callback = callback || noop;","    var _iteratee = wrapAsync(iteratee);","    mapLimit(coll, limit, function(val, callback) {","        _iteratee(val, function(err, key) {","            if (err) return callback(err);","            return callback(null, {key: key, val: val});","        });","    }, function(err, mapResults) {","        var result = {};","        // from MDN, handle object having an `hasOwnProperty` prop","        var hasOwnProperty = Object.prototype.hasOwnProperty;","","        for (var i = 0; i < mapResults.length; i++) {","            if (mapResults[i]) {","                var key = mapResults[i].key;","                var val = mapResults[i].val;","","                if (hasOwnProperty.call(result, key)) {","                    result[key].push(val);","                } else {","                    result[key] = [val];","                }","            }","        }","","        return callback(err, result);","    });","};","","/**"," * Returns a new object, where each value corresponds to an array of items, from"," * `coll`, that returned the corresponding key. That is, the keys of the object"," * correspond to the values passed to the `iteratee` callback."," *"," * Note: Since this function applies the `iteratee` to each item in parallel,"," * there is no guarantee that the `iteratee` functions will complete in order."," * However, the values for each key in the `result` will be in the same order as"," * the original `coll`. For Objects, the values will roughly be in the order of"," * the original Objects' keys (but this can vary across JavaScript engines)."," *"," * @name groupBy"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a `key` to group the value under."," * Invoked with (value, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Result is an `Object` whoses"," * properties are arrays of values which returned the corresponding key."," * @example"," *"," * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {"," *     db.findById(userId, function(err, user) {"," *         if (err) return callback(err);"," *         return callback(null, user.age);"," *     });"," * }, function(err, result) {"," *     // result is object containing the userIds grouped by age"," *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};"," * });"," */","var groupBy = doLimit(groupByLimit, Infinity);","","/**"," * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time."," *"," * @name groupBySeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.groupBy]{@link module:Collections.groupBy}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a `key` to group the value under."," * Invoked with (value, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Result is an `Object` whoses"," * properties are arrays of values which returned the corresponding key."," */","var groupBySeries = doLimit(groupByLimit, 1);","","/**"," * Logs the result of an `async` function to the `console`. Only works in"," * Node.js or in browsers that support `console.log` and `console.error` (such"," * as FF and Chrome). If multiple arguments are returned from the async"," * function, `console.log` is called on each argument in order."," *"," * @name log"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} function - The function you want to eventually apply"," * all arguments to."," * @param {...*} arguments... - Any number of arguments to apply to the function."," * @example"," *"," * // in a module"," * var hello = function(name, callback) {"," *     setTimeout(function() {"," *         callback(null, 'hello ' + name);"," *     }, 1000);"," * };"," *"," * // in the node repl"," * node> async.log(hello, 'world');"," * 'hello world'"," */","var log = consoleFunc('log');","","/**"," * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name mapValuesLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.mapValues]{@link module:Collections.mapValues}"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - A function to apply to each value and key"," * in `coll`."," * The iteratee should complete with the transformed value as its result."," * Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," */","function mapValuesLimit(obj, limit, iteratee, callback) {","    callback = once(callback || noop);","    var newObj = {};","    var _iteratee = wrapAsync(iteratee);","    eachOfLimit(obj, limit, function(val, key, next) {","        _iteratee(val, key, function (err, result) {","            if (err) return next(err);","            newObj[key] = result;","            next();","        });","    }, function (err) {","        callback(err, newObj);","    });","}","","/**"," * A relative of [`map`]{@link module:Collections.map}, designed for use with objects."," *"," * Produces a new Object by mapping each value of `obj` through the `iteratee`"," * function. The `iteratee` is called each `value` and `key` from `obj` and a"," * callback for when it has finished processing. Each of these callbacks takes"," * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`"," * passes an error to its callback, the main `callback` (for the `mapValues`"," * function) is immediately called with the error."," *"," * Note, the order of the keys in the result is not guaranteed.  The keys will"," * be roughly in the order they complete, (but this is very engine-specific)"," *"," * @name mapValues"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each value and key"," * in `coll`."," * The iteratee should complete with the transformed value as its result."," * Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," * @example"," *"," * async.mapValues({"," *     f1: 'file1',"," *     f2: 'file2',"," *     f3: 'file3'"," * }, function (file, key, callback) {"," *   fs.stat(file, callback);"," * }, function(err, result) {"," *     // result is now a map of stats for each file, e.g."," *     // {"," *     //     f1: [stats for file1],"," *     //     f2: [stats for file2],"," *     //     f3: [stats for file3]"," *     // }"," * });"," */","","var mapValues = doLimit(mapValuesLimit, Infinity);","","/**"," * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time."," *"," * @name mapValuesSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.mapValues]{@link module:Collections.mapValues}"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each value and key"," * in `coll`."," * The iteratee should complete with the transformed value as its result."," * Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," */","var mapValuesSeries = doLimit(mapValuesLimit, 1);","","function has(obj, key) {","    return key in obj;","}","","/**"," * Caches the results of an async function. When creating a hash to store"," * function results against, the callback is omitted from the hash and an"," * optional hash function can be used."," *"," * If no hash function is specified, the first argument is used as a hash key,"," * which may work reasonably if it is a string or a data type that converts to a"," * distinct string. Note that objects and arrays will not behave reasonably."," * Neither will cases where the other arguments are significant. In such cases,"," * specify your own hash function."," *"," * The cache of results is exposed as the `memo` property of the function"," * returned by `memoize`."," *"," * @name memoize"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} fn - The async function to proxy and cache results from."," * @param {Function} hasher - An optional function for generating a custom hash"," * for storing results. It has all the arguments applied to it apart from the"," * callback, and must be synchronous."," * @returns {AsyncFunction} a memoized version of `fn`"," * @example"," *"," * var slow_fn = function(name, callback) {"," *     // do something"," *     callback(null, result);"," * };"," * var fn = async.memoize(slow_fn);"," *"," * // fn can now be used as if it were slow_fn"," * fn('some name', function() {"," *     // callback"," * });"," */","function memoize(fn, hasher) {","    var memo = Object.create(null);","    var queues = Object.create(null);","    hasher = hasher || identity;","    var _fn = wrapAsync(fn);","    var memoized = initialParams(function memoized(args, callback) {","        var key = hasher.apply(null, args);","        if (has(memo, key)) {","            setImmediate$1(function() {","                callback.apply(null, memo[key]);","            });","        } else if (has(queues, key)) {","            queues[key].push(callback);","        } else {","            queues[key] = [callback];","            _fn.apply(null, args.concat(function(/*args*/) {","                var args = slice(arguments);","                memo[key] = args;","                var q = queues[key];","                delete queues[key];","                for (var i = 0, l = q.length; i < l; i++) {","                    q[i].apply(null, args);","                }","            }));","        }","    });","    memoized.memo = memo;","    memoized.unmemoized = fn;","    return memoized;","}","","/**"," * Calls `callback` on a later loop around the event loop. In Node.js this just"," * calls `process.nextTick`.  In the browser it will use `setImmediate` if"," * available, otherwise `setTimeout(callback, 0)`, which means other higher"," * priority events may precede the execution of `callback`."," *"," * This is used internally for browser-compatibility purposes."," *"," * @name nextTick"," * @static"," * @memberOf module:Utils"," * @method"," * @see [async.setImmediate]{@link module:Utils.setImmediate}"," * @category Util"," * @param {Function} callback - The function to call on a later loop around"," * the event loop. Invoked with (args...)."," * @param {...*} args... - any number of additional arguments to pass to the"," * callback on the next tick."," * @example"," *"," * var call_order = [];"," * async.nextTick(function() {"," *     call_order.push('two');"," *     // call_order now equals ['one','two']"," * });"," * call_order.push('one');"," *"," * async.setImmediate(function (a, b, c) {"," *     // a, b, and c equal 1, 2, and 3"," * }, 1, 2, 3);"," */","var _defer$1;","","if (hasNextTick) {","    _defer$1 = process.nextTick;","} else if (hasSetImmediate) {","    _defer$1 = setImmediate;","} else {","    _defer$1 = fallback;","}","","var nextTick = wrap(_defer$1);","","function _parallel(eachfn, tasks, callback) {","    callback = callback || noop;","    var results = isArrayLike(tasks) ? [] : {};","","    eachfn(tasks, function (task, key, callback) {","        wrapAsync(task)(function (err, result) {","            if (arguments.length > 2) {","                result = slice(arguments, 1);","            }","            results[key] = result;","            callback(err);","        });","    }, function (err) {","        callback(err, results);","    });","}","","/**"," * Run the `tasks` collection of functions in parallel, without waiting until"," * the previous function has completed. If any of the functions pass an error to"," * its callback, the main `callback` is immediately called with the value of the"," * error. Once the `tasks` have completed, the results are passed to the final"," * `callback` as an array."," *"," * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about"," * parallel execution of code.  If your tasks do not use any timers or perform"," * any I/O, they will actually be executed in series.  Any synchronous setup"," * sections for each task will happen one after the other.  JavaScript remains"," * single-threaded."," *"," * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the"," * execution of other tasks when a task fails."," *"," * It is also possible to use an object instead of an array. Each property will"," * be run as a function and the results will be passed to the final `callback`"," * as an object instead of an array. This can be a more readable way of handling"," * results from {@link async.parallel}."," *"," * @name parallel"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection of"," * [async functions]{@link AsyncFunction} to run."," * Each async function can complete with any number of optional `result` values."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed successfully. This function gets a results array"," * (or object) containing all the result arguments passed to the task callbacks."," * Invoked with (err, results)."," *"," * @example"," * async.parallel(["," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'two');"," *         }, 100);"," *     }"," * ],"," * // optional callback"," * function(err, results) {"," *     // the results array will equal ['one','two'] even though"," *     // the second function had a shorter timeout."," * });"," *"," * // an example using an object instead of an array"," * async.parallel({"," *     one: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 1);"," *         }, 200);"," *     },"," *     two: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 2);"," *         }, 100);"," *     }"," * }, function(err, results) {"," *     // results is now equals to: {one: 1, two: 2}"," * });"," */","function parallelLimit(tasks, callback) {","    _parallel(eachOf, tasks, callback);","}","","/**"," * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name parallelLimit"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.parallel]{@link module:ControlFlow.parallel}"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection of"," * [async functions]{@link AsyncFunction} to run."," * Each async function can complete with any number of optional `result` values."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed successfully. This function gets a results array"," * (or object) containing all the result arguments passed to the task callbacks."," * Invoked with (err, results)."," */","function parallelLimit$1(tasks, limit, callback) {","    _parallel(_eachOfLimit(limit), tasks, callback);","}","","/**"," * A queue of tasks for the worker function to complete."," * @typedef {Object} QueueObject"," * @memberOf module:ControlFlow"," * @property {Function} length - a function returning the number of items"," * waiting to be processed. Invoke with `queue.length()`."," * @property {boolean} started - a boolean indicating whether or not any"," * items have been pushed and processed by the queue."," * @property {Function} running - a function returning the number of items"," * currently being processed. Invoke with `queue.running()`."," * @property {Function} workersList - a function returning the array of items"," * currently being processed. Invoke with `queue.workersList()`."," * @property {Function} idle - a function returning false if there are items"," * waiting or being processed, or true if not. Invoke with `queue.idle()`."," * @property {number} concurrency - an integer for determining how many `worker`"," * functions should be run in parallel. This property can be changed after a"," * `queue` is created to alter the concurrency on-the-fly."," * @property {Function} push - add a new task to the `queue`. Calls `callback`"," * once the `worker` has finished processing the task. Instead of a single task,"," * a `tasks` array can be submitted. The respective callback is used for every"," * task in the list. Invoke with `queue.push(task, [callback])`,"," * @property {Function} unshift - add a new task to the front of the `queue`."," * Invoke with `queue.unshift(task, [callback])`."," * @property {Function} remove - remove items from the queue that match a test"," * function.  The test function will be passed an object with a `data` property,"," * and a `priority` property, if this is a"," * [priorityQueue]{@link module:ControlFlow.priorityQueue} object."," * Invoked with `queue.remove(testFn)`, where `testFn` is of the form"," * `function ({data, priority}) {}` and returns a Boolean."," * @property {Function} saturated - a callback that is called when the number of"," * running workers hits the `concurrency` limit, and further tasks will be"," * queued."," * @property {Function} unsaturated - a callback that is called when the number"," * of running workers is less than the `concurrency` & `buffer` limits, and"," * further tasks will not be queued."," * @property {number} buffer - A minimum threshold buffer in order to say that"," * the `queue` is `unsaturated`."," * @property {Function} empty - a callback that is called when the last item"," * from the `queue` is given to a `worker`."," * @property {Function} drain - a callback that is called when the last item"," * from the `queue` has returned from the `worker`."," * @property {Function} error - a callback that is called when a task errors."," * Has the signature `function(error, task)`."," * @property {boolean} paused - a boolean for determining whether the queue is"," * in a paused state."," * @property {Function} pause - a function that pauses the processing of tasks"," * until `resume()` is called. Invoke with `queue.pause()`."," * @property {Function} resume - a function that resumes the processing of"," * queued tasks when the queue is paused. Invoke with `queue.resume()`."," * @property {Function} kill - a function that removes the `drain` callback and"," * empties remaining tasks from the queue forcing it to go idle. No more tasks"," * should be pushed to the queue after calling this function. Invoke with `queue.kill()`."," */","","/**"," * Creates a `queue` object with the specified `concurrency`. Tasks added to the"," * `queue` are processed in parallel (up to the `concurrency` limit). If all"," * `worker`s are in progress, the task is queued until one becomes available."," * Once a `worker` completes a `task`, that `task`'s callback is called."," *"," * @name queue"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {AsyncFunction} worker - An async function for processing a queued task."," * If you want to handle errors from an individual task, pass a callback to"," * `q.push()`. Invoked with (task, callback)."," * @param {number} [concurrency=1] - An `integer` for determining how many"," * `worker` functions should be run in parallel.  If omitted, the concurrency"," * defaults to `1`.  If the concurrency is `0`, an error is thrown."," * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can"," * attached as certain properties to listen for specific events during the"," * lifecycle of the queue."," * @example"," *"," * // create a queue object with concurrency 2"," * var q = async.queue(function(task, callback) {"," *     console.log('hello ' + task.name);"," *     callback();"," * }, 2);"," *"," * // assign a callback"," * q.drain = function() {"," *     console.log('all items have been processed');"," * };"," *"," * // add some items to the queue"," * q.push({name: 'foo'}, function(err) {"," *     console.log('finished processing foo');"," * });"," * q.push({name: 'bar'}, function (err) {"," *     console.log('finished processing bar');"," * });"," *"," * // add some items to the queue (batch-wise)"," * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {"," *     console.log('finished processing item');"," * });"," *"," * // add some items to the front of the queue"," * q.unshift({name: 'bar'}, function (err) {"," *     console.log('finished processing bar');"," * });"," */","var queue$1 = function (worker, concurrency) {","    var _worker = wrapAsync(worker);","    return queue(function (items, cb) {","        _worker(items[0], cb);","    }, concurrency, 1);","};","","/**"," * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and"," * completed in ascending priority order."," *"," * @name priorityQueue"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.queue]{@link module:ControlFlow.queue}"," * @category Control Flow"," * @param {AsyncFunction} worker - An async function for processing a queued task."," * If you want to handle errors from an individual task, pass a callback to"," * `q.push()`."," * Invoked with (task, callback)."," * @param {number} concurrency - An `integer` for determining how many `worker`"," * functions should be run in parallel.  If omitted, the concurrency defaults to"," * `1`.  If the concurrency is `0`, an error is thrown."," * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two"," * differences between `queue` and `priorityQueue` objects:"," * * `push(task, priority, [callback])` - `priority` should be a number. If an"," *   array of `tasks` is given, all tasks will be assigned the same priority."," * * The `unshift` method was removed."," */","var priorityQueue = function(worker, concurrency) {","    // Start with a normal queue","    var q = queue$1(worker, concurrency);","","    // Override push to accept second parameter representing priority","    q.push = function(data, priority, callback) {","        if (callback == null) callback = noop;","        if (typeof callback !== 'function') {","            throw new Error('task callback must be a function');","        }","        q.started = true;","        if (!isArray(data)) {","            data = [data];","        }","        if (data.length === 0) {","            // call drain immediately if there are no tasks","            return setImmediate$1(function() {","                q.drain();","            });","        }","","        priority = priority || 0;","        var nextNode = q._tasks.head;","        while (nextNode && priority >= nextNode.priority) {","            nextNode = nextNode.next;","        }","","        for (var i = 0, l = data.length; i < l; i++) {","            var item = {","                data: data[i],","                priority: priority,","                callback: callback","            };","","            if (nextNode) {","                q._tasks.insertBefore(nextNode, item);","            } else {","                q._tasks.push(item);","            }","        }","        setImmediate$1(q.process);","    };","","    // Remove unshift function","    delete q.unshift;","","    return q;","};","","/**"," * Runs the `tasks` array of functions in parallel, without waiting until the"," * previous function has completed. Once any of the `tasks` complete or pass an"," * error to its callback, the main `callback` is immediately called. It's"," * equivalent to `Promise.race()`."," *"," * @name race"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}"," * to run. Each function can complete with an optional `result` value."," * @param {Function} callback - A callback to run once any of the functions have"," * completed. This function gets an error or result from the first function that"," * completed. Invoked with (err, result)."," * @returns undefined"," * @example"," *"," * async.race(["," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'two');"," *         }, 100);"," *     }"," * ],"," * // main callback"," * function(err, result) {"," *     // the result will be equal to 'two' as it finishes earlier"," * });"," */","function race(tasks, callback) {","    callback = once(callback || noop);","    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));","    if (!tasks.length) return callback();","    for (var i = 0, l = tasks.length; i < l; i++) {","        wrapAsync(tasks[i])(callback);","    }","}","","/**"," * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order."," *"," * @name reduceRight"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reduce]{@link module:Collections.reduce}"," * @alias foldr"," * @category Collection"," * @param {Array} array - A collection to iterate over."," * @param {*} memo - The initial state of the reduction."," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * array to produce the next step in the reduction."," * The `iteratee` should complete with the next state of the reduction."," * If the iteratee complete with an error, the reduction is stopped and the"," * main `callback` is immediately called with the error."," * Invoked with (memo, item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the reduced value. Invoked with"," * (err, result)."," */","function reduceRight (array, memo, iteratee, callback) {","    var reversed = slice(array).reverse();","    reduce(reversed, memo, iteratee, callback);","}","","/**"," * Wraps the async function in another function that always completes with a"," * result object, even when it errors."," *"," * The result object has either the property `error` or `value`."," *"," * @name reflect"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} fn - The async function you want to wrap"," * @returns {Function} - A function that always passes null to it's callback as"," * the error. The second argument to the callback will be an `object` with"," * either an `error` or a `value` property."," * @example"," *"," * async.parallel(["," *     async.reflect(function(callback) {"," *         // do some stuff ..."," *         callback(null, 'one');"," *     }),"," *     async.reflect(function(callback) {"," *         // do some more stuff but error ..."," *         callback('bad stuff happened');"," *     }),"," *     async.reflect(function(callback) {"," *         // do some more stuff ..."," *         callback(null, 'two');"," *     })"," * ],"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results[0].value = 'one'"," *     // results[1].error = 'bad stuff happened'"," *     // results[2].value = 'two'"," * });"," */","function reflect(fn) {","    var _fn = wrapAsync(fn);","    return initialParams(function reflectOn(args, reflectCallback) {","        args.push(function callback(error, cbArg) {","            if (error) {","                reflectCallback(null, { error: error });","            } else {","                var value;","                if (arguments.length <= 2) {","                    value = cbArg;","                } else {","                    value = slice(arguments, 1);","                }","                reflectCallback(null, { value: value });","            }","        });","","        return _fn.apply(this, args);","    });","}","","/**"," * A helper function that wraps an array or an object of functions with `reflect`."," *"," * @name reflectAll"," * @static"," * @memberOf module:Utils"," * @method"," * @see [async.reflect]{@link module:Utils.reflect}"," * @category Util"," * @param {Array|Object|Iterable} tasks - The collection of"," * [async functions]{@link AsyncFunction} to wrap in `async.reflect`."," * @returns {Array} Returns an array of async functions, each wrapped in"," * `async.reflect`"," * @example"," *"," * let tasks = ["," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     function(callback) {"," *         // do some more stuff but error ..."," *         callback(new Error('bad stuff happened'));"," *     },"," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'two');"," *         }, 100);"," *     }"," * ];"," *"," * async.parallel(async.reflectAll(tasks),"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results[0].value = 'one'"," *     // results[1].error = Error('bad stuff happened')"," *     // results[2].value = 'two'"," * });"," *"," * // an example using an object instead of an array"," * let tasks = {"," *     one: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     two: function(callback) {"," *         callback('two');"," *     },"," *     three: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'three');"," *         }, 100);"," *     }"," * };"," *"," * async.parallel(async.reflectAll(tasks),"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results.one.value = 'one'"," *     // results.two.error = 'two'"," *     // results.three.value = 'three'"," * });"," */","function reflectAll(tasks) {","    var results;","    if (isArray(tasks)) {","        results = arrayMap(tasks, reflect);","    } else {","        results = {};","        baseForOwn(tasks, function(task, key) {","            results[key] = reflect.call(this, task);","        });","    }","    return results;","}","","function reject$1(eachfn, arr, iteratee, callback) {","    _filter(eachfn, arr, function(value, cb) {","        iteratee(value, function(err, v) {","            cb(err, !v);","        });","    }, callback);","}","","/**"," * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test."," *"," * @name reject"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - An async truth test to apply to each item in"," * `coll`."," * The should complete with a boolean value as its `result`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," * @example"," *"," * async.reject(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, results) {"," *     // results now equals an array of missing files"," *     createFiles(results);"," * });"," */","var reject = doParallel(reject$1);","","/**"," * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name rejectLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reject]{@link module:Collections.reject}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - An async truth test to apply to each item in"," * `coll`."," * The should complete with a boolean value as its `result`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","var rejectLimit = doParallelLimit(reject$1);","","/**"," * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time."," *"," * @name rejectSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reject]{@link module:Collections.reject}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - An async truth test to apply to each item in"," * `coll`."," * The should complete with a boolean value as its `result`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","var rejectSeries = doLimit(rejectLimit, 1);","","/**"," * Creates a function that returns `value`."," *"," * @static"," * @memberOf _"," * @since 2.4.0"," * @category Util"," * @param {*} value The value to return from the new function."," * @returns {Function} Returns the new constant function."," * @example"," *"," * var objects = _.times(2, _.constant({ 'a': 1 }));"," *"," * console.log(objects);"," * // => [{ 'a': 1 }, { 'a': 1 }]"," *"," * console.log(objects[0] === objects[1]);"," * // => true"," */","function constant$1(value) {","  return function() {","    return value;","  };","}","","/**"," * Attempts to get a successful response from `task` no more than `times` times"," * before returning an error. If the task is successful, the `callback` will be"," * passed the result of the successful task. If all attempts fail, the callback"," * will be passed the error and result (if any) of the final attempt."," *"," * @name retry"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @see [async.retryable]{@link module:ControlFlow.retryable}"," * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an"," * object with `times` and `interval` or a number."," * * `times` - The number of attempts to make before giving up.  The default"," *   is `5`."," * * `interval` - The time to wait between retries, in milliseconds.  The"," *   default is `0`. The interval may also be specified as a function of the"," *   retry count (see example)."," * * `errorFilter` - An optional synchronous function that is invoked on"," *   erroneous result. If it returns `true` the retry attempts will continue;"," *   if the function returns `false` the retry flow is aborted with the current"," *   attempt's error and result being returned to the final callback."," *   Invoked with (err)."," * * If `opts` is a number, the number specifies the number of times to retry,"," *   with the default interval of `0`."," * @param {AsyncFunction} task - An async function to retry."," * Invoked with (callback)."," * @param {Function} [callback] - An optional callback which is called when the"," * task has succeeded, or after the final failed attempt. It receives the `err`"," * and `result` arguments of the last attempt at completing the `task`. Invoked"," * with (err, results)."," *"," * @example"," *"," * // The `retry` function can be used as a stand-alone control flow by passing"," * // a callback, as shown below:"," *"," * // try calling apiMethod 3 times"," * async.retry(3, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod 3 times, waiting 200 ms between each retry"," * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod 10 times with exponential backoff"," * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)"," * async.retry({"," *   times: 10,"," *   interval: function(retryCount) {"," *     return 50 * Math.pow(2, retryCount);"," *   }"," * }, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod the default 5 times no delay between each retry"," * async.retry(apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod only when error condition satisfies, all other"," * // errors will abort the retry control flow and return to final callback"," * async.retry({"," *   errorFilter: function(err) {"," *     return err.message === 'Temporary error'; // only retry on a specific error"," *   }"," * }, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // to retry individual methods that are not as reliable within other"," * // control flow functions, use the `retryable` wrapper:"," * async.auto({"," *     users: api.getUsers.bind(api),"," *     payments: async.retryable(3, api.getPayments.bind(api))"," * }, function(err, results) {"," *     // do something with the results"," * });"," *"," */","function retry(opts, task, callback) {","    var DEFAULT_TIMES = 5;","    var DEFAULT_INTERVAL = 0;","","    var options = {","        times: DEFAULT_TIMES,","        intervalFunc: constant$1(DEFAULT_INTERVAL)","    };","","    function parseTimes(acc, t) {","        if (typeof t === 'object') {","            acc.times = +t.times || DEFAULT_TIMES;","","            acc.intervalFunc = typeof t.interval === 'function' ?","                t.interval :","                constant$1(+t.interval || DEFAULT_INTERVAL);","","            acc.errorFilter = t.errorFilter;","        } else if (typeof t === 'number' || typeof t === 'string') {","            acc.times = +t || DEFAULT_TIMES;","        } else {","            throw new Error(\"Invalid arguments for async.retry\");","        }","    }","","    if (arguments.length < 3 && typeof opts === 'function') {","        callback = task || noop;","        task = opts;","    } else {","        parseTimes(options, opts);","        callback = callback || noop;","    }","","    if (typeof task !== 'function') {","        throw new Error(\"Invalid arguments for async.retry\");","    }","","    var _task = wrapAsync(task);","","    var attempt = 1;","    function retryAttempt() {","        _task(function(err) {","            if (err && attempt++ < options.times &&","                (typeof options.errorFilter != 'function' ||","                    options.errorFilter(err))) {","                setTimeout(retryAttempt, options.intervalFunc(attempt));","            } else {","                callback.apply(null, arguments);","            }","        });","    }","","    retryAttempt();","}","","/**"," * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method"," * wraps a task and makes it retryable, rather than immediately calling it"," * with retries."," *"," * @name retryable"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.retry]{@link module:ControlFlow.retry}"," * @category Control Flow"," * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional"," * options, exactly the same as from `retry`"," * @param {AsyncFunction} task - the asynchronous function to wrap."," * This function will be passed any arguments passed to the returned wrapper."," * Invoked with (...args, callback)."," * @returns {AsyncFunction} The wrapped function, which when invoked, will"," * retry on an error, based on the parameters specified in `opts`."," * This function will accept the same parameters as `task`."," * @example"," *"," * async.auto({"," *     dep1: async.retryable(3, getFromFlakyService),"," *     process: [\"dep1\", async.retryable(3, function (results, cb) {"," *         maybeProcessData(results.dep1, cb);"," *     })]"," * }, callback);"," */","var retryable = function (opts, task) {","    if (!task) {","        task = opts;","        opts = null;","    }","    var _task = wrapAsync(task);","    return initialParams(function (args, callback) {","        function taskFn(cb) {","            _task.apply(null, args.concat(cb));","        }","","        if (opts) retry(opts, taskFn, callback);","        else retry(taskFn, callback);","","    });","};","","/**"," * Run the functions in the `tasks` collection in series, each one running once"," * the previous function has completed. If any functions in the series pass an"," * error to its callback, no more functions are run, and `callback` is"," * immediately called with the value of the error. Otherwise, `callback`"," * receives an array of results when `tasks` have completed."," *"," * It is also possible to use an object instead of an array. Each property will"," * be run as a function, and the results will be passed to the final `callback`"," * as an object instead of an array. This can be a more readable way of handling"," *  results from {@link async.series}."," *"," * **Note** that while many implementations preserve the order of object"," * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)"," * explicitly states that"," *"," * > The mechanics and order of enumerating the properties is not specified."," *"," * So if you rely on the order in which your series of functions are executed,"," * and want this to work on all platforms, consider using an array."," *"," * @name series"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection containing"," * [async functions]{@link AsyncFunction} to run in series."," * Each function can complete with any number of optional `result` values."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed. This function gets a results array (or object)"," * containing all the result arguments passed to the `task` callbacks. Invoked"," * with (err, result)."," * @example"," * async.series(["," *     function(callback) {"," *         // do some stuff ..."," *         callback(null, 'one');"," *     },"," *     function(callback) {"," *         // do some more stuff ..."," *         callback(null, 'two');"," *     }"," * ],"," * // optional callback"," * function(err, results) {"," *     // results is now equal to ['one', 'two']"," * });"," *"," * async.series({"," *     one: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 1);"," *         }, 200);"," *     },"," *     two: function(callback){"," *         setTimeout(function() {"," *             callback(null, 2);"," *         }, 100);"," *     }"," * }, function(err, results) {"," *     // results is now equal to: {one: 1, two: 2}"," * });"," */","function series(tasks, callback) {","    _parallel(eachOfSeries, tasks, callback);","}","","/**"," * Returns `true` if at least one element in the `coll` satisfies an async test."," * If any iteratee call returns `true`, the main `callback` is immediately"," * called."," *"," * @name some"," * @static"," * @memberOf module:Collections"," * @method"," * @alias any"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in parallel."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," * @example"," *"," * async.some(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // if result is true then at least one of the files exists"," * });"," */","var some = doParallel(_createTester(Boolean, identity));","","/**"," * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time."," *"," * @name someLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.some]{@link module:Collections.some}"," * @alias anyLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in parallel."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," */","var someLimit = doParallelLimit(_createTester(Boolean, identity));","","/**"," * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time."," *"," * @name someSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.some]{@link module:Collections.some}"," * @alias anySeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in series."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," */","var someSeries = doLimit(someLimit, 1);","","/**"," * Sorts a list by the results of running each `coll` value through an async"," * `iteratee`."," *"," * @name sortBy"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a value to use as the sort criteria as"," * its `result`."," * Invoked with (item, callback)."," * @param {Function} callback - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is the items"," * from the original `coll` sorted by the values returned by the `iteratee`"," * calls. Invoked with (err, results)."," * @example"," *"," * async.sortBy(['file1','file2','file3'], function(file, callback) {"," *     fs.stat(file, function(err, stats) {"," *         callback(err, stats.mtime);"," *     });"," * }, function(err, results) {"," *     // results is now the original array of files sorted by"," *     // modified date"," * });"," *"," * // By modifying the callback parameter the"," * // sorting order can be influenced:"," *"," * // ascending order"," * async.sortBy([1,9,3,5], function(x, callback) {"," *     callback(null, x);"," * }, function(err,result) {"," *     // result callback"," * });"," *"," * // descending order"," * async.sortBy([1,9,3,5], function(x, callback) {"," *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around"," * }, function(err,result) {"," *     // result callback"," * });"," */","function sortBy (coll, iteratee, callback) {","    var _iteratee = wrapAsync(iteratee);","    map(coll, function (x, callback) {","        _iteratee(x, function (err, criteria) {","            if (err) return callback(err);","            callback(null, {value: x, criteria: criteria});","        });","    }, function (err, results) {","        if (err) return callback(err);","        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));","    });","","    function comparator(left, right) {","        var a = left.criteria, b = right.criteria;","        return a < b ? -1 : a > b ? 1 : 0;","    }","}","","/**"," * Sets a time limit on an asynchronous function. If the function does not call"," * its callback within the specified milliseconds, it will be called with a"," * timeout error. The code property for the error object will be `'ETIMEDOUT'`."," *"," * @name timeout"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} asyncFn - The async function to limit in time."," * @param {number} milliseconds - The specified time limit."," * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)"," * to timeout Error for more information.."," * @returns {AsyncFunction} Returns a wrapped function that can be used with any"," * of the control flow functions."," * Invoke this function with the same parameters as you would `asyncFunc`."," * @example"," *"," * function myFunction(foo, callback) {"," *     doAsyncTask(foo, function(err, data) {"," *         // handle errors"," *         if (err) return callback(err);"," *"," *         // do some stuff ..."," *"," *         // return processed data"," *         return callback(null, data);"," *     });"," * }"," *"," * var wrapped = async.timeout(myFunction, 1000);"," *"," * // call `wrapped` as you would `myFunction`"," * wrapped({ bar: 'bar' }, function(err, data) {"," *     // if `myFunction` takes < 1000 ms to execute, `err`"," *     // and `data` will have their expected values"," *"," *     // else `err` will be an Error with the code 'ETIMEDOUT'"," * });"," */","function timeout(asyncFn, milliseconds, info) {","    var fn = wrapAsync(asyncFn);","","    return initialParams(function (args, callback) {","        var timedOut = false;","        var timer;","","        function timeoutCallback() {","            var name = asyncFn.name || 'anonymous';","            var error  = new Error('Callback function \"' + name + '\" timed out.');","            error.code = 'ETIMEDOUT';","            if (info) {","                error.info = info;","            }","            timedOut = true;","            callback(error);","        }","","        args.push(function () {","            if (!timedOut) {","                callback.apply(null, arguments);","                clearTimeout(timer);","            }","        });","","        // setup timer and call original function","        timer = setTimeout(timeoutCallback, milliseconds);","        fn.apply(null, args);","    });","}","","/* Built-in method references for those with the same name as other `lodash` methods. */","var nativeCeil = Math.ceil;","var nativeMax = Math.max;","","/**"," * The base implementation of `_.range` and `_.rangeRight` which doesn't"," * coerce arguments."," *"," * @private"," * @param {number} start The start of the range."," * @param {number} end The end of the range."," * @param {number} step The value to increment or decrement by."," * @param {boolean} [fromRight] Specify iterating from right to left."," * @returns {Array} Returns the range of numbers."," */","function baseRange(start, end, step, fromRight) {","  var index = -1,","      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),","      result = Array(length);","","  while (length--) {","    result[fromRight ? length : ++index] = start;","    start += step;","  }","  return result;","}","","/**"," * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name timesLimit"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.times]{@link module:ControlFlow.times}"," * @category Control Flow"," * @param {number} count - The number of times to run the function."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - The async function to call `n` times."," * Invoked with the iteration index and a callback: (n, next)."," * @param {Function} callback - see [async.map]{@link module:Collections.map}."," */","function timeLimit(count, limit, iteratee, callback) {","    var _iteratee = wrapAsync(iteratee);","    mapLimit(baseRange(0, count, 1), limit, _iteratee, callback);","}","","/**"," * Calls the `iteratee` function `n` times, and accumulates results in the same"," * manner you would use with [map]{@link module:Collections.map}."," *"," * @name times"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Control Flow"," * @param {number} n - The number of times to run the function."," * @param {AsyncFunction} iteratee - The async function to call `n` times."," * Invoked with the iteration index and a callback: (n, next)."," * @param {Function} callback - see {@link module:Collections.map}."," * @example"," *"," * // Pretend this is some complicated async factory"," * var createUser = function(id, callback) {"," *     callback(null, {"," *         id: 'user' + id"," *     });"," * };"," *"," * // generate 5 users"," * async.times(5, function(n, next) {"," *     createUser(n, function(err, user) {"," *         next(err, user);"," *     });"," * }, function(err, users) {"," *     // we should now have 5 users"," * });"," */","var times = doLimit(timeLimit, Infinity);","","/**"," * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time."," *"," * @name timesSeries"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.times]{@link module:ControlFlow.times}"," * @category Control Flow"," * @param {number} n - The number of times to run the function."," * @param {AsyncFunction} iteratee - The async function to call `n` times."," * Invoked with the iteration index and a callback: (n, next)."," * @param {Function} callback - see {@link module:Collections.map}."," */","var timesSeries = doLimit(timeLimit, 1);","","/**"," * A relative of `reduce`.  Takes an Object or Array, and iterates over each"," * element in series, each step potentially mutating an `accumulator` value."," * The type of the accumulator defaults to the type of collection passed in."," *"," * @name transform"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {*} [accumulator] - The initial state of the transform.  If omitted,"," * it will default to an empty Object or Array, depending on the type of `coll`"," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * collection that potentially modifies the accumulator."," * Invoked with (accumulator, item, key, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the transformed accumulator."," * Invoked with (err, result)."," * @example"," *"," * async.transform([1,2,3], function(acc, item, index, callback) {"," *     // pointless async:"," *     process.nextTick(function() {"," *         acc.push(item * 2)"," *         callback(null)"," *     });"," * }, function(err, result) {"," *     // result is now equal to [2, 4, 6]"," * });"," *"," * @example"," *"," * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {"," *     setImmediate(function () {"," *         obj[key] = val * 2;"," *         callback();"," *     })"," * }, function (err, result) {"," *     // result is equal to {a: 2, b: 4, c: 6}"," * })"," */","function transform (coll, accumulator, iteratee, callback) {","    if (arguments.length <= 3) {","        callback = iteratee;","        iteratee = accumulator;","        accumulator = isArray(coll) ? [] : {};","    }","    callback = once(callback || noop);","    var _iteratee = wrapAsync(iteratee);","","    eachOf(coll, function(v, k, cb) {","        _iteratee(accumulator, v, k, cb);","    }, function(err) {","        callback(err, accumulator);","    });","}","","/**"," * It runs each task in series but stops whenever any of the functions were"," * successful. If one of the tasks were successful, the `callback` will be"," * passed the result of the successful task. If all tasks fail, the callback"," * will be passed the error and result (if any) of the final attempt."," *"," * @name tryEach"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection containing functions to"," * run, each function is passed a `callback(err, result)` it must call on"," * completion with an error `err` (which can be `null`) and an optional `result`"," * value."," * @param {Function} [callback] - An optional callback which is called when one"," * of the tasks has succeeded, or all have failed. It receives the `err` and"," * `result` arguments of the last attempt at completing the `task`. Invoked with"," * (err, results)."," * @example"," * async.tryEach(["," *     function getDataFromFirstWebsite(callback) {"," *         // Try getting the data from the first website"," *         callback(err, data);"," *     },"," *     function getDataFromSecondWebsite(callback) {"," *         // First website failed,"," *         // Try getting the data from the backup website"," *         callback(err, data);"," *     }"," * ],"," * // optional callback"," * function(err, results) {"," *     Now do something with the data."," * });"," *"," */","function tryEach(tasks, callback) {","    var error = null;","    var result;","    callback = callback || noop;","    eachSeries(tasks, function(task, callback) {","        wrapAsync(task)(function (err, res/*, ...args*/) {","            if (arguments.length > 2) {","                result = slice(arguments, 1);","            } else {","                result = res;","            }","            error = err;","            callback(!err);","        });","    }, function () {","        callback(error, result);","    });","}","","/**"," * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,"," * unmemoized form. Handy for testing."," *"," * @name unmemoize"," * @static"," * @memberOf module:Utils"," * @method"," * @see [async.memoize]{@link module:Utils.memoize}"," * @category Util"," * @param {AsyncFunction} fn - the memoized function"," * @returns {AsyncFunction} a function that calls the original unmemoized function"," */","function unmemoize(fn) {","    return function () {","        return (fn.unmemoized || fn).apply(null, arguments);","    };","}","","/**"," * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when"," * stopped, or an error occurs."," *"," * @name whilst"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Function} test - synchronous truth test to perform before each"," * execution of `iteratee`. Invoked with ()."," * @param {AsyncFunction} iteratee - An async function which is called each time"," * `test` passes. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `iteratee` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `iteratee`'s"," * callback. Invoked with (err, [results]);"," * @returns undefined"," * @example"," *"," * var count = 0;"," * async.whilst("," *     function() { return count < 5; },"," *     function(callback) {"," *         count++;"," *         setTimeout(function() {"," *             callback(null, count);"," *         }, 1000);"," *     },"," *     function (err, n) {"," *         // 5 seconds have passed, n = 5"," *     }"," * );"," */","function whilst(test, iteratee, callback) {","    callback = onlyOnce(callback || noop);","    var _iteratee = wrapAsync(iteratee);","    if (!test()) return callback(null);","    var next = function(err/*, ...args*/) {","        if (err) return callback(err);","        if (test()) return _iteratee(next);","        var args = slice(arguments, 1);","        callback.apply(null, [null].concat(args));","    };","    _iteratee(next);","}","","/**"," * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when"," * stopped, or an error occurs. `callback` will be passed an error and any"," * arguments passed to the final `iteratee`'s callback."," *"," * The inverse of [whilst]{@link module:ControlFlow.whilst}."," *"," * @name until"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {Function} test - synchronous truth test to perform before each"," * execution of `iteratee`. Invoked with ()."," * @param {AsyncFunction} iteratee - An async function which is called each time"," * `test` fails. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has passed and repeated execution of `iteratee` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `iteratee`'s"," * callback. Invoked with (err, [results]);"," */","function until(test, iteratee, callback) {","    whilst(function() {","        return !test.apply(this, arguments);","    }, iteratee, callback);","}","","/**"," * Runs the `tasks` array of functions in series, each passing their results to"," * the next in the array. However, if any of the `tasks` pass an error to their"," * own callback, the next function is not executed, and the main `callback` is"," * immediately called with the error."," *"," * @name waterfall"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}"," * to run."," * Each function should complete with any number of `result` values."," * The `result` values will be passed as arguments, in order, to the next task."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed. This will be passed the results of the last task's"," * callback. Invoked with (err, [results])."," * @returns undefined"," * @example"," *"," * async.waterfall(["," *     function(callback) {"," *         callback(null, 'one', 'two');"," *     },"," *     function(arg1, arg2, callback) {"," *         // arg1 now equals 'one' and arg2 now equals 'two'"," *         callback(null, 'three');"," *     },"," *     function(arg1, callback) {"," *         // arg1 now equals 'three'"," *         callback(null, 'done');"," *     }"," * ], function (err, result) {"," *     // result now equals 'done'"," * });"," *"," * // Or, with named functions:"," * async.waterfall(["," *     myFirstFunction,"," *     mySecondFunction,"," *     myLastFunction,"," * ], function (err, result) {"," *     // result now equals 'done'"," * });"," * function myFirstFunction(callback) {"," *     callback(null, 'one', 'two');"," * }"," * function mySecondFunction(arg1, arg2, callback) {"," *     // arg1 now equals 'one' and arg2 now equals 'two'"," *     callback(null, 'three');"," * }"," * function myLastFunction(arg1, callback) {"," *     // arg1 now equals 'three'"," *     callback(null, 'done');"," * }"," */","var waterfall = function(tasks, callback) {","    callback = once(callback || noop);","    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));","    if (!tasks.length) return callback();","    var taskIndex = 0;","","    function nextTask(args) {","        var task = wrapAsync(tasks[taskIndex++]);","        args.push(onlyOnce(next));","        task.apply(null, args);","    }","","    function next(err/*, ...args*/) {","        if (err || taskIndex === tasks.length) {","            return callback.apply(null, arguments);","        }","        nextTask(slice(arguments, 1));","    }","","    nextTask([]);","};","","/**"," * An \"async function\" in the context of Async is an asynchronous function with"," * a variable number of parameters, with the final parameter being a callback."," * (`function (arg1, arg2, ..., callback) {}`)"," * The final callback is of the form `callback(err, results...)`, which must be"," * called once the function is completed.  The callback should be called with a"," * Error as its first argument to signal that an error occurred."," * Otherwise, if no error occurred, it should be called with `null` as the first"," * argument, and any additional `result` arguments that may apply, to signal"," * successful completion."," * The callback must be called exactly once, ideally on a later tick of the"," * JavaScript event loop."," *"," * This type of function is also referred to as a \"Node-style async function\","," * or a \"continuation passing-style function\" (CPS). Most of the methods of this"," * library are themselves CPS/Node-style async functions, or functions that"," * return CPS/Node-style async functions."," *"," * Wherever we accept a Node-style async function, we also directly accept an"," * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}."," * In this case, the `async` function will not be passed a final callback"," * argument, and any thrown error will be used as the `err` argument of the"," * implicit callback, and the return value will be used as the `result` value."," * (i.e. a `rejected` of the returned Promise becomes the `err` callback"," * argument, and a `resolved` value becomes the `result`.)"," *"," * Note, due to JavaScript limitations, we can only detect native `async`"," * functions and not transpilied implementations."," * Your environment must have `async`/`await` support for this to work."," * (e.g. Node > v7.6, or a recent version of a modern browser)."," * If you are using `async` functions through a transpiler (e.g. Babel), you"," * must still wrap the function with [asyncify]{@link module:Utils.asyncify},"," * because the `async function` will be compiled to an ordinary function that"," * returns a promise."," *"," * @typedef {Function} AsyncFunction"," * @static"," */","","/**"," * Async is a utility module which provides straight-forward, powerful functions"," * for working with asynchronous JavaScript. Although originally designed for"," * use with [Node.js](http://nodejs.org) and installable via"," * `npm install --save async`, it can also be used directly in the browser."," * @module async"," * @see AsyncFunction"," */","","","/**"," * A collection of `async` functions for manipulating collections, such as"," * arrays and objects."," * @module Collections"," */","","/**"," * A collection of `async` functions for controlling the flow through a script."," * @module ControlFlow"," */","","/**"," * A collection of `async` utility functions."," * @module Utils"," */","","var index = {","    apply: apply,","    applyEach: applyEach,","    applyEachSeries: applyEachSeries,","    asyncify: asyncify,","    auto: auto,","    autoInject: autoInject,","    cargo: cargo,","    compose: compose,","    concat: concat,","    concatLimit: concatLimit,","    concatSeries: concatSeries,","    constant: constant,","    detect: detect,","    detectLimit: detectLimit,","    detectSeries: detectSeries,","    dir: dir,","    doDuring: doDuring,","    doUntil: doUntil,","    doWhilst: doWhilst,","    during: during,","    each: eachLimit,","    eachLimit: eachLimit$1,","    eachOf: eachOf,","    eachOfLimit: eachOfLimit,","    eachOfSeries: eachOfSeries,","    eachSeries: eachSeries,","    ensureAsync: ensureAsync,","    every: every,","    everyLimit: everyLimit,","    everySeries: everySeries,","    filter: filter,","    filterLimit: filterLimit,","    filterSeries: filterSeries,","    forever: forever,","    groupBy: groupBy,","    groupByLimit: groupByLimit,","    groupBySeries: groupBySeries,","    log: log,","    map: map,","    mapLimit: mapLimit,","    mapSeries: mapSeries,","    mapValues: mapValues,","    mapValuesLimit: mapValuesLimit,","    mapValuesSeries: mapValuesSeries,","    memoize: memoize,","    nextTick: nextTick,","    parallel: parallelLimit,","    parallelLimit: parallelLimit$1,","    priorityQueue: priorityQueue,","    queue: queue$1,","    race: race,","    reduce: reduce,","    reduceRight: reduceRight,","    reflect: reflect,","    reflectAll: reflectAll,","    reject: reject,","    rejectLimit: rejectLimit,","    rejectSeries: rejectSeries,","    retry: retry,","    retryable: retryable,","    seq: seq,","    series: series,","    setImmediate: setImmediate$1,","    some: some,","    someLimit: someLimit,","    someSeries: someSeries,","    sortBy: sortBy,","    timeout: timeout,","    times: times,","    timesLimit: timeLimit,","    timesSeries: timesSeries,","    transform: transform,","    tryEach: tryEach,","    unmemoize: unmemoize,","    until: until,","    waterfall: waterfall,","    whilst: whilst,","","    // aliases","    all: every,","    allLimit: everyLimit,","    allSeries: everySeries,","    any: some,","    anyLimit: someLimit,","    anySeries: someSeries,","    find: detect,","    findLimit: detectLimit,","    findSeries: detectSeries,","    forEach: eachLimit,","    forEachSeries: eachSeries,","    forEachLimit: eachLimit$1,","    forEachOf: eachOf,","    forEachOfSeries: eachOfSeries,","    forEachOfLimit: eachOfLimit,","    inject: reduce,","    foldl: reduce,","    foldr: reduceRight,","    select: filter,","    selectLimit: filterLimit,","    selectSeries: filterSeries,","    wrapSync: asyncify","};","","exports['default'] = index;","exports.apply = apply;","exports.applyEach = applyEach;","exports.applyEachSeries = applyEachSeries;","exports.asyncify = asyncify;","exports.auto = auto;","exports.autoInject = autoInject;","exports.cargo = cargo;","exports.compose = compose;","exports.concat = concat;","exports.concatLimit = concatLimit;","exports.concatSeries = concatSeries;","exports.constant = constant;","exports.detect = detect;","exports.detectLimit = detectLimit;","exports.detectSeries = detectSeries;","exports.dir = dir;","exports.doDuring = doDuring;","exports.doUntil = doUntil;","exports.doWhilst = doWhilst;","exports.during = during;","exports.each = eachLimit;","exports.eachLimit = eachLimit$1;","exports.eachOf = eachOf;","exports.eachOfLimit = eachOfLimit;","exports.eachOfSeries = eachOfSeries;","exports.eachSeries = eachSeries;","exports.ensureAsync = ensureAsync;","exports.every = every;","exports.everyLimit = everyLimit;","exports.everySeries = everySeries;","exports.filter = filter;","exports.filterLimit = filterLimit;","exports.filterSeries = filterSeries;","exports.forever = forever;","exports.groupBy = groupBy;","exports.groupByLimit = groupByLimit;","exports.groupBySeries = groupBySeries;","exports.log = log;","exports.map = map;","exports.mapLimit = mapLimit;","exports.mapSeries = mapSeries;","exports.mapValues = mapValues;","exports.mapValuesLimit = mapValuesLimit;","exports.mapValuesSeries = mapValuesSeries;","exports.memoize = memoize;","exports.nextTick = nextTick;","exports.parallel = parallelLimit;","exports.parallelLimit = parallelLimit$1;","exports.priorityQueue = priorityQueue;","exports.queue = queue$1;","exports.race = race;","exports.reduce = reduce;","exports.reduceRight = reduceRight;","exports.reflect = reflect;","exports.reflectAll = reflectAll;","exports.reject = reject;","exports.rejectLimit = rejectLimit;","exports.rejectSeries = rejectSeries;","exports.retry = retry;","exports.retryable = retryable;","exports.seq = seq;","exports.series = series;","exports.setImmediate = setImmediate$1;","exports.some = some;","exports.someLimit = someLimit;","exports.someSeries = someSeries;","exports.sortBy = sortBy;","exports.timeout = timeout;","exports.times = times;","exports.timesLimit = timeLimit;","exports.timesSeries = timesSeries;","exports.transform = transform;","exports.tryEach = tryEach;","exports.unmemoize = unmemoize;","exports.until = until;","exports.waterfall = waterfall;","exports.whilst = whilst;","exports.all = every;","exports.allLimit = everyLimit;","exports.allSeries = everySeries;","exports.any = some;","exports.anyLimit = someLimit;","exports.anySeries = someSeries;","exports.find = detect;","exports.findLimit = detectLimit;","exports.findSeries = detectSeries;","exports.forEach = eachLimit;","exports.forEachSeries = eachSeries;","exports.forEachLimit = eachLimit$1;","exports.forEachOf = eachOf;","exports.forEachOfSeries = eachOfSeries;","exports.forEachOfLimit = eachOfLimit;","exports.inject = reduce;","exports.foldl = reduce;","exports.foldr = reduceRight;","exports.select = filter;","exports.selectLimit = filterLimit;","exports.selectSeries = filterSeries;","exports.wrapSync = asyncify;","","Object.defineProperty(exports, '__esModule', { value: true });","","})));",""],"l":{"1":1,"2":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"14":0,"62":1,"63":0,"64":0,"65":0,"66":0,"70":1,"71":0,"72":0,"73":0,"74":0,"103":1,"104":0,"105":0,"108":1,"109":1,"111":1,"112":0,"115":1,"116":2,"117":0,"118":0,"119":0,"124":1,"126":1,"127":1,"128":0,"129":0,"131":0,"134":1,"192":1,"193":0,"194":0,"195":0,"196":0,"198":0,"201":0,"202":0,"203":0,"205":0,"208":0,"213":1,"214":0,"215":0,"217":0,"221":1,"222":0,"225":1,"227":1,"228":0,"231":1,"232":0,"235":1,"236":2,"237":0,"238":0,"239":0,"240":0,"241":0,"244":0,"245":0,"248":0,"254":1,"257":1,"260":1,"263":1,"266":1,"269":1,"276":1,"279":1,"288":1,"289":0,"292":0,"293":0,"294":0,"297":0,"298":0,"299":0,"300":0,"302":0,"305":0,"309":1,"316":1,"325":1,"326":1,"330":1,"331":1,"334":1,"343":1,"344":1,"345":0,"347":1,"353":1,"354":1,"355":1,"356":1,"375":1,"376":0,"377":0,"381":0,"382":0,"386":1,"414":1,"415":0,"444":1,"445":0,"450":1,"464":1,"468":1,"469":0,"470":0,"471":0,"472":0,"473":0,"477":1,"479":1,"480":0,"492":1,"493":0,"496":0,"497":0,"499":0,"526":1,"527":1,"531":1,"540":1,"541":1,"545":1,"548":1,"551":1,"571":1,"572":0,"599":1,"614":1,"615":0,"619":1,"622":1,"625":1,"628":1,"631":1,"650":1,"653":1,"656":1,"666":1,"667":0,"668":0,"670":0,"677":1,"678":1,"679":1,"680":1,"681":1,"682":1,"683":1,"684":1,"685":1,"686":1,"687":1,"688":1,"689":1,"691":1,"692":1,"693":1,"694":1,"695":1,"696":1,"697":1,"698":1,"699":1,"700":1,"701":1,"704":1,"705":1,"710":1,"726":1,"727":0,"738":1,"739":1,"740":0,"745":1,"748":1,"751":1,"754":1,"757":1,"758":1,"760":1,"762":1,"763":0,"767":1,"772":1,"791":1,"794":1,"797":1,"807":1,"808":0,"816":0,"817":0,"828":0,"831":0,"835":1,"844":1,"845":0,"848":0,"859":1,"860":1,"861":0,"866":1,"869":1,"872":1,"881":1,"882":0,"883":0,"885":0,"886":0,"887":0,"888":0,"891":0,"922":1,"923":0,"926":1,"927":0,"928":0,"929":0,"930":0,"934":1,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"945":1,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"955":1,"956":0,"957":0,"960":0,"961":0,"964":1,"965":0,"966":0,"967":0,"968":0,"969":0,"973":1,"974":0,"975":0,"976":0,"977":0,"979":0,"980":0,"981":0,"982":0,"984":1,"985":0,"986":0,"987":0,"988":0,"990":0,"991":0,"992":0,"994":0,"995":0,"999":1,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1008":0,"1010":0,"1011":0,"1013":0,"1016":0,"1040":1,"1041":0,"1044":1,"1045":17,"1046":0,"1051":1,"1052":0,"1053":0,"1056":0,"1057":0,"1060":1,"1061":0,"1062":0,"1063":0,"1064":0,"1068":0,"1069":0,"1074":1,"1115":1,"1116":0,"1117":0,"1120":1,"1121":6,"1122":0,"1126":1,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1140":0,"1180":1,"1215":1,"1217":1,"1218":6,"1219":0,"1242":1,"1262":1,"1283":1,"1294":1,"1295":0,"1298":0,"1299":0,"1300":0,"1303":0,"1313":1,"1314":1,"1315":0,"1320":0,"1321":0,"1322":0,"1323":0,"1326":0,"1341":1,"1351":1,"1352":0,"1366":1,"1367":0,"1370":0,"1371":0,"1372":0,"1375":0,"1385":1,"1386":0,"1399":1,"1400":0,"1403":0,"1404":0,"1405":0,"1408":0,"1420":1,"1421":0,"1505":1,"1506":0,"1508":0,"1509":0,"1511":0,"1512":0,"1513":0,"1514":0,"1515":0,"1517":0,"1518":0,"1521":0,"1522":0,"1523":0,"1525":0,"1527":0,"1530":0,"1532":0,"1534":0,"1535":0,"1537":0,"1538":0,"1539":0,"1542":0,"1543":0,"1544":0,"1545":0,"1546":0,"1547":0,"1549":0,"1551":0,"1552":0,"1553":0,"1558":0,"1559":0,"1560":0,"1561":0,"1567":0,"1568":0,"1570":1,"1571":0,"1572":0,"1576":1,"1577":0,"1578":0,"1580":0,"1581":0,"1582":0,"1587":1,"1588":0,"1589":0,"1590":0,"1593":0,"1596":1,"1597":0,"1598":0,"1599":0,"1601":0,"1605":1,"1606":0,"1608":0,"1609":0,"1610":0,"1611":0,"1613":0,"1614":0,"1615":0,"1616":0,"1618":0,"1619":0,"1620":0,"1622":0,"1624":0,"1625":0,"1629":0,"1630":0,"1631":0,"1632":0,"1634":0,"1638":1,"1642":0,"1643":0,"1644":0,"1645":0,"1646":0,"1647":0,"1648":0,"1649":0,"1654":0,"1655":0,"1661":1,"1662":0,"1663":0,"1664":0,"1665":0,"1668":0,"1681":1,"1682":0,"1686":0,"1687":0,"1689":0,"1693":1,"1712":1,"1713":0,"1718":1,"1721":1,"1722":1,"1732":1,"1734":0,"1735":0,"1737":0,"1739":0,"1741":0,"1742":0,"1744":0,"1745":0,"1757":1,"1758":0,"1761":0,"1762":0,"1764":0,"1765":0,"1766":0,"1768":0,"1769":0,"1771":0,"1772":0,"1773":0,"1775":0,"1787":1,"1788":0,"1789":0,"1790":0,"1802":1,"1803":0,"1805":0,"1806":0,"1818":1,"1819":0,"1822":0,"1823":0,"1833":1,"1834":0,"1838":1,"1839":1,"1840":1,"1841":1,"1842":1,"1843":1,"1846":1,"1849":1,"1858":1,"1859":0,"1863":1,"1864":1,"1865":1,"1866":1,"1867":1,"1868":1,"1871":1,"1872":1,"1873":1,"1874":1,"1875":1,"1876":1,"1877":1,"1878":1,"1881":1,"1882":1,"1883":1,"1884":1,"1885":1,"1888":1,"1897":1,"1898":0,"1908":1,"1909":0,"1935":1,"1936":0,"1940":1,"1964":1,"1965":0,"1966":0,"1967":0,"1969":0,"1970":0,"1972":0,"1977":0,"1980":1,"1981":1,"1982":1,"1983":1,"1985":1,"1986":0,"1987":0,"1988":0,"1989":0,"1990":0,"1992":0,"2077":1,"2078":0,"2080":0,"2081":0,"2082":0,"2083":0,"2087":0,"2088":0,"2089":0,"2091":0,"2092":0,"2094":0,"2096":0,"2097":0,"2098":0,"2102":0,"2104":0,"2107":1,"2108":0,"2109":0,"2111":0,"2112":0,"2116":0,"2123":1,"2124":0,"2125":0,"2128":1,"2129":0,"2130":0,"2133":1,"2134":0,"2135":0,"2136":0,"2137":0,"2139":0,"2140":0,"2141":0,"2144":1,"2145":0,"2146":0,"2149":1,"2150":0,"2151":0,"2152":0,"2153":0,"2154":0,"2155":0,"2158":1,"2159":0,"2160":0,"2161":0,"2162":0,"2163":0,"2164":0,"2167":1,"2168":0,"2169":0,"2172":1,"2173":0,"2174":0,"2177":1,"2178":0,"2181":1,"2182":0,"2185":1,"2186":0,"2187":0,"2188":0,"2189":0,"2190":0,"2192":0,"2195":1,"2196":0,"2197":0,"2198":0,"2199":0,"2200":0,"2202":0,"2204":0,"2207":1,"2208":0,"2209":0,"2211":0,"2212":0,"2215":0,"2216":0,"2217":0,"2219":0,"2220":1,"2221":0,"2222":0,"2224":0,"2225":0,"2226":0,"2228":0,"2230":0,"2231":0,"2235":0,"2236":0,"2241":0,"2242":0,"2244":0,"2248":0,"2249":0,"2250":0,"2251":0,"2252":0,"2257":1,"2258":0,"2259":0,"2261":0,"2262":0,"2264":0,"2265":0,"2266":0,"2267":0,"2268":0,"2271":0,"2273":0,"2274":0,"2278":0,"2279":0,"2282":0,"2283":0,"2285":0,"2289":0,"2290":0,"2303":0,"2306":0,"2307":0,"2310":0,"2313":0,"2318":0,"2319":0,"2321":0,"2322":0,"2323":0,"2324":0,"2325":0,"2326":0,"2327":0,"2328":0,"2329":0,"2330":0,"2333":0,"2335":0,"2336":0,"2339":0,"2340":0,"2343":0,"2344":0,"2346":0,"2349":0,"2352":0,"2355":0,"2358":0,"2361":0,"2364":0,"2365":0,"2366":0,"2369":0,"2449":1,"2450":0,"2470":1,"2512":1,"2513":0,"2514":0,"2515":0,"2516":0,"2517":0,"2518":0,"2521":0,"2563":1,"2564":0,"2565":0,"2566":0,"2567":0,"2569":0,"2570":0,"2571":0,"2573":0,"2576":0,"2577":0,"2578":0,"2579":0,"2583":0,"2623":1,"2624":0,"2627":1,"2647":1,"2648":0,"2649":0,"2650":0,"2651":0,"2652":0,"2653":0,"2656":0,"2657":0,"2658":0,"2659":0,"2663":0,"2692":1,"2712":1,"2756":1,"2757":0,"2758":0,"2759":0,"2760":0,"2761":0,"2781":1,"2782":0,"2785":1,"2786":6,"2787":0,"2788":0,"2789":0,"2790":0,"2791":0,"2792":0,"2793":0,"2794":0,"2795":0,"2796":0,"2797":0,"2799":0,"2803":0,"2804":0,"2806":0,"2812":1,"2813":0,"2851":1,"2875":1,"2897":1,"2899":1,"2900":2,"2901":0,"2902":0,"2903":0,"2904":0,"2905":0,"2906":0,"2907":0,"2909":0,"2910":0,"2911":0,"2916":0,"2949":1,"2971":1,"2972":0,"2973":0,"2974":0,"2976":1,"2977":0,"2978":0,"2979":0,"2980":0,"2983":1,"2984":0,"2985":0,"2986":0,"2989":0,"3015":1,"3016":0,"3017":0,"3018":0,"3019":0,"3020":0,"3021":0,"3022":0,"3024":0,"3047":1,"3048":0,"3049":0,"3089":1,"3090":0,"3091":0,"3092":0,"3094":1,"3095":0,"3096":0,"3099":1,"3100":0,"3101":0,"3102":0,"3105":0,"3108":1,"3109":0,"3110":0,"3171":1,"3172":0,"3195":1,"3196":0,"3218":1,"3255":1,"3256":0,"3257":0,"3258":0,"3259":0,"3260":0,"3261":0,"3262":0,"3263":0,"3266":0,"3269":0,"3270":0,"3274":1,"3275":0,"3306":1,"3328":1,"3349":1,"3358":1,"3359":0,"3360":0,"3364":1,"3365":0,"3366":0,"3367":0,"3368":0,"3369":0,"3372":0,"3373":0,"3374":0,"3375":0,"3377":0,"3381":1,"3382":0,"3383":0,"3384":0,"3385":0,"3386":0,"3388":0,"3389":0,"3391":0,"3395":0,"3396":0,"3398":0,"3399":0,"3405":1,"3406":0,"3407":0,"3437":1,"3458":1,"3477":1,"3508":1,"3509":0,"3510":0,"3512":1,"3513":0,"3514":0,"3516":0,"3538":1,"3539":0,"3540":0,"3541":0,"3542":0,"3543":0,"3544":0,"3547":0,"3549":0,"3551":0,"3552":0,"3553":0,"3554":0,"3556":0,"3557":0,"3559":0,"3564":0,"3604":1,"3625":1,"3654":1,"3677":1,"3678":0,"3679":0,"3680":0,"3681":0,"3682":0,"3683":0,"3684":0,"3685":0,"3688":0,"3737":1,"3758":1,"3760":1,"3761":0,"3801":1,"3802":0,"3803":0,"3804":0,"3805":0,"3806":0,"3807":0,"3808":0,"3809":0,"3810":0,"3812":0,"3813":0,"3815":0,"3816":0,"3817":0,"3818":0,"3819":0,"3820":0,"3821":0,"3822":0,"3827":0,"3828":0,"3829":0,"3863":1,"3865":1,"3866":1,"3867":0,"3868":0,"3870":0,"3873":1,"3875":1,"3876":0,"3877":0,"3879":0,"3880":0,"3881":0,"3882":0,"3884":0,"3885":0,"3888":0,"3961":1,"3962":0,"3984":1,"3985":0,"4093":1,"4094":0,"4095":0,"4096":0,"4123":1,"4125":0,"4128":0,"4129":0,"4130":0,"4131":0,"4133":0,"4134":0,"4135":0,"4137":0,"4139":0,"4140":0,"4144":0,"4145":0,"4146":0,"4147":0,"4150":0,"4151":0,"4157":0,"4158":0,"4160":0,"4163":0,"4167":0,"4169":0,"4208":1,"4209":0,"4210":0,"4211":0,"4212":0,"4213":0,"4239":1,"4240":0,"4241":0,"4283":1,"4284":0,"4285":0,"4286":0,"4287":0,"4288":0,"4290":0,"4291":0,"4292":0,"4294":0,"4296":0,"4300":0,"4371":1,"4372":0,"4373":0,"4374":0,"4376":0,"4377":0,"4378":0,"4381":0,"4384":1,"4385":0,"4386":0,"4387":0,"4419":1,"4440":1,"4459":1,"4480":1,"4481":0,"4482":0,"4570":1,"4571":0,"4572":0,"4574":0,"4579":1,"4580":0,"4581":0,"4583":0,"4587":0,"4588":0,"4589":0,"4591":0,"4595":0,"4596":0,"4597":0,"4599":0,"4600":0,"4603":0,"4604":0,"4607":0,"4609":0,"4610":1,"4611":0,"4612":0,"4615":0,"4617":0,"4622":0,"4653":1,"4654":0,"4655":0,"4656":0,"4658":0,"4659":0,"4660":1,"4661":0,"4664":0,"4665":0,"4734":1,"4735":0,"4768":1,"4791":1,"4813":1,"4862":1,"4863":0,"4864":0,"4865":0,"4866":0,"4867":0,"4870":0,"4871":0,"4874":1,"4875":0,"4876":0,"4921":1,"4922":0,"4924":0,"4925":0,"4926":0,"4928":1,"4929":0,"4930":0,"4931":0,"4932":0,"4933":0,"4935":0,"4936":0,"4939":0,"4940":0,"4941":0,"4942":0,"4947":0,"4948":0,"4953":1,"4954":1,"4967":1,"4968":0,"4972":0,"4973":0,"4974":0,"4976":0,"4995":1,"4996":0,"4997":0,"5032":1,"5048":1,"5092":1,"5093":0,"5094":0,"5095":0,"5096":0,"5098":0,"5099":0,"5101":0,"5102":0,"5104":0,"5145":1,"5146":0,"5147":0,"5148":0,"5149":0,"5150":0,"5151":0,"5152":0,"5154":0,"5156":0,"5157":0,"5160":0,"5177":1,"5178":0,"5179":0,"5217":1,"5218":0,"5219":0,"5220":0,"5221":0,"5222":0,"5223":0,"5224":0,"5225":0,"5227":0,"5252":1,"5253":0,"5254":0,"5315":1,"5316":0,"5317":0,"5318":0,"5319":0,"5321":1,"5322":0,"5323":0,"5324":0,"5327":1,"5328":0,"5329":0,"5331":0,"5334":0,"5402":1,"5506":1,"5507":1,"5508":1,"5509":1,"5510":1,"5511":1,"5512":1,"5513":1,"5514":1,"5515":1,"5516":1,"5517":1,"5518":1,"5519":1,"5520":1,"5521":1,"5522":1,"5523":1,"5524":1,"5525":1,"5526":1,"5527":1,"5528":1,"5529":1,"5530":1,"5531":1,"5532":1,"5533":1,"5534":1,"5535":1,"5536":1,"5537":1,"5538":1,"5539":1,"5540":1,"5541":1,"5542":1,"5543":1,"5544":1,"5545":1,"5546":1,"5547":1,"5548":1,"5549":1,"5550":1,"5551":1,"5552":1,"5553":1,"5554":1,"5555":1,"5556":1,"5557":1,"5558":1,"5559":1,"5560":1,"5561":1,"5562":1,"5563":1,"5564":1,"5565":1,"5566":1,"5567":1,"5568":1,"5569":1,"5570":1,"5571":1,"5572":1,"5573":1,"5574":1,"5575":1,"5576":1,"5577":1,"5578":1,"5579":1,"5580":1,"5581":1,"5582":1,"5583":1,"5584":1,"5585":1,"5586":1,"5587":1,"5588":1,"5589":1,"5590":1,"5591":1,"5592":1,"5593":1,"5594":1,"5595":1,"5596":1,"5597":1,"5598":1,"5599":1,"5600":1,"5601":1,"5602":1,"5603":1,"5604":1,"5605":1,"5607":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/all.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/all.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":1,"11":1},"b":{"1":[0,3],"2":[3,3]},"f":{"1":3},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"9":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"10":{"start":{"line":49,"column":0},"end":{"line":49,"column":107}},"11":{"start":{"line":50,"column":0},"end":{"line":50,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","var _notId = require('./internal/notId');","","var _notId2 = _interopRequireDefault(_notId);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns `true` if every element in `coll` satisfies an async test. If any"," * iteratee call returns `false`, the main `callback` is immediately called."," *"," * @name every"," * @static"," * @memberOf module:Collections"," * @method"," * @alias all"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in parallel."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," * @example"," *"," * async.every(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // if result is true then every file exists"," * });"," */","exports.default = (0, _doParallel2.default)((0, _createTester2.default)(_notId2.default, _notId2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":3,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/createTester.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/createTester.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":12,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":2,"2":12,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"_createTester","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":11},"end":{"line":19,"column":48}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":20},"end":{"line":23,"column":50}}},"5":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":28},"end":{"line":24,"column":51}}},"6":{"name":"(anonymous_6)","line":35,"loc":{"start":{"line":35,"column":11},"end":{"line":35,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":18,"column":0},"end":{"line":43,"column":1}},"10":{"start":{"line":19,"column":4},"end":{"line":42,"column":6}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":34}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":31}},"13":{"start":{"line":22,"column":8},"end":{"line":22,"column":23}},"14":{"start":{"line":23,"column":8},"end":{"line":41,"column":11}},"15":{"start":{"line":24,"column":12},"end":{"line":34,"column":15}},"16":{"start":{"line":25,"column":16},"end":{"line":33,"column":17}},"17":{"start":{"line":26,"column":20},"end":{"line":26,"column":34}},"18":{"start":{"line":27,"column":23},"end":{"line":33,"column":17}},"19":{"start":{"line":28,"column":20},"end":{"line":28,"column":38}},"20":{"start":{"line":29,"column":20},"end":{"line":29,"column":56}},"21":{"start":{"line":30,"column":20},"end":{"line":30,"column":56}},"22":{"start":{"line":32,"column":20},"end":{"line":32,"column":31}},"23":{"start":{"line":36,"column":12},"end":{"line":40,"column":13}},"24":{"start":{"line":37,"column":16},"end":{"line":37,"column":24}},"25":{"start":{"line":39,"column":16},"end":{"line":39,"column":69}},"26":{"start":{"line":44,"column":0},"end":{"line":44,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":13},"end":{"line":20,"column":15}},{"start":{"line":20,"column":19},"end":{"line":20,"column":33}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":16},"end":{"line":25,"column":16}},{"start":{"line":25,"column":16},"end":{"line":25,"column":16}}]},"5":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":23},"end":{"line":27,"column":23}},{"start":{"line":27,"column":23},"end":{"line":27,"column":23}}]},"6":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":27},"end":{"line":27,"column":40}},{"start":{"line":27,"column":44},"end":{"line":27,"column":55}}]},"7":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":12}},{"start":{"line":36,"column":12},"end":{"line":36,"column":12}}]},"8":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":38},"end":{"line":39,"column":48}},{"start":{"line":39,"column":51},"end":{"line":39,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = _createTester;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _breakLoop = require('./breakLoop');","","var _breakLoop2 = _interopRequireDefault(_breakLoop);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _createTester(check, getResult) {","    return function (eachfn, arr, iteratee, cb) {","        cb = cb || _noop2.default;","        var testPassed = false;","        var testResult;","        eachfn(arr, function (value, _, callback) {","            iteratee(value, function (err, result) {","                if (err) {","                    callback(err);","                } else if (check(result) && !testResult) {","                    testPassed = true;","                    testResult = getResult(true, value);","                    callback(null, _breakLoop2.default);","                } else {","                    callback();","                }","            });","        }, function (err) {","            if (err) {","                cb(err);","            } else {","                cb(null, testPassed ? testResult : getResult(false));","            }","        });","    };","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"18":1,"19":12,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"32":0,"36":0,"37":0,"39":0,"44":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/breakLoop.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/breakLoop.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":21}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":36}}},"branchMap":{},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","// A temporary value used to identify if the loop should be broken.","// See #1064, #1293","exports.default = {};","module.exports = exports[\"default\"];"],"l":{"3":1,"8":1,"9":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/doParallel.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/doParallel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":10,"11":0,"12":1},"b":{"1":[1,1],"2":[2,2]},"f":{"1":2,"2":10,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"doParallel","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":24}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":11},"end":{"line":19,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":18,"column":0},"end":{"line":22,"column":1}},"10":{"start":{"line":19,"column":4},"end":{"line":21,"column":6}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":87}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = doParallel;","","var _eachOf = require('../eachOf');","","var _eachOf2 = _interopRequireDefault(_eachOf);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function doParallel(fn) {","    return function (obj, iteratee, callback) {","        return fn(_eachOf2.default, obj, (0, _wrapAsync2.default)(iteratee), callback);","    };","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"18":1,"19":10,"20":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachOf.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachOf.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":8,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1},"b":{"1":[0,0],"2":[1,7],"3":[8,8],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":8,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":54}}},"2":{"name":"_interopRequireDefault","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":37}}},"3":{"name":"eachOfArrayLike","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":51}}},"4":{"name":"iteratorCallback","line":56,"loc":{"start":{"line":56,"column":4},"end":{"line":56,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":10,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":98}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":77}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":44}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":57}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":45}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":49}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":35}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":43}},"15":{"start":{"line":32,"column":0},"end":{"line":32,"column":39}},"16":{"start":{"line":34,"column":0},"end":{"line":34,"column":43}},"17":{"start":{"line":36,"column":0},"end":{"line":36,"column":47}},"18":{"start":{"line":38,"column":0},"end":{"line":38,"column":51}},"19":{"start":{"line":40,"column":0},"end":{"line":40,"column":49}},"20":{"start":{"line":42,"column":0},"end":{"line":42,"column":53}},"21":{"start":{"line":44,"column":0},"end":{"line":44,"column":95}},"22":{"start":{"line":44,"column":39},"end":{"line":44,"column":93}},"23":{"start":{"line":47,"column":0},"end":{"line":67,"column":1}},"24":{"start":{"line":48,"column":4},"end":{"line":48,"column":63}},"25":{"start":{"line":49,"column":4},"end":{"line":51,"column":29}},"26":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"27":{"start":{"line":53,"column":8},"end":{"line":53,"column":23}},"28":{"start":{"line":56,"column":4},"end":{"line":62,"column":5}},"29":{"start":{"line":57,"column":8},"end":{"line":61,"column":9}},"30":{"start":{"line":58,"column":12},"end":{"line":58,"column":26}},"31":{"start":{"line":59,"column":15},"end":{"line":61,"column":9}},"32":{"start":{"line":60,"column":12},"end":{"line":60,"column":27}},"33":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"34":{"start":{"line":65,"column":8},"end":{"line":65,"column":80}},"35":{"start":{"line":70,"column":0},"end":{"line":70,"column":76}},"36":{"start":{"line":111,"column":0},"end":{"line":111,"column":36}}},"branchMap":{"1":{"line":8,"type":"cond-expr","locations":[{"start":{"line":8,"column":66},"end":{"line":8,"column":81}},{"start":{"line":8,"column":84},"end":{"line":8,"column":97}}]},"2":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":70},"end":{"line":44,"column":73}},{"start":{"line":44,"column":76},"end":{"line":44,"column":92}}]},"3":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":46},"end":{"line":44,"column":49}},{"start":{"line":44,"column":53},"end":{"line":44,"column":67}}]},"4":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":35},"end":{"line":48,"column":43}},{"start":{"line":48,"column":47},"end":{"line":48,"column":61}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"6":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"7":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":15},"end":{"line":59,"column":15}},{"start":{"line":59,"column":15},"end":{"line":59,"column":15}}]},"8":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":19},"end":{"line":59,"column":41}},{"start":{"line":59,"column":45},"end":{"line":59,"column":74}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (coll, iteratee, callback) {","    var eachOfImplementation = (0, _isArrayLike2.default)(coll) ? eachOfArrayLike : eachOfGeneric;","    eachOfImplementation(coll, (0, _wrapAsync2.default)(iteratee), callback);","};","","var _isArrayLike = require('lodash/isArrayLike');","","var _isArrayLike2 = _interopRequireDefault(_isArrayLike);","","var _breakLoop = require('./internal/breakLoop');","","var _breakLoop2 = _interopRequireDefault(_breakLoop);","","var _eachOfLimit = require('./eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// eachOf implementation optimized for array-likes","function eachOfArrayLike(coll, iteratee, callback) {","    callback = (0, _once2.default)(callback || _noop2.default);","    var index = 0,","        completed = 0,","        length = coll.length;","    if (length === 0) {","        callback(null);","    }","","    function iteratorCallback(err, value) {","        if (err) {","            callback(err);","        } else if (++completed === length || value === _breakLoop2.default) {","            callback(null);","        }","    }","","    for (; index < length; index++) {","        iteratee(coll[index], index, (0, _onlyOnce2.default)(iteratorCallback));","    }","}","","// a generic version of eachOf which can handle array, object, and iterator cases.","var eachOfGeneric = (0, _doLimit2.default)(_eachOfLimit2.default, Infinity);","","/**"," * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument"," * to the iteratee."," *"," * @name eachOf"," * @static"," * @memberOf module:Collections"," * @method"," * @alias forEachOf"," * @category Collection"," * @see [async.each]{@link module:Collections.each}"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each"," * item in `coll`."," * The `key` is the item's key, or index in the case of an array."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," * @example"," *"," * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};"," * var configs = {};"," *"," * async.forEachOf(obj, function (value, key, callback) {"," *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {"," *         if (err) return callback(err);"," *         try {"," *             configs[key] = JSON.parse(data);"," *         } catch (e) {"," *             return callback(e);"," *         }"," *         callback();"," *     });"," * }, function (err) {"," *     if (err) console.error(err.message);"," *     // configs is now a map of JSON data"," *     doSomethingWith(configs);"," * });"," */","module.exports = exports['default'];"],"l":{"3":1,"7":1,"8":0,"9":0,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":1,"30":1,"32":1,"34":1,"36":1,"38":1,"40":1,"42":1,"44":8,"47":1,"48":0,"49":0,"52":0,"53":0,"56":1,"57":0,"58":0,"59":0,"60":0,"64":0,"65":0,"70":1,"111":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachOfLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachOfLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":1},"b":{"1":[1,1],"2":[2,2]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"eachOfLimit","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":54}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":54}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":58}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":38,"column":0},"end":{"line":40,"column":1}},"10":{"start":{"line":39,"column":2},"end":{"line":39,"column":88}},"11":{"start":{"line":41,"column":0},"end":{"line":41,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = eachOfLimit;","","var _eachOfLimit2 = require('./internal/eachOfLimit');","","var _eachOfLimit3 = _interopRequireDefault(_eachOfLimit2);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name eachOfLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.eachOf]{@link module:Collections.eachOf}"," * @alias forEachOfLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each"," * item in `coll`. The `key` is the item's key, or index in the case of an"," * array."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","function eachOfLimit(coll, limit, iteratee, callback) {","  (0, _eachOfLimit3.default)(limit)(coll, (0, _wrapAsync2.default)(iteratee), callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"38":1,"39":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/eachOfLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/eachOfLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1},"b":{"1":[0,5],"2":[5,5],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":5,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"2":{"name":"_eachOfLimit","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":29}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":11},"end":{"line":31,"column":46}}},"4":{"name":"iterateeCallback","line":41,"loc":{"start":{"line":41,"column":8},"end":{"line":41,"column":46}}},"5":{"name":"replenish","line":54,"loc":{"start":{"line":54,"column":8},"end":{"line":54,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":38}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":51}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":53}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":95}},"14":{"start":{"line":28,"column":39},"end":{"line":28,"column":93}},"15":{"start":{"line":30,"column":0},"end":{"line":73,"column":1}},"16":{"start":{"line":31,"column":4},"end":{"line":72,"column":6}},"17":{"start":{"line":32,"column":8},"end":{"line":32,"column":67}},"18":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"19":{"start":{"line":34,"column":12},"end":{"line":34,"column":34}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":52}},"21":{"start":{"line":37,"column":8},"end":{"line":37,"column":25}},"22":{"start":{"line":38,"column":8},"end":{"line":38,"column":24}},"23":{"start":{"line":39,"column":8},"end":{"line":39,"column":28}},"24":{"start":{"line":41,"column":8},"end":{"line":52,"column":9}},"25":{"start":{"line":42,"column":12},"end":{"line":42,"column":25}},"26":{"start":{"line":43,"column":12},"end":{"line":51,"column":13}},"27":{"start":{"line":44,"column":16},"end":{"line":44,"column":28}},"28":{"start":{"line":45,"column":16},"end":{"line":45,"column":30}},"29":{"start":{"line":46,"column":19},"end":{"line":51,"column":13}},"30":{"start":{"line":47,"column":16},"end":{"line":47,"column":28}},"31":{"start":{"line":48,"column":16},"end":{"line":48,"column":38}},"32":{"start":{"line":49,"column":19},"end":{"line":51,"column":13}},"33":{"start":{"line":50,"column":16},"end":{"line":50,"column":28}},"34":{"start":{"line":54,"column":8},"end":{"line":69,"column":9}},"35":{"start":{"line":55,"column":12},"end":{"line":55,"column":27}},"36":{"start":{"line":56,"column":12},"end":{"line":67,"column":13}},"37":{"start":{"line":57,"column":16},"end":{"line":57,"column":38}},"38":{"start":{"line":58,"column":16},"end":{"line":64,"column":17}},"39":{"start":{"line":59,"column":20},"end":{"line":59,"column":32}},"40":{"start":{"line":60,"column":20},"end":{"line":62,"column":21}},"41":{"start":{"line":61,"column":24},"end":{"line":61,"column":39}},"42":{"start":{"line":63,"column":20},"end":{"line":63,"column":27}},"43":{"start":{"line":65,"column":16},"end":{"line":65,"column":29}},"44":{"start":{"line":66,"column":16},"end":{"line":66,"column":90}},"45":{"start":{"line":68,"column":12},"end":{"line":68,"column":28}},"46":{"start":{"line":71,"column":8},"end":{"line":71,"column":20}},"47":{"start":{"line":74,"column":0},"end":{"line":74,"column":36}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":70},"end":{"line":28,"column":73}},{"start":{"line":28,"column":76},"end":{"line":28,"column":92}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}]},"3":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":39},"end":{"line":32,"column":47}},{"start":{"line":32,"column":51},"end":{"line":32,"column":65}}]},"4":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":8}},{"start":{"line":33,"column":8},"end":{"line":33,"column":8}}]},"5":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":12},"end":{"line":33,"column":22}},{"start":{"line":33,"column":26},"end":{"line":33,"column":30}}]},"6":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":12}},{"start":{"line":43,"column":12},"end":{"line":43,"column":12}}]},"7":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":19},"end":{"line":46,"column":19}},{"start":{"line":46,"column":19},"end":{"line":46,"column":19}}]},"8":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":23},"end":{"line":46,"column":52}},{"start":{"line":46,"column":56},"end":{"line":46,"column":60}},{"start":{"line":46,"column":64},"end":{"line":46,"column":76}}]},"9":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":19},"end":{"line":49,"column":19}},{"start":{"line":49,"column":19},"end":{"line":49,"column":19}}]},"10":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":19},"end":{"line":56,"column":34}},{"start":{"line":56,"column":38},"end":{"line":56,"column":43}}]},"11":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":16},"end":{"line":58,"column":16}},{"start":{"line":58,"column":16},"end":{"line":58,"column":16}}]},"12":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":20},"end":{"line":60,"column":20}},{"start":{"line":60,"column":20},"end":{"line":60,"column":20}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = _eachOfLimit;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./once');","","var _once2 = _interopRequireDefault(_once);","","var _iterator = require('./iterator');","","var _iterator2 = _interopRequireDefault(_iterator);","","var _onlyOnce = require('./onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _breakLoop = require('./breakLoop');","","var _breakLoop2 = _interopRequireDefault(_breakLoop);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _eachOfLimit(limit) {","    return function (obj, iteratee, callback) {","        callback = (0, _once2.default)(callback || _noop2.default);","        if (limit <= 0 || !obj) {","            return callback(null);","        }","        var nextElem = (0, _iterator2.default)(obj);","        var done = false;","        var running = 0;","        var looping = false;","","        function iterateeCallback(err, value) {","            running -= 1;","            if (err) {","                done = true;","                callback(err);","            } else if (value === _breakLoop2.default || done && running <= 0) {","                done = true;","                return callback(null);","            } else if (!looping) {","                replenish();","            }","        }","","        function replenish() {","            looping = true;","            while (running < limit && !done) {","                var elem = nextElem();","                if (elem === null) {","                    done = true;","                    if (running <= 0) {","                        callback(null);","                    }","                    return;","                }","                running += 1;","                iteratee(elem.value, elem.key, (0, _onlyOnce2.default)(iterateeCallback));","            }","            looping = false;","        }","","        replenish();","    };","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":5,"30":1,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"65":0,"66":0,"68":0,"71":0,"74":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/once.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/once.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"once","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":11},"end":{"line":8,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"3":{"start":{"line":7,"column":0},"end":{"line":14,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":13,"column":6}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":32}},"6":{"start":{"line":9,"column":25},"end":{"line":9,"column":32}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":24}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":18}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":38}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":8}},{"start":{"line":9,"column":8},"end":{"line":9,"column":8}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = once;","function once(fn) {","    return function () {","        if (fn === null) return;","        var callFn = fn;","        fn = null;","        callFn.apply(this, arguments);","    };","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"15":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/iterator.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/iterator.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":1},"b":{"1":[0,3],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"createArrayIterator","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":35}}},"3":{"name":"next","line":25,"loc":{"start":{"line":25,"column":11},"end":{"line":25,"column":27}}},"4":{"name":"createES2015Iterator","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":40}}},"5":{"name":"next","line":32,"loc":{"start":{"line":32,"column":11},"end":{"line":32,"column":27}}},"6":{"name":"createObjectIterator","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":35}}},"7":{"name":"next","line":44,"loc":{"start":{"line":44,"column":11},"end":{"line":44,"column":27}}},"8":{"name":"iterator","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":49}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":44}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":35}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":22,"column":0},"end":{"line":28,"column":1}},"12":{"start":{"line":23,"column":4},"end":{"line":23,"column":15}},"13":{"start":{"line":24,"column":4},"end":{"line":24,"column":26}},"14":{"start":{"line":25,"column":4},"end":{"line":27,"column":6}},"15":{"start":{"line":26,"column":8},"end":{"line":26,"column":61}},"16":{"start":{"line":30,"column":0},"end":{"line":38,"column":1}},"17":{"start":{"line":31,"column":4},"end":{"line":31,"column":15}},"18":{"start":{"line":32,"column":4},"end":{"line":37,"column":6}},"19":{"start":{"line":33,"column":8},"end":{"line":33,"column":35}},"20":{"start":{"line":34,"column":8},"end":{"line":34,"column":35}},"21":{"start":{"line":34,"column":23},"end":{"line":34,"column":35}},"22":{"start":{"line":35,"column":8},"end":{"line":35,"column":12}},"23":{"start":{"line":36,"column":8},"end":{"line":36,"column":45}},"24":{"start":{"line":40,"column":0},"end":{"line":48,"column":1}},"25":{"start":{"line":41,"column":4},"end":{"line":41,"column":41}},"26":{"start":{"line":42,"column":4},"end":{"line":42,"column":15}},"27":{"start":{"line":43,"column":4},"end":{"line":43,"column":27}},"28":{"start":{"line":44,"column":4},"end":{"line":47,"column":6}},"29":{"start":{"line":45,"column":8},"end":{"line":45,"column":29}},"30":{"start":{"line":46,"column":8},"end":{"line":46,"column":62}},"31":{"start":{"line":50,"column":0},"end":{"line":57,"column":1}},"32":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"33":{"start":{"line":52,"column":8},"end":{"line":52,"column":41}},"34":{"start":{"line":55,"column":4},"end":{"line":55,"column":52}},"35":{"start":{"line":56,"column":4},"end":{"line":56,"column":82}},"36":{"start":{"line":58,"column":0},"end":{"line":58,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":27},"end":{"line":26,"column":53}},{"start":{"line":26,"column":56},"end":{"line":26,"column":60}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":8}},{"start":{"line":34,"column":8},"end":{"line":34,"column":8}}]},"5":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":25},"end":{"line":46,"column":54}},{"start":{"line":46,"column":57},"end":{"line":46,"column":61}}]},"6":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"7":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":22},"end":{"line":56,"column":52}},{"start":{"line":56,"column":55},"end":{"line":56,"column":81}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = iterator;","","var _isArrayLike = require('lodash/isArrayLike');","","var _isArrayLike2 = _interopRequireDefault(_isArrayLike);","","var _getIterator = require('./getIterator');","","var _getIterator2 = _interopRequireDefault(_getIterator);","","var _keys = require('lodash/keys');","","var _keys2 = _interopRequireDefault(_keys);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function createArrayIterator(coll) {","    var i = -1;","    var len = coll.length;","    return function next() {","        return ++i < len ? { value: coll[i], key: i } : null;","    };","}","","function createES2015Iterator(iterator) {","    var i = -1;","    return function next() {","        var item = iterator.next();","        if (item.done) return null;","        i++;","        return { value: item.value, key: i };","    };","}","","function createObjectIterator(obj) {","    var okeys = (0, _keys2.default)(obj);","    var i = -1;","    var len = okeys.length;","    return function next() {","        var key = okeys[++i];","        return i < len ? { value: obj[key], key: key } : null;","    };","}","","function iterator(coll) {","    if ((0, _isArrayLike2.default)(coll)) {","        return createArrayIterator(coll);","    }","","    var iterator = (0, _getIterator2.default)(coll);","    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"22":1,"23":0,"24":0,"25":0,"26":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"50":1,"51":0,"52":0,"55":0,"56":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/getIterator.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/getIterator.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1},"b":{"1":[0,0,0],"2":[1,1]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":9,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":76}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":69}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":11},"end":{"line":8,"column":25}},{"start":{"line":8,"column":29},"end":{"line":8,"column":49}},{"start":{"line":8,"column":53},"end":{"line":8,"column":75}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":21},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":68}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (coll) {","    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();","};","","var iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;","","module.exports = exports['default'];"],"l":{"3":1,"7":1,"8":0,"11":1,"13":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/onlyOnce.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/onlyOnce.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"onlyOnce","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":22}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":11},"end":{"line":8,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":7,"column":0},"end":{"line":14,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":13,"column":6}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":73}},"6":{"start":{"line":9,"column":25},"end":{"line":9,"column":73}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":24}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":18}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":38}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":8}},{"start":{"line":9,"column":8},"end":{"line":9,"column":8}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = onlyOnce;","function onlyOnce(fn) {","    return function () {","        if (fn === null) throw new Error(\"Callback was already called.\");","        var callFn = fn;","        fn = null;","        callFn.apply(this, arguments);","    };","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"15":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/wrapAsync.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/wrapAsync.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":0,"12":1,"13":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"isAsync","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":21}}},"3":{"name":"wrapAsync","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":50}},"8":{"start":{"line":16,"column":0},"end":{"line":18,"column":1}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":72}},"10":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"11":{"start":{"line":21,"column":4},"end":{"line":21,"column":73}},"12":{"start":{"line":24,"column":0},"end":{"line":24,"column":28}},"13":{"start":{"line":25,"column":0},"end":{"line":25,"column":26}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":11},"end":{"line":17,"column":25}},{"start":{"line":17,"column":29},"end":{"line":17,"column":71}}]},"4":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":30},"end":{"line":21,"column":62}},{"start":{"line":21,"column":65},"end":{"line":21,"column":72}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.isAsync = undefined;","","var _asyncify = require('../asyncify');","","var _asyncify2 = _interopRequireDefault(_asyncify);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var supportsSymbol = typeof Symbol === 'function';","","function isAsync(fn) {","    return supportsSymbol && fn[Symbol.toStringTag] === 'AsyncFunction';","}","","function wrapAsync(asyncFn) {","    return isAsync(asyncFn) ? (0, _asyncify2.default)(asyncFn) : asyncFn;","}","","exports.default = wrapAsync;","exports.isAsync = isAsync;"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"17":0,"20":1,"21":0,"24":1,"25":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/asyncify.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/asyncify.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":1,"27":0,"28":1},"b":{"1":[1,2],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"asyncify","line":78,"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":24}}},"3":{"name":"(anonymous_3)","line":79,"loc":{"start":{"line":79,"column":40},"end":{"line":79,"column":66}}},"4":{"name":"(anonymous_4)","line":88,"loc":{"start":{"line":88,"column":24},"end":{"line":88,"column":41}}},"5":{"name":"(anonymous_5)","line":90,"loc":{"start":{"line":90,"column":15},"end":{"line":90,"column":30}}},"6":{"name":"invokeCallback","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":48}}},"7":{"name":"rethrow","line":107,"loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":61}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":55}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":59}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":78,"column":0},"end":{"line":97,"column":1}},"12":{"start":{"line":79,"column":4},"end":{"line":96,"column":7}},"13":{"start":{"line":80,"column":8},"end":{"line":80,"column":19}},"14":{"start":{"line":81,"column":8},"end":{"line":85,"column":9}},"15":{"start":{"line":82,"column":12},"end":{"line":82,"column":44}},"16":{"start":{"line":84,"column":12},"end":{"line":84,"column":31}},"17":{"start":{"line":87,"column":8},"end":{"line":95,"column":9}},"18":{"start":{"line":88,"column":12},"end":{"line":92,"column":15}},"19":{"start":{"line":89,"column":16},"end":{"line":89,"column":54}},"20":{"start":{"line":91,"column":16},"end":{"line":91,"column":77}},"21":{"start":{"line":94,"column":12},"end":{"line":94,"column":35}},"22":{"start":{"line":99,"column":0},"end":{"line":105,"column":1}},"23":{"start":{"line":100,"column":4},"end":{"line":104,"column":5}},"24":{"start":{"line":101,"column":8},"end":{"line":101,"column":31}},"25":{"start":{"line":103,"column":8},"end":{"line":103,"column":48}},"26":{"start":{"line":107,"column":0},"end":{"line":109,"column":1}},"27":{"start":{"line":108,"column":4},"end":{"line":108,"column":16}},"28":{"start":{"line":110,"column":0},"end":{"line":110,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":8}},{"start":{"line":87,"column":8},"end":{"line":87,"column":8}}]},"4":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":12},"end":{"line":87,"column":43}},{"start":{"line":87,"column":47},"end":{"line":87,"column":80}}]},"5":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":55},"end":{"line":91,"column":58}},{"start":{"line":91,"column":61},"end":{"line":91,"column":75}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = asyncify;","","var _isObject = require('lodash/isObject');","","var _isObject2 = _interopRequireDefault(_isObject);","","var _initialParams = require('./internal/initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","var _setImmediate = require('./internal/setImmediate');","","var _setImmediate2 = _interopRequireDefault(_setImmediate);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Take a sync function and make it async, passing its return value to a"," * callback. This is useful for plugging sync functions into a waterfall,"," * series, or other async functions. Any arguments passed to the generated"," * function will be passed to the wrapped function (except for the final"," * callback argument). Errors thrown will be passed to the callback."," *"," * If the function passed to `asyncify` returns a Promise, that promises's"," * resolved/rejected state will be used to call the callback, rather than simply"," * the synchronous return value."," *"," * This also means you can asyncify ES2017 `async` functions."," *"," * @name asyncify"," * @static"," * @memberOf module:Utils"," * @method"," * @alias wrapSync"," * @category Util"," * @param {Function} func - The synchronous function, or Promise-returning"," * function to convert to an {@link AsyncFunction}."," * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be"," * invoked with `(args..., callback)`."," * @example"," *"," * // passing a regular synchronous function"," * async.waterfall(["," *     async.apply(fs.readFile, filename, \"utf8\"),"," *     async.asyncify(JSON.parse),"," *     function (data, next) {"," *         // data is the result of parsing the text."," *         // If there was a parsing error, it would have been caught."," *     }"," * ], callback);"," *"," * // passing a function returning a promise"," * async.waterfall(["," *     async.apply(fs.readFile, filename, \"utf8\"),"," *     async.asyncify(function (contents) {"," *         return db.model.create(contents);"," *     }),"," *     function (model, next) {"," *         // `model` is the instantiated model object."," *         // If there was an error, this function would be skipped."," *     }"," * ], callback);"," *"," * // es2017 example, though `asyncify` is not needed if your JS environment"," * // supports async functions out of the box"," * var q = async.queue(async.asyncify(async function(file) {"," *     var intermediateStep = await processFile(file);"," *     return await somePromise(intermediateStep)"," * }));"," *"," * q.push(files);"," */","function asyncify(func) {","    return (0, _initialParams2.default)(function (args, callback) {","        var result;","        try {","            result = func.apply(this, args);","        } catch (e) {","            return callback(e);","        }","        // if result is Promise object","        if ((0, _isObject2.default)(result) && typeof result.then === 'function') {","            result.then(function (value) {","                invokeCallback(callback, null, value);","            }, function (err) {","                invokeCallback(callback, err.message ? err : new Error(err));","            });","        } else {","            callback(null, result);","        }","    });","}","","function invokeCallback(callback, error, value) {","    try {","        callback(error, value);","    } catch (e) {","        (0, _setImmediate2.default)(rethrow, e);","    }","}","","function rethrow(error) {","    throw error;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"78":1,"79":0,"80":0,"81":0,"82":0,"84":0,"87":0,"88":0,"89":0,"91":0,"94":0,"99":1,"100":0,"101":0,"103":0,"107":1,"108":0,"110":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/initialParams.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/initialParams.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":0,"2":0,"3":1},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":32}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":11},"end":{"line":8,"column":44}}},"3":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":13,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":12,"column":6}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":51}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":34}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":38}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"10":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (fn) {","    return function () /*...args, callback*/{","        var args = (0, _slice2.default)(arguments);","        var callback = args.pop();","        fn.call(this, args, callback);","    };","};","","var _slice = require('./slice');","","var _slice2 = _interopRequireDefault(_slice);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","module.exports = exports['default'];"],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"11":0,"15":1,"17":1,"19":1,"21":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/slice.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/slice.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"slice","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":7,"column":0},"end":{"line":15,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":22}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":55}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":31}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":45}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":18}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":36}}},"branchMap":{},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = slice;","function slice(arrayLike, start) {","    start = start | 0;","    var newLen = Math.max(arrayLike.length - start, 0);","    var newArr = Array(newLen);","    for (var idx = 0; idx < newLen; idx++) {","        newArr[idx] = arrayLike[start + idx];","    }","    return newArr;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"14":0,"16":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/setImmediate.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/setImmediate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":1,"14":2,"15":0,"16":0,"17":0,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,1],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,0],"6":[0,0]},"f":{"1":1,"2":0,"3":2,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"fallback","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":22}}},"3":{"name":"wrap","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":21}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":11},"end":{"line":24,"column":39}}},"5":{"name":"(anonymous_5)","line":26,"loc":{"start":{"line":26,"column":14},"end":{"line":26,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":20}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":32}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":45}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"8":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":99}},"10":{"start":{"line":17,"column":0},"end":{"line":17,"column":110}},"11":{"start":{"line":19,"column":0},"end":{"line":21,"column":1}},"12":{"start":{"line":20,"column":4},"end":{"line":20,"column":22}},"13":{"start":{"line":23,"column":0},"end":{"line":30,"column":1}},"14":{"start":{"line":24,"column":4},"end":{"line":29,"column":6}},"15":{"start":{"line":25,"column":8},"end":{"line":25,"column":54}},"16":{"start":{"line":26,"column":8},"end":{"line":28,"column":11}},"17":{"start":{"line":27,"column":12},"end":{"line":27,"column":33}},"18":{"start":{"line":32,"column":0},"end":{"line":32,"column":11}},"19":{"start":{"line":34,"column":0},"end":{"line":40,"column":1}},"20":{"start":{"line":35,"column":4},"end":{"line":35,"column":26}},"21":{"start":{"line":36,"column":7},"end":{"line":40,"column":1}},"22":{"start":{"line":37,"column":4},"end":{"line":37,"column":30}},"23":{"start":{"line":39,"column":4},"end":{"line":39,"column":22}},"24":{"start":{"line":42,"column":0},"end":{"line":42,"column":31}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]},"3":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":48},"end":{"line":16,"column":82}},{"start":{"line":16,"column":86},"end":{"line":16,"column":98}}]},"4":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":67}},{"start":{"line":17,"column":71},"end":{"line":17,"column":109}}]},"5":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":0},"end":{"line":34,"column":0}},{"start":{"line":34,"column":0},"end":{"line":34,"column":0}}]},"6":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":7},"end":{"line":36,"column":7}},{"start":{"line":36,"column":7},"end":{"line":36,"column":7}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.hasNextTick = exports.hasSetImmediate = undefined;","exports.fallback = fallback;","exports.wrap = wrap;","","var _slice = require('./slice');","","var _slice2 = _interopRequireDefault(_slice);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var hasSetImmediate = exports.hasSetImmediate = typeof setImmediate === 'function' && setImmediate;","var hasNextTick = exports.hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';","","function fallback(fn) {","    setTimeout(fn, 0);","}","","function wrap(defer) {","    return function (fn /*, ...args*/) {","        var args = (0, _slice2.default)(arguments, 1);","        defer(function () {","            fn.apply(null, args);","        });","    };","}","","var _defer;","","if (hasSetImmediate) {","    _defer = setImmediate;","} else if (hasNextTick) {","    _defer = process.nextTick;","} else {","    _defer = fallback;","}","","exports.default = wrap(_defer);"],"l":{"3":1,"6":1,"7":1,"8":1,"10":1,"12":1,"14":1,"16":1,"17":1,"19":1,"20":0,"23":1,"24":2,"25":0,"26":0,"27":0,"32":1,"34":1,"35":1,"36":0,"37":0,"39":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/doLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/doLimit.js","s":{"1":1,"2":1,"3":1,"4":24,"5":0,"6":1},"b":{},"f":{"1":24,"2":0},"fnMap":{"1":{"name":"doLimit","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":11},"end":{"line":8,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":10,"column":6}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":55}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}}},"branchMap":{},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = doLimit;","function doLimit(fn, limit) {","    return function (iterable, iteratee, callback) {","        return fn(iterable, limit, iteratee, callback);","    };","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"7":1,"8":24,"9":0,"12":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/notId.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/notId.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"notId","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":14}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}}},"branchMap":{},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = notId;","function notId(v) {","    return !v;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"7":1,"8":0,"10":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/allLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/allLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":1,"11":1},"b":{"1":[0,3],"2":[3,3]},"f":{"1":3},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":65}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"9":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"10":{"start":{"line":41,"column":0},"end":{"line":41,"column":112}},"11":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","var _notId = require('./internal/notId');","","var _notId2 = _interopRequireDefault(_notId);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time."," *"," * @name everyLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.every]{@link module:Collections.every}"," * @alias allLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in parallel."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," */","exports.default = (0, _doParallelLimit2.default)((0, _createTester2.default)(_notId2.default, _notId2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":3,"41":1,"42":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/doParallelLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/doParallelLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":10,"11":0,"12":1},"b":{"1":[1,1],"2":[2,2]},"f":{"1":2,"2":10,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"doParallelLimit","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":29}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":11},"end":{"line":19,"column":53}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":18,"column":0},"end":{"line":22,"column":1}},"10":{"start":{"line":19,"column":4},"end":{"line":21,"column":6}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":104}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = doParallelLimit;","","var _eachOfLimit = require('./eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function doParallelLimit(fn) {","    return function (obj, limit, iteratee, callback) {","        return fn((0, _eachOfLimit2.default)(limit), obj, (0, _wrapAsync2.default)(iteratee), callback);","    };","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"18":1,"19":10,"20":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/allSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/allSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":55}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":66}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _everyLimit = require('./everyLimit');","","var _everyLimit2 = _interopRequireDefault(_everyLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time."," *"," * @name everySeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.every]{@link module:Collections.every}"," * @alias allSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in series."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," */","exports.default = (0, _doLimit2.default)(_everyLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/everyLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/everyLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":1,"11":1},"b":{"1":[0,3],"2":[3,3]},"f":{"1":3},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":65}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"9":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"10":{"start":{"line":41,"column":0},"end":{"line":41,"column":112}},"11":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","var _notId = require('./internal/notId');","","var _notId2 = _interopRequireDefault(_notId);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time."," *"," * @name everyLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.every]{@link module:Collections.every}"," * @alias allLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in parallel."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," */","exports.default = (0, _doParallelLimit2.default)((0, _createTester2.default)(_notId2.default, _notId2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":3,"41":1,"42":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/any.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/any.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":1,"11":1},"b":{"1":[0,3],"2":[3,3]},"f":{"1":3},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":51}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"9":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"10":{"start":{"line":51,"column":0},"end":{"line":51,"column":102}},"11":{"start":{"line":52,"column":0},"end":{"line":52,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns `true` if at least one element in the `coll` satisfies an async test."," * If any iteratee call returns `true`, the main `callback` is immediately"," * called."," *"," * @name some"," * @static"," * @memberOf module:Collections"," * @method"," * @alias any"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in parallel."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," * @example"," *"," * async.some(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // if result is true then at least one of the files exists"," * });"," */","exports.default = (0, _doParallel2.default)((0, _createTester2.default)(Boolean, _identity2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":3,"51":1,"52":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/anyLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/anyLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":1,"11":1},"b":{"1":[0,3],"2":[3,3]},"f":{"1":3},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":65}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":51}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"9":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"10":{"start":{"line":42,"column":0},"end":{"line":42,"column":107}},"11":{"start":{"line":43,"column":0},"end":{"line":43,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time."," *"," * @name someLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.some]{@link module:Collections.some}"," * @alias anyLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in parallel."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," */","exports.default = (0, _doParallelLimit2.default)((0, _createTester2.default)(Boolean, _identity2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":3,"42":1,"43":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/anySeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/anySeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":37,"column":0},"end":{"line":37,"column":65}},"9":{"start":{"line":38,"column":0},"end":{"line":38,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _someLimit = require('./someLimit');","","var _someLimit2 = _interopRequireDefault(_someLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time."," *"," * @name someSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.some]{@link module:Collections.some}"," * @alias anySeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in series."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," */","exports.default = (0, _doLimit2.default)(_someLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"37":1,"38":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/someLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/someLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":1,"11":1},"b":{"1":[0,3],"2":[3,3]},"f":{"1":3},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":65}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":51}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"9":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"10":{"start":{"line":42,"column":0},"end":{"line":42,"column":107}},"11":{"start":{"line":43,"column":0},"end":{"line":43,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time."," *"," * @name someLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.some]{@link module:Collections.some}"," * @alias anyLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in parallel."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," */","exports.default = (0, _doParallelLimit2.default)((0, _createTester2.default)(Boolean, _identity2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":3,"42":1,"43":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/applyEach.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/applyEach.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":49}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":41}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":50,"column":0},"end":{"line":50,"column":58}},"9":{"start":{"line":51,"column":0},"end":{"line":51,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _applyEach = require('./internal/applyEach');","","var _applyEach2 = _interopRequireDefault(_applyEach);","","var _map = require('./map');","","var _map2 = _interopRequireDefault(_map);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Applies the provided arguments to each function in the array, calling"," * `callback` after all functions have completed. If you only provide the first"," * argument, `fns`, then it will return a function which lets you pass in the"," * arguments as if it were a single function call. If more arguments are"," * provided, `callback` is required while `args` is still optional."," *"," * @name applyEach"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s"," * to all call with the same arguments"," * @param {...*} [args] - any number of separate arguments to pass to the"," * function."," * @param {Function} [callback] - the final argument should be the callback,"," * called when all functions have completed processing."," * @returns {Function} - If only the first argument, `fns`, is provided, it will"," * return a function which lets you pass in the arguments as if it were a single"," * function call. The signature is `(..args, callback)`. If invoked with any"," * arguments, `callback` is required."," * @example"," *"," * async.applyEach([enableSearch, updateSchema], 'bucket', callback);"," *"," * // partial application example:"," * async.each("," *     buckets,"," *     async.applyEach([enableSearch, updateSchema]),"," *     callback"," * );"," */","exports.default = (0, _applyEach2.default)(_map2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"50":1,"51":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/applyEach.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/applyEach.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":2,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[1,2],"2":[3,3],"3":[0,0]},"f":{"1":3,"2":2,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"applyEach","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":27}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":11},"end":{"line":23,"column":40}}},"4":{"name":"(anonymous_4)","line":25,"loc":{"start":{"line":25,"column":46},"end":{"line":25,"column":72}}},"5":{"name":"(anonymous_5)","line":27,"loc":{"start":{"line":27,"column":31},"end":{"line":27,"column":49}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":48}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":61}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":40}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":22,"column":0},"end":{"line":37,"column":1}},"12":{"start":{"line":23,"column":4},"end":{"line":36,"column":6}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":54}},"14":{"start":{"line":25,"column":8},"end":{"line":30,"column":11}},"15":{"start":{"line":26,"column":12},"end":{"line":26,"column":28}},"16":{"start":{"line":27,"column":12},"end":{"line":29,"column":25}},"17":{"start":{"line":28,"column":16},"end":{"line":28,"column":74}},"18":{"start":{"line":31,"column":8},"end":{"line":35,"column":9}},"19":{"start":{"line":32,"column":12},"end":{"line":32,"column":40}},"20":{"start":{"line":34,"column":12},"end":{"line":34,"column":22}},"21":{"start":{"line":38,"column":0},"end":{"line":38,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":8}},{"start":{"line":31,"column":8},"end":{"line":31,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = applyEach;","","var _slice = require('./slice');","","var _slice2 = _interopRequireDefault(_slice);","","var _initialParams = require('./initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function applyEach(eachfn) {","    return function (fns /*, ...args*/) {","        var args = (0, _slice2.default)(arguments, 1);","        var go = (0, _initialParams2.default)(function (args, callback) {","            var that = this;","            return eachfn(fns, function (fn, cb) {","                (0, _wrapAsync2.default)(fn).apply(that, args.concat(cb));","            }, callback);","        });","        if (args.length) {","            return go.apply(this, args);","        } else {","            return go;","        }","    };","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"22":1,"23":2,"24":0,"25":0,"26":0,"27":0,"28":0,"31":0,"32":0,"34":0,"38":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/map.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/map.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":51}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":55}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":41}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":53,"column":0},"end":{"line":53,"column":59}},"9":{"start":{"line":54,"column":0},"end":{"line":54,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","var _map = require('./internal/map');","","var _map2 = _interopRequireDefault(_map);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Produces a new collection of values by mapping each value in `coll` through"," * the `iteratee` function. The `iteratee` is called with an item from `coll`"," * and a callback for when it has finished processing. Each of these callback"," * takes 2 arguments: an `error`, and the transformed item from `coll`. If"," * `iteratee` passes an error to its callback, the main `callback` (for the"," * `map` function) is immediately called with the error."," *"," * Note, that since this function applies the `iteratee` to each item in"," * parallel, there is no guarantee that the `iteratee` functions will complete"," * in order. However, the results array will be in the same order as the"," * original `coll`."," *"," * If `map` is passed an Object, the results will be an Array.  The results"," * will roughly be in the order of the original Objects' keys (but this can"," * vary across JavaScript engines)."," *"," * @name map"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with the transformed item."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an Array of the"," * transformed items from the `coll`. Invoked with (err, results)."," * @example"," *"," * async.map(['file1','file2','file3'], fs.stat, function(err, results) {"," *     // results is now an array of stats for each file"," * });"," */","exports.default = (0, _doParallel2.default)(_map2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"53":1,"54":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/map.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/map.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[1,1],"2":[2,2],"3":[0,0],"4":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"_asyncMap","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":52}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":16},"end":{"line":25,"column":46}}},"4":{"name":"(anonymous_4)","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":43}}},"5":{"name":"(anonymous_5)","line":31,"loc":{"start":{"line":31,"column":7},"end":{"line":31,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":18,"column":0},"end":{"line":34,"column":1}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":20}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":21}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":20}},"14":{"start":{"line":23,"column":4},"end":{"line":23,"column":55}},"15":{"start":{"line":25,"column":4},"end":{"line":33,"column":7}},"16":{"start":{"line":26,"column":8},"end":{"line":26,"column":30}},"17":{"start":{"line":27,"column":8},"end":{"line":30,"column":11}},"18":{"start":{"line":28,"column":12},"end":{"line":28,"column":31}},"19":{"start":{"line":29,"column":12},"end":{"line":29,"column":26}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":31}},"21":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":15},"end":{"line":19,"column":23}},{"start":{"line":19,"column":27},"end":{"line":19,"column":41}}]},"4":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":10},"end":{"line":20,"column":13}},{"start":{"line":20,"column":17},"end":{"line":20,"column":19}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = _asyncMap;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _asyncMap(eachfn, arr, iteratee, callback) {","    callback = callback || _noop2.default;","    arr = arr || [];","    var results = [];","    var counter = 0;","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","","    eachfn(arr, function (value, _, callback) {","        var index = counter++;","        _iteratee(value, function (err, v) {","            results[index] = v;","            callback(err);","        });","    }, function (err) {","        callback(err, results);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"27":0,"28":0,"29":0,"32":0,"35":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/applyEachSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/applyEachSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":49}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":53}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":64}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _applyEach = require('./internal/applyEach');","","var _applyEach2 = _interopRequireDefault(_applyEach);","","var _mapSeries = require('./mapSeries');","","var _mapSeries2 = _interopRequireDefault(_mapSeries);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time."," *"," * @name applyEachSeries"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.applyEach]{@link module:ControlFlow.applyEach}"," * @category Control Flow"," * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s to all"," * call with the same arguments"," * @param {...*} [args] - any number of separate arguments to pass to the"," * function."," * @param {Function} [callback] - the final argument should be the callback,"," * called when all functions have completed processing."," * @returns {Function} - If only the first argument is provided, it will return"," * a function which lets you pass in the arguments as if it were a single"," * function call."," */","exports.default = (0, _applyEach2.default)(_mapSeries2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":35,"column":0},"end":{"line":35,"column":64}},"9":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _mapLimit = require('./mapLimit');","","var _mapLimit2 = _interopRequireDefault(_mapLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time."," *"," * @name mapSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with the transformed item."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an array of the"," * transformed items from the `coll`. Invoked with (err, results)."," */","exports.default = (0, _doLimit2.default)(_mapLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"35":1,"36":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":61}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":65}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":41}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":64}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","var _map = require('./internal/map');","","var _map2 = _interopRequireDefault(_map);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time."," *"," * @name mapLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with the transformed item."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an array of the"," * transformed items from the `coll`. Invoked with (err, results)."," */","exports.default = (0, _doParallelLimit2.default)(_map2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/apply.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/apply.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":0,"2":0,"3":1},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":46}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":11},"end":{"line":9,"column":35}}},"3":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":13,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":50}},"4":{"start":{"line":9,"column":4},"end":{"line":12,"column":6}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":55}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":53}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"10":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"11":{"start":{"line":68,"column":0},"end":{"line":68,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (fn /*, ...args*/) {","    var args = (0, _slice2.default)(arguments, 1);","    return function () /*callArgs*/{","        var callArgs = (0, _slice2.default)(arguments);","        return fn.apply(null, args.concat(callArgs));","    };","};","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","",";","","/**"," * Creates a continuation function with some arguments already applied."," *"," * Useful as a shorthand when combined with other control flow functions. Any"," * arguments passed to the returned function are added to the arguments"," * originally passed to apply."," *"," * @name apply"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {Function} fn - The function you want to eventually apply all"," * arguments to. Invokes with (arguments...)."," * @param {...*} arguments... - Any number of arguments to automatically apply"," * when the continuation is called."," * @returns {Function} the partially-applied function"," * @example"," *"," * // using apply"," * async.parallel(["," *     async.apply(fs.writeFile, 'testfile1', 'test1'),"," *     async.apply(fs.writeFile, 'testfile2', 'test2')"," * ]);"," *"," *"," * // the same process without using apply"," * async.parallel(["," *     function(callback) {"," *         fs.writeFile('testfile1', 'test1', callback);"," *     },"," *     function(callback) {"," *         fs.writeFile('testfile2', 'test2', callback);"," *     }"," * ]);"," *"," * // It's possible to pass any number of additional arguments when calling the"," * // continuation:"," *"," * node> var fn = async.apply(sys.puts, 'one');"," * node> fn('two', 'three');"," * one"," * two"," * three"," */","module.exports = exports['default'];"],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"11":0,"15":1,"17":1,"19":1,"68":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/autoInject.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/autoInject.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":6,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1},"b":{"1":[1,5],"2":[6,6],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0]},"f":{"1":6,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":37}}},"2":{"name":"parseParams","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":27}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":20},"end":{"line":43,"column":35}}},"4":{"name":"autoInject","line":131,"loc":{"start":{"line":131,"column":0},"end":{"line":131,"column":37}}},"5":{"name":"(anonymous_5)","line":134,"loc":{"start":{"line":134,"column":37},"end":{"line":134,"column":60}}},"6":{"name":"newTask","line":159,"loc":{"start":{"line":159,"column":8},"end":{"line":159,"column":42}}},"7":{"name":"(anonymous_7)","line":160,"loc":{"start":{"line":160,"column":58},"end":{"line":160,"column":74}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":48}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":41}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":49}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":35}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":43}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":49}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":53}},"15":{"start":{"line":32,"column":0},"end":{"line":32,"column":95}},"16":{"start":{"line":32,"column":39},"end":{"line":32,"column":93}},"17":{"start":{"line":34,"column":0},"end":{"line":34,"column":67}},"18":{"start":{"line":35,"column":0},"end":{"line":35,"column":23}},"19":{"start":{"line":36,"column":0},"end":{"line":36,"column":28}},"20":{"start":{"line":37,"column":0},"end":{"line":37,"column":56}},"21":{"start":{"line":39,"column":0},"end":{"line":47,"column":1}},"22":{"start":{"line":40,"column":4},"end":{"line":40,"column":55}},"23":{"start":{"line":41,"column":4},"end":{"line":41,"column":51}},"24":{"start":{"line":42,"column":4},"end":{"line":42,"column":48}},"25":{"start":{"line":43,"column":4},"end":{"line":45,"column":7}},"26":{"start":{"line":44,"column":8},"end":{"line":44,"column":60}},"27":{"start":{"line":46,"column":4},"end":{"line":46,"column":16}},"28":{"start":{"line":131,"column":0},"end":{"line":169,"column":1}},"29":{"start":{"line":132,"column":4},"end":{"line":132,"column":22}},"30":{"start":{"line":134,"column":4},"end":{"line":166,"column":7}},"31":{"start":{"line":135,"column":8},"end":{"line":135,"column":19}},"32":{"start":{"line":136,"column":8},"end":{"line":136,"column":56}},"33":{"start":{"line":137,"column":8},"end":{"line":137,"column":94}},"34":{"start":{"line":139,"column":8},"end":{"line":157,"column":9}},"35":{"start":{"line":140,"column":12},"end":{"line":140,"column":41}},"36":{"start":{"line":141,"column":12},"end":{"line":141,"column":47}},"37":{"start":{"line":143,"column":12},"end":{"line":143,"column":80}},"38":{"start":{"line":144,"column":15},"end":{"line":157,"column":9}},"39":{"start":{"line":146,"column":12},"end":{"line":146,"column":35}},"40":{"start":{"line":148,"column":12},"end":{"line":148,"column":41}},"41":{"start":{"line":149,"column":12},"end":{"line":151,"column":13}},"42":{"start":{"line":150,"column":16},"end":{"line":150,"column":90}},"43":{"start":{"line":154,"column":12},"end":{"line":154,"column":41}},"44":{"start":{"line":154,"column":28},"end":{"line":154,"column":41}},"45":{"start":{"line":156,"column":12},"end":{"line":156,"column":51}},"46":{"start":{"line":159,"column":8},"end":{"line":165,"column":9}},"47":{"start":{"line":160,"column":12},"end":{"line":162,"column":15}},"48":{"start":{"line":161,"column":16},"end":{"line":161,"column":37}},"49":{"start":{"line":163,"column":12},"end":{"line":163,"column":33}},"50":{"start":{"line":164,"column":12},"end":{"line":164,"column":66}},"51":{"start":{"line":168,"column":4},"end":{"line":168,"column":44}},"52":{"start":{"line":170,"column":0},"end":{"line":170,"column":36}}},"branchMap":{"1":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":70},"end":{"line":32,"column":73}},{"start":{"line":32,"column":76},"end":{"line":32,"column":92}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":46},"end":{"line":32,"column":49}},{"start":{"line":32,"column":53},"end":{"line":32,"column":67}}]},"3":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":18},"end":{"line":42,"column":42}},{"start":{"line":42,"column":45},"end":{"line":42,"column":47}}]},"4":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":24},"end":{"line":137,"column":34}},{"start":{"line":137,"column":38},"end":{"line":137,"column":57}},{"start":{"line":137,"column":61},"end":{"line":137,"column":70}},{"start":{"line":137,"column":74},"end":{"line":137,"column":93}}]},"5":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":139,"column":8}},{"start":{"line":139,"column":8},"end":{"line":139,"column":8}}]},"6":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":62},"end":{"line":143,"column":69}},{"start":{"line":143,"column":72},"end":{"line":143,"column":78}}]},"7":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":15},"end":{"line":144,"column":15}},{"start":{"line":144,"column":15},"end":{"line":144,"column":15}}]},"8":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":149,"column":12}},{"start":{"line":149,"column":12},"end":{"line":149,"column":12}}]},"9":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":16},"end":{"line":149,"column":35}},{"start":{"line":149,"column":39},"end":{"line":149,"column":49}},{"start":{"line":149,"column":53},"end":{"line":149,"column":72}}]},"10":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":12},"end":{"line":154,"column":12}},{"start":{"line":154,"column":12},"end":{"line":154,"column":12}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = autoInject;","","var _auto = require('./auto');","","var _auto2 = _interopRequireDefault(_auto);","","var _baseForOwn = require('lodash/_baseForOwn');","","var _baseForOwn2 = _interopRequireDefault(_baseForOwn);","","var _arrayMap = require('lodash/_arrayMap');","","var _arrayMap2 = _interopRequireDefault(_arrayMap);","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _trim = require('lodash/trim');","","var _trim2 = _interopRequireDefault(_trim);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var FN_ARGS = /^(?:async\\s+)?(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;","var FN_ARG_SPLIT = /,/;","var FN_ARG = /(=.+)?(\\s*)$/;","var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;","","function parseParams(func) {","    func = func.toString().replace(STRIP_COMMENTS, '');","    func = func.match(FN_ARGS)[2].replace(' ', '');","    func = func ? func.split(FN_ARG_SPLIT) : [];","    func = func.map(function (arg) {","        return (0, _trim2.default)(arg.replace(FN_ARG, ''));","    });","    return func;","}","","/**"," * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent"," * tasks are specified as parameters to the function, after the usual callback"," * parameter, with the parameter names matching the names of the tasks it"," * depends on. This can provide even more readable task graphs which can be"," * easier to maintain."," *"," * If a final callback is specified, the task results are similarly injected,"," * specified as named parameters after the initial error parameter."," *"," * The autoInject function is purely syntactic sugar and its semantics are"," * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}."," *"," * @name autoInject"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.auto]{@link module:ControlFlow.auto}"," * @category Control Flow"," * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of"," * the form 'func([dependencies...], callback). The object's key of a property"," * serves as the name of the task defined by that property, i.e. can be used"," * when specifying requirements for other tasks."," * * The `callback` parameter is a `callback(err, result)` which must be called"," *   when finished, passing an `error` (which can be `null`) and the result of"," *   the function's execution. The remaining parameters name other tasks on"," *   which the task is dependent, and the results from those tasks are the"," *   arguments of those parameters."," * @param {Function} [callback] - An optional callback which is called when all"," * the tasks have been completed. It receives the `err` argument if any `tasks`"," * pass an error to their callback, and a `results` object with any completed"," * task results, similar to `auto`."," * @example"," *"," * //  The example from `auto` can be rewritten as follows:"," * async.autoInject({"," *     get_data: function(callback) {"," *         // async code to get some data"," *         callback(null, 'data', 'converted to array');"," *     },"," *     make_folder: function(callback) {"," *         // async code to create a directory to store a file in"," *         // this is run at the same time as getting the data"," *         callback(null, 'folder');"," *     },"," *     write_file: function(get_data, make_folder, callback) {"," *         // once there is some data and the directory exists,"," *         // write the data to a file in the directory"," *         callback(null, 'filename');"," *     },"," *     email_link: function(write_file, callback) {"," *         // once the file is written let's email a link to it..."," *         // write_file contains the filename returned by write_file."," *         callback(null, {'file':write_file, 'email':'user@example.com'});"," *     }"," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('email_link = ', results.email_link);"," * });"," *"," * // If you are using a JS minifier that mangles parameter names, `autoInject`"," * // will not work with plain functions, since the parameter names will be"," * // collapsed to a single letter identifier.  To work around this, you can"," * // explicitly specify the names of the parameters your task function needs"," * // in an array, similar to Angular.js dependency injection."," *"," * // This still has an advantage over plain `auto`, since the results a task"," * // depends on are still spread into arguments."," * async.autoInject({"," *     //..."," *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {"," *         callback(null, 'filename');"," *     }],"," *     email_link: ['write_file', function(write_file, callback) {"," *         callback(null, {'file':write_file, 'email':'user@example.com'});"," *     }]"," *     //..."," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('email_link = ', results.email_link);"," * });"," */","function autoInject(tasks, callback) {","    var newTasks = {};","","    (0, _baseForOwn2.default)(tasks, function (taskFn, key) {","        var params;","        var fnIsAsync = (0, _wrapAsync.isAsync)(taskFn);","        var hasNoDeps = !fnIsAsync && taskFn.length === 1 || fnIsAsync && taskFn.length === 0;","","        if ((0, _isArray2.default)(taskFn)) {","            params = taskFn.slice(0, -1);","            taskFn = taskFn[taskFn.length - 1];","","            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);","        } else if (hasNoDeps) {","            // no dependencies, use the function as-is","            newTasks[key] = taskFn;","        } else {","            params = parseParams(taskFn);","            if (taskFn.length === 0 && !fnIsAsync && params.length === 0) {","                throw new Error(\"autoInject task functions require explicit parameters.\");","            }","","            // remove callback param","            if (!fnIsAsync) params.pop();","","            newTasks[key] = params.concat(newTask);","        }","","        function newTask(results, taskCb) {","            var newArgs = (0, _arrayMap2.default)(params, function (name) {","                return results[name];","            });","            newArgs.push(taskCb);","            (0, _wrapAsync2.default)(taskFn).apply(null, newArgs);","        }","    });","","    (0, _auto2.default)(newTasks, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":1,"30":1,"32":6,"34":1,"35":1,"36":1,"37":1,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"46":0,"131":1,"132":0,"134":0,"135":0,"136":0,"137":0,"139":0,"140":0,"141":0,"143":0,"144":0,"146":0,"148":0,"149":0,"150":0,"154":0,"156":0,"159":1,"160":0,"161":0,"163":0,"164":0,"168":0,"170":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/auto.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/auto.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":10,"121":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[1,9],"23":[10,10]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":10},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":58}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":37},"end":{"line":36,"column":58}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":47},"end":{"line":53,"column":73}}},"4":{"name":"(anonymous_4)","line":57,"loc":{"start":{"line":57,"column":40},"end":{"line":57,"column":52}}},"5":{"name":"enqueueTask","line":69,"loc":{"start":{"line":69,"column":4},"end":{"line":69,"column":36}}},"6":{"name":"(anonymous_6)","line":70,"loc":{"start":{"line":70,"column":24},"end":{"line":70,"column":36}}},"7":{"name":"processQueue","line":75,"loc":{"start":{"line":75,"column":4},"end":{"line":75,"column":28}}},"8":{"name":"addListener","line":85,"loc":{"start":{"line":85,"column":4},"end":{"line":85,"column":39}}},"9":{"name":"taskComplete","line":94,"loc":{"start":{"line":94,"column":4},"end":{"line":94,"column":36}}},"10":{"name":"(anonymous_10)","line":96,"loc":{"start":{"line":96,"column":48},"end":{"line":96,"column":62}}},"11":{"name":"runTask","line":102,"loc":{"start":{"line":102,"column":4},"end":{"line":102,"column":32}}},"12":{"name":"(anonymous_12)","line":105,"loc":{"start":{"line":105,"column":51},"end":{"line":105,"column":74}}},"13":{"name":"(anonymous_13)","line":112,"loc":{"start":{"line":112,"column":51},"end":{"line":112,"column":72}}},"14":{"name":"checkForDeadlocks","line":135,"loc":{"start":{"line":135,"column":4},"end":{"line":135,"column":33}}},"15":{"name":"(anonymous_15)","line":144,"loc":{"start":{"line":144,"column":65},"end":{"line":144,"column":86}}},"16":{"name":"getDependents","line":156,"loc":{"start":{"line":156,"column":4},"end":{"line":156,"column":37}}},"17":{"name":"(anonymous_17)","line":158,"loc":{"start":{"line":158,"column":41},"end":{"line":158,"column":62}}},"18":{"name":"_interopRequireDefault","line":207,"loc":{"start":{"line":207,"column":0},"end":{"line":207,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":165,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":12,"column":5}},"4":{"start":{"line":10,"column":8},"end":{"line":10,"column":31}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":27}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":63}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":42}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":31}},"9":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"10":{"start":{"line":17,"column":8},"end":{"line":17,"column":30}},"11":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":31}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":21}},"14":{"start":{"line":24,"column":4},"end":{"line":24,"column":25}},"15":{"start":{"line":25,"column":4},"end":{"line":25,"column":25}},"16":{"start":{"line":27,"column":4},"end":{"line":27,"column":40}},"17":{"start":{"line":29,"column":4},"end":{"line":29,"column":24}},"18":{"start":{"line":32,"column":4},"end":{"line":32,"column":26}},"19":{"start":{"line":34,"column":4},"end":{"line":34,"column":35}},"20":{"start":{"line":36,"column":4},"end":{"line":64,"column":7}},"21":{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},"22":{"start":{"line":39,"column":12},"end":{"line":39,"column":37}},"23":{"start":{"line":40,"column":12},"end":{"line":40,"column":35}},"24":{"start":{"line":41,"column":12},"end":{"line":41,"column":19}},"25":{"start":{"line":44,"column":8},"end":{"line":44,"column":58}},"26":{"start":{"line":45,"column":8},"end":{"line":45,"column":56}},"27":{"start":{"line":46,"column":8},"end":{"line":50,"column":9}},"28":{"start":{"line":47,"column":12},"end":{"line":47,"column":35}},"29":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"30":{"start":{"line":49,"column":12},"end":{"line":49,"column":19}},"31":{"start":{"line":51,"column":8},"end":{"line":51,"column":59}},"32":{"start":{"line":53,"column":8},"end":{"line":63,"column":11}},"33":{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},"34":{"start":{"line":55,"column":16},"end":{"line":55,"column":150}},"35":{"start":{"line":57,"column":12},"end":{"line":62,"column":15}},"36":{"start":{"line":58,"column":16},"end":{"line":58,"column":40}},"37":{"start":{"line":59,"column":16},"end":{"line":61,"column":17}},"38":{"start":{"line":60,"column":20},"end":{"line":60,"column":43}},"39":{"start":{"line":66,"column":4},"end":{"line":66,"column":24}},"40":{"start":{"line":67,"column":4},"end":{"line":67,"column":19}},"41":{"start":{"line":69,"column":4},"end":{"line":73,"column":5}},"42":{"start":{"line":70,"column":8},"end":{"line":72,"column":11}},"43":{"start":{"line":71,"column":12},"end":{"line":71,"column":31}},"44":{"start":{"line":75,"column":4},"end":{"line":83,"column":5}},"45":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"46":{"start":{"line":77,"column":12},"end":{"line":77,"column":43}},"47":{"start":{"line":79,"column":8},"end":{"line":82,"column":9}},"48":{"start":{"line":80,"column":12},"end":{"line":80,"column":41}},"49":{"start":{"line":81,"column":12},"end":{"line":81,"column":18}},"50":{"start":{"line":85,"column":4},"end":{"line":92,"column":5}},"51":{"start":{"line":86,"column":8},"end":{"line":86,"column":48}},"52":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"53":{"start":{"line":88,"column":12},"end":{"line":88,"column":53}},"54":{"start":{"line":91,"column":8},"end":{"line":91,"column":31}},"55":{"start":{"line":94,"column":4},"end":{"line":100,"column":5}},"56":{"start":{"line":95,"column":8},"end":{"line":95,"column":54}},"57":{"start":{"line":96,"column":8},"end":{"line":98,"column":11}},"58":{"start":{"line":97,"column":12},"end":{"line":97,"column":17}},"59":{"start":{"line":99,"column":8},"end":{"line":99,"column":23}},"60":{"start":{"line":102,"column":4},"end":{"line":133,"column":5}},"61":{"start":{"line":103,"column":8},"end":{"line":103,"column":29}},"62":{"start":{"line":103,"column":22},"end":{"line":103,"column":29}},"63":{"start":{"line":105,"column":8},"end":{"line":124,"column":11}},"64":{"start":{"line":106,"column":12},"end":{"line":106,"column":27}},"65":{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},"66":{"start":{"line":108,"column":16},"end":{"line":108,"column":60}},"67":{"start":{"line":110,"column":12},"end":{"line":123,"column":13}},"68":{"start":{"line":111,"column":16},"end":{"line":111,"column":37}},"69":{"start":{"line":112,"column":16},"end":{"line":114,"column":19}},"70":{"start":{"line":113,"column":20},"end":{"line":113,"column":44}},"71":{"start":{"line":115,"column":16},"end":{"line":115,"column":42}},"72":{"start":{"line":116,"column":16},"end":{"line":116,"column":32}},"73":{"start":{"line":117,"column":16},"end":{"line":117,"column":48}},"74":{"start":{"line":119,"column":16},"end":{"line":119,"column":43}},"75":{"start":{"line":121,"column":16},"end":{"line":121,"column":38}},"76":{"start":{"line":122,"column":16},"end":{"line":122,"column":34}},"77":{"start":{"line":126,"column":8},"end":{"line":126,"column":23}},"78":{"start":{"line":127,"column":8},"end":{"line":127,"column":69}},"79":{"start":{"line":128,"column":8},"end":{"line":132,"column":9}},"80":{"start":{"line":129,"column":12},"end":{"line":129,"column":42}},"81":{"start":{"line":131,"column":12},"end":{"line":131,"column":33}},"82":{"start":{"line":135,"column":4},"end":{"line":154,"column":5}},"83":{"start":{"line":139,"column":8},"end":{"line":139,"column":24}},"84":{"start":{"line":140,"column":8},"end":{"line":140,"column":24}},"85":{"start":{"line":141,"column":8},"end":{"line":149,"column":9}},"86":{"start":{"line":142,"column":12},"end":{"line":142,"column":45}},"87":{"start":{"line":143,"column":12},"end":{"line":143,"column":22}},"88":{"start":{"line":144,"column":12},"end":{"line":148,"column":15}},"89":{"start":{"line":145,"column":16},"end":{"line":147,"column":17}},"90":{"start":{"line":146,"column":20},"end":{"line":146,"column":49}},"91":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"92":{"start":{"line":152,"column":12},"end":{"line":152,"column":93}},"93":{"start":{"line":156,"column":4},"end":{"line":164,"column":5}},"94":{"start":{"line":157,"column":8},"end":{"line":157,"column":24}},"95":{"start":{"line":158,"column":8},"end":{"line":162,"column":11}},"96":{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},"97":{"start":{"line":160,"column":16},"end":{"line":160,"column":33}},"98":{"start":{"line":163,"column":8},"end":{"line":163,"column":22}},"99":{"start":{"line":167,"column":0},"end":{"line":167,"column":46}},"100":{"start":{"line":169,"column":0},"end":{"line":169,"column":53}},"101":{"start":{"line":171,"column":0},"end":{"line":171,"column":48}},"102":{"start":{"line":173,"column":0},"end":{"line":173,"column":55}},"103":{"start":{"line":175,"column":0},"end":{"line":175,"column":50}},"104":{"start":{"line":177,"column":0},"end":{"line":177,"column":57}},"105":{"start":{"line":179,"column":0},"end":{"line":179,"column":41}},"106":{"start":{"line":181,"column":0},"end":{"line":181,"column":49}},"107":{"start":{"line":183,"column":0},"end":{"line":183,"column":35}},"108":{"start":{"line":185,"column":0},"end":{"line":185,"column":43}},"109":{"start":{"line":187,"column":0},"end":{"line":187,"column":35}},"110":{"start":{"line":189,"column":0},"end":{"line":189,"column":43}},"111":{"start":{"line":191,"column":0},"end":{"line":191,"column":41}},"112":{"start":{"line":193,"column":0},"end":{"line":193,"column":45}},"113":{"start":{"line":195,"column":0},"end":{"line":195,"column":39}},"114":{"start":{"line":197,"column":0},"end":{"line":197,"column":43}},"115":{"start":{"line":199,"column":0},"end":{"line":199,"column":47}},"116":{"start":{"line":201,"column":0},"end":{"line":201,"column":51}},"117":{"start":{"line":203,"column":0},"end":{"line":203,"column":49}},"118":{"start":{"line":205,"column":0},"end":{"line":205,"column":53}},"119":{"start":{"line":207,"column":0},"end":{"line":207,"column":95}},"120":{"start":{"line":207,"column":39},"end":{"line":207,"column":93}},"121":{"start":{"line":209,"column":0},"end":{"line":209,"column":36}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":35},"end":{"line":13,"column":43}},{"start":{"line":13,"column":47},"end":{"line":13,"column":61}}]},"3":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"4":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":8}},{"start":{"line":37,"column":8},"end":{"line":37,"column":8}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"7":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":12}},{"start":{"line":54,"column":12},"end":{"line":54,"column":12}}]},"8":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":16},"end":{"line":59,"column":16}},{"start":{"line":59,"column":16},"end":{"line":59,"column":16}}]},"9":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]},"10":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":12},"end":{"line":76,"column":35}},{"start":{"line":76,"column":39},"end":{"line":76,"column":57}}]},"11":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":15},"end":{"line":79,"column":32}},{"start":{"line":79,"column":36},"end":{"line":79,"column":62}}]},"12":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":8}},{"start":{"line":87,"column":8},"end":{"line":87,"column":8}}]},"13":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":28},"end":{"line":95,"column":47}},{"start":{"line":95,"column":51},"end":{"line":95,"column":53}}]},"14":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":103,"column":8}},{"start":{"line":103,"column":8},"end":{"line":103,"column":8}}]},"15":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":12}},{"start":{"line":107,"column":12},"end":{"line":107,"column":12}}]},"16":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":12}},{"start":{"line":110,"column":12},"end":{"line":110,"column":12}}]},"17":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":128,"column":8}},{"start":{"line":128,"column":8},"end":{"line":128,"column":8}}]},"18":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":16},"end":{"line":145,"column":16}},{"start":{"line":145,"column":16},"end":{"line":145,"column":16}}]},"19":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":151,"column":8}},{"start":{"line":151,"column":8},"end":{"line":151,"column":8}}]},"20":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":12},"end":{"line":159,"column":12}},{"start":{"line":159,"column":12},"end":{"line":159,"column":12}}]},"21":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":16},"end":{"line":159,"column":44}},{"start":{"line":159,"column":48},"end":{"line":159,"column":98}}]},"22":{"line":207,"type":"cond-expr","locations":[{"start":{"line":207,"column":70},"end":{"line":207,"column":73}},{"start":{"line":207,"column":76},"end":{"line":207,"column":92}}]},"23":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":46},"end":{"line":207,"column":49}},{"start":{"line":207,"column":53},"end":{"line":207,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (tasks, concurrency, callback) {","    if (typeof concurrency === 'function') {","        // concurrency is optional, shift the args.","        callback = concurrency;","        concurrency = null;","    }","    callback = (0, _once2.default)(callback || _noop2.default);","    var keys = (0, _keys2.default)(tasks);","    var numTasks = keys.length;","    if (!numTasks) {","        return callback(null);","    }","    if (!concurrency) {","        concurrency = numTasks;","    }","","    var results = {};","    var runningTasks = 0;","    var hasError = false;","","    var listeners = Object.create(null);","","    var readyTasks = [];","","    // for cycle detection:","    var readyToCheck = []; // tasks that have been identified as reachable","    // without the possibility of returning to an ancestor task","    var uncheckedDependencies = {};","","    (0, _baseForOwn2.default)(tasks, function (task, key) {","        if (!(0, _isArray2.default)(task)) {","            // no dependencies","            enqueueTask(key, [task]);","            readyToCheck.push(key);","            return;","        }","","        var dependencies = task.slice(0, task.length - 1);","        var remainingDependencies = dependencies.length;","        if (remainingDependencies === 0) {","            enqueueTask(key, task);","            readyToCheck.push(key);","            return;","        }","        uncheckedDependencies[key] = remainingDependencies;","","        (0, _arrayEach2.default)(dependencies, function (dependencyName) {","            if (!tasks[dependencyName]) {","                throw new Error('async.auto task `' + key + '` has a non-existent dependency `' + dependencyName + '` in ' + dependencies.join(', '));","            }","            addListener(dependencyName, function () {","                remainingDependencies--;","                if (remainingDependencies === 0) {","                    enqueueTask(key, task);","                }","            });","        });","    });","","    checkForDeadlocks();","    processQueue();","","    function enqueueTask(key, task) {","        readyTasks.push(function () {","            runTask(key, task);","        });","    }","","    function processQueue() {","        if (readyTasks.length === 0 && runningTasks === 0) {","            return callback(null, results);","        }","        while (readyTasks.length && runningTasks < concurrency) {","            var run = readyTasks.shift();","            run();","        }","    }","","    function addListener(taskName, fn) {","        var taskListeners = listeners[taskName];","        if (!taskListeners) {","            taskListeners = listeners[taskName] = [];","        }","","        taskListeners.push(fn);","    }","","    function taskComplete(taskName) {","        var taskListeners = listeners[taskName] || [];","        (0, _arrayEach2.default)(taskListeners, function (fn) {","            fn();","        });","        processQueue();","    }","","    function runTask(key, task) {","        if (hasError) return;","","        var taskCallback = (0, _onlyOnce2.default)(function (err, result) {","            runningTasks--;","            if (arguments.length > 2) {","                result = (0, _slice2.default)(arguments, 1);","            }","            if (err) {","                var safeResults = {};","                (0, _baseForOwn2.default)(results, function (val, rkey) {","                    safeResults[rkey] = val;","                });","                safeResults[key] = result;","                hasError = true;","                listeners = Object.create(null);","","                callback(err, safeResults);","            } else {","                results[key] = result;","                taskComplete(key);","            }","        });","","        runningTasks++;","        var taskFn = (0, _wrapAsync2.default)(task[task.length - 1]);","        if (task.length > 1) {","            taskFn(results, taskCallback);","        } else {","            taskFn(taskCallback);","        }","    }","","    function checkForDeadlocks() {","        // Kahn's algorithm","        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm","        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html","        var currentTask;","        var counter = 0;","        while (readyToCheck.length) {","            currentTask = readyToCheck.pop();","            counter++;","            (0, _arrayEach2.default)(getDependents(currentTask), function (dependent) {","                if (--uncheckedDependencies[dependent] === 0) {","                    readyToCheck.push(dependent);","                }","            });","        }","","        if (counter !== numTasks) {","            throw new Error('async.auto cannot execute tasks due to a recursive dependency');","        }","    }","","    function getDependents(taskName) {","        var result = [];","        (0, _baseForOwn2.default)(tasks, function (task, key) {","            if ((0, _isArray2.default)(task) && (0, _baseIndexOf2.default)(task, taskName, 0) >= 0) {","                result.push(key);","            }","        });","        return result;","    }","};","","var _arrayEach = require('lodash/_arrayEach');","","var _arrayEach2 = _interopRequireDefault(_arrayEach);","","var _baseForOwn = require('lodash/_baseForOwn');","","var _baseForOwn2 = _interopRequireDefault(_baseForOwn);","","var _baseIndexOf = require('lodash/_baseIndexOf');","","var _baseIndexOf2 = _interopRequireDefault(_baseIndexOf);","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _keys = require('lodash/keys');","","var _keys2 = _interopRequireDefault(_keys);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","module.exports = exports['default'];","","/**"," * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on"," * their requirements. Each function can optionally depend on other functions"," * being completed first, and each function is run as soon as its requirements"," * are satisfied."," *"," * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence"," * will stop. Further tasks will not execute (so any other functions depending"," * on it will not run), and the main `callback` is immediately called with the"," * error."," *"," * {@link AsyncFunction}s also receive an object containing the results of functions which"," * have completed so far as the first argument, if they have dependencies. If a"," * task function has no dependencies, it will only be passed a callback."," *"," * @name auto"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Object} tasks - An object. Each of its properties is either a"," * function or an array of requirements, with the {@link AsyncFunction} itself the last item"," * in the array. The object's key of a property serves as the name of the task"," * defined by that property, i.e. can be used when specifying requirements for"," * other tasks. The function receives one or two arguments:"," * * a `results` object, containing the results of the previously executed"," *   functions, only passed if the task has any dependencies,"," * * a `callback(err, result)` function, which must be called when finished,"," *   passing an `error` (which can be `null`) and the result of the function's"," *   execution."," * @param {number} [concurrency=Infinity] - An optional `integer` for"," * determining the maximum number of tasks that can be run in parallel. By"," * default, as many as possible."," * @param {Function} [callback] - An optional callback which is called when all"," * the tasks have been completed. It receives the `err` argument if any `tasks`"," * pass an error to their callback. Results are always returned; however, if an"," * error occurs, no further `tasks` will be performed, and the results object"," * will only contain partial results. Invoked with (err, results)."," * @returns undefined"," * @example"," *"," * async.auto({"," *     // this function will just be passed a callback"," *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),"," *     showData: ['readData', function(results, cb) {"," *         // results.readData is the file's contents"," *         // ..."," *     }]"," * }, callback);"," *"," * async.auto({"," *     get_data: function(callback) {"," *         console.log('in get_data');"," *         // async code to get some data"," *         callback(null, 'data', 'converted to array');"," *     },"," *     make_folder: function(callback) {"," *         console.log('in make_folder');"," *         // async code to create a directory to store a file in"," *         // this is run at the same time as getting the data"," *         callback(null, 'folder');"," *     },"," *     write_file: ['get_data', 'make_folder', function(results, callback) {"," *         console.log('in write_file', JSON.stringify(results));"," *         // once there is some data and the directory exists,"," *         // write the data to a file in the directory"," *         callback(null, 'filename');"," *     }],"," *     email_link: ['write_file', function(results, callback) {"," *         console.log('in email_link', JSON.stringify(results));"," *         // once the file is written let's email a link to it..."," *         // results.write_file contains the filename returned by write_file."," *         callback(null, {'file':results.write_file, 'email':'user@example.com'});"," *     }]"," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('results = ', results);"," * });"," */"],"l":{"3":1,"7":1,"8":0,"10":0,"11":0,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"20":0,"23":0,"24":0,"25":0,"27":0,"29":0,"32":0,"34":0,"36":0,"37":0,"39":0,"40":0,"41":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"53":0,"54":0,"55":0,"57":0,"58":0,"59":0,"60":0,"66":0,"67":0,"69":1,"70":0,"71":0,"75":1,"76":0,"77":0,"79":0,"80":0,"81":0,"85":1,"86":0,"87":0,"88":0,"91":0,"94":1,"95":0,"96":0,"97":0,"99":0,"102":1,"103":0,"105":0,"106":0,"107":0,"108":0,"110":0,"111":0,"112":0,"113":0,"115":0,"116":0,"117":0,"119":0,"121":0,"122":0,"126":0,"127":0,"128":0,"129":0,"131":0,"135":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"151":0,"152":0,"156":1,"157":0,"158":0,"159":0,"160":0,"163":0,"167":1,"169":1,"171":1,"173":1,"175":1,"177":1,"179":1,"181":1,"183":1,"185":1,"187":1,"189":1,"191":1,"193":1,"195":1,"197":1,"199":1,"201":1,"203":1,"205":1,"207":10,"209":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/cargo.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/cargo.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"cargo","line":91,"loc":{"start":{"line":91,"column":0},"end":{"line":91,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":91,"column":0},"end":{"line":93,"column":1}},"8":{"start":{"line":92,"column":2},"end":{"line":92,"column":50}},"9":{"start":{"line":94,"column":0},"end":{"line":94,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = cargo;","","var _queue = require('./internal/queue');","","var _queue2 = _interopRequireDefault(_queue);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * A cargo of tasks for the worker function to complete. Cargo inherits all of"," * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}."," * @typedef {Object} CargoObject"," * @memberOf module:ControlFlow"," * @property {Function} length - A function returning the number of items"," * waiting to be processed. Invoke like `cargo.length()`."," * @property {number} payload - An `integer` for determining how many tasks"," * should be process per round. This property can be changed after a `cargo` is"," * created to alter the payload on-the-fly."," * @property {Function} push - Adds `task` to the `queue`. The callback is"," * called once the `worker` has finished processing the task. Instead of a"," * single task, an array of `tasks` can be submitted. The respective callback is"," * used for every task in the list. Invoke like `cargo.push(task, [callback])`."," * @property {Function} saturated - A callback that is called when the"," * `queue.length()` hits the concurrency and further tasks will be queued."," * @property {Function} empty - A callback that is called when the last item"," * from the `queue` is given to a `worker`."," * @property {Function} drain - A callback that is called when the last item"," * from the `queue` has returned from the `worker`."," * @property {Function} idle - a function returning false if there are items"," * waiting or being processed, or true if not. Invoke like `cargo.idle()`."," * @property {Function} pause - a function that pauses the processing of tasks"," * until `resume()` is called. Invoke like `cargo.pause()`."," * @property {Function} resume - a function that resumes the processing of"," * queued tasks when the queue is paused. Invoke like `cargo.resume()`."," * @property {Function} kill - a function that removes the `drain` callback and"," * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`."," */","","/**"," * Creates a `cargo` object with the specified payload. Tasks added to the"," * cargo will be processed altogether (up to the `payload` limit). If the"," * `worker` is in progress, the task is queued until it becomes available. Once"," * the `worker` has completed some tasks, each callback of those tasks is"," * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)"," * for how `cargo` and `queue` work."," *"," * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers"," * at a time, cargo passes an array of tasks to a single worker, repeating"," * when the worker is finished."," *"," * @name cargo"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.queue]{@link module:ControlFlow.queue}"," * @category Control Flow"," * @param {AsyncFunction} worker - An asynchronous function for processing an array"," * of queued tasks. Invoked with `(tasks, callback)`."," * @param {number} [payload=Infinity] - An optional `integer` for determining"," * how many tasks should be processed per round; if omitted, the default is"," * unlimited."," * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can"," * attached as certain properties to listen for specific events during the"," * lifecycle of the cargo and inner queue."," * @example"," *"," * // create a cargo object with payload 2"," * var cargo = async.cargo(function(tasks, callback) {"," *     for (var i=0; i<tasks.length; i++) {"," *         console.log('hello ' + tasks[i].name);"," *     }"," *     callback();"," * }, 2);"," *"," * // add some items"," * cargo.push({name: 'foo'}, function(err) {"," *     console.log('finished processing foo');"," * });"," * cargo.push({name: 'bar'}, function(err) {"," *     console.log('finished processing bar');"," * });"," * cargo.push({name: 'baz'}, function(err) {"," *     console.log('finished processing baz');"," * });"," */","function cargo(worker, payload) {","  return (0, _queue2.default)(worker, 1, payload);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"91":1,"92":0,"94":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/queue.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/queue.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":7,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1},"b":{"1":[2,5],"2":[7,7],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":7,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":37}}},"2":{"name":"queue","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":45}}},"3":{"name":"_insert","line":50,"loc":{"start":{"line":50,"column":4},"end":{"line":50,"column":52}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":47},"end":{"line":60,"column":59}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":40},"end":{"line":80,"column":52}}},"6":{"name":"_next","line":87,"loc":{"start":{"line":87,"column":4},"end":{"line":87,"column":26}}},"7":{"name":"(anonymous_7)","line":88,"loc":{"start":{"line":88,"column":15},"end":{"line":88,"column":30}}},"8":{"name":"(anonymous_8)","line":132,"loc":{"start":{"line":132,"column":14},"end":{"line":132,"column":40}}},"9":{"name":"(anonymous_9)","line":135,"loc":{"start":{"line":135,"column":14},"end":{"line":135,"column":26}}},"10":{"name":"(anonymous_10)","line":139,"loc":{"start":{"line":139,"column":17},"end":{"line":139,"column":43}}},"11":{"name":"(anonymous_11)","line":142,"loc":{"start":{"line":142,"column":16},"end":{"line":142,"column":34}}},"12":{"name":"(anonymous_12)","line":145,"loc":{"start":{"line":145,"column":17},"end":{"line":145,"column":29}}},"13":{"name":"(anonymous_13)","line":179,"loc":{"start":{"line":179,"column":16},"end":{"line":179,"column":28}}},"14":{"name":"(anonymous_14)","line":182,"loc":{"start":{"line":182,"column":17},"end":{"line":182,"column":29}}},"15":{"name":"(anonymous_15)","line":185,"loc":{"start":{"line":185,"column":21},"end":{"line":185,"column":33}}},"16":{"name":"(anonymous_16)","line":188,"loc":{"start":{"line":188,"column":14},"end":{"line":188,"column":26}}},"17":{"name":"(anonymous_17)","line":191,"loc":{"start":{"line":191,"column":15},"end":{"line":191,"column":27}}},"18":{"name":"(anonymous_18)","line":194,"loc":{"start":{"line":194,"column":16},"end":{"line":194,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":50}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":49}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":35}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":51}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":46}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":59}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":54}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":67}},"15":{"start":{"line":32,"column":0},"end":{"line":32,"column":40}},"16":{"start":{"line":34,"column":0},"end":{"line":34,"column":53}},"17":{"start":{"line":36,"column":0},"end":{"line":36,"column":95}},"18":{"start":{"line":36,"column":39},"end":{"line":36,"column":93}},"19":{"start":{"line":38,"column":0},"end":{"line":203,"column":1}},"20":{"start":{"line":39,"column":4},"end":{"line":43,"column":5}},"21":{"start":{"line":40,"column":8},"end":{"line":40,"column":24}},"22":{"start":{"line":41,"column":11},"end":{"line":43,"column":5}},"23":{"start":{"line":42,"column":8},"end":{"line":42,"column":56}},"24":{"start":{"line":45,"column":4},"end":{"line":45,"column":51}},"25":{"start":{"line":46,"column":4},"end":{"line":46,"column":23}},"26":{"start":{"line":47,"column":4},"end":{"line":47,"column":25}},"27":{"start":{"line":49,"column":4},"end":{"line":49,"column":36}},"28":{"start":{"line":50,"column":4},"end":{"line":85,"column":5}},"29":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"30":{"start":{"line":52,"column":12},"end":{"line":52,"column":64}},"31":{"start":{"line":54,"column":8},"end":{"line":54,"column":25}},"32":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"33":{"start":{"line":56,"column":12},"end":{"line":56,"column":26}},"34":{"start":{"line":58,"column":8},"end":{"line":63,"column":9}},"35":{"start":{"line":60,"column":12},"end":{"line":62,"column":15}},"36":{"start":{"line":61,"column":16},"end":{"line":61,"column":26}},"37":{"start":{"line":65,"column":8},"end":{"line":76,"column":9}},"38":{"start":{"line":66,"column":12},"end":{"line":69,"column":14}},"39":{"start":{"line":71,"column":12},"end":{"line":75,"column":13}},"40":{"start":{"line":72,"column":16},"end":{"line":72,"column":39}},"41":{"start":{"line":74,"column":16},"end":{"line":74,"column":36}},"42":{"start":{"line":78,"column":8},"end":{"line":84,"column":9}},"43":{"start":{"line":79,"column":12},"end":{"line":79,"column":39}},"44":{"start":{"line":80,"column":12},"end":{"line":83,"column":15}},"45":{"start":{"line":81,"column":16},"end":{"line":81,"column":44}},"46":{"start":{"line":82,"column":16},"end":{"line":82,"column":28}},"47":{"start":{"line":87,"column":4},"end":{"line":117,"column":5}},"48":{"start":{"line":88,"column":8},"end":{"line":116,"column":10}},"49":{"start":{"line":89,"column":12},"end":{"line":89,"column":28}},"50":{"start":{"line":91,"column":12},"end":{"line":106,"column":13}},"51":{"start":{"line":92,"column":16},"end":{"line":92,"column":36}},"52":{"start":{"line":94,"column":16},"end":{"line":94,"column":77}},"53":{"start":{"line":95,"column":16},"end":{"line":99,"column":17}},"54":{"start":{"line":96,"column":20},"end":{"line":96,"column":40}},"55":{"start":{"line":97,"column":23},"end":{"line":99,"column":17}},"56":{"start":{"line":98,"column":20},"end":{"line":98,"column":49}},"57":{"start":{"line":101,"column":16},"end":{"line":101,"column":53}},"58":{"start":{"line":103,"column":16},"end":{"line":105,"column":17}},"59":{"start":{"line":104,"column":20},"end":{"line":104,"column":44}},"60":{"start":{"line":108,"column":12},"end":{"line":110,"column":13}},"61":{"start":{"line":109,"column":16},"end":{"line":109,"column":32}},"62":{"start":{"line":112,"column":12},"end":{"line":114,"column":13}},"63":{"start":{"line":113,"column":16},"end":{"line":113,"column":26}},"64":{"start":{"line":115,"column":12},"end":{"line":115,"column":24}},"65":{"start":{"line":119,"column":4},"end":{"line":119,"column":29}},"66":{"start":{"line":120,"column":4},"end":{"line":201,"column":6}},"67":{"start":{"line":133,"column":12},"end":{"line":133,"column":43}},"68":{"start":{"line":136,"column":12},"end":{"line":136,"column":37}},"69":{"start":{"line":137,"column":12},"end":{"line":137,"column":29}},"70":{"start":{"line":140,"column":12},"end":{"line":140,"column":42}},"71":{"start":{"line":143,"column":12},"end":{"line":143,"column":36}},"72":{"start":{"line":148,"column":12},"end":{"line":150,"column":13}},"73":{"start":{"line":149,"column":16},"end":{"line":149,"column":23}},"74":{"start":{"line":151,"column":12},"end":{"line":151,"column":32}},"75":{"start":{"line":152,"column":12},"end":{"line":176,"column":13}},"76":{"start":{"line":153,"column":16},"end":{"line":154,"column":30}},"77":{"start":{"line":155,"column":16},"end":{"line":155,"column":40}},"78":{"start":{"line":156,"column":16},"end":{"line":156,"column":58}},"79":{"start":{"line":156,"column":31},"end":{"line":156,"column":58}},"80":{"start":{"line":157,"column":16},"end":{"line":162,"column":17}},"81":{"start":{"line":158,"column":20},"end":{"line":158,"column":48}},"82":{"start":{"line":159,"column":20},"end":{"line":159,"column":37}},"83":{"start":{"line":160,"column":20},"end":{"line":160,"column":43}},"84":{"start":{"line":161,"column":20},"end":{"line":161,"column":41}},"85":{"start":{"line":164,"column":16},"end":{"line":164,"column":32}},"86":{"start":{"line":166,"column":16},"end":{"line":168,"column":17}},"87":{"start":{"line":167,"column":20},"end":{"line":167,"column":30}},"88":{"start":{"line":170,"column":16},"end":{"line":172,"column":17}},"89":{"start":{"line":171,"column":20},"end":{"line":171,"column":34}},"90":{"start":{"line":174,"column":16},"end":{"line":174,"column":63}},"91":{"start":{"line":175,"column":16},"end":{"line":175,"column":34}},"92":{"start":{"line":177,"column":12},"end":{"line":177,"column":33}},"93":{"start":{"line":180,"column":12},"end":{"line":180,"column":35}},"94":{"start":{"line":183,"column":12},"end":{"line":183,"column":30}},"95":{"start":{"line":186,"column":12},"end":{"line":186,"column":31}},"96":{"start":{"line":189,"column":12},"end":{"line":189,"column":54}},"97":{"start":{"line":192,"column":12},"end":{"line":192,"column":28}},"98":{"start":{"line":195,"column":12},"end":{"line":197,"column":13}},"99":{"start":{"line":196,"column":16},"end":{"line":196,"column":23}},"100":{"start":{"line":198,"column":12},"end":{"line":198,"column":29}},"101":{"start":{"line":199,"column":12},"end":{"line":199,"column":51}},"102":{"start":{"line":202,"column":4},"end":{"line":202,"column":13}},"103":{"start":{"line":204,"column":0},"end":{"line":204,"column":36}}},"branchMap":{"1":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":70},"end":{"line":36,"column":73}},{"start":{"line":36,"column":76},"end":{"line":36,"column":92}}]},"2":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":46},"end":{"line":36,"column":49}},{"start":{"line":36,"column":53},"end":{"line":36,"column":67}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":11},"end":{"line":41,"column":11}},{"start":{"line":41,"column":11},"end":{"line":41,"column":11}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]},"6":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":28}},{"start":{"line":51,"column":32},"end":{"line":51,"column":62}}]},"7":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"8":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":8}},{"start":{"line":58,"column":8},"end":{"line":58,"column":8}}]},"9":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":29}},{"start":{"line":58,"column":33},"end":{"line":58,"column":41}}]},"10":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":26},"end":{"line":68,"column":34}},{"start":{"line":68,"column":38},"end":{"line":68,"column":52}}]},"11":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":71,"column":12}},{"start":{"line":71,"column":12},"end":{"line":71,"column":12}}]},"12":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":8}},{"start":{"line":78,"column":8},"end":{"line":78,"column":8}}]},"13":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":16},"end":{"line":95,"column":16}},{"start":{"line":95,"column":16},"end":{"line":95,"column":16}}]},"14":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":23},"end":{"line":97,"column":23}},{"start":{"line":97,"column":23},"end":{"line":97,"column":23}}]},"15":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":16},"end":{"line":103,"column":16}},{"start":{"line":103,"column":16},"end":{"line":103,"column":16}}]},"16":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12}},{"start":{"line":108,"column":12},"end":{"line":108,"column":12}}]},"17":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":12},"end":{"line":112,"column":12}},{"start":{"line":112,"column":12},"end":{"line":112,"column":12}}]},"18":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":12},"end":{"line":148,"column":12}},{"start":{"line":148,"column":12},"end":{"line":148,"column":12}}]},"19":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":19},"end":{"line":152,"column":28}},{"start":{"line":152,"column":32},"end":{"line":152,"column":58}},{"start":{"line":152,"column":62},"end":{"line":152,"column":77}}]},"20":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":16},"end":{"line":156,"column":16}},{"start":{"line":156,"column":16},"end":{"line":156,"column":16}}]},"21":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":16},"end":{"line":166,"column":16}},{"start":{"line":166,"column":16},"end":{"line":166,"column":16}}]},"22":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":16},"end":{"line":170,"column":16}},{"start":{"line":170,"column":16},"end":{"line":170,"column":16}}]},"23":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":12},"end":{"line":195,"column":12}},{"start":{"line":195,"column":12},"end":{"line":195,"column":12}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = queue;","","var _baseIndexOf = require('lodash/_baseIndexOf');","","var _baseIndexOf2 = _interopRequireDefault(_baseIndexOf);","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _onlyOnce = require('./onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _setImmediate = require('./setImmediate');","","var _setImmediate2 = _interopRequireDefault(_setImmediate);","","var _DoublyLinkedList = require('./DoublyLinkedList');","","var _DoublyLinkedList2 = _interopRequireDefault(_DoublyLinkedList);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function queue(worker, concurrency, payload) {","    if (concurrency == null) {","        concurrency = 1;","    } else if (concurrency === 0) {","        throw new Error('Concurrency must not be zero');","    }","","    var _worker = (0, _wrapAsync2.default)(worker);","    var numRunning = 0;","    var workersList = [];","","    var processingScheduled = false;","    function _insert(data, insertAtFront, callback) {","        if (callback != null && typeof callback !== 'function') {","            throw new Error('task callback must be a function');","        }","        q.started = true;","        if (!(0, _isArray2.default)(data)) {","            data = [data];","        }","        if (data.length === 0 && q.idle()) {","            // call drain immediately if there are no tasks","            return (0, _setImmediate2.default)(function () {","                q.drain();","            });","        }","","        for (var i = 0, l = data.length; i < l; i++) {","            var item = {","                data: data[i],","                callback: callback || _noop2.default","            };","","            if (insertAtFront) {","                q._tasks.unshift(item);","            } else {","                q._tasks.push(item);","            }","        }","","        if (!processingScheduled) {","            processingScheduled = true;","            (0, _setImmediate2.default)(function () {","                processingScheduled = false;","                q.process();","            });","        }","    }","","    function _next(tasks) {","        return function (err) {","            numRunning -= 1;","","            for (var i = 0, l = tasks.length; i < l; i++) {","                var task = tasks[i];","","                var index = (0, _baseIndexOf2.default)(workersList, task, 0);","                if (index === 0) {","                    workersList.shift();","                } else if (index > 0) {","                    workersList.splice(index, 1);","                }","","                task.callback.apply(task, arguments);","","                if (err != null) {","                    q.error(err, task.data);","                }","            }","","            if (numRunning <= q.concurrency - q.buffer) {","                q.unsaturated();","            }","","            if (q.idle()) {","                q.drain();","            }","            q.process();","        };","    }","","    var isProcessing = false;","    var q = {","        _tasks: new _DoublyLinkedList2.default(),","        concurrency: concurrency,","        payload: payload,","        saturated: _noop2.default,","        unsaturated: _noop2.default,","        buffer: concurrency / 4,","        empty: _noop2.default,","        drain: _noop2.default,","        error: _noop2.default,","        started: false,","        paused: false,","        push: function (data, callback) {","            _insert(data, false, callback);","        },","        kill: function () {","            q.drain = _noop2.default;","            q._tasks.empty();","        },","        unshift: function (data, callback) {","            _insert(data, true, callback);","        },","        remove: function (testFn) {","            q._tasks.remove(testFn);","        },","        process: function () {","            // Avoid trying to start too many processing operations. This can occur","            // when callbacks resolve synchronously (#1267).","            if (isProcessing) {","                return;","            }","            isProcessing = true;","            while (!q.paused && numRunning < q.concurrency && q._tasks.length) {","                var tasks = [],","                    data = [];","                var l = q._tasks.length;","                if (q.payload) l = Math.min(l, q.payload);","                for (var i = 0; i < l; i++) {","                    var node = q._tasks.shift();","                    tasks.push(node);","                    workersList.push(node);","                    data.push(node.data);","                }","","                numRunning += 1;","","                if (q._tasks.length === 0) {","                    q.empty();","                }","","                if (numRunning === q.concurrency) {","                    q.saturated();","                }","","                var cb = (0, _onlyOnce2.default)(_next(tasks));","                _worker(data, cb);","            }","            isProcessing = false;","        },","        length: function () {","            return q._tasks.length;","        },","        running: function () {","            return numRunning;","        },","        workersList: function () {","            return workersList;","        },","        idle: function () {","            return q._tasks.length + numRunning === 0;","        },","        pause: function () {","            q.paused = true;","        },","        resume: function () {","            if (q.paused === false) {","                return;","            }","            q.paused = false;","            (0, _setImmediate2.default)(q.process);","        }","    };","    return q;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":1,"30":1,"32":1,"34":1,"36":7,"38":1,"39":0,"40":0,"41":0,"42":0,"45":0,"46":0,"47":0,"49":0,"50":1,"51":0,"52":0,"54":0,"55":0,"56":0,"58":0,"60":0,"61":0,"65":0,"66":0,"71":0,"72":0,"74":0,"78":0,"79":0,"80":0,"81":0,"82":0,"87":1,"88":0,"89":0,"91":0,"92":0,"94":0,"95":0,"96":0,"97":0,"98":0,"101":0,"103":0,"104":0,"108":0,"109":0,"112":0,"113":0,"115":0,"119":0,"120":0,"133":0,"136":0,"137":0,"140":0,"143":0,"148":0,"149":0,"151":0,"152":0,"153":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"164":0,"166":0,"167":0,"170":0,"171":0,"174":0,"175":0,"177":0,"180":0,"183":0,"186":0,"189":0,"192":0,"195":0,"196":0,"198":0,"199":0,"202":0,"204":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/DoublyLinkedList.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/DoublyLinkedList.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":1,"48":0,"49":1,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"DLL","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":15}}},"2":{"name":"setInitial","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":27},"end":{"line":21,"column":43}}},"4":{"name":"(anonymous_4)","line":30,"loc":{"start":{"line":30,"column":22},"end":{"line":30,"column":34}}},"5":{"name":"(anonymous_5)","line":35,"loc":{"start":{"line":35,"column":28},"end":{"line":35,"column":53}}},"6":{"name":"(anonymous_6)","line":43,"loc":{"start":{"line":43,"column":29},"end":{"line":43,"column":54}}},"7":{"name":"(anonymous_7)","line":51,"loc":{"start":{"line":51,"column":24},"end":{"line":51,"column":40}}},"8":{"name":"(anonymous_8)","line":55,"loc":{"start":{"line":55,"column":21},"end":{"line":55,"column":37}}},"9":{"name":"(anonymous_9)","line":59,"loc":{"start":{"line":59,"column":22},"end":{"line":59,"column":34}}},"10":{"name":"(anonymous_10)","line":63,"loc":{"start":{"line":63,"column":20},"end":{"line":63,"column":32}}},"11":{"name":"(anonymous_11)","line":67,"loc":{"start":{"line":67,"column":24},"end":{"line":67,"column":36}}},"12":{"name":"(anonymous_12)","line":77,"loc":{"start":{"line":77,"column":23},"end":{"line":77,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"3":{"start":{"line":11,"column":0},"end":{"line":14,"column":1}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":33}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":20}},"6":{"start":{"line":16,"column":0},"end":{"line":19,"column":1}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":19}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":31}},"9":{"start":{"line":21,"column":0},"end":{"line":28,"column":2}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":73}},"11":{"start":{"line":22,"column":19},"end":{"line":22,"column":46}},"12":{"start":{"line":22,"column":51},"end":{"line":22,"column":73}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":73}},"14":{"start":{"line":23,"column":19},"end":{"line":23,"column":46}},"15":{"start":{"line":23,"column":51},"end":{"line":23,"column":73}},"16":{"start":{"line":25,"column":4},"end":{"line":25,"column":33}},"17":{"start":{"line":26,"column":4},"end":{"line":26,"column":21}},"18":{"start":{"line":27,"column":4},"end":{"line":27,"column":16}},"19":{"start":{"line":30,"column":0},"end":{"line":33,"column":2}},"20":{"start":{"line":31,"column":4},"end":{"line":31,"column":35}},"21":{"start":{"line":31,"column":22},"end":{"line":31,"column":35}},"22":{"start":{"line":32,"column":4},"end":{"line":32,"column":16}},"23":{"start":{"line":35,"column":0},"end":{"line":41,"column":2}},"24":{"start":{"line":36,"column":4},"end":{"line":36,"column":24}},"25":{"start":{"line":37,"column":4},"end":{"line":37,"column":29}},"26":{"start":{"line":38,"column":4},"end":{"line":38,"column":69}},"27":{"start":{"line":38,"column":19},"end":{"line":38,"column":44}},"28":{"start":{"line":38,"column":49},"end":{"line":38,"column":69}},"29":{"start":{"line":39,"column":4},"end":{"line":39,"column":24}},"30":{"start":{"line":40,"column":4},"end":{"line":40,"column":21}},"31":{"start":{"line":43,"column":0},"end":{"line":49,"column":2}},"32":{"start":{"line":44,"column":4},"end":{"line":44,"column":29}},"33":{"start":{"line":45,"column":4},"end":{"line":45,"column":24}},"34":{"start":{"line":46,"column":4},"end":{"line":46,"column":69}},"35":{"start":{"line":46,"column":19},"end":{"line":46,"column":44}},"36":{"start":{"line":46,"column":49},"end":{"line":46,"column":69}},"37":{"start":{"line":47,"column":4},"end":{"line":47,"column":24}},"38":{"start":{"line":48,"column":4},"end":{"line":48,"column":21}},"39":{"start":{"line":51,"column":0},"end":{"line":53,"column":2}},"40":{"start":{"line":52,"column":4},"end":{"line":52,"column":82}},"41":{"start":{"line":52,"column":19},"end":{"line":52,"column":54}},"42":{"start":{"line":52,"column":59},"end":{"line":52,"column":82}},"43":{"start":{"line":55,"column":0},"end":{"line":57,"column":2}},"44":{"start":{"line":56,"column":4},"end":{"line":56,"column":81}},"45":{"start":{"line":56,"column":19},"end":{"line":56,"column":53}},"46":{"start":{"line":56,"column":58},"end":{"line":56,"column":81}},"47":{"start":{"line":59,"column":0},"end":{"line":61,"column":2}},"48":{"start":{"line":60,"column":4},"end":{"line":60,"column":51}},"49":{"start":{"line":63,"column":0},"end":{"line":65,"column":2}},"50":{"start":{"line":64,"column":4},"end":{"line":64,"column":51}},"51":{"start":{"line":67,"column":0},"end":{"line":75,"column":2}},"52":{"start":{"line":68,"column":4},"end":{"line":68,"column":33}},"53":{"start":{"line":69,"column":4},"end":{"line":69,"column":25}},"54":{"start":{"line":70,"column":4},"end":{"line":73,"column":5}},"55":{"start":{"line":71,"column":8},"end":{"line":71,"column":29}},"56":{"start":{"line":72,"column":8},"end":{"line":72,"column":25}},"57":{"start":{"line":74,"column":4},"end":{"line":74,"column":15}},"58":{"start":{"line":77,"column":0},"end":{"line":87,"column":2}},"59":{"start":{"line":78,"column":4},"end":{"line":78,"column":25}},"60":{"start":{"line":79,"column":4},"end":{"line":85,"column":5}},"61":{"start":{"line":80,"column":8},"end":{"line":80,"column":29}},"62":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"63":{"start":{"line":82,"column":12},"end":{"line":82,"column":34}},"64":{"start":{"line":84,"column":8},"end":{"line":84,"column":20}},"65":{"start":{"line":86,"column":4},"end":{"line":86,"column":16}},"66":{"start":{"line":88,"column":0},"end":{"line":88,"column":36}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"6":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"7":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":11},"end":{"line":60,"column":20}},{"start":{"line":60,"column":24},"end":{"line":60,"column":50}}]},"8":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":11},"end":{"line":64,"column":20}},{"start":{"line":64,"column":24},"end":{"line":64,"column":50}}]},"9":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":8}},{"start":{"line":81,"column":8},"end":{"line":81,"column":8}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = DLL;","// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation","// used for queues. This implementation assumes that the node provided by the user can be modified","// to adjust the next and last properties. We implement only the minimal functionality","// for queue support.","function DLL() {","    this.head = this.tail = null;","    this.length = 0;","}","","function setInitial(dll, node) {","    dll.length = 1;","    dll.head = dll.tail = node;","}","","DLL.prototype.removeLink = function (node) {","    if (node.prev) node.prev.next = node.next;else this.head = node.next;","    if (node.next) node.next.prev = node.prev;else this.tail = node.prev;","","    node.prev = node.next = null;","    this.length -= 1;","    return node;","};","","DLL.prototype.empty = function () {","    while (this.head) this.shift();","    return this;","};","","DLL.prototype.insertAfter = function (node, newNode) {","    newNode.prev = node;","    newNode.next = node.next;","    if (node.next) node.next.prev = newNode;else this.tail = newNode;","    node.next = newNode;","    this.length += 1;","};","","DLL.prototype.insertBefore = function (node, newNode) {","    newNode.prev = node.prev;","    newNode.next = node;","    if (node.prev) node.prev.next = newNode;else this.head = newNode;","    node.prev = newNode;","    this.length += 1;","};","","DLL.prototype.unshift = function (node) {","    if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);","};","","DLL.prototype.push = function (node) {","    if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);","};","","DLL.prototype.shift = function () {","    return this.head && this.removeLink(this.head);","};","","DLL.prototype.pop = function () {","    return this.tail && this.removeLink(this.tail);","};","","DLL.prototype.toArray = function () {","    var arr = Array(this.length);","    var curr = this.head;","    for (var idx = 0; idx < this.length; idx++) {","        arr[idx] = curr.data;","        curr = curr.next;","    }","    return arr;","};","","DLL.prototype.remove = function (testFn) {","    var curr = this.head;","    while (!!curr) {","        var next = curr.next;","        if (testFn(curr)) {","            this.removeLink(curr);","        }","        curr = next;","    }","    return this;","};","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"11":1,"12":0,"13":0,"16":1,"17":0,"18":0,"21":1,"22":0,"23":0,"25":0,"26":0,"27":0,"30":1,"31":0,"32":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"51":1,"52":0,"55":1,"56":0,"59":1,"60":0,"63":1,"64":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"74":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"84":0,"86":0,"88":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/compose.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/compose.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":0,"2":2},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":41}}},"2":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":9,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":78}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":41}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"9":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"10":{"start":{"line":58,"column":0},"end":{"line":58,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","exports.default = function () /*...args*/{","  return _seq2.default.apply(null, (0, _slice2.default)(arguments).reverse());","};","","var _seq = require('./seq');","","var _seq2 = _interopRequireDefault(_seq);","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","",";","","/**"," * Creates a function which is a composition of the passed asynchronous"," * functions. Each function consumes the return value of the function that"," * follows. Composing functions `f()`, `g()`, and `h()` would produce the result"," * of `f(g(h()))`, only this version uses callbacks to obtain the return values."," *"," * Each function is executed with the `this` binding of the composed function."," *"," * @name compose"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {...AsyncFunction} functions - the asynchronous functions to compose"," * @returns {Function} an asynchronous function that is the composed"," * asynchronous `functions`"," * @example"," *"," * function add1(n, callback) {"," *     setTimeout(function () {"," *         callback(null, n + 1);"," *     }, 10);"," * }"," *"," * function mul3(n, callback) {"," *     setTimeout(function () {"," *         callback(null, n * 3);"," *     }, 10);"," * }"," *"," * var add1mul3 = async.compose(mul3, add1);"," * add1mul3(4, function (err, result) {"," *     // result now equals 15"," * });"," */","module.exports = exports['default'];"],"l":{"3":1,"7":1,"8":0,"11":1,"13":1,"15":1,"17":1,"19":2,"58":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/seq.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/seq.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[1,4],"2":[5,5],"3":[0,0]},"f":{"1":5,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"2":{"name":"seq","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":31}}},"3":{"name":"(anonymous_3)","line":70,"loc":{"start":{"line":70,"column":11},"end":{"line":70,"column":34}}},"4":{"name":"(anonymous_4)","line":81,"loc":{"start":{"line":81,"column":48},"end":{"line":81,"column":75}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":42},"end":{"line":82,"column":75}}},"6":{"name":"(anonymous_6)","line":86,"loc":{"start":{"line":86,"column":11},"end":{"line":86,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":44}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":51}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":95}},"14":{"start":{"line":28,"column":39},"end":{"line":28,"column":93}},"15":{"start":{"line":68,"column":0},"end":{"line":90,"column":1}},"16":{"start":{"line":69,"column":4},"end":{"line":69,"column":77}},"17":{"start":{"line":70,"column":4},"end":{"line":89,"column":6}},"18":{"start":{"line":71,"column":8},"end":{"line":71,"column":51}},"19":{"start":{"line":72,"column":8},"end":{"line":72,"column":24}},"20":{"start":{"line":74,"column":8},"end":{"line":74,"column":39}},"21":{"start":{"line":75,"column":8},"end":{"line":79,"column":9}},"22":{"start":{"line":76,"column":12},"end":{"line":76,"column":23}},"23":{"start":{"line":78,"column":12},"end":{"line":78,"column":32}},"24":{"start":{"line":81,"column":8},"end":{"line":88,"column":11}},"25":{"start":{"line":82,"column":12},"end":{"line":85,"column":16}},"26":{"start":{"line":83,"column":16},"end":{"line":83,"column":66}},"27":{"start":{"line":84,"column":16},"end":{"line":84,"column":34}},"28":{"start":{"line":87,"column":12},"end":{"line":87,"column":50}},"29":{"start":{"line":91,"column":0},"end":{"line":91,"column":36}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":70},"end":{"line":28,"column":73}},{"start":{"line":28,"column":76},"end":{"line":28,"column":92}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}]},"3":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = seq;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","var _reduce = require('./reduce');","","var _reduce2 = _interopRequireDefault(_reduce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","var _arrayMap = require('lodash/_arrayMap');","","var _arrayMap2 = _interopRequireDefault(_arrayMap);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Version of the compose function that is more natural to read. Each function"," * consumes the return value of the previous function. It is the equivalent of"," * [compose]{@link module:ControlFlow.compose} with the arguments reversed."," *"," * Each function is executed with the `this` binding of the composed function."," *"," * @name seq"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.compose]{@link module:ControlFlow.compose}"," * @category Control Flow"," * @param {...AsyncFunction} functions - the asynchronous functions to compose"," * @returns {Function} a function that composes the `functions` in order"," * @example"," *"," * // Requires lodash (or underscore), express3 and dresende's orm2."," * // Part of an app, that fetches cats of the logged user."," * // This example uses `seq` function to avoid overnesting and error"," * // handling clutter."," * app.get('/cats', function(request, response) {"," *     var User = request.models.User;"," *     async.seq("," *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))"," *         function(user, fn) {"," *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))"," *         }"," *     )(req.session.user_id, function (err, cats) {"," *         if (err) {"," *             console.error(err);"," *             response.json({ status: 'error', message: err.message });"," *         } else {"," *             response.json({ status: 'ok', message: 'Cats found', data: cats });"," *         }"," *     });"," * });"," */","function seq() /*...functions*/{","    var _functions = (0, _arrayMap2.default)(arguments, _wrapAsync2.default);","    return function () /*...args*/{","        var args = (0, _slice2.default)(arguments);","        var that = this;","","        var cb = args[args.length - 1];","        if (typeof cb == 'function') {","            args.pop();","        } else {","            cb = _noop2.default;","        }","","        (0, _reduce2.default)(_functions, args, function (newargs, fn, cb) {","            fn.apply(that, newargs.concat(function (err /*, ...nextargs*/) {","                var nextargs = (0, _slice2.default)(arguments, 1);","                cb(err, nextargs);","            }));","        }, function (err, results) {","            cb.apply(that, [err].concat(results));","        });","    };","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":5,"68":1,"69":0,"70":0,"71":0,"72":0,"74":0,"75":0,"76":0,"78":0,"81":0,"82":0,"83":0,"84":0,"87":0,"91":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reduce.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reduce.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"reduce","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":48}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":38},"end":{"line":69,"column":64}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":27},"end":{"line":70,"column":45}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":7},"end":{"line":74,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":59}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":39}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":66,"column":0},"end":{"line":77,"column":1}},"14":{"start":{"line":67,"column":4},"end":{"line":67,"column":63}},"15":{"start":{"line":68,"column":4},"end":{"line":68,"column":55}},"16":{"start":{"line":69,"column":4},"end":{"line":76,"column":7}},"17":{"start":{"line":70,"column":8},"end":{"line":73,"column":11}},"18":{"start":{"line":71,"column":12},"end":{"line":71,"column":21}},"19":{"start":{"line":72,"column":12},"end":{"line":72,"column":26}},"20":{"start":{"line":75,"column":8},"end":{"line":75,"column":28}},"21":{"start":{"line":78,"column":0},"end":{"line":78,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":35},"end":{"line":67,"column":43}},{"start":{"line":67,"column":47},"end":{"line":67,"column":61}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = reduce;","","var _eachOfSeries = require('./eachOfSeries');","","var _eachOfSeries2 = _interopRequireDefault(_eachOfSeries);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Reduces `coll` into a single value using an async `iteratee` to return each"," * successive step. `memo` is the initial state of the reduction. This function"," * only operates in series."," *"," * For performance reasons, it may make sense to split a call to this function"," * into a parallel map, and then use the normal `Array.prototype.reduce` on the"," * results. This function is for situations where each step in the reduction"," * needs to be async; if you can get the data before reducing it, then it's"," * probably a good idea to do so."," *"," * @name reduce"," * @static"," * @memberOf module:Collections"," * @method"," * @alias inject"," * @alias foldl"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {*} memo - The initial state of the reduction."," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * array to produce the next step in the reduction."," * The `iteratee` should complete with the next state of the reduction."," * If the iteratee complete with an error, the reduction is stopped and the"," * main `callback` is immediately called with the error."," * Invoked with (memo, item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the reduced value. Invoked with"," * (err, result)."," * @example"," *"," * async.reduce([1,2,3], 0, function(memo, item, callback) {"," *     // pointless async:"," *     process.nextTick(function() {"," *         callback(null, memo + item)"," *     });"," * }, function(err, result) {"," *     // result is now equal to the last value of memo, which is 6"," * });"," */","function reduce(coll, memo, iteratee, callback) {","    callback = (0, _once2.default)(callback || _noop2.default);","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    (0, _eachOfSeries2.default)(coll, function (x, i, callback) {","        _iteratee(memo, x, function (err, v) {","            memo = v;","            callback(err);","        });","    }, function (err) {","        callback(err, memo);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"75":0,"78":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachOfSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachOfSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":67}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _eachOfLimit = require('./eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time."," *"," * @name eachOfSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.eachOf]{@link module:Collections.eachOf}"," * @alias forEachOfSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Invoked with (err)."," */","exports.default = (0, _doLimit2.default)(_eachOfLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"34":1,"35":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/concat.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/concat.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":49}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":44}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":57}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":42,"column":0},"end":{"line":42,"column":74}},"9":{"start":{"line":43,"column":0},"end":{"line":43,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","var _concatLimit = require('./concatLimit');","","var _concatLimit2 = _interopRequireDefault(_concatLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Applies `iteratee` to each item in `coll`, concatenating the results. Returns"," * the concatenated list. The `iteratee`s are called in parallel, and the"," * results are concatenated as they return. There is no guarantee that the"," * results array will be returned in the original order of `coll` passed to the"," * `iteratee` function."," *"," * @name concat"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,"," * which should use an array as its result. Invoked with (item, callback)."," * @param {Function} [callback(err)] - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is an array"," * containing the concatenated results of the `iteratee` function. Invoked with"," * (err, results)."," * @example"," *"," * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {"," *     // files is now a list of filenames that exist in the 3 directories"," * });"," */","exports.default = (0, _doLimit2.default)(_concatLimit2.default, Infinity);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"42":1,"43":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/concatLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/concatLimit.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":4,"25":1,"26":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[1,3],"5":[4,4]},"f":{"1":0,"2":0,"3":0,"4":0,"5":4},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":61}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":41},"end":{"line":10,"column":66}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":23},"end":{"line":11,"column":52}}},"4":{"name":"(anonymous_4)","line":15,"loc":{"start":{"line":15,"column":7},"end":{"line":15,"column":34}}},"5":{"name":"_interopRequireDefault","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":25,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":42}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":55}},"5":{"start":{"line":10,"column":4},"end":{"line":24,"column":7}},"6":{"start":{"line":11,"column":8},"end":{"line":14,"column":11}},"7":{"start":{"line":12,"column":12},"end":{"line":12,"column":42}},"8":{"start":{"line":12,"column":21},"end":{"line":12,"column":42}},"9":{"start":{"line":13,"column":12},"end":{"line":13,"column":70}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":24}},"11":{"start":{"line":17,"column":8},"end":{"line":21,"column":9}},"12":{"start":{"line":18,"column":12},"end":{"line":20,"column":13}},"13":{"start":{"line":19,"column":16},"end":{"line":19,"column":62}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":37}},"15":{"start":{"line":27,"column":0},"end":{"line":27,"column":35}},"16":{"start":{"line":29,"column":0},"end":{"line":29,"column":43}},"17":{"start":{"line":31,"column":0},"end":{"line":31,"column":49}},"18":{"start":{"line":33,"column":0},"end":{"line":33,"column":53}},"19":{"start":{"line":35,"column":0},"end":{"line":35,"column":41}},"20":{"start":{"line":37,"column":0},"end":{"line":37,"column":45}},"21":{"start":{"line":39,"column":0},"end":{"line":39,"column":38}},"22":{"start":{"line":41,"column":0},"end":{"line":41,"column":51}},"23":{"start":{"line":43,"column":0},"end":{"line":43,"column":95}},"24":{"start":{"line":43,"column":39},"end":{"line":43,"column":93}},"25":{"start":{"line":45,"column":0},"end":{"line":45,"column":37}},"26":{"start":{"line":65,"column":0},"end":{"line":65,"column":36}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":15},"end":{"line":8,"column":23}},{"start":{"line":8,"column":27},"end":{"line":8,"column":41}}]},"2":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":12}},{"start":{"line":12,"column":12},"end":{"line":12,"column":12}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":12}},{"start":{"line":18,"column":12},"end":{"line":18,"column":12}}]},"4":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":70},"end":{"line":43,"column":73}},{"start":{"line":43,"column":76},"end":{"line":43,"column":92}}]},"5":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":46},"end":{"line":43,"column":49}},{"start":{"line":43,"column":53},"end":{"line":43,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (coll, limit, iteratee, callback) {","    callback = callback || _noop2.default;","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    (0, _mapLimit2.default)(coll, limit, function (val, callback) {","        _iteratee(val, function (err /*, ...args*/) {","            if (err) return callback(err);","            return callback(null, (0, _slice2.default)(arguments, 1));","        });","    }, function (err, mapResults) {","        var result = [];","        for (var i = 0; i < mapResults.length; i++) {","            if (mapResults[i]) {","                result = _concat.apply(result, mapResults[i]);","            }","        }","","        return callback(err, result);","    });","};","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","var _mapLimit = require('./mapLimit');","","var _mapLimit2 = _interopRequireDefault(_mapLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var _concat = Array.prototype.concat;","","/**"," * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time."," *"," * @name concatLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.concat]{@link module:Collections.concat}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,"," * which should use an array as its result. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is an array"," * containing the concatenated results of the `iteratee` function. Invoked with"," * (err, results)."," */","module.exports = exports['default'];"],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"16":0,"17":0,"18":0,"19":0,"23":0,"27":1,"29":1,"31":1,"33":1,"35":1,"37":1,"39":1,"41":1,"43":4,"45":1,"65":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/concatSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/concatSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":49}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":44}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":57}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":35,"column":0},"end":{"line":35,"column":67}},"9":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","var _concatLimit = require('./concatLimit');","","var _concatLimit2 = _interopRequireDefault(_concatLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time."," *"," * @name concatSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.concat]{@link module:Collections.concat}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`."," * The iteratee should complete with an array an array of results."," * Invoked with (item, callback)."," * @param {Function} [callback(err)] - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is an array"," * containing the concatenated results of the `iteratee` function. Invoked with"," * (err, results)."," */","exports.default = (0, _doLimit2.default)(_concatLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"35":1,"36":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/constant.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/constant.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":0,"2":0,"3":1},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":43}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":11},"end":{"line":10,"column":51}}},"3":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":14,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":49}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":37}},"5":{"start":{"line":10,"column":4},"end":{"line":13,"column":6}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":55}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":42}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":41}},"9":{"start":{"line":18,"column":0},"end":{"line":18,"column":45}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"11":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"12":{"start":{"line":66,"column":0},"end":{"line":66,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function () /*...values*/{","    var values = (0, _slice2.default)(arguments);","    var args = [null].concat(values);","    return function () /*...ignoredArgs, callback*/{","        var callback = arguments[arguments.length - 1];","        return callback.apply(this, args);","    };","};","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","",";","","/**"," * Returns a function that when called, calls-back with the values provided."," * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to"," * [`auto`]{@link module:ControlFlow.auto}."," *"," * @name constant"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {...*} arguments... - Any number of arguments to automatically invoke"," * callback with."," * @returns {AsyncFunction} Returns a function that when invoked, automatically"," * invokes the callback with the previous given arguments."," * @example"," *"," * async.waterfall(["," *     async.constant(42),"," *     function (value, next) {"," *         // value === 42"," *     },"," *     //..."," * ], callback);"," *"," * async.waterfall(["," *     async.constant(filename, \"utf8\"),"," *     fs.readFile,"," *     function (fileData, next) {"," *         //..."," *     }"," *     //..."," * ], callback);"," *"," * async.auto({"," *     hostname: async.constant(\"https://server.net/\"),"," *     port: findFreePort,"," *     launchServer: [\"hostname\", \"port\", function (options, cb) {"," *         startServer(options, cb);"," *     }],"," *     //..."," * }, callback);"," */","module.exports = exports['default'];"],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"16":1,"18":1,"20":1,"66":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/detect.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/detect.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":4,"12":1,"13":1},"b":{"1":[0,4],"2":[4,4]},"f":{"1":4},"fnMap":{"1":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":59}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":51}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":55}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":57}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":61}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":95}},"11":{"start":{"line":23,"column":39},"end":{"line":23,"column":93}},"12":{"start":{"line":60,"column":0},"end":{"line":60,"column":118}},"13":{"start":{"line":61,"column":0},"end":{"line":61,"column":36}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":92}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","var _findGetResult = require('./internal/findGetResult');","","var _findGetResult2 = _interopRequireDefault(_findGetResult);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns the first value in `coll` that passes an async truth test. The"," * `iteratee` is applied in parallel, meaning the first iteratee to return"," * `true` will fire the detect `callback` with that result. That means the"," * result might not be the first item in the original `coll` (in terms of order)"," * that passes the test.",""," * If order within the original `coll` is important, then look at"," * [`detectSeries`]{@link module:Collections.detectSeries}."," *"," * @name detect"," * @static"," * @memberOf module:Collections"," * @method"," * @alias find"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," * @example"," *"," * async.detect(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // result now equals the first file in the list that exists"," * });"," */","exports.default = (0, _doParallel2.default)((0, _createTester2.default)(_identity2.default, _findGetResult2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":4,"60":1,"61":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/findGetResult.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/findGetResult.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_findGetResult","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":13}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}}},"branchMap":{},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = _findGetResult;","function _findGetResult(v, x) {","    return x;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"7":1,"8":0,"10":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/detectLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/detectLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":4,"12":1,"13":1},"b":{"1":[0,4],"2":[4,4]},"f":{"1":4},"fnMap":{"1":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":59}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":61}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":65}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":57}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":61}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":95}},"11":{"start":{"line":23,"column":39},"end":{"line":23,"column":93}},"12":{"start":{"line":47,"column":0},"end":{"line":47,"column":123}},"13":{"start":{"line":48,"column":0},"end":{"line":48,"column":36}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":92}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","var _findGetResult = require('./internal/findGetResult');","","var _findGetResult2 = _interopRequireDefault(_findGetResult);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name detectLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.detect]{@link module:Collections.detect}"," * @alias findLimit"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," */","exports.default = (0, _doParallelLimit2.default)((0, _createTester2.default)(_identity2.default, _findGetResult2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":4,"47":1,"48":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/detectSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/detectSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":37,"column":0},"end":{"line":37,"column":67}},"9":{"start":{"line":38,"column":0},"end":{"line":38,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _detectLimit = require('./detectLimit');","","var _detectLimit2 = _interopRequireDefault(_detectLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time."," *"," * @name detectSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.detect]{@link module:Collections.detect}"," * @alias findSeries"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," */","exports.default = (0, _doLimit2.default)(_detectLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"37":1,"38":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/dir.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/dir.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1},"fnMap":{"1":{"name":"_interopRequireDefault","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":53}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":95}},"5":{"start":{"line":11,"column":39},"end":{"line":11,"column":93}},"6":{"start":{"line":42,"column":0},"end":{"line":42,"column":52}},"7":{"start":{"line":43,"column":0},"end":{"line":43,"column":36}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":70},"end":{"line":11,"column":73}},{"start":{"line":11,"column":76},"end":{"line":11,"column":92}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _consoleFunc = require('./internal/consoleFunc');","","var _consoleFunc2 = _interopRequireDefault(_consoleFunc);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Logs the result of an [`async` function]{@link AsyncFunction} to the"," * `console` using `console.dir` to display the properties of the resulting object."," * Only works in Node.js or in browsers that support `console.dir` and"," * `console.error` (such as FF and Chrome)."," * If multiple arguments are returned from the async function,"," * `console.dir` is called on each argument in order."," *"," * @name dir"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} function - The function you want to eventually apply"," * all arguments to."," * @param {...*} arguments... - Any number of arguments to apply to the function."," * @example"," *"," * // in a module"," * var hello = function(name, callback) {"," *     setTimeout(function() {"," *         callback(null, {hello: name});"," *     }, 1000);"," * };"," *"," * // in the node repl"," * node> async.dir(hello, 'world');"," * {hello: 'world'}"," */","exports.default = (0, _consoleFunc2.default)('dir');","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"42":1,"43":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/consoleFunc.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/consoleFunc.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":2,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[1,2],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":3,"2":2,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"consoleFunc","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":27}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":11},"end":{"line":23,"column":39}}},"4":{"name":"(anonymous_4)","line":25,"loc":{"start":{"line":25,"column":18},"end":{"line":25,"column":47}}},"5":{"name":"(anonymous_5)","line":33,"loc":{"start":{"line":33,"column":51},"end":{"line":33,"column":64}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":53}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":40}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":22,"column":0},"end":{"line":41,"column":1}},"12":{"start":{"line":23,"column":4},"end":{"line":40,"column":6}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":54}},"14":{"start":{"line":25,"column":8},"end":{"line":38,"column":11}},"15":{"start":{"line":26,"column":12},"end":{"line":26,"column":58}},"16":{"start":{"line":27,"column":12},"end":{"line":37,"column":13}},"17":{"start":{"line":28,"column":16},"end":{"line":36,"column":17}},"18":{"start":{"line":29,"column":20},"end":{"line":31,"column":21}},"19":{"start":{"line":30,"column":24},"end":{"line":30,"column":43}},"20":{"start":{"line":32,"column":23},"end":{"line":36,"column":17}},"21":{"start":{"line":33,"column":20},"end":{"line":35,"column":23}},"22":{"start":{"line":34,"column":24},"end":{"line":34,"column":41}},"23":{"start":{"line":39,"column":8},"end":{"line":39,"column":55}},"24":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":12},"end":{"line":27,"column":12}},{"start":{"line":27,"column":12},"end":{"line":27,"column":12}}]},"4":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":16},"end":{"line":28,"column":16}},{"start":{"line":28,"column":16},"end":{"line":28,"column":16}}]},"5":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":20},"end":{"line":29,"column":20}},{"start":{"line":29,"column":20},"end":{"line":29,"column":20}}]},"6":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":23},"end":{"line":32,"column":23}},{"start":{"line":32,"column":23},"end":{"line":32,"column":23}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = consoleFunc;","","var _arrayEach = require('lodash/_arrayEach');","","var _arrayEach2 = _interopRequireDefault(_arrayEach);","","var _slice = require('./slice');","","var _slice2 = _interopRequireDefault(_slice);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function consoleFunc(name) {","    return function (fn /*, ...args*/) {","        var args = (0, _slice2.default)(arguments, 1);","        args.push(function (err /*, ...args*/) {","            var args = (0, _slice2.default)(arguments, 1);","            if (typeof console === 'object') {","                if (err) {","                    if (console.error) {","                        console.error(err);","                    }","                } else if (console[name]) {","                    (0, _arrayEach2.default)(args, function (x) {","                        console[name](x);","                    });","                }","            }","        });","        (0, _wrapAsync2.default)(fn).apply(null, args);","    };","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"22":1,"23":2,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"32":0,"33":0,"34":0,"39":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/doDuring.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/doDuring.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"doDuring","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":38}}},"3":{"name":"next","line":51,"loc":{"start":{"line":51,"column":4},"end":{"line":51,"column":37}}},"4":{"name":"check","line":58,"loc":{"start":{"line":58,"column":4},"end":{"line":58,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":47}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":46,"column":0},"end":{"line":65,"column":1}},"14":{"start":{"line":47,"column":4},"end":{"line":47,"column":67}},"15":{"start":{"line":48,"column":4},"end":{"line":48,"column":43}},"16":{"start":{"line":49,"column":4},"end":{"line":49,"column":47}},"17":{"start":{"line":51,"column":4},"end":{"line":56,"column":5}},"18":{"start":{"line":52,"column":8},"end":{"line":52,"column":38}},"19":{"start":{"line":52,"column":17},"end":{"line":52,"column":38}},"20":{"start":{"line":53,"column":8},"end":{"line":53,"column":54}},"21":{"start":{"line":54,"column":8},"end":{"line":54,"column":25}},"22":{"start":{"line":55,"column":8},"end":{"line":55,"column":32}},"23":{"start":{"line":58,"column":4},"end":{"line":62,"column":5}},"24":{"start":{"line":59,"column":8},"end":{"line":59,"column":38}},"25":{"start":{"line":59,"column":17},"end":{"line":59,"column":38}},"26":{"start":{"line":60,"column":8},"end":{"line":60,"column":42}},"27":{"start":{"line":60,"column":20},"end":{"line":60,"column":42}},"28":{"start":{"line":61,"column":8},"end":{"line":61,"column":18}},"29":{"start":{"line":64,"column":4},"end":{"line":64,"column":22}},"30":{"start":{"line":66,"column":0},"end":{"line":66,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":39},"end":{"line":47,"column":47}},{"start":{"line":47,"column":51},"end":{"line":47,"column":65}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"5":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":8}},{"start":{"line":59,"column":8},"end":{"line":59,"column":8}}]},"6":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = doDuring;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in"," * the order of operations, the arguments `test` and `fn` are switched."," *"," * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function."," * @name doDuring"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.during]{@link module:ControlFlow.during}"," * @category Control Flow"," * @param {AsyncFunction} fn - An async function which is called each time"," * `test` passes. Invoked with (callback)."," * @param {AsyncFunction} test - asynchronous truth test to perform before each"," * execution of `fn`. Invoked with (...args, callback), where `...args` are the"," * non-error args from the previous callback of `fn`."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `fn` has stopped. `callback`"," * will be passed an error if one occurred, otherwise `null`."," */","function doDuring(fn, test, callback) {","    callback = (0, _onlyOnce2.default)(callback || _noop2.default);","    var _fn = (0, _wrapAsync2.default)(fn);","    var _test = (0, _wrapAsync2.default)(test);","","    function next(err /*, ...args*/) {","        if (err) return callback(err);","        var args = (0, _slice2.default)(arguments, 1);","        args.push(check);","        _test.apply(this, args);","    };","","    function check(err, truth) {","        if (err) return callback(err);","        if (!truth) return callback(null);","        _fn(next);","    }","","    check(null, true);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"46":1,"47":0,"48":0,"49":0,"51":1,"52":0,"53":0,"54":0,"55":0,"58":1,"59":0,"60":0,"61":0,"64":0,"66":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/doUntil.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/doUntil.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"doUntil","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":43}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":38},"end":{"line":35,"column":50}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":34,"column":0},"end":{"line":38,"column":1}},"8":{"start":{"line":35,"column":4},"end":{"line":37,"column":17}},"9":{"start":{"line":36,"column":8},"end":{"line":36,"column":44}},"10":{"start":{"line":39,"column":0},"end":{"line":39,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = doUntil;","","var _doWhilst = require('./doWhilst');","","var _doWhilst2 = _interopRequireDefault(_doWhilst);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the"," * argument ordering differs from `until`."," *"," * @name doUntil"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}"," * @category Control Flow"," * @param {AsyncFunction} iteratee - An async function which is called each time"," * `test` fails. Invoked with (callback)."," * @param {Function} test - synchronous truth test to perform after each"," * execution of `iteratee`. Invoked with any non-error callback results of"," * `iteratee`."," * @param {Function} [callback] - A callback which is called after the test"," * function has passed and repeated execution of `iteratee` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `iteratee`'s"," * callback. Invoked with (err, [results]);"," */","function doUntil(iteratee, test, callback) {","    (0, _doWhilst2.default)(iteratee, function () {","        return !test.apply(this, arguments);","    }, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"34":1,"35":0,"36":0,"39":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/doWhilst.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/doWhilst.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":4,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"doWhilst","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":44}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":15},"end":{"line":51,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":47}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":48,"column":0},"end":{"line":58,"column":1}},"14":{"start":{"line":49,"column":4},"end":{"line":49,"column":67}},"15":{"start":{"line":50,"column":4},"end":{"line":50,"column":55}},"16":{"start":{"line":51,"column":4},"end":{"line":56,"column":6}},"17":{"start":{"line":52,"column":8},"end":{"line":52,"column":38}},"18":{"start":{"line":52,"column":17},"end":{"line":52,"column":38}},"19":{"start":{"line":53,"column":8},"end":{"line":53,"column":54}},"20":{"start":{"line":54,"column":8},"end":{"line":54,"column":59}},"21":{"start":{"line":54,"column":36},"end":{"line":54,"column":59}},"22":{"start":{"line":55,"column":8},"end":{"line":55,"column":50}},"23":{"start":{"line":57,"column":4},"end":{"line":57,"column":20}},"24":{"start":{"line":59,"column":0},"end":{"line":59,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":39},"end":{"line":49,"column":47}},{"start":{"line":49,"column":51},"end":{"line":49,"column":65}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = doWhilst;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in"," * the order of operations, the arguments `test` and `iteratee` are switched."," *"," * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript."," *"," * @name doWhilst"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {AsyncFunction} iteratee - A function which is called each time `test`"," * passes. Invoked with (callback)."," * @param {Function} test - synchronous truth test to perform after each"," * execution of `iteratee`. Invoked with any non-error callback results of"," * `iteratee`."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `iteratee` has stopped."," * `callback` will be passed an error and any arguments passed to the final"," * `iteratee`'s callback. Invoked with (err, [results]);"," */","function doWhilst(iteratee, test, callback) {","    callback = (0, _onlyOnce2.default)(callback || _noop2.default);","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    var next = function (err /*, ...args*/) {","        if (err) return callback(err);","        var args = (0, _slice2.default)(arguments, 1);","        if (test.apply(this, args)) return _iteratee(next);","        callback.apply(null, [null].concat(args));","    };","    _iteratee(next);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"57":0,"59":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/during.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/during.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[1,2],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"during","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":36}}},"3":{"name":"next","line":63,"loc":{"start":{"line":63,"column":4},"end":{"line":63,"column":23}}},"4":{"name":"check","line":68,"loc":{"start":{"line":68,"column":4},"end":{"line":68,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":58,"column":0},"end":{"line":75,"column":1}},"12":{"start":{"line":59,"column":4},"end":{"line":59,"column":67}},"13":{"start":{"line":60,"column":4},"end":{"line":60,"column":43}},"14":{"start":{"line":61,"column":4},"end":{"line":61,"column":47}},"15":{"start":{"line":63,"column":4},"end":{"line":66,"column":5}},"16":{"start":{"line":64,"column":8},"end":{"line":64,"column":38}},"17":{"start":{"line":64,"column":17},"end":{"line":64,"column":38}},"18":{"start":{"line":65,"column":8},"end":{"line":65,"column":21}},"19":{"start":{"line":68,"column":4},"end":{"line":72,"column":5}},"20":{"start":{"line":69,"column":8},"end":{"line":69,"column":38}},"21":{"start":{"line":69,"column":17},"end":{"line":69,"column":38}},"22":{"start":{"line":70,"column":8},"end":{"line":70,"column":42}},"23":{"start":{"line":70,"column":20},"end":{"line":70,"column":42}},"24":{"start":{"line":71,"column":8},"end":{"line":71,"column":18}},"25":{"start":{"line":74,"column":4},"end":{"line":74,"column":17}},"26":{"start":{"line":76,"column":0},"end":{"line":76,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":39},"end":{"line":59,"column":47}},{"start":{"line":59,"column":51},"end":{"line":59,"column":65}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":8}},{"start":{"line":69,"column":8},"end":{"line":69,"column":8}}]},"6":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":8}},{"start":{"line":70,"column":8},"end":{"line":70,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = during;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that"," * is passed a callback in the form of `function (err, truth)`. If error is"," * passed to `test` or `fn`, the main callback is immediately called with the"," * value of the error."," *"," * @name during"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {AsyncFunction} test - asynchronous truth test to perform before each"," * execution of `fn`. Invoked with (callback)."," * @param {AsyncFunction} fn - An async function which is called each time"," * `test` passes. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `fn` has stopped. `callback`"," * will be passed an error, if one occurred, otherwise `null`."," * @example"," *"," * var count = 0;"," *"," * async.during("," *     function (callback) {"," *         return callback(null, count < 5);"," *     },"," *     function (callback) {"," *         count++;"," *         setTimeout(callback, 1000);"," *     },"," *     function (err) {"," *         // 5 seconds have passed"," *     }"," * );"," */","function during(test, fn, callback) {","    callback = (0, _onlyOnce2.default)(callback || _noop2.default);","    var _fn = (0, _wrapAsync2.default)(fn);","    var _test = (0, _wrapAsync2.default)(test);","","    function next(err) {","        if (err) return callback(err);","        _test(check);","    }","","    function check(err, truth) {","        if (err) return callback(err);","        if (!truth) return callback(null);","        _fn(next);","    }","","    _test(check);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"58":1,"59":0,"60":0,"61":0,"63":1,"64":0,"65":0,"68":1,"69":0,"70":0,"71":0,"74":0,"76":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/each.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/each.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":1},"b":{"1":[1,2],"2":[3,3]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"eachLimit","line":79,"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":59}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":79,"column":0},"end":{"line":81,"column":1}},"12":{"start":{"line":80,"column":2},"end":{"line":80,"column":105}},"13":{"start":{"line":82,"column":0},"end":{"line":82,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = eachLimit;","","var _eachOf = require('./eachOf');","","var _eachOf2 = _interopRequireDefault(_eachOf);","","var _withoutIndex = require('./internal/withoutIndex');","","var _withoutIndex2 = _interopRequireDefault(_withoutIndex);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Applies the function `iteratee` to each item in `coll`, in parallel."," * The `iteratee` is called with an item from the list, and a callback for when"," * it has finished. If the `iteratee` passes an error to its `callback`, the"," * main `callback` (for the `each` function) is immediately called with the"," * error."," *"," * Note, that since this function applies `iteratee` to each item in parallel,"," * there is no guarantee that the iteratee functions will complete in order."," *"," * @name each"," * @static"," * @memberOf module:Collections"," * @method"," * @alias forEach"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to"," * each item in `coll`. Invoked with (item, callback)."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOf`."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," * @example"," *"," * // assuming openFiles is an array of file names and saveFile is a function"," * // to save the modified contents of that file:"," *"," * async.each(openFiles, saveFile, function(err){"," *   // if any of the saves produced an error, err would equal that error"," * });"," *"," * // assuming openFiles is an array of file names"," * async.each(openFiles, function(file, callback) {"," *"," *     // Perform operation on file here."," *     console.log('Processing file ' + file);"," *"," *     if( file.length > 32 ) {"," *       console.log('This file name is too long');"," *       callback('File name too long');"," *     } else {"," *       // Do work to process file here"," *       console.log('File processed');"," *       callback();"," *     }"," * }, function(err) {"," *     // if any of the file processing produced an error, err would equal that error"," *     if( err ) {"," *       // One of the iterations produced an error."," *       // All processing will now stop."," *       console.log('A file failed to process');"," *     } else {"," *       console.log('All files have been processed successfully');"," *     }"," * });"," */","function eachLimit(coll, iteratee, callback) {","  (0, _eachOf2.default)(coll, (0, _withoutIndex2.default)((0, _wrapAsync2.default)(iteratee)), callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"79":1,"80":0,"82":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/withoutIndex.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/withoutIndex.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"_withoutIndex","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":11},"end":{"line":8,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":10,"column":6}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":41}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}}},"branchMap":{},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = _withoutIndex;","function _withoutIndex(iteratee) {","    return function (value, index, callback) {","        return iteratee(value, callback);","    };","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"7":1,"8":0,"9":0,"12":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":1},"b":{"1":[1,2],"2":[3,3]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"eachLimit","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":53}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":59}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":42,"column":0},"end":{"line":44,"column":1}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":117}},"13":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = eachLimit;","","var _eachOfLimit = require('./internal/eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _withoutIndex = require('./internal/withoutIndex');","","var _withoutIndex2 = _interopRequireDefault(_withoutIndex);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time."," *"," * @name eachLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.each]{@link module:Collections.each}"," * @alias forEachLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOfLimit`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","function eachLimit(coll, limit, iteratee, callback) {","  (0, _eachOfLimit2.default)(limit)(coll, (0, _withoutIndex2.default)((0, _wrapAsync2.default)(iteratee)), callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"42":1,"43":0,"45":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":65}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _eachLimit = require('./eachLimit');","","var _eachLimit2 = _interopRequireDefault(_eachLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time."," *"," * @name eachSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.each]{@link module:Collections.each}"," * @alias forEachSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each"," * item in `coll`."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOfSeries`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","exports.default = (0, _doLimit2.default)(_eachLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/ensureAsync.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/ensureAsync.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[1,1],"2":[2,2],"3":[0,0],"4":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}}},"2":{"name":"ensureAsync","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":25}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":40},"end":{"line":57,"column":66}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":18},"end":{"line":59,"column":30}}},"5":{"name":"(anonymous_5)","line":62,"loc":{"start":{"line":62,"column":44},"end":{"line":62,"column":56}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":55}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":59}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":61}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":95}},"9":{"start":{"line":18,"column":39},"end":{"line":18,"column":93}},"10":{"start":{"line":55,"column":0},"end":{"line":72,"column":1}},"11":{"start":{"line":56,"column":4},"end":{"line":56,"column":47}},"12":{"start":{"line":56,"column":37},"end":{"line":56,"column":47}},"13":{"start":{"line":57,"column":4},"end":{"line":71,"column":7}},"14":{"start":{"line":58,"column":8},"end":{"line":58,"column":24}},"15":{"start":{"line":59,"column":8},"end":{"line":68,"column":11}},"16":{"start":{"line":60,"column":12},"end":{"line":60,"column":38}},"17":{"start":{"line":61,"column":12},"end":{"line":67,"column":13}},"18":{"start":{"line":62,"column":16},"end":{"line":64,"column":19}},"19":{"start":{"line":63,"column":20},"end":{"line":63,"column":52}},"20":{"start":{"line":66,"column":16},"end":{"line":66,"column":48}},"21":{"start":{"line":69,"column":8},"end":{"line":69,"column":29}},"22":{"start":{"line":70,"column":8},"end":{"line":70,"column":21}},"23":{"start":{"line":73,"column":0},"end":{"line":73,"column":36}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":70},"end":{"line":18,"column":73}},{"start":{"line":18,"column":76},"end":{"line":18,"column":92}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":46},"end":{"line":18,"column":49}},{"start":{"line":18,"column":53},"end":{"line":18,"column":67}}]},"3":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"4":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":12}},{"start":{"line":61,"column":12},"end":{"line":61,"column":12}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = ensureAsync;","","var _setImmediate = require('./internal/setImmediate');","","var _setImmediate2 = _interopRequireDefault(_setImmediate);","","var _initialParams = require('./internal/initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","var _wrapAsync = require('./internal/wrapAsync');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Wrap an async function and ensure it calls its callback on a later tick of"," * the event loop.  If the function already calls its callback on a next tick,"," * no extra deferral is added. This is useful for preventing stack overflows"," * (`RangeError: Maximum call stack size exceeded`) and generally keeping"," * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)"," * contained. ES2017 `async` functions are returned as-is -- they are immune"," * to Zalgo's corrupting influences, as they always resolve on a later tick."," *"," * @name ensureAsync"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} fn - an async function, one that expects a node-style"," * callback as its last argument."," * @returns {AsyncFunction} Returns a wrapped function with the exact same call"," * signature as the function passed in."," * @example"," *"," * function sometimesAsync(arg, callback) {"," *     if (cache[arg]) {"," *         return callback(null, cache[arg]); // this would be synchronous!!"," *     } else {"," *         doSomeIO(arg, callback); // this IO would be asynchronous"," *     }"," * }"," *"," * // this has a risk of stack overflows if many results are cached in a row"," * async.mapSeries(args, sometimesAsync, done);"," *"," * // this will defer sometimesAsync's callback if necessary,"," * // preventing stack overflows"," * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);"," */","function ensureAsync(fn) {","    if ((0, _wrapAsync.isAsync)(fn)) return fn;","    return (0, _initialParams2.default)(function (args, callback) {","        var sync = true;","        args.push(function () {","            var innerArgs = arguments;","            if (sync) {","                (0, _setImmediate2.default)(function () {","                    callback.apply(null, innerArgs);","                });","            } else {","                callback.apply(null, innerArgs);","            }","        });","        fn.apply(this, args);","        sync = false;","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":2,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"66":0,"69":0,"70":0,"73":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/every.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/every.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":1,"11":1},"b":{"1":[0,3],"2":[3,3]},"f":{"1":3},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"9":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"10":{"start":{"line":49,"column":0},"end":{"line":49,"column":107}},"11":{"start":{"line":50,"column":0},"end":{"line":50,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","var _notId = require('./internal/notId');","","var _notId2 = _interopRequireDefault(_notId);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns `true` if every element in `coll` satisfies an async test. If any"," * iteratee call returns `false`, the main `callback` is immediately called."," *"," * @name every"," * @static"," * @memberOf module:Collections"," * @method"," * @alias all"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in parallel."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," * @example"," *"," * async.every(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // if result is true then every file exists"," * });"," */","exports.default = (0, _doParallel2.default)((0, _createTester2.default)(_notId2.default, _notId2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":3,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/everySeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/everySeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":55}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":66}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _everyLimit = require('./everyLimit');","","var _everyLimit2 = _interopRequireDefault(_everyLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time."," *"," * @name everySeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.every]{@link module:Collections.every}"," * @alias allSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in series."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," */","exports.default = (0, _doLimit2.default)(_everyLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/filter.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/filter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":44,"column":0},"end":{"line":44,"column":62}},"9":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _filter = require('./internal/filter');","","var _filter2 = _interopRequireDefault(_filter);","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns a new array of all the values in `coll` which pass an async truth"," * test. This operation is performed in parallel, but the results array will be"," * in the same order as the original."," *"," * @name filter"," * @static"," * @memberOf module:Collections"," * @method"," * @alias select"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," * @example"," *"," * async.filter(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, results) {"," *     // results now equals an array of the existing files"," * });"," */","exports.default = (0, _doParallel2.default)(_filter2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"44":1,"45":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/filter.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/filter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1},"b":{"1":[1,4],"2":[5,5],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"2":{"name":"filterArray","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":54}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":16},"end":{"line":32,"column":46}}},"4":{"name":"(anonymous_4)","line":33,"loc":{"start":{"line":33,"column":20},"end":{"line":33,"column":38}}},"5":{"name":"(anonymous_5)","line":37,"loc":{"start":{"line":37,"column":7},"end":{"line":37,"column":22}}},"6":{"name":"filterGeneric","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":57}}},"7":{"name":"(anonymous_7)","line":49,"loc":{"start":{"line":49,"column":17},"end":{"line":49,"column":47}}},"8":{"name":"(anonymous_8)","line":50,"loc":{"start":{"line":50,"column":20},"end":{"line":50,"column":38}}},"9":{"name":"(anonymous_9)","line":60,"loc":{"start":{"line":60,"column":7},"end":{"line":60,"column":22}}},"10":{"name":"(anonymous_10)","line":64,"loc":{"start":{"line":64,"column":64},"end":{"line":64,"column":80}}},"11":{"name":"_filter","line":71,"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":52}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":59}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":35}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":43}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":53}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":95}},"14":{"start":{"line":28,"column":39},"end":{"line":28,"column":93}},"15":{"start":{"line":30,"column":0},"end":{"line":45,"column":1}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":44}},"17":{"start":{"line":32,"column":4},"end":{"line":44,"column":7}},"18":{"start":{"line":33,"column":8},"end":{"line":36,"column":11}},"19":{"start":{"line":34,"column":12},"end":{"line":34,"column":37}},"20":{"start":{"line":35,"column":12},"end":{"line":35,"column":26}},"21":{"start":{"line":38,"column":8},"end":{"line":38,"column":38}},"22":{"start":{"line":38,"column":17},"end":{"line":38,"column":38}},"23":{"start":{"line":39,"column":8},"end":{"line":39,"column":25}},"24":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"25":{"start":{"line":41,"column":12},"end":{"line":41,"column":53}},"26":{"start":{"line":41,"column":32},"end":{"line":41,"column":53}},"27":{"start":{"line":43,"column":8},"end":{"line":43,"column":32}},"28":{"start":{"line":47,"column":0},"end":{"line":69,"column":1}},"29":{"start":{"line":48,"column":4},"end":{"line":48,"column":21}},"30":{"start":{"line":49,"column":4},"end":{"line":68,"column":7}},"31":{"start":{"line":50,"column":8},"end":{"line":59,"column":11}},"32":{"start":{"line":51,"column":12},"end":{"line":58,"column":13}},"33":{"start":{"line":52,"column":16},"end":{"line":52,"column":30}},"34":{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},"35":{"start":{"line":55,"column":20},"end":{"line":55,"column":61}},"36":{"start":{"line":57,"column":16},"end":{"line":57,"column":27}},"37":{"start":{"line":61,"column":8},"end":{"line":67,"column":9}},"38":{"start":{"line":62,"column":12},"end":{"line":62,"column":26}},"39":{"start":{"line":64,"column":12},"end":{"line":66,"column":55}},"40":{"start":{"line":65,"column":16},"end":{"line":65,"column":41}},"41":{"start":{"line":71,"column":0},"end":{"line":74,"column":1}},"42":{"start":{"line":72,"column":4},"end":{"line":72,"column":80}},"43":{"start":{"line":73,"column":4},"end":{"line":73,"column":89}},"44":{"start":{"line":75,"column":0},"end":{"line":75,"column":36}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":70},"end":{"line":28,"column":73}},{"start":{"line":28,"column":76},"end":{"line":28,"column":92}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":12}},{"start":{"line":41,"column":12},"end":{"line":41,"column":12}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":12}},{"start":{"line":51,"column":12},"end":{"line":51,"column":12}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":16},"end":{"line":54,"column":16}},{"start":{"line":54,"column":16},"end":{"line":54,"column":16}}]},"7":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":8}},{"start":{"line":61,"column":8},"end":{"line":61,"column":8}}]},"8":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":52},"end":{"line":72,"column":63}},{"start":{"line":72,"column":66},"end":{"line":72,"column":79}}]},"9":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":61},"end":{"line":73,"column":69}},{"start":{"line":73,"column":73},"end":{"line":73,"column":87}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = _filter;","","var _arrayMap = require('lodash/_arrayMap');","","var _arrayMap2 = _interopRequireDefault(_arrayMap);","","var _isArrayLike = require('lodash/isArrayLike');","","var _isArrayLike2 = _interopRequireDefault(_isArrayLike);","","var _baseProperty = require('lodash/_baseProperty');","","var _baseProperty2 = _interopRequireDefault(_baseProperty);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function filterArray(eachfn, arr, iteratee, callback) {","    var truthValues = new Array(arr.length);","    eachfn(arr, function (x, index, callback) {","        iteratee(x, function (err, v) {","            truthValues[index] = !!v;","            callback(err);","        });","    }, function (err) {","        if (err) return callback(err);","        var results = [];","        for (var i = 0; i < arr.length; i++) {","            if (truthValues[i]) results.push(arr[i]);","        }","        callback(null, results);","    });","}","","function filterGeneric(eachfn, coll, iteratee, callback) {","    var results = [];","    eachfn(coll, function (x, index, callback) {","        iteratee(x, function (err, v) {","            if (err) {","                callback(err);","            } else {","                if (v) {","                    results.push({ index: index, value: x });","                }","                callback();","            }","        });","    }, function (err) {","        if (err) {","            callback(err);","        } else {","            callback(null, (0, _arrayMap2.default)(results.sort(function (a, b) {","                return a.index - b.index;","            }), (0, _baseProperty2.default)('value')));","        }","    });","}","","function _filter(eachfn, coll, iteratee, callback) {","    var filter = (0, _isArrayLike2.default)(coll) ? filterArray : filterGeneric;","    filter(eachfn, coll, (0, _wrapAsync2.default)(iteratee), callback || _noop2.default);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":5,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"38":0,"39":0,"40":0,"41":0,"43":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"55":0,"57":0,"61":0,"62":0,"64":0,"65":0,"71":1,"72":0,"73":0,"75":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/filterLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/filterLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":65}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":67}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _filter = require('./internal/filter');","","var _filter2 = _interopRequireDefault(_filter);","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name filterLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @alias selectLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","exports.default = (0, _doParallelLimit2.default)(_filter2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/filterSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/filterSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":67}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _filterLimit = require('./filterLimit');","","var _filterLimit2 = _interopRequireDefault(_filterLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time."," *"," * @name filterSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @alias selectSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)"," */","exports.default = (0, _doLimit2.default)(_filterLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"34":1,"35":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/find.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/find.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":4,"12":1,"13":1},"b":{"1":[0,4],"2":[4,4]},"f":{"1":4},"fnMap":{"1":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":59}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":51}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":55}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":57}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":61}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":95}},"11":{"start":{"line":23,"column":39},"end":{"line":23,"column":93}},"12":{"start":{"line":60,"column":0},"end":{"line":60,"column":118}},"13":{"start":{"line":61,"column":0},"end":{"line":61,"column":36}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":92}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","var _findGetResult = require('./internal/findGetResult');","","var _findGetResult2 = _interopRequireDefault(_findGetResult);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns the first value in `coll` that passes an async truth test. The"," * `iteratee` is applied in parallel, meaning the first iteratee to return"," * `true` will fire the detect `callback` with that result. That means the"," * result might not be the first item in the original `coll` (in terms of order)"," * that passes the test.",""," * If order within the original `coll` is important, then look at"," * [`detectSeries`]{@link module:Collections.detectSeries}."," *"," * @name detect"," * @static"," * @memberOf module:Collections"," * @method"," * @alias find"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," * @example"," *"," * async.detect(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // result now equals the first file in the list that exists"," * });"," */","exports.default = (0, _doParallel2.default)((0, _createTester2.default)(_identity2.default, _findGetResult2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":4,"60":1,"61":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/findLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/findLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":4,"12":1,"13":1},"b":{"1":[0,4],"2":[4,4]},"f":{"1":4},"fnMap":{"1":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":59}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":61}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":65}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":57}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":61}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":95}},"11":{"start":{"line":23,"column":39},"end":{"line":23,"column":93}},"12":{"start":{"line":47,"column":0},"end":{"line":47,"column":123}},"13":{"start":{"line":48,"column":0},"end":{"line":48,"column":36}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":92}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","var _findGetResult = require('./internal/findGetResult');","","var _findGetResult2 = _interopRequireDefault(_findGetResult);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name detectLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.detect]{@link module:Collections.detect}"," * @alias findLimit"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," */","exports.default = (0, _doParallelLimit2.default)((0, _createTester2.default)(_identity2.default, _findGetResult2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":4,"47":1,"48":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/findSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/findSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":37,"column":0},"end":{"line":37,"column":67}},"9":{"start":{"line":38,"column":0},"end":{"line":38,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _detectLimit = require('./detectLimit');","","var _detectLimit2 = _interopRequireDefault(_detectLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time."," *"," * @name detectSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.detect]{@link module:Collections.detect}"," * @alias findSeries"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," */","exports.default = (0, _doLimit2.default)(_detectLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"37":1,"38":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/foldl.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/foldl.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"reduce","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":48}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":38},"end":{"line":69,"column":64}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":27},"end":{"line":70,"column":45}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":7},"end":{"line":74,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":59}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":39}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":66,"column":0},"end":{"line":77,"column":1}},"14":{"start":{"line":67,"column":4},"end":{"line":67,"column":63}},"15":{"start":{"line":68,"column":4},"end":{"line":68,"column":55}},"16":{"start":{"line":69,"column":4},"end":{"line":76,"column":7}},"17":{"start":{"line":70,"column":8},"end":{"line":73,"column":11}},"18":{"start":{"line":71,"column":12},"end":{"line":71,"column":21}},"19":{"start":{"line":72,"column":12},"end":{"line":72,"column":26}},"20":{"start":{"line":75,"column":8},"end":{"line":75,"column":28}},"21":{"start":{"line":78,"column":0},"end":{"line":78,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":35},"end":{"line":67,"column":43}},{"start":{"line":67,"column":47},"end":{"line":67,"column":61}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = reduce;","","var _eachOfSeries = require('./eachOfSeries');","","var _eachOfSeries2 = _interopRequireDefault(_eachOfSeries);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Reduces `coll` into a single value using an async `iteratee` to return each"," * successive step. `memo` is the initial state of the reduction. This function"," * only operates in series."," *"," * For performance reasons, it may make sense to split a call to this function"," * into a parallel map, and then use the normal `Array.prototype.reduce` on the"," * results. This function is for situations where each step in the reduction"," * needs to be async; if you can get the data before reducing it, then it's"," * probably a good idea to do so."," *"," * @name reduce"," * @static"," * @memberOf module:Collections"," * @method"," * @alias inject"," * @alias foldl"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {*} memo - The initial state of the reduction."," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * array to produce the next step in the reduction."," * The `iteratee` should complete with the next state of the reduction."," * If the iteratee complete with an error, the reduction is stopped and the"," * main `callback` is immediately called with the error."," * Invoked with (memo, item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the reduced value. Invoked with"," * (err, result)."," * @example"," *"," * async.reduce([1,2,3], 0, function(memo, item, callback) {"," *     // pointless async:"," *     process.nextTick(function() {"," *         callback(null, memo + item)"," *     });"," * }, function(err, result) {"," *     // result is now equal to the last value of memo, which is 6"," * });"," */","function reduce(coll, memo, iteratee, callback) {","    callback = (0, _once2.default)(callback || _noop2.default);","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    (0, _eachOfSeries2.default)(coll, function (x, i, callback) {","        _iteratee(memo, x, function (err, v) {","            memo = v;","            callback(err);","        });","    }, function (err) {","        callback(err, memo);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"75":0,"78":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/foldr.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/foldr.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"reduceRight","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":54}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":40,"column":0},"end":{"line":43,"column":1}},"10":{"start":{"line":41,"column":2},"end":{"line":41,"column":55}},"11":{"start":{"line":42,"column":2},"end":{"line":42,"column":60}},"12":{"start":{"line":44,"column":0},"end":{"line":44,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = reduceRight;","","var _reduce = require('./reduce');","","var _reduce2 = _interopRequireDefault(_reduce);","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order."," *"," * @name reduceRight"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reduce]{@link module:Collections.reduce}"," * @alias foldr"," * @category Collection"," * @param {Array} array - A collection to iterate over."," * @param {*} memo - The initial state of the reduction."," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * array to produce the next step in the reduction."," * The `iteratee` should complete with the next state of the reduction."," * If the iteratee complete with an error, the reduction is stopped and the"," * main `callback` is immediately called with the error."," * Invoked with (memo, item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the reduced value. Invoked with"," * (err, result)."," */","function reduceRight(array, memo, iteratee, callback) {","  var reversed = (0, _slice2.default)(array).reverse();","  (0, _reduce2.default)(reversed, memo, iteratee, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"40":1,"41":0,"42":0,"44":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forEach.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forEach.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":1},"b":{"1":[1,2],"2":[3,3]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"eachLimit","line":79,"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":59}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":79,"column":0},"end":{"line":81,"column":1}},"12":{"start":{"line":80,"column":2},"end":{"line":80,"column":105}},"13":{"start":{"line":82,"column":0},"end":{"line":82,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = eachLimit;","","var _eachOf = require('./eachOf');","","var _eachOf2 = _interopRequireDefault(_eachOf);","","var _withoutIndex = require('./internal/withoutIndex');","","var _withoutIndex2 = _interopRequireDefault(_withoutIndex);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Applies the function `iteratee` to each item in `coll`, in parallel."," * The `iteratee` is called with an item from the list, and a callback for when"," * it has finished. If the `iteratee` passes an error to its `callback`, the"," * main `callback` (for the `each` function) is immediately called with the"," * error."," *"," * Note, that since this function applies `iteratee` to each item in parallel,"," * there is no guarantee that the iteratee functions will complete in order."," *"," * @name each"," * @static"," * @memberOf module:Collections"," * @method"," * @alias forEach"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to"," * each item in `coll`. Invoked with (item, callback)."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOf`."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," * @example"," *"," * // assuming openFiles is an array of file names and saveFile is a function"," * // to save the modified contents of that file:"," *"," * async.each(openFiles, saveFile, function(err){"," *   // if any of the saves produced an error, err would equal that error"," * });"," *"," * // assuming openFiles is an array of file names"," * async.each(openFiles, function(file, callback) {"," *"," *     // Perform operation on file here."," *     console.log('Processing file ' + file);"," *"," *     if( file.length > 32 ) {"," *       console.log('This file name is too long');"," *       callback('File name too long');"," *     } else {"," *       // Do work to process file here"," *       console.log('File processed');"," *       callback();"," *     }"," * }, function(err) {"," *     // if any of the file processing produced an error, err would equal that error"," *     if( err ) {"," *       // One of the iterations produced an error."," *       // All processing will now stop."," *       console.log('A file failed to process');"," *     } else {"," *       console.log('All files have been processed successfully');"," *     }"," * });"," */","function eachLimit(coll, iteratee, callback) {","  (0, _eachOf2.default)(coll, (0, _withoutIndex2.default)((0, _wrapAsync2.default)(iteratee)), callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"79":1,"80":0,"82":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forEachLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forEachLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":1},"b":{"1":[1,2],"2":[3,3]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"eachLimit","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":53}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":59}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":42,"column":0},"end":{"line":44,"column":1}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":117}},"13":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = eachLimit;","","var _eachOfLimit = require('./internal/eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _withoutIndex = require('./internal/withoutIndex');","","var _withoutIndex2 = _interopRequireDefault(_withoutIndex);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time."," *"," * @name eachLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.each]{@link module:Collections.each}"," * @alias forEachLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOfLimit`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","function eachLimit(coll, limit, iteratee, callback) {","  (0, _eachOfLimit2.default)(limit)(coll, (0, _withoutIndex2.default)((0, _wrapAsync2.default)(iteratee)), callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"42":1,"43":0,"45":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forEachOf.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forEachOf.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":8,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1},"b":{"1":[0,0],"2":[1,7],"3":[8,8],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":8,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":54}}},"2":{"name":"_interopRequireDefault","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":37}}},"3":{"name":"eachOfArrayLike","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":51}}},"4":{"name":"iteratorCallback","line":56,"loc":{"start":{"line":56,"column":4},"end":{"line":56,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":10,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":98}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":77}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":44}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":57}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":45}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":49}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":35}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":43}},"15":{"start":{"line":32,"column":0},"end":{"line":32,"column":39}},"16":{"start":{"line":34,"column":0},"end":{"line":34,"column":43}},"17":{"start":{"line":36,"column":0},"end":{"line":36,"column":47}},"18":{"start":{"line":38,"column":0},"end":{"line":38,"column":51}},"19":{"start":{"line":40,"column":0},"end":{"line":40,"column":49}},"20":{"start":{"line":42,"column":0},"end":{"line":42,"column":53}},"21":{"start":{"line":44,"column":0},"end":{"line":44,"column":95}},"22":{"start":{"line":44,"column":39},"end":{"line":44,"column":93}},"23":{"start":{"line":47,"column":0},"end":{"line":67,"column":1}},"24":{"start":{"line":48,"column":4},"end":{"line":48,"column":63}},"25":{"start":{"line":49,"column":4},"end":{"line":51,"column":29}},"26":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"27":{"start":{"line":53,"column":8},"end":{"line":53,"column":23}},"28":{"start":{"line":56,"column":4},"end":{"line":62,"column":5}},"29":{"start":{"line":57,"column":8},"end":{"line":61,"column":9}},"30":{"start":{"line":58,"column":12},"end":{"line":58,"column":26}},"31":{"start":{"line":59,"column":15},"end":{"line":61,"column":9}},"32":{"start":{"line":60,"column":12},"end":{"line":60,"column":27}},"33":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"34":{"start":{"line":65,"column":8},"end":{"line":65,"column":80}},"35":{"start":{"line":70,"column":0},"end":{"line":70,"column":76}},"36":{"start":{"line":111,"column":0},"end":{"line":111,"column":36}}},"branchMap":{"1":{"line":8,"type":"cond-expr","locations":[{"start":{"line":8,"column":66},"end":{"line":8,"column":81}},{"start":{"line":8,"column":84},"end":{"line":8,"column":97}}]},"2":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":70},"end":{"line":44,"column":73}},{"start":{"line":44,"column":76},"end":{"line":44,"column":92}}]},"3":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":46},"end":{"line":44,"column":49}},{"start":{"line":44,"column":53},"end":{"line":44,"column":67}}]},"4":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":35},"end":{"line":48,"column":43}},{"start":{"line":48,"column":47},"end":{"line":48,"column":61}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"6":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"7":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":15},"end":{"line":59,"column":15}},{"start":{"line":59,"column":15},"end":{"line":59,"column":15}}]},"8":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":19},"end":{"line":59,"column":41}},{"start":{"line":59,"column":45},"end":{"line":59,"column":74}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (coll, iteratee, callback) {","    var eachOfImplementation = (0, _isArrayLike2.default)(coll) ? eachOfArrayLike : eachOfGeneric;","    eachOfImplementation(coll, (0, _wrapAsync2.default)(iteratee), callback);","};","","var _isArrayLike = require('lodash/isArrayLike');","","var _isArrayLike2 = _interopRequireDefault(_isArrayLike);","","var _breakLoop = require('./internal/breakLoop');","","var _breakLoop2 = _interopRequireDefault(_breakLoop);","","var _eachOfLimit = require('./eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// eachOf implementation optimized for array-likes","function eachOfArrayLike(coll, iteratee, callback) {","    callback = (0, _once2.default)(callback || _noop2.default);","    var index = 0,","        completed = 0,","        length = coll.length;","    if (length === 0) {","        callback(null);","    }","","    function iteratorCallback(err, value) {","        if (err) {","            callback(err);","        } else if (++completed === length || value === _breakLoop2.default) {","            callback(null);","        }","    }","","    for (; index < length; index++) {","        iteratee(coll[index], index, (0, _onlyOnce2.default)(iteratorCallback));","    }","}","","// a generic version of eachOf which can handle array, object, and iterator cases.","var eachOfGeneric = (0, _doLimit2.default)(_eachOfLimit2.default, Infinity);","","/**"," * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument"," * to the iteratee."," *"," * @name eachOf"," * @static"," * @memberOf module:Collections"," * @method"," * @alias forEachOf"," * @category Collection"," * @see [async.each]{@link module:Collections.each}"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each"," * item in `coll`."," * The `key` is the item's key, or index in the case of an array."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," * @example"," *"," * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};"," * var configs = {};"," *"," * async.forEachOf(obj, function (value, key, callback) {"," *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {"," *         if (err) return callback(err);"," *         try {"," *             configs[key] = JSON.parse(data);"," *         } catch (e) {"," *             return callback(e);"," *         }"," *         callback();"," *     });"," * }, function (err) {"," *     if (err) console.error(err.message);"," *     // configs is now a map of JSON data"," *     doSomethingWith(configs);"," * });"," */","module.exports = exports['default'];"],"l":{"3":1,"7":1,"8":0,"9":0,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":1,"30":1,"32":1,"34":1,"36":1,"38":1,"40":1,"42":1,"44":8,"47":1,"48":0,"49":0,"52":0,"53":0,"56":1,"57":0,"58":0,"59":0,"60":0,"64":0,"65":0,"70":1,"111":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forEachOfLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forEachOfLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":1},"b":{"1":[1,1],"2":[2,2]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"eachOfLimit","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":54}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":54}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":58}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":38,"column":0},"end":{"line":40,"column":1}},"10":{"start":{"line":39,"column":2},"end":{"line":39,"column":88}},"11":{"start":{"line":41,"column":0},"end":{"line":41,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = eachOfLimit;","","var _eachOfLimit2 = require('./internal/eachOfLimit');","","var _eachOfLimit3 = _interopRequireDefault(_eachOfLimit2);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name eachOfLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.eachOf]{@link module:Collections.eachOf}"," * @alias forEachOfLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each"," * item in `coll`. The `key` is the item's key, or index in the case of an"," * array."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","function eachOfLimit(coll, limit, iteratee, callback) {","  (0, _eachOfLimit3.default)(limit)(coll, (0, _wrapAsync2.default)(iteratee), callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"38":1,"39":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forEachOfSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forEachOfSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":67}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _eachOfLimit = require('./eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time."," *"," * @name eachOfSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.eachOf]{@link module:Collections.eachOf}"," * @alias forEachOfSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Invoked with (err)."," */","exports.default = (0, _doLimit2.default)(_eachOfLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"34":1,"35":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forEachSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forEachSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":65}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _eachLimit = require('./eachLimit');","","var _eachLimit2 = _interopRequireDefault(_eachLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time."," *"," * @name eachSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.each]{@link module:Collections.each}"," * @alias forEachSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each"," * item in `coll`."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOfSeries`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","exports.default = (0, _doLimit2.default)(_eachLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forever.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forever.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0]},"f":{"1":4,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"forever","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":30}}},"3":{"name":"next","line":59,"loc":{"start":{"line":59,"column":4},"end":{"line":59,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":57}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":55,"column":0},"end":{"line":64,"column":1}},"14":{"start":{"line":56,"column":4},"end":{"line":56,"column":66}},"15":{"start":{"line":57,"column":4},"end":{"line":57,"column":72}},"16":{"start":{"line":59,"column":4},"end":{"line":62,"column":5}},"17":{"start":{"line":60,"column":8},"end":{"line":60,"column":34}},"18":{"start":{"line":60,"column":17},"end":{"line":60,"column":34}},"19":{"start":{"line":61,"column":8},"end":{"line":61,"column":19}},"20":{"start":{"line":63,"column":4},"end":{"line":63,"column":11}},"21":{"start":{"line":65,"column":0},"end":{"line":65,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":39},"end":{"line":56,"column":46}},{"start":{"line":56,"column":50},"end":{"line":56,"column":64}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = forever;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _ensureAsync = require('./ensureAsync');","","var _ensureAsync2 = _interopRequireDefault(_ensureAsync);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Calls the asynchronous function `fn` with a callback parameter that allows it"," * to call itself again, in series, indefinitely.",""," * If an error is passed to the callback then `errback` is called with the"," * error, and execution stops, otherwise it will never be called."," *"," * @name forever"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {AsyncFunction} fn - an async function to call repeatedly."," * Invoked with (next)."," * @param {Function} [errback] - when `fn` passes an error to it's callback,"," * this function will be called, and execution stops. Invoked with (err)."," * @example"," *"," * async.forever("," *     function(next) {"," *         // next is suitable for passing to things that need a callback(err [, whatever]);"," *         // it will result in this function being called again."," *     },"," *     function(err) {"," *         // if next is called with a value in its first parameter, it will appear"," *         // in here as 'err', and execution will stop."," *     }"," * );"," */","function forever(fn, errback) {","    var done = (0, _onlyOnce2.default)(errback || _noop2.default);","    var task = (0, _wrapAsync2.default)((0, _ensureAsync2.default)(fn));","","    function next(err) {","        if (err) return done(err);","        task(next);","    }","    next();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"55":1,"56":0,"57":0,"59":1,"60":0,"61":0,"63":0,"65":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/groupBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/groupBy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":49}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":46}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":59}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":53,"column":0},"end":{"line":53,"column":75}},"9":{"start":{"line":54,"column":0},"end":{"line":54,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","var _groupByLimit = require('./groupByLimit');","","var _groupByLimit2 = _interopRequireDefault(_groupByLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns a new object, where each value corresponds to an array of items, from"," * `coll`, that returned the corresponding key. That is, the keys of the object"," * correspond to the values passed to the `iteratee` callback."," *"," * Note: Since this function applies the `iteratee` to each item in parallel,"," * there is no guarantee that the `iteratee` functions will complete in order."," * However, the values for each key in the `result` will be in the same order as"," * the original `coll`. For Objects, the values will roughly be in the order of"," * the original Objects' keys (but this can vary across JavaScript engines)."," *"," * @name groupBy"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a `key` to group the value under."," * Invoked with (value, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Result is an `Object` whoses"," * properties are arrays of values which returned the corresponding key."," * @example"," *"," * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {"," *     db.findById(userId, function(err, user) {"," *         if (err) return callback(err);"," *         return callback(null, user.age);"," *     });"," * }, function(err, result) {"," *     // result is object containing the userIds grouped by age"," *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};"," * });"," */","exports.default = (0, _doLimit2.default)(_groupByLimit2.default, Infinity);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"53":1,"54":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/groupByLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/groupByLimit.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":3,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,2],"6":[3,3]},"f":{"1":0,"2":0,"3":0,"4":0,"5":3},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":61}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":41},"end":{"line":10,"column":66}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":23},"end":{"line":11,"column":43}}},"4":{"name":"(anonymous_4)","line":15,"loc":{"start":{"line":15,"column":7},"end":{"line":15,"column":34}}},"5":{"name":"_interopRequireDefault","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":35,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":42}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":55}},"5":{"start":{"line":10,"column":4},"end":{"line":34,"column":7}},"6":{"start":{"line":11,"column":8},"end":{"line":14,"column":11}},"7":{"start":{"line":12,"column":12},"end":{"line":12,"column":42}},"8":{"start":{"line":12,"column":21},"end":{"line":12,"column":42}},"9":{"start":{"line":13,"column":12},"end":{"line":13,"column":58}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":24}},"11":{"start":{"line":18,"column":8},"end":{"line":18,"column":61}},"12":{"start":{"line":20,"column":8},"end":{"line":31,"column":9}},"13":{"start":{"line":21,"column":12},"end":{"line":30,"column":13}},"14":{"start":{"line":22,"column":16},"end":{"line":22,"column":44}},"15":{"start":{"line":23,"column":16},"end":{"line":23,"column":44}},"16":{"start":{"line":25,"column":16},"end":{"line":29,"column":17}},"17":{"start":{"line":26,"column":20},"end":{"line":26,"column":42}},"18":{"start":{"line":28,"column":20},"end":{"line":28,"column":40}},"19":{"start":{"line":33,"column":8},"end":{"line":33,"column":37}},"20":{"start":{"line":37,"column":0},"end":{"line":37,"column":35}},"21":{"start":{"line":39,"column":0},"end":{"line":39,"column":43}},"22":{"start":{"line":41,"column":0},"end":{"line":41,"column":38}},"23":{"start":{"line":43,"column":0},"end":{"line":43,"column":51}},"24":{"start":{"line":45,"column":0},"end":{"line":45,"column":49}},"25":{"start":{"line":47,"column":0},"end":{"line":47,"column":53}},"26":{"start":{"line":49,"column":0},"end":{"line":49,"column":95}},"27":{"start":{"line":49,"column":39},"end":{"line":49,"column":93}},"28":{"start":{"line":71,"column":0},"end":{"line":71,"column":36}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":15},"end":{"line":8,"column":23}},{"start":{"line":8,"column":27},"end":{"line":8,"column":41}}]},"2":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":12}},{"start":{"line":12,"column":12},"end":{"line":12,"column":12}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":21,"column":12}},{"start":{"line":21,"column":12},"end":{"line":21,"column":12}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":16},"end":{"line":25,"column":16}},{"start":{"line":25,"column":16},"end":{"line":25,"column":16}}]},"5":{"line":49,"type":"cond-expr","locations":[{"start":{"line":49,"column":70},"end":{"line":49,"column":73}},{"start":{"line":49,"column":76},"end":{"line":49,"column":92}}]},"6":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":46},"end":{"line":49,"column":49}},{"start":{"line":49,"column":53},"end":{"line":49,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (coll, limit, iteratee, callback) {","    callback = callback || _noop2.default;","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    (0, _mapLimit2.default)(coll, limit, function (val, callback) {","        _iteratee(val, function (err, key) {","            if (err) return callback(err);","            return callback(null, { key: key, val: val });","        });","    }, function (err, mapResults) {","        var result = {};","        // from MDN, handle object having an `hasOwnProperty` prop","        var hasOwnProperty = Object.prototype.hasOwnProperty;","","        for (var i = 0; i < mapResults.length; i++) {","            if (mapResults[i]) {","                var key = mapResults[i].key;","                var val = mapResults[i].val;","","                if (hasOwnProperty.call(result, key)) {","                    result[key].push(val);","                } else {","                    result[key] = [val];","                }","            }","        }","","        return callback(err, result);","    });","};","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _mapLimit = require('./mapLimit');","","var _mapLimit2 = _interopRequireDefault(_mapLimit);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","",";","/**"," * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time."," *"," * @name groupByLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.groupBy]{@link module:Collections.groupBy}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a `key` to group the value under."," * Invoked with (value, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Result is an `Object` whoses"," * properties are arrays of values which returned the corresponding key."," */","module.exports = exports['default'];"],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"16":0,"18":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"28":0,"33":0,"37":1,"39":1,"41":1,"43":1,"45":1,"47":1,"49":3,"71":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/groupBySeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/groupBySeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":49}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":46}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":59}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":68}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","var _groupByLimit = require('./groupByLimit');","","var _groupByLimit2 = _interopRequireDefault(_groupByLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time."," *"," * @name groupBySeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.groupBy]{@link module:Collections.groupBy}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a `key` to group the value under."," * Invoked with (value, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Result is an `Object` whoses"," * properties are arrays of values which returned the corresponding key."," */","exports.default = (0, _doLimit2.default)(_groupByLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":77,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1},"b":{"1":[0,77],"2":[77,77]},"f":{"1":77},"fnMap":{"1":{"name":"_interopRequireDefault","line":316,"loc":{"start":{"line":316,"column":0},"end":{"line":316,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":1927}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":52}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":65}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":51}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":30}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":43}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":42}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":55}},"15":{"start":{"line":32,"column":0},"end":{"line":32,"column":32}},"16":{"start":{"line":34,"column":0},"end":{"line":34,"column":45}},"17":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}},"18":{"start":{"line":38,"column":0},"end":{"line":38,"column":49}},"19":{"start":{"line":40,"column":0},"end":{"line":40,"column":34}},"20":{"start":{"line":42,"column":0},"end":{"line":42,"column":47}},"21":{"start":{"line":44,"column":0},"end":{"line":44,"column":44}},"22":{"start":{"line":46,"column":0},"end":{"line":46,"column":57}},"23":{"start":{"line":48,"column":0},"end":{"line":48,"column":46}},"24":{"start":{"line":50,"column":0},"end":{"line":50,"column":59}},"25":{"start":{"line":52,"column":0},"end":{"line":52,"column":38}},"26":{"start":{"line":54,"column":0},"end":{"line":54,"column":51}},"27":{"start":{"line":56,"column":0},"end":{"line":56,"column":34}},"28":{"start":{"line":58,"column":0},"end":{"line":58,"column":47}},"29":{"start":{"line":60,"column":0},"end":{"line":60,"column":44}},"30":{"start":{"line":62,"column":0},"end":{"line":62,"column":57}},"31":{"start":{"line":64,"column":0},"end":{"line":64,"column":46}},"32":{"start":{"line":66,"column":0},"end":{"line":66,"column":59}},"33":{"start":{"line":68,"column":0},"end":{"line":68,"column":28}},"34":{"start":{"line":70,"column":0},"end":{"line":70,"column":41}},"35":{"start":{"line":72,"column":0},"end":{"line":72,"column":38}},"36":{"start":{"line":74,"column":0},"end":{"line":74,"column":51}},"37":{"start":{"line":76,"column":0},"end":{"line":76,"column":36}},"38":{"start":{"line":78,"column":0},"end":{"line":78,"column":49}},"39":{"start":{"line":80,"column":0},"end":{"line":80,"column":38}},"40":{"start":{"line":82,"column":0},"end":{"line":82,"column":51}},"41":{"start":{"line":84,"column":0},"end":{"line":84,"column":34}},"42":{"start":{"line":86,"column":0},"end":{"line":86,"column":47}},"43":{"start":{"line":88,"column":0},"end":{"line":88,"column":30}},"44":{"start":{"line":90,"column":0},"end":{"line":90,"column":43}},"45":{"start":{"line":92,"column":0},"end":{"line":92,"column":40}},"46":{"start":{"line":94,"column":0},"end":{"line":94,"column":53}},"47":{"start":{"line":96,"column":0},"end":{"line":96,"column":34}},"48":{"start":{"line":98,"column":0},"end":{"line":98,"column":47}},"49":{"start":{"line":100,"column":0},"end":{"line":100,"column":44}},"50":{"start":{"line":102,"column":0},"end":{"line":102,"column":57}},"51":{"start":{"line":104,"column":0},"end":{"line":104,"column":46}},"52":{"start":{"line":106,"column":0},"end":{"line":106,"column":59}},"53":{"start":{"line":108,"column":0},"end":{"line":108,"column":42}},"54":{"start":{"line":110,"column":0},"end":{"line":110,"column":55}},"55":{"start":{"line":112,"column":0},"end":{"line":112,"column":44}},"56":{"start":{"line":114,"column":0},"end":{"line":114,"column":57}},"57":{"start":{"line":116,"column":0},"end":{"line":116,"column":32}},"58":{"start":{"line":118,"column":0},"end":{"line":118,"column":45}},"59":{"start":{"line":120,"column":0},"end":{"line":120,"column":42}},"60":{"start":{"line":122,"column":0},"end":{"line":122,"column":55}},"61":{"start":{"line":124,"column":0},"end":{"line":124,"column":44}},"62":{"start":{"line":126,"column":0},"end":{"line":126,"column":57}},"63":{"start":{"line":128,"column":0},"end":{"line":128,"column":34}},"64":{"start":{"line":130,"column":0},"end":{"line":130,"column":47}},"65":{"start":{"line":132,"column":0},"end":{"line":132,"column":44}},"66":{"start":{"line":134,"column":0},"end":{"line":134,"column":57}},"67":{"start":{"line":136,"column":0},"end":{"line":136,"column":46}},"68":{"start":{"line":138,"column":0},"end":{"line":138,"column":59}},"69":{"start":{"line":140,"column":0},"end":{"line":140,"column":36}},"70":{"start":{"line":142,"column":0},"end":{"line":142,"column":49}},"71":{"start":{"line":144,"column":0},"end":{"line":144,"column":36}},"72":{"start":{"line":146,"column":0},"end":{"line":146,"column":49}},"73":{"start":{"line":148,"column":0},"end":{"line":148,"column":46}},"74":{"start":{"line":150,"column":0},"end":{"line":150,"column":59}},"75":{"start":{"line":152,"column":0},"end":{"line":152,"column":48}},"76":{"start":{"line":154,"column":0},"end":{"line":154,"column":61}},"77":{"start":{"line":156,"column":0},"end":{"line":156,"column":28}},"78":{"start":{"line":158,"column":0},"end":{"line":158,"column":41}},"79":{"start":{"line":160,"column":0},"end":{"line":160,"column":28}},"80":{"start":{"line":162,"column":0},"end":{"line":162,"column":41}},"81":{"start":{"line":164,"column":0},"end":{"line":164,"column":38}},"82":{"start":{"line":166,"column":0},"end":{"line":166,"column":51}},"83":{"start":{"line":168,"column":0},"end":{"line":168,"column":40}},"84":{"start":{"line":170,"column":0},"end":{"line":170,"column":53}},"85":{"start":{"line":172,"column":0},"end":{"line":172,"column":40}},"86":{"start":{"line":174,"column":0},"end":{"line":174,"column":53}},"87":{"start":{"line":176,"column":0},"end":{"line":176,"column":50}},"88":{"start":{"line":178,"column":0},"end":{"line":178,"column":63}},"89":{"start":{"line":180,"column":0},"end":{"line":180,"column":52}},"90":{"start":{"line":182,"column":0},"end":{"line":182,"column":65}},"91":{"start":{"line":184,"column":0},"end":{"line":184,"column":36}},"92":{"start":{"line":186,"column":0},"end":{"line":186,"column":49}},"93":{"start":{"line":188,"column":0},"end":{"line":188,"column":38}},"94":{"start":{"line":190,"column":0},"end":{"line":190,"column":51}},"95":{"start":{"line":192,"column":0},"end":{"line":192,"column":38}},"96":{"start":{"line":194,"column":0},"end":{"line":194,"column":51}},"97":{"start":{"line":196,"column":0},"end":{"line":196,"column":48}},"98":{"start":{"line":198,"column":0},"end":{"line":198,"column":61}},"99":{"start":{"line":200,"column":0},"end":{"line":200,"column":48}},"100":{"start":{"line":202,"column":0},"end":{"line":202,"column":61}},"101":{"start":{"line":204,"column":0},"end":{"line":204,"column":32}},"102":{"start":{"line":206,"column":0},"end":{"line":206,"column":45}},"103":{"start":{"line":208,"column":0},"end":{"line":208,"column":30}},"104":{"start":{"line":210,"column":0},"end":{"line":210,"column":43}},"105":{"start":{"line":212,"column":0},"end":{"line":212,"column":34}},"106":{"start":{"line":214,"column":0},"end":{"line":214,"column":47}},"107":{"start":{"line":216,"column":0},"end":{"line":216,"column":44}},"108":{"start":{"line":218,"column":0},"end":{"line":218,"column":57}},"109":{"start":{"line":220,"column":0},"end":{"line":220,"column":36}},"110":{"start":{"line":222,"column":0},"end":{"line":222,"column":49}},"111":{"start":{"line":224,"column":0},"end":{"line":224,"column":42}},"112":{"start":{"line":226,"column":0},"end":{"line":226,"column":55}},"113":{"start":{"line":228,"column":0},"end":{"line":228,"column":34}},"114":{"start":{"line":230,"column":0},"end":{"line":230,"column":47}},"115":{"start":{"line":232,"column":0},"end":{"line":232,"column":44}},"116":{"start":{"line":234,"column":0},"end":{"line":234,"column":57}},"117":{"start":{"line":236,"column":0},"end":{"line":236,"column":46}},"118":{"start":{"line":238,"column":0},"end":{"line":238,"column":59}},"119":{"start":{"line":240,"column":0},"end":{"line":240,"column":32}},"120":{"start":{"line":242,"column":0},"end":{"line":242,"column":45}},"121":{"start":{"line":244,"column":0},"end":{"line":244,"column":40}},"122":{"start":{"line":246,"column":0},"end":{"line":246,"column":53}},"123":{"start":{"line":248,"column":0},"end":{"line":248,"column":28}},"124":{"start":{"line":250,"column":0},"end":{"line":250,"column":41}},"125":{"start":{"line":252,"column":0},"end":{"line":252,"column":34}},"126":{"start":{"line":254,"column":0},"end":{"line":254,"column":47}},"127":{"start":{"line":256,"column":0},"end":{"line":256,"column":46}},"128":{"start":{"line":258,"column":0},"end":{"line":258,"column":59}},"129":{"start":{"line":260,"column":0},"end":{"line":260,"column":30}},"130":{"start":{"line":262,"column":0},"end":{"line":262,"column":43}},"131":{"start":{"line":264,"column":0},"end":{"line":264,"column":40}},"132":{"start":{"line":266,"column":0},"end":{"line":266,"column":53}},"133":{"start":{"line":268,"column":0},"end":{"line":268,"column":42}},"134":{"start":{"line":270,"column":0},"end":{"line":270,"column":55}},"135":{"start":{"line":272,"column":0},"end":{"line":272,"column":34}},"136":{"start":{"line":274,"column":0},"end":{"line":274,"column":47}},"137":{"start":{"line":276,"column":0},"end":{"line":276,"column":36}},"138":{"start":{"line":278,"column":0},"end":{"line":278,"column":49}},"139":{"start":{"line":280,"column":0},"end":{"line":280,"column":32}},"140":{"start":{"line":282,"column":0},"end":{"line":282,"column":45}},"141":{"start":{"line":284,"column":0},"end":{"line":284,"column":42}},"142":{"start":{"line":286,"column":0},"end":{"line":286,"column":55}},"143":{"start":{"line":288,"column":0},"end":{"line":288,"column":44}},"144":{"start":{"line":290,"column":0},"end":{"line":290,"column":57}},"145":{"start":{"line":292,"column":0},"end":{"line":292,"column":40}},"146":{"start":{"line":294,"column":0},"end":{"line":294,"column":53}},"147":{"start":{"line":296,"column":0},"end":{"line":296,"column":36}},"148":{"start":{"line":298,"column":0},"end":{"line":298,"column":49}},"149":{"start":{"line":300,"column":0},"end":{"line":300,"column":40}},"150":{"start":{"line":302,"column":0},"end":{"line":302,"column":53}},"151":{"start":{"line":304,"column":0},"end":{"line":304,"column":32}},"152":{"start":{"line":306,"column":0},"end":{"line":306,"column":45}},"153":{"start":{"line":308,"column":0},"end":{"line":308,"column":40}},"154":{"start":{"line":310,"column":0},"end":{"line":310,"column":53}},"155":{"start":{"line":312,"column":0},"end":{"line":312,"column":34}},"156":{"start":{"line":314,"column":0},"end":{"line":314,"column":47}},"157":{"start":{"line":316,"column":0},"end":{"line":316,"column":95}},"158":{"start":{"line":316,"column":39},"end":{"line":316,"column":93}},"159":{"start":{"line":318,"column":0},"end":{"line":420,"column":2}},"160":{"start":{"line":484,"column":0},"end":{"line":484,"column":32}},"161":{"start":{"line":485,"column":0},"end":{"line":485,"column":40}},"162":{"start":{"line":486,"column":0},"end":{"line":486,"column":52}},"163":{"start":{"line":487,"column":0},"end":{"line":487,"column":38}},"164":{"start":{"line":488,"column":0},"end":{"line":488,"column":30}},"165":{"start":{"line":489,"column":0},"end":{"line":489,"column":42}},"166":{"start":{"line":490,"column":0},"end":{"line":490,"column":32}},"167":{"start":{"line":491,"column":0},"end":{"line":491,"column":36}},"168":{"start":{"line":492,"column":0},"end":{"line":492,"column":34}},"169":{"start":{"line":493,"column":0},"end":{"line":493,"column":44}},"170":{"start":{"line":494,"column":0},"end":{"line":494,"column":46}},"171":{"start":{"line":495,"column":0},"end":{"line":495,"column":38}},"172":{"start":{"line":496,"column":0},"end":{"line":496,"column":34}},"173":{"start":{"line":497,"column":0},"end":{"line":497,"column":44}},"174":{"start":{"line":498,"column":0},"end":{"line":498,"column":46}},"175":{"start":{"line":499,"column":0},"end":{"line":499,"column":28}},"176":{"start":{"line":500,"column":0},"end":{"line":500,"column":38}},"177":{"start":{"line":501,"column":0},"end":{"line":501,"column":36}},"178":{"start":{"line":502,"column":0},"end":{"line":502,"column":38}},"179":{"start":{"line":503,"column":0},"end":{"line":503,"column":34}},"180":{"start":{"line":504,"column":0},"end":{"line":504,"column":30}},"181":{"start":{"line":505,"column":0},"end":{"line":505,"column":40}},"182":{"start":{"line":506,"column":0},"end":{"line":506,"column":34}},"183":{"start":{"line":507,"column":0},"end":{"line":507,"column":44}},"184":{"start":{"line":508,"column":0},"end":{"line":508,"column":46}},"185":{"start":{"line":509,"column":0},"end":{"line":509,"column":42}},"186":{"start":{"line":510,"column":0},"end":{"line":510,"column":44}},"187":{"start":{"line":511,"column":0},"end":{"line":511,"column":32}},"188":{"start":{"line":512,"column":0},"end":{"line":512,"column":42}},"189":{"start":{"line":513,"column":0},"end":{"line":513,"column":44}},"190":{"start":{"line":514,"column":0},"end":{"line":514,"column":34}},"191":{"start":{"line":515,"column":0},"end":{"line":515,"column":44}},"192":{"start":{"line":516,"column":0},"end":{"line":516,"column":46}},"193":{"start":{"line":517,"column":0},"end":{"line":517,"column":36}},"194":{"start":{"line":518,"column":0},"end":{"line":518,"column":36}},"195":{"start":{"line":519,"column":0},"end":{"line":519,"column":46}},"196":{"start":{"line":520,"column":0},"end":{"line":520,"column":48}},"197":{"start":{"line":521,"column":0},"end":{"line":521,"column":28}},"198":{"start":{"line":522,"column":0},"end":{"line":522,"column":28}},"199":{"start":{"line":523,"column":0},"end":{"line":523,"column":38}},"200":{"start":{"line":524,"column":0},"end":{"line":524,"column":40}},"201":{"start":{"line":525,"column":0},"end":{"line":525,"column":40}},"202":{"start":{"line":526,"column":0},"end":{"line":526,"column":50}},"203":{"start":{"line":527,"column":0},"end":{"line":527,"column":52}},"204":{"start":{"line":528,"column":0},"end":{"line":528,"column":36}},"205":{"start":{"line":529,"column":0},"end":{"line":529,"column":38}},"206":{"start":{"line":530,"column":0},"end":{"line":530,"column":38}},"207":{"start":{"line":531,"column":0},"end":{"line":531,"column":48}},"208":{"start":{"line":532,"column":0},"end":{"line":532,"column":48}},"209":{"start":{"line":533,"column":0},"end":{"line":533,"column":32}},"210":{"start":{"line":534,"column":0},"end":{"line":534,"column":30}},"211":{"start":{"line":535,"column":0},"end":{"line":535,"column":34}},"212":{"start":{"line":536,"column":0},"end":{"line":536,"column":44}},"213":{"start":{"line":537,"column":0},"end":{"line":537,"column":36}},"214":{"start":{"line":538,"column":0},"end":{"line":538,"column":42}},"215":{"start":{"line":539,"column":0},"end":{"line":539,"column":34}},"216":{"start":{"line":540,"column":0},"end":{"line":540,"column":44}},"217":{"start":{"line":541,"column":0},"end":{"line":541,"column":46}},"218":{"start":{"line":542,"column":0},"end":{"line":542,"column":32}},"219":{"start":{"line":543,"column":0},"end":{"line":543,"column":40}},"220":{"start":{"line":544,"column":0},"end":{"line":544,"column":28}},"221":{"start":{"line":545,"column":0},"end":{"line":545,"column":34}},"222":{"start":{"line":546,"column":0},"end":{"line":546,"column":46}},"223":{"start":{"line":547,"column":0},"end":{"line":547,"column":30}},"224":{"start":{"line":548,"column":0},"end":{"line":548,"column":40}},"225":{"start":{"line":549,"column":0},"end":{"line":549,"column":42}},"226":{"start":{"line":550,"column":0},"end":{"line":550,"column":34}},"227":{"start":{"line":551,"column":0},"end":{"line":551,"column":36}},"228":{"start":{"line":552,"column":0},"end":{"line":552,"column":32}},"229":{"start":{"line":553,"column":0},"end":{"line":553,"column":42}},"230":{"start":{"line":554,"column":0},"end":{"line":554,"column":44}},"231":{"start":{"line":555,"column":0},"end":{"line":555,"column":40}},"232":{"start":{"line":556,"column":0},"end":{"line":556,"column":36}},"233":{"start":{"line":557,"column":0},"end":{"line":557,"column":40}},"234":{"start":{"line":558,"column":0},"end":{"line":558,"column":32}},"235":{"start":{"line":559,"column":0},"end":{"line":559,"column":40}},"236":{"start":{"line":560,"column":0},"end":{"line":560,"column":34}},"237":{"start":{"line":561,"column":0},"end":{"line":561,"column":30}},"238":{"start":{"line":562,"column":0},"end":{"line":562,"column":40}},"239":{"start":{"line":563,"column":0},"end":{"line":563,"column":42}},"240":{"start":{"line":564,"column":0},"end":{"line":564,"column":29}},"241":{"start":{"line":565,"column":0},"end":{"line":565,"column":39}},"242":{"start":{"line":566,"column":0},"end":{"line":566,"column":41}},"243":{"start":{"line":567,"column":0},"end":{"line":567,"column":32}},"244":{"start":{"line":568,"column":0},"end":{"line":568,"column":42}},"245":{"start":{"line":569,"column":0},"end":{"line":569,"column":44}},"246":{"start":{"line":570,"column":0},"end":{"line":570,"column":33}},"247":{"start":{"line":571,"column":0},"end":{"line":571,"column":45}},"248":{"start":{"line":572,"column":0},"end":{"line":572,"column":43}},"249":{"start":{"line":573,"column":0},"end":{"line":573,"column":37}},"250":{"start":{"line":574,"column":0},"end":{"line":574,"column":49}},"251":{"start":{"line":575,"column":0},"end":{"line":575,"column":47}},"252":{"start":{"line":576,"column":0},"end":{"line":576,"column":34}},"253":{"start":{"line":577,"column":0},"end":{"line":577,"column":33}},"254":{"start":{"line":578,"column":0},"end":{"line":578,"column":38}},"255":{"start":{"line":579,"column":0},"end":{"line":579,"column":34}},"256":{"start":{"line":580,"column":0},"end":{"line":580,"column":44}},"257":{"start":{"line":581,"column":0},"end":{"line":581,"column":46}},"258":{"start":{"line":582,"column":0},"end":{"line":582,"column":38}}},"branchMap":{"1":{"line":316,"type":"cond-expr","locations":[{"start":{"line":316,"column":70},"end":{"line":316,"column":73}},{"start":{"line":316,"column":76},"end":{"line":316,"column":92}}]},"2":{"line":316,"type":"binary-expr","locations":[{"start":{"line":316,"column":46},"end":{"line":316,"column":49}},{"start":{"line":316,"column":53},"end":{"line":316,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.wrapSync = exports.selectSeries = exports.selectLimit = exports.select = exports.foldr = exports.foldl = exports.inject = exports.forEachOfLimit = exports.forEachOfSeries = exports.forEachOf = exports.forEachLimit = exports.forEachSeries = exports.forEach = exports.findSeries = exports.findLimit = exports.find = exports.anySeries = exports.anyLimit = exports.any = exports.allSeries = exports.allLimit = exports.all = exports.whilst = exports.waterfall = exports.until = exports.unmemoize = exports.tryEach = exports.transform = exports.timesSeries = exports.timesLimit = exports.times = exports.timeout = exports.sortBy = exports.someSeries = exports.someLimit = exports.some = exports.setImmediate = exports.series = exports.seq = exports.retryable = exports.retry = exports.rejectSeries = exports.rejectLimit = exports.reject = exports.reflectAll = exports.reflect = exports.reduceRight = exports.reduce = exports.race = exports.queue = exports.priorityQueue = exports.parallelLimit = exports.parallel = exports.nextTick = exports.memoize = exports.mapValuesSeries = exports.mapValuesLimit = exports.mapValues = exports.mapSeries = exports.mapLimit = exports.map = exports.log = exports.groupBySeries = exports.groupByLimit = exports.groupBy = exports.forever = exports.filterSeries = exports.filterLimit = exports.filter = exports.everySeries = exports.everyLimit = exports.every = exports.ensureAsync = exports.eachSeries = exports.eachOfSeries = exports.eachOfLimit = exports.eachOf = exports.eachLimit = exports.each = exports.during = exports.doWhilst = exports.doUntil = exports.doDuring = exports.dir = exports.detectSeries = exports.detectLimit = exports.detect = exports.constant = exports.concatSeries = exports.concatLimit = exports.concat = exports.compose = exports.cargo = exports.autoInject = exports.auto = exports.asyncify = exports.applyEachSeries = exports.applyEach = exports.apply = undefined;","","var _apply = require('./apply');","","var _apply2 = _interopRequireDefault(_apply);","","var _applyEach = require('./applyEach');","","var _applyEach2 = _interopRequireDefault(_applyEach);","","var _applyEachSeries = require('./applyEachSeries');","","var _applyEachSeries2 = _interopRequireDefault(_applyEachSeries);","","var _asyncify = require('./asyncify');","","var _asyncify2 = _interopRequireDefault(_asyncify);","","var _auto = require('./auto');","","var _auto2 = _interopRequireDefault(_auto);","","var _autoInject = require('./autoInject');","","var _autoInject2 = _interopRequireDefault(_autoInject);","","var _cargo = require('./cargo');","","var _cargo2 = _interopRequireDefault(_cargo);","","var _compose = require('./compose');","","var _compose2 = _interopRequireDefault(_compose);","","var _concat = require('./concat');","","var _concat2 = _interopRequireDefault(_concat);","","var _concatLimit = require('./concatLimit');","","var _concatLimit2 = _interopRequireDefault(_concatLimit);","","var _concatSeries = require('./concatSeries');","","var _concatSeries2 = _interopRequireDefault(_concatSeries);","","var _constant = require('./constant');","","var _constant2 = _interopRequireDefault(_constant);","","var _detect = require('./detect');","","var _detect2 = _interopRequireDefault(_detect);","","var _detectLimit = require('./detectLimit');","","var _detectLimit2 = _interopRequireDefault(_detectLimit);","","var _detectSeries = require('./detectSeries');","","var _detectSeries2 = _interopRequireDefault(_detectSeries);","","var _dir = require('./dir');","","var _dir2 = _interopRequireDefault(_dir);","","var _doDuring = require('./doDuring');","","var _doDuring2 = _interopRequireDefault(_doDuring);","","var _doUntil = require('./doUntil');","","var _doUntil2 = _interopRequireDefault(_doUntil);","","var _doWhilst = require('./doWhilst');","","var _doWhilst2 = _interopRequireDefault(_doWhilst);","","var _during = require('./during');","","var _during2 = _interopRequireDefault(_during);","","var _each = require('./each');","","var _each2 = _interopRequireDefault(_each);","","var _eachLimit = require('./eachLimit');","","var _eachLimit2 = _interopRequireDefault(_eachLimit);","","var _eachOf = require('./eachOf');","","var _eachOf2 = _interopRequireDefault(_eachOf);","","var _eachOfLimit = require('./eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _eachOfSeries = require('./eachOfSeries');","","var _eachOfSeries2 = _interopRequireDefault(_eachOfSeries);","","var _eachSeries = require('./eachSeries');","","var _eachSeries2 = _interopRequireDefault(_eachSeries);","","var _ensureAsync = require('./ensureAsync');","","var _ensureAsync2 = _interopRequireDefault(_ensureAsync);","","var _every = require('./every');","","var _every2 = _interopRequireDefault(_every);","","var _everyLimit = require('./everyLimit');","","var _everyLimit2 = _interopRequireDefault(_everyLimit);","","var _everySeries = require('./everySeries');","","var _everySeries2 = _interopRequireDefault(_everySeries);","","var _filter = require('./filter');","","var _filter2 = _interopRequireDefault(_filter);","","var _filterLimit = require('./filterLimit');","","var _filterLimit2 = _interopRequireDefault(_filterLimit);","","var _filterSeries = require('./filterSeries');","","var _filterSeries2 = _interopRequireDefault(_filterSeries);","","var _forever = require('./forever');","","var _forever2 = _interopRequireDefault(_forever);","","var _groupBy = require('./groupBy');","","var _groupBy2 = _interopRequireDefault(_groupBy);","","var _groupByLimit = require('./groupByLimit');","","var _groupByLimit2 = _interopRequireDefault(_groupByLimit);","","var _groupBySeries = require('./groupBySeries');","","var _groupBySeries2 = _interopRequireDefault(_groupBySeries);","","var _log = require('./log');","","var _log2 = _interopRequireDefault(_log);","","var _map = require('./map');","","var _map2 = _interopRequireDefault(_map);","","var _mapLimit = require('./mapLimit');","","var _mapLimit2 = _interopRequireDefault(_mapLimit);","","var _mapSeries = require('./mapSeries');","","var _mapSeries2 = _interopRequireDefault(_mapSeries);","","var _mapValues = require('./mapValues');","","var _mapValues2 = _interopRequireDefault(_mapValues);","","var _mapValuesLimit = require('./mapValuesLimit');","","var _mapValuesLimit2 = _interopRequireDefault(_mapValuesLimit);","","var _mapValuesSeries = require('./mapValuesSeries');","","var _mapValuesSeries2 = _interopRequireDefault(_mapValuesSeries);","","var _memoize = require('./memoize');","","var _memoize2 = _interopRequireDefault(_memoize);","","var _nextTick = require('./nextTick');","","var _nextTick2 = _interopRequireDefault(_nextTick);","","var _parallel = require('./parallel');","","var _parallel2 = _interopRequireDefault(_parallel);","","var _parallelLimit = require('./parallelLimit');","","var _parallelLimit2 = _interopRequireDefault(_parallelLimit);","","var _priorityQueue = require('./priorityQueue');","","var _priorityQueue2 = _interopRequireDefault(_priorityQueue);","","var _queue = require('./queue');","","var _queue2 = _interopRequireDefault(_queue);","","var _race = require('./race');","","var _race2 = _interopRequireDefault(_race);","","var _reduce = require('./reduce');","","var _reduce2 = _interopRequireDefault(_reduce);","","var _reduceRight = require('./reduceRight');","","var _reduceRight2 = _interopRequireDefault(_reduceRight);","","var _reflect = require('./reflect');","","var _reflect2 = _interopRequireDefault(_reflect);","","var _reflectAll = require('./reflectAll');","","var _reflectAll2 = _interopRequireDefault(_reflectAll);","","var _reject = require('./reject');","","var _reject2 = _interopRequireDefault(_reject);","","var _rejectLimit = require('./rejectLimit');","","var _rejectLimit2 = _interopRequireDefault(_rejectLimit);","","var _rejectSeries = require('./rejectSeries');","","var _rejectSeries2 = _interopRequireDefault(_rejectSeries);","","var _retry = require('./retry');","","var _retry2 = _interopRequireDefault(_retry);","","var _retryable = require('./retryable');","","var _retryable2 = _interopRequireDefault(_retryable);","","var _seq = require('./seq');","","var _seq2 = _interopRequireDefault(_seq);","","var _series = require('./series');","","var _series2 = _interopRequireDefault(_series);","","var _setImmediate = require('./setImmediate');","","var _setImmediate2 = _interopRequireDefault(_setImmediate);","","var _some = require('./some');","","var _some2 = _interopRequireDefault(_some);","","var _someLimit = require('./someLimit');","","var _someLimit2 = _interopRequireDefault(_someLimit);","","var _someSeries = require('./someSeries');","","var _someSeries2 = _interopRequireDefault(_someSeries);","","var _sortBy = require('./sortBy');","","var _sortBy2 = _interopRequireDefault(_sortBy);","","var _timeout = require('./timeout');","","var _timeout2 = _interopRequireDefault(_timeout);","","var _times = require('./times');","","var _times2 = _interopRequireDefault(_times);","","var _timesLimit = require('./timesLimit');","","var _timesLimit2 = _interopRequireDefault(_timesLimit);","","var _timesSeries = require('./timesSeries');","","var _timesSeries2 = _interopRequireDefault(_timesSeries);","","var _transform = require('./transform');","","var _transform2 = _interopRequireDefault(_transform);","","var _tryEach = require('./tryEach');","","var _tryEach2 = _interopRequireDefault(_tryEach);","","var _unmemoize = require('./unmemoize');","","var _unmemoize2 = _interopRequireDefault(_unmemoize);","","var _until = require('./until');","","var _until2 = _interopRequireDefault(_until);","","var _waterfall = require('./waterfall');","","var _waterfall2 = _interopRequireDefault(_waterfall);","","var _whilst = require('./whilst');","","var _whilst2 = _interopRequireDefault(_whilst);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","exports.default = {","  apply: _apply2.default,","  applyEach: _applyEach2.default,","  applyEachSeries: _applyEachSeries2.default,","  asyncify: _asyncify2.default,","  auto: _auto2.default,","  autoInject: _autoInject2.default,","  cargo: _cargo2.default,","  compose: _compose2.default,","  concat: _concat2.default,","  concatLimit: _concatLimit2.default,","  concatSeries: _concatSeries2.default,","  constant: _constant2.default,","  detect: _detect2.default,","  detectLimit: _detectLimit2.default,","  detectSeries: _detectSeries2.default,","  dir: _dir2.default,","  doDuring: _doDuring2.default,","  doUntil: _doUntil2.default,","  doWhilst: _doWhilst2.default,","  during: _during2.default,","  each: _each2.default,","  eachLimit: _eachLimit2.default,","  eachOf: _eachOf2.default,","  eachOfLimit: _eachOfLimit2.default,","  eachOfSeries: _eachOfSeries2.default,","  eachSeries: _eachSeries2.default,","  ensureAsync: _ensureAsync2.default,","  every: _every2.default,","  everyLimit: _everyLimit2.default,","  everySeries: _everySeries2.default,","  filter: _filter2.default,","  filterLimit: _filterLimit2.default,","  filterSeries: _filterSeries2.default,","  forever: _forever2.default,","  groupBy: _groupBy2.default,","  groupByLimit: _groupByLimit2.default,","  groupBySeries: _groupBySeries2.default,","  log: _log2.default,","  map: _map2.default,","  mapLimit: _mapLimit2.default,","  mapSeries: _mapSeries2.default,","  mapValues: _mapValues2.default,","  mapValuesLimit: _mapValuesLimit2.default,","  mapValuesSeries: _mapValuesSeries2.default,","  memoize: _memoize2.default,","  nextTick: _nextTick2.default,","  parallel: _parallel2.default,","  parallelLimit: _parallelLimit2.default,","  priorityQueue: _priorityQueue2.default,","  queue: _queue2.default,","  race: _race2.default,","  reduce: _reduce2.default,","  reduceRight: _reduceRight2.default,","  reflect: _reflect2.default,","  reflectAll: _reflectAll2.default,","  reject: _reject2.default,","  rejectLimit: _rejectLimit2.default,","  rejectSeries: _rejectSeries2.default,","  retry: _retry2.default,","  retryable: _retryable2.default,","  seq: _seq2.default,","  series: _series2.default,","  setImmediate: _setImmediate2.default,","  some: _some2.default,","  someLimit: _someLimit2.default,","  someSeries: _someSeries2.default,","  sortBy: _sortBy2.default,","  timeout: _timeout2.default,","  times: _times2.default,","  timesLimit: _timesLimit2.default,","  timesSeries: _timesSeries2.default,","  transform: _transform2.default,","  tryEach: _tryEach2.default,","  unmemoize: _unmemoize2.default,","  until: _until2.default,","  waterfall: _waterfall2.default,","  whilst: _whilst2.default,","","  // aliases","  all: _every2.default,","  allLimit: _everyLimit2.default,","  allSeries: _everySeries2.default,","  any: _some2.default,","  anyLimit: _someLimit2.default,","  anySeries: _someSeries2.default,","  find: _detect2.default,","  findLimit: _detectLimit2.default,","  findSeries: _detectSeries2.default,","  forEach: _each2.default,","  forEachSeries: _eachSeries2.default,","  forEachLimit: _eachLimit2.default,","  forEachOf: _eachOf2.default,","  forEachOfSeries: _eachOfSeries2.default,","  forEachOfLimit: _eachOfLimit2.default,","  inject: _reduce2.default,","  foldl: _reduce2.default,","  foldr: _reduceRight2.default,","  select: _filter2.default,","  selectLimit: _filterLimit2.default,","  selectSeries: _filterSeries2.default,","  wrapSync: _asyncify2.default","}; /**","    * An \"async function\" in the context of Async is an asynchronous function with","    * a variable number of parameters, with the final parameter being a callback.","    * (`function (arg1, arg2, ..., callback) {}`)","    * The final callback is of the form `callback(err, results...)`, which must be","    * called once the function is completed.  The callback should be called with a","    * Error as its first argument to signal that an error occurred.","    * Otherwise, if no error occurred, it should be called with `null` as the first","    * argument, and any additional `result` arguments that may apply, to signal","    * successful completion.","    * The callback must be called exactly once, ideally on a later tick of the","    * JavaScript event loop.","    *","    * This type of function is also referred to as a \"Node-style async function\",","    * or a \"continuation passing-style function\" (CPS). Most of the methods of this","    * library are themselves CPS/Node-style async functions, or functions that","    * return CPS/Node-style async functions.","    *","    * Wherever we accept a Node-style async function, we also directly accept an","    * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.","    * In this case, the `async` function will not be passed a final callback","    * argument, and any thrown error will be used as the `err` argument of the","    * implicit callback, and the return value will be used as the `result` value.","    * (i.e. a `rejected` of the returned Promise becomes the `err` callback","    * argument, and a `resolved` value becomes the `result`.)","    *","    * Note, due to JavaScript limitations, we can only detect native `async`","    * functions and not transpilied implementations.","    * Your environment must have `async`/`await` support for this to work.","    * (e.g. Node > v7.6, or a recent version of a modern browser).","    * If you are using `async` functions through a transpiler (e.g. Babel), you","    * must still wrap the function with [asyncify]{@link module:Utils.asyncify},","    * because the `async function` will be compiled to an ordinary function that","    * returns a promise.","    *","    * @typedef {Function} AsyncFunction","    * @static","    */","","/**"," * Async is a utility module which provides straight-forward, powerful functions"," * for working with asynchronous JavaScript. Although originally designed for"," * use with [Node.js](http://nodejs.org) and installable via"," * `npm install --save async`, it can also be used directly in the browser."," * @module async"," * @see AsyncFunction"," */","","/**"," * A collection of `async` functions for manipulating collections, such as"," * arrays and objects."," * @module Collections"," */","","/**"," * A collection of `async` functions for controlling the flow through a script."," * @module ControlFlow"," */","","/**"," * A collection of `async` utility functions."," * @module Utils"," */","","exports.apply = _apply2.default;","exports.applyEach = _applyEach2.default;","exports.applyEachSeries = _applyEachSeries2.default;","exports.asyncify = _asyncify2.default;","exports.auto = _auto2.default;","exports.autoInject = _autoInject2.default;","exports.cargo = _cargo2.default;","exports.compose = _compose2.default;","exports.concat = _concat2.default;","exports.concatLimit = _concatLimit2.default;","exports.concatSeries = _concatSeries2.default;","exports.constant = _constant2.default;","exports.detect = _detect2.default;","exports.detectLimit = _detectLimit2.default;","exports.detectSeries = _detectSeries2.default;","exports.dir = _dir2.default;","exports.doDuring = _doDuring2.default;","exports.doUntil = _doUntil2.default;","exports.doWhilst = _doWhilst2.default;","exports.during = _during2.default;","exports.each = _each2.default;","exports.eachLimit = _eachLimit2.default;","exports.eachOf = _eachOf2.default;","exports.eachOfLimit = _eachOfLimit2.default;","exports.eachOfSeries = _eachOfSeries2.default;","exports.eachSeries = _eachSeries2.default;","exports.ensureAsync = _ensureAsync2.default;","exports.every = _every2.default;","exports.everyLimit = _everyLimit2.default;","exports.everySeries = _everySeries2.default;","exports.filter = _filter2.default;","exports.filterLimit = _filterLimit2.default;","exports.filterSeries = _filterSeries2.default;","exports.forever = _forever2.default;","exports.groupBy = _groupBy2.default;","exports.groupByLimit = _groupByLimit2.default;","exports.groupBySeries = _groupBySeries2.default;","exports.log = _log2.default;","exports.map = _map2.default;","exports.mapLimit = _mapLimit2.default;","exports.mapSeries = _mapSeries2.default;","exports.mapValues = _mapValues2.default;","exports.mapValuesLimit = _mapValuesLimit2.default;","exports.mapValuesSeries = _mapValuesSeries2.default;","exports.memoize = _memoize2.default;","exports.nextTick = _nextTick2.default;","exports.parallel = _parallel2.default;","exports.parallelLimit = _parallelLimit2.default;","exports.priorityQueue = _priorityQueue2.default;","exports.queue = _queue2.default;","exports.race = _race2.default;","exports.reduce = _reduce2.default;","exports.reduceRight = _reduceRight2.default;","exports.reflect = _reflect2.default;","exports.reflectAll = _reflectAll2.default;","exports.reject = _reject2.default;","exports.rejectLimit = _rejectLimit2.default;","exports.rejectSeries = _rejectSeries2.default;","exports.retry = _retry2.default;","exports.retryable = _retryable2.default;","exports.seq = _seq2.default;","exports.series = _series2.default;","exports.setImmediate = _setImmediate2.default;","exports.some = _some2.default;","exports.someLimit = _someLimit2.default;","exports.someSeries = _someSeries2.default;","exports.sortBy = _sortBy2.default;","exports.timeout = _timeout2.default;","exports.times = _times2.default;","exports.timesLimit = _timesLimit2.default;","exports.timesSeries = _timesSeries2.default;","exports.transform = _transform2.default;","exports.tryEach = _tryEach2.default;","exports.unmemoize = _unmemoize2.default;","exports.until = _until2.default;","exports.waterfall = _waterfall2.default;","exports.whilst = _whilst2.default;","exports.all = _every2.default;","exports.allLimit = _everyLimit2.default;","exports.allSeries = _everySeries2.default;","exports.any = _some2.default;","exports.anyLimit = _someLimit2.default;","exports.anySeries = _someSeries2.default;","exports.find = _detect2.default;","exports.findLimit = _detectLimit2.default;","exports.findSeries = _detectSeries2.default;","exports.forEach = _each2.default;","exports.forEachSeries = _eachSeries2.default;","exports.forEachLimit = _eachLimit2.default;","exports.forEachOf = _eachOf2.default;","exports.forEachOfSeries = _eachOfSeries2.default;","exports.forEachOfLimit = _eachOfLimit2.default;","exports.inject = _reduce2.default;","exports.foldl = _reduce2.default;","exports.foldr = _reduceRight2.default;","exports.select = _filter2.default;","exports.selectLimit = _filterLimit2.default;","exports.selectSeries = _filterSeries2.default;","exports.wrapSync = _asyncify2.default;"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":1,"30":1,"32":1,"34":1,"36":1,"38":1,"40":1,"42":1,"44":1,"46":1,"48":1,"50":1,"52":1,"54":1,"56":1,"58":1,"60":1,"62":1,"64":1,"66":1,"68":1,"70":1,"72":1,"74":1,"76":1,"78":1,"80":1,"82":1,"84":1,"86":1,"88":1,"90":1,"92":1,"94":1,"96":1,"98":1,"100":1,"102":1,"104":1,"106":1,"108":1,"110":1,"112":1,"114":1,"116":1,"118":1,"120":1,"122":1,"124":1,"126":1,"128":1,"130":1,"132":1,"134":1,"136":1,"138":1,"140":1,"142":1,"144":1,"146":1,"148":1,"150":1,"152":1,"154":1,"156":1,"158":1,"160":1,"162":1,"164":1,"166":1,"168":1,"170":1,"172":1,"174":1,"176":1,"178":1,"180":1,"182":1,"184":1,"186":1,"188":1,"190":1,"192":1,"194":1,"196":1,"198":1,"200":1,"202":1,"204":1,"206":1,"208":1,"210":1,"212":1,"214":1,"216":1,"218":1,"220":1,"222":1,"224":1,"226":1,"228":1,"230":1,"232":1,"234":1,"236":1,"238":1,"240":1,"242":1,"244":1,"246":1,"248":1,"250":1,"252":1,"254":1,"256":1,"258":1,"260":1,"262":1,"264":1,"266":1,"268":1,"270":1,"272":1,"274":1,"276":1,"278":1,"280":1,"282":1,"284":1,"286":1,"288":1,"290":1,"292":1,"294":1,"296":1,"298":1,"300":1,"302":1,"304":1,"306":1,"308":1,"310":1,"312":1,"314":1,"316":77,"318":1,"484":1,"485":1,"486":1,"487":1,"488":1,"489":1,"490":1,"491":1,"492":1,"493":1,"494":1,"495":1,"496":1,"497":1,"498":1,"499":1,"500":1,"501":1,"502":1,"503":1,"504":1,"505":1,"506":1,"507":1,"508":1,"509":1,"510":1,"511":1,"512":1,"513":1,"514":1,"515":1,"516":1,"517":1,"518":1,"519":1,"520":1,"521":1,"522":1,"523":1,"524":1,"525":1,"526":1,"527":1,"528":1,"529":1,"530":1,"531":1,"532":1,"533":1,"534":1,"535":1,"536":1,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1,"543":1,"544":1,"545":1,"546":1,"547":1,"548":1,"549":1,"550":1,"551":1,"552":1,"553":1,"554":1,"555":1,"556":1,"557":1,"558":1,"559":1,"560":1,"561":1,"562":1,"563":1,"564":1,"565":1,"566":1,"567":1,"568":1,"569":1,"570":1,"571":1,"572":1,"573":1,"574":1,"575":1,"576":1,"577":1,"578":1,"579":1,"580":1,"581":1,"582":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/log.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/log.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1},"fnMap":{"1":{"name":"_interopRequireDefault","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":53}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":95}},"5":{"start":{"line":11,"column":39},"end":{"line":11,"column":93}},"6":{"start":{"line":40,"column":0},"end":{"line":40,"column":52}},"7":{"start":{"line":41,"column":0},"end":{"line":41,"column":36}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":70},"end":{"line":11,"column":73}},{"start":{"line":11,"column":76},"end":{"line":11,"column":92}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _consoleFunc = require('./internal/consoleFunc');","","var _consoleFunc2 = _interopRequireDefault(_consoleFunc);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Logs the result of an `async` function to the `console`. Only works in"," * Node.js or in browsers that support `console.log` and `console.error` (such"," * as FF and Chrome). If multiple arguments are returned from the async"," * function, `console.log` is called on each argument in order."," *"," * @name log"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} function - The function you want to eventually apply"," * all arguments to."," * @param {...*} arguments... - Any number of arguments to apply to the function."," * @example"," *"," * // in a module"," * var hello = function(name, callback) {"," *     setTimeout(function() {"," *         callback(null, 'hello ' + name);"," *     }, 1000);"," * };"," *"," * // in the node repl"," * node> async.log(hello, 'world');"," * 'hello world'"," */","exports.default = (0, _consoleFunc2.default)('log');","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"40":1,"41":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapValues.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapValues.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":63}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":62,"column":0},"end":{"line":62,"column":77}},"9":{"start":{"line":63,"column":0},"end":{"line":63,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _mapValuesLimit = require('./mapValuesLimit');","","var _mapValuesLimit2 = _interopRequireDefault(_mapValuesLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * A relative of [`map`]{@link module:Collections.map}, designed for use with objects."," *"," * Produces a new Object by mapping each value of `obj` through the `iteratee`"," * function. The `iteratee` is called each `value` and `key` from `obj` and a"," * callback for when it has finished processing. Each of these callbacks takes"," * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`"," * passes an error to its callback, the main `callback` (for the `mapValues`"," * function) is immediately called with the error."," *"," * Note, the order of the keys in the result is not guaranteed.  The keys will"," * be roughly in the order they complete, (but this is very engine-specific)"," *"," * @name mapValues"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each value and key"," * in `coll`."," * The iteratee should complete with the transformed value as its result."," * Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," * @example"," *"," * async.mapValues({"," *     f1: 'file1',"," *     f2: 'file2',"," *     f3: 'file3'"," * }, function (file, key, callback) {"," *   fs.stat(file, callback);"," * }, function(err, result) {"," *     // result is now a map of stats for each file, e.g."," *     // {"," *     //     f1: [stats for file1],"," *     //     f2: [stats for file2],"," *     //     f3: [stats for file3]"," *     // }"," * });"," */","","exports.default = (0, _doLimit2.default)(_mapValuesLimit2.default, Infinity);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"62":1,"63":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapValuesLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapValuesLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"mapValuesLimit","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":56}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":43},"end":{"line":51,"column":69}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":28},"end":{"line":52,"column":51}}},"5":{"name":"(anonymous_5)","line":57,"loc":{"start":{"line":57,"column":7},"end":{"line":57,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":39}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":47,"column":0},"end":{"line":60,"column":1}},"14":{"start":{"line":48,"column":4},"end":{"line":48,"column":63}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":20}},"16":{"start":{"line":50,"column":4},"end":{"line":50,"column":55}},"17":{"start":{"line":51,"column":4},"end":{"line":59,"column":7}},"18":{"start":{"line":52,"column":8},"end":{"line":56,"column":11}},"19":{"start":{"line":53,"column":12},"end":{"line":53,"column":38}},"20":{"start":{"line":53,"column":21},"end":{"line":53,"column":38}},"21":{"start":{"line":54,"column":12},"end":{"line":54,"column":33}},"22":{"start":{"line":55,"column":12},"end":{"line":55,"column":19}},"23":{"start":{"line":58,"column":8},"end":{"line":58,"column":30}},"24":{"start":{"line":61,"column":0},"end":{"line":61,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":35},"end":{"line":48,"column":43}},{"start":{"line":48,"column":47},"end":{"line":48,"column":61}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":12}},{"start":{"line":53,"column":12},"end":{"line":53,"column":12}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = mapValuesLimit;","","var _eachOfLimit = require('./eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name mapValuesLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.mapValues]{@link module:Collections.mapValues}"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - A function to apply to each value and key"," * in `coll`."," * The iteratee should complete with the transformed value as its result."," * Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," */","function mapValuesLimit(obj, limit, iteratee, callback) {","    callback = (0, _once2.default)(callback || _noop2.default);","    var newObj = {};","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    (0, _eachOfLimit2.default)(obj, limit, function (val, key, next) {","        _iteratee(val, key, function (err, result) {","            if (err) return next(err);","            newObj[key] = result;","            next();","        });","    }, function (err) {","        callback(err, newObj);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"58":0,"61":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapValuesSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapValuesSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":63}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":70}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _mapValuesLimit = require('./mapValuesLimit');","","var _mapValuesLimit2 = _interopRequireDefault(_mapValuesLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time."," *"," * @name mapValuesSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.mapValues]{@link module:Collections.mapValues}"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each value and key"," * in `coll`."," * The iteratee should complete with the transformed value as its result."," * Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," */","exports.default = (0, _doLimit2.default)(_mapValuesLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/memoize.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/memoize.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1},"b":{"1":[2,3],"2":[5,5],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":5,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"2":{"name":"has","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":23}}},"3":{"name":"memoize","line":71,"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":29}}},"4":{"name":"memoized","line":76,"loc":{"start":{"line":76,"column":48},"end":{"line":76,"column":82}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":40},"end":{"line":79,"column":52}}},"6":{"name":"(anonymous_6)","line":86,"loc":{"start":{"line":86,"column":40},"end":{"line":86,"column":60}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":55}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":59}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":57}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":61}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":49}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":53}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":95}},"14":{"start":{"line":28,"column":39},"end":{"line":28,"column":93}},"15":{"start":{"line":30,"column":0},"end":{"line":32,"column":1}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":22}},"17":{"start":{"line":71,"column":0},"end":{"line":100,"column":1}},"18":{"start":{"line":72,"column":4},"end":{"line":72,"column":35}},"19":{"start":{"line":73,"column":4},"end":{"line":73,"column":37}},"20":{"start":{"line":74,"column":4},"end":{"line":74,"column":42}},"21":{"start":{"line":75,"column":4},"end":{"line":75,"column":43}},"22":{"start":{"line":76,"column":4},"end":{"line":96,"column":7}},"23":{"start":{"line":77,"column":8},"end":{"line":77,"column":43}},"24":{"start":{"line":78,"column":8},"end":{"line":95,"column":9}},"25":{"start":{"line":79,"column":12},"end":{"line":81,"column":15}},"26":{"start":{"line":80,"column":16},"end":{"line":80,"column":48}},"27":{"start":{"line":82,"column":15},"end":{"line":95,"column":9}},"28":{"start":{"line":83,"column":12},"end":{"line":83,"column":39}},"29":{"start":{"line":85,"column":12},"end":{"line":85,"column":37}},"30":{"start":{"line":86,"column":12},"end":{"line":94,"column":16}},"31":{"start":{"line":87,"column":16},"end":{"line":87,"column":59}},"32":{"start":{"line":88,"column":16},"end":{"line":88,"column":33}},"33":{"start":{"line":89,"column":16},"end":{"line":89,"column":36}},"34":{"start":{"line":90,"column":16},"end":{"line":90,"column":35}},"35":{"start":{"line":91,"column":16},"end":{"line":93,"column":17}},"36":{"start":{"line":92,"column":20},"end":{"line":92,"column":43}},"37":{"start":{"line":97,"column":4},"end":{"line":97,"column":25}},"38":{"start":{"line":98,"column":4},"end":{"line":98,"column":29}},"39":{"start":{"line":99,"column":4},"end":{"line":99,"column":20}},"40":{"start":{"line":101,"column":0},"end":{"line":101,"column":36}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":70},"end":{"line":28,"column":73}},{"start":{"line":28,"column":76},"end":{"line":28,"column":92}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}]},"3":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":13},"end":{"line":74,"column":19}},{"start":{"line":74,"column":23},"end":{"line":74,"column":41}}]},"4":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":8}},{"start":{"line":78,"column":8},"end":{"line":78,"column":8}}]},"5":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":15},"end":{"line":82,"column":15}},{"start":{"line":82,"column":15},"end":{"line":82,"column":15}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = memoize;","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","var _setImmediate = require('./internal/setImmediate');","","var _setImmediate2 = _interopRequireDefault(_setImmediate);","","var _initialParams = require('./internal/initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function has(obj, key) {","    return key in obj;","}","","/**"," * Caches the results of an async function. When creating a hash to store"," * function results against, the callback is omitted from the hash and an"," * optional hash function can be used."," *"," * If no hash function is specified, the first argument is used as a hash key,"," * which may work reasonably if it is a string or a data type that converts to a"," * distinct string. Note that objects and arrays will not behave reasonably."," * Neither will cases where the other arguments are significant. In such cases,"," * specify your own hash function."," *"," * The cache of results is exposed as the `memo` property of the function"," * returned by `memoize`."," *"," * @name memoize"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} fn - The async function to proxy and cache results from."," * @param {Function} hasher - An optional function for generating a custom hash"," * for storing results. It has all the arguments applied to it apart from the"," * callback, and must be synchronous."," * @returns {AsyncFunction} a memoized version of `fn`"," * @example"," *"," * var slow_fn = function(name, callback) {"," *     // do something"," *     callback(null, result);"," * };"," * var fn = async.memoize(slow_fn);"," *"," * // fn can now be used as if it were slow_fn"," * fn('some name', function() {"," *     // callback"," * });"," */","function memoize(fn, hasher) {","    var memo = Object.create(null);","    var queues = Object.create(null);","    hasher = hasher || _identity2.default;","    var _fn = (0, _wrapAsync2.default)(fn);","    var memoized = (0, _initialParams2.default)(function memoized(args, callback) {","        var key = hasher.apply(null, args);","        if (has(memo, key)) {","            (0, _setImmediate2.default)(function () {","                callback.apply(null, memo[key]);","            });","        } else if (has(queues, key)) {","            queues[key].push(callback);","        } else {","            queues[key] = [callback];","            _fn.apply(null, args.concat(function () /*args*/{","                var args = (0, _slice2.default)(arguments);","                memo[key] = args;","                var q = queues[key];","                delete queues[key];","                for (var i = 0, l = q.length; i < l; i++) {","                    q[i].apply(null, args);","                }","            }));","        }","    });","    memoized.memo = memo;","    memoized.unmemoized = fn;","    return memoized;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":5,"30":1,"31":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"82":0,"83":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"97":0,"98":0,"99":0,"101":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/nextTick.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/nextTick.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":1},"b":{"1":[1,0],"2":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":40,"column":0},"end":{"line":40,"column":11}},"4":{"start":{"line":42,"column":0},"end":{"line":48,"column":1}},"5":{"start":{"line":43,"column":4},"end":{"line":43,"column":30}},"6":{"start":{"line":44,"column":7},"end":{"line":48,"column":1}},"7":{"start":{"line":45,"column":4},"end":{"line":45,"column":26}},"8":{"start":{"line":47,"column":4},"end":{"line":47,"column":36}},"9":{"start":{"line":50,"column":0},"end":{"line":50,"column":50}},"10":{"start":{"line":51,"column":0},"end":{"line":51,"column":36}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":0},"end":{"line":42,"column":0}},{"start":{"line":42,"column":0},"end":{"line":42,"column":0}}]},"2":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":7},"end":{"line":44,"column":7}},{"start":{"line":44,"column":7},"end":{"line":44,"column":7}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","var _setImmediate = require('./internal/setImmediate');","","/**"," * Calls `callback` on a later loop around the event loop. In Node.js this just"," * calls `process.nextTick`.  In the browser it will use `setImmediate` if"," * available, otherwise `setTimeout(callback, 0)`, which means other higher"," * priority events may precede the execution of `callback`."," *"," * This is used internally for browser-compatibility purposes."," *"," * @name nextTick"," * @static"," * @memberOf module:Utils"," * @method"," * @see [async.setImmediate]{@link module:Utils.setImmediate}"," * @category Util"," * @param {Function} callback - The function to call on a later loop around"," * the event loop. Invoked with (args...)."," * @param {...*} args... - any number of additional arguments to pass to the"," * callback on the next tick."," * @example"," *"," * var call_order = [];"," * async.nextTick(function() {"," *     call_order.push('two');"," *     // call_order now equals ['one','two']"," * });"," * call_order.push('one');"," *"," * async.setImmediate(function (a, b, c) {"," *     // a, b, and c equal 1, 2, and 3"," * }, 1, 2, 3);"," */","var _defer;","","if (_setImmediate.hasNextTick) {","    _defer = process.nextTick;","} else if (_setImmediate.hasSetImmediate) {","    _defer = setImmediate;","} else {","    _defer = _setImmediate.fallback;","}","","exports.default = (0, _setImmediate.wrap)(_defer);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"40":1,"42":1,"43":1,"44":0,"45":0,"47":0,"50":1,"51":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/parallel.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/parallel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"parallelLimit","line":87,"loc":{"start":{"line":87,"column":0},"end":{"line":87,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":87,"column":0},"end":{"line":89,"column":1}},"10":{"start":{"line":88,"column":2},"end":{"line":88,"column":61}},"11":{"start":{"line":90,"column":0},"end":{"line":90,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = parallelLimit;","","var _eachOf = require('./eachOf');","","var _eachOf2 = _interopRequireDefault(_eachOf);","","var _parallel = require('./internal/parallel');","","var _parallel2 = _interopRequireDefault(_parallel);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Run the `tasks` collection of functions in parallel, without waiting until"," * the previous function has completed. If any of the functions pass an error to"," * its callback, the main `callback` is immediately called with the value of the"," * error. Once the `tasks` have completed, the results are passed to the final"," * `callback` as an array."," *"," * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about"," * parallel execution of code.  If your tasks do not use any timers or perform"," * any I/O, they will actually be executed in series.  Any synchronous setup"," * sections for each task will happen one after the other.  JavaScript remains"," * single-threaded."," *"," * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the"," * execution of other tasks when a task fails."," *"," * It is also possible to use an object instead of an array. Each property will"," * be run as a function and the results will be passed to the final `callback`"," * as an object instead of an array. This can be a more readable way of handling"," * results from {@link async.parallel}."," *"," * @name parallel"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection of"," * [async functions]{@link AsyncFunction} to run."," * Each async function can complete with any number of optional `result` values."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed successfully. This function gets a results array"," * (or object) containing all the result arguments passed to the task callbacks."," * Invoked with (err, results)."," *"," * @example"," * async.parallel(["," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'two');"," *         }, 100);"," *     }"," * ],"," * // optional callback"," * function(err, results) {"," *     // the results array will equal ['one','two'] even though"," *     // the second function had a shorter timeout."," * });"," *"," * // an example using an object instead of an array"," * async.parallel({"," *     one: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 1);"," *         }, 200);"," *     },"," *     two: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 2);"," *         }, 100);"," *     }"," * }, function(err, results) {"," *     // results is now equals to: {one: 1, two: 2}"," * });"," */","function parallelLimit(tasks, callback) {","  (0, _parallel2.default)(_eachOf2.default, tasks, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"87":1,"88":0,"90":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/parallel.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/parallel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"_parallel","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":44}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":18},"end":{"line":30,"column":49}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":39},"end":{"line":31,"column":62}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":7},"end":{"line":38,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":45}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":40}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":26,"column":0},"end":{"line":41,"column":1}},"14":{"start":{"line":27,"column":4},"end":{"line":27,"column":42}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":62}},"16":{"start":{"line":30,"column":4},"end":{"line":40,"column":7}},"17":{"start":{"line":31,"column":8},"end":{"line":37,"column":11}},"18":{"start":{"line":32,"column":12},"end":{"line":34,"column":13}},"19":{"start":{"line":33,"column":16},"end":{"line":33,"column":60}},"20":{"start":{"line":35,"column":12},"end":{"line":35,"column":34}},"21":{"start":{"line":36,"column":12},"end":{"line":36,"column":26}},"22":{"start":{"line":39,"column":8},"end":{"line":39,"column":31}},"23":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":15},"end":{"line":27,"column":23}},{"start":{"line":27,"column":27},"end":{"line":27,"column":41}}]},"4":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":54},"end":{"line":28,"column":56}},{"start":{"line":28,"column":59},"end":{"line":28,"column":61}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":12}},{"start":{"line":32,"column":12},"end":{"line":32,"column":12}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = _parallel;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _isArrayLike = require('lodash/isArrayLike');","","var _isArrayLike2 = _interopRequireDefault(_isArrayLike);","","var _slice = require('./slice');","","var _slice2 = _interopRequireDefault(_slice);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _parallel(eachfn, tasks, callback) {","    callback = callback || _noop2.default;","    var results = (0, _isArrayLike2.default)(tasks) ? [] : {};","","    eachfn(tasks, function (task, key, callback) {","        (0, _wrapAsync2.default)(task)(function (err, result) {","            if (arguments.length > 2) {","                result = (0, _slice2.default)(arguments, 1);","            }","            results[key] = result;","            callback(err);","        });","    }, function (err) {","        callback(err, results);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"26":1,"27":0,"28":0,"30":0,"31":0,"32":0,"33":0,"35":0,"36":0,"39":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/parallelLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/parallelLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"parallelLimit","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":53}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":37,"column":0},"end":{"line":39,"column":1}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":78}},"11":{"start":{"line":40,"column":0},"end":{"line":40,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = parallelLimit;","","var _eachOfLimit = require('./internal/eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _parallel = require('./internal/parallel');","","var _parallel2 = _interopRequireDefault(_parallel);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name parallelLimit"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.parallel]{@link module:ControlFlow.parallel}"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection of"," * [async functions]{@link AsyncFunction} to run."," * Each async function can complete with any number of optional `result` values."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed successfully. This function gets a results array"," * (or object) containing all the result arguments passed to the task callbacks."," * Invoked with (err, results)."," */","function parallelLimit(tasks, limit, callback) {","  (0, _parallel2.default)((0, _eachOfLimit2.default)(limit), tasks, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"37":1,"38":0,"40":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/priorityQueue.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/priorityQueue.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":4,"37":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,4],"9":[4,4]},"f":{"1":0,"2":0,"3":0,"4":4},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":49}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":13},"end":{"line":12,"column":49}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":47},"end":{"line":23,"column":59}}},"4":{"name":"_interopRequireDefault","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":54,"column":2}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":54}},"4":{"start":{"line":12,"column":4},"end":{"line":48,"column":6}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":56}},"6":{"start":{"line":13,"column":30},"end":{"line":13,"column":56}},"7":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"8":{"start":{"line":15,"column":12},"end":{"line":15,"column":64}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"10":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"11":{"start":{"line":19,"column":12},"end":{"line":19,"column":26}},"12":{"start":{"line":21,"column":8},"end":{"line":26,"column":9}},"13":{"start":{"line":23,"column":12},"end":{"line":25,"column":15}},"14":{"start":{"line":24,"column":16},"end":{"line":24,"column":26}},"15":{"start":{"line":28,"column":8},"end":{"line":28,"column":33}},"16":{"start":{"line":29,"column":8},"end":{"line":29,"column":37}},"17":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"18":{"start":{"line":31,"column":12},"end":{"line":31,"column":37}},"19":{"start":{"line":34,"column":8},"end":{"line":46,"column":9}},"20":{"start":{"line":35,"column":12},"end":{"line":39,"column":14}},"21":{"start":{"line":41,"column":12},"end":{"line":45,"column":13}},"22":{"start":{"line":42,"column":16},"end":{"line":42,"column":54}},"23":{"start":{"line":44,"column":16},"end":{"line":44,"column":36}},"24":{"start":{"line":47,"column":8},"end":{"line":47,"column":47}},"25":{"start":{"line":51,"column":4},"end":{"line":51,"column":21}},"26":{"start":{"line":53,"column":4},"end":{"line":53,"column":13}},"27":{"start":{"line":56,"column":0},"end":{"line":56,"column":41}},"28":{"start":{"line":58,"column":0},"end":{"line":58,"column":49}},"29":{"start":{"line":60,"column":0},"end":{"line":60,"column":35}},"30":{"start":{"line":62,"column":0},"end":{"line":62,"column":43}},"31":{"start":{"line":64,"column":0},"end":{"line":64,"column":46}},"32":{"start":{"line":66,"column":0},"end":{"line":66,"column":59}},"33":{"start":{"line":68,"column":0},"end":{"line":68,"column":32}},"34":{"start":{"line":70,"column":0},"end":{"line":70,"column":45}},"35":{"start":{"line":72,"column":0},"end":{"line":72,"column":95}},"36":{"start":{"line":72,"column":39},"end":{"line":72,"column":93}},"37":{"start":{"line":74,"column":0},"end":{"line":74,"column":36}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":8}},{"start":{"line":13,"column":8},"end":{"line":13,"column":8}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":8}},{"start":{"line":14,"column":8},"end":{"line":14,"column":8}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":8}},{"start":{"line":18,"column":8},"end":{"line":18,"column":8}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":8}},{"start":{"line":21,"column":8},"end":{"line":21,"column":8}}]},"5":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":19},"end":{"line":28,"column":27}},{"start":{"line":28,"column":31},"end":{"line":28,"column":32}}]},"6":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":15},"end":{"line":30,"column":23}},{"start":{"line":30,"column":27},"end":{"line":30,"column":56}}]},"7":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":12}},{"start":{"line":41,"column":12},"end":{"line":41,"column":12}}]},"8":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":70},"end":{"line":72,"column":73}},{"start":{"line":72,"column":76},"end":{"line":72,"column":92}}]},"9":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":46},"end":{"line":72,"column":49}},{"start":{"line":72,"column":53},"end":{"line":72,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (worker, concurrency) {","    // Start with a normal queue","    var q = (0, _queue2.default)(worker, concurrency);","","    // Override push to accept second parameter representing priority","    q.push = function (data, priority, callback) {","        if (callback == null) callback = _noop2.default;","        if (typeof callback !== 'function') {","            throw new Error('task callback must be a function');","        }","        q.started = true;","        if (!(0, _isArray2.default)(data)) {","            data = [data];","        }","        if (data.length === 0) {","            // call drain immediately if there are no tasks","            return (0, _setImmediate2.default)(function () {","                q.drain();","            });","        }","","        priority = priority || 0;","        var nextNode = q._tasks.head;","        while (nextNode && priority >= nextNode.priority) {","            nextNode = nextNode.next;","        }","","        for (var i = 0, l = data.length; i < l; i++) {","            var item = {","                data: data[i],","                priority: priority,","                callback: callback","            };","","            if (nextNode) {","                q._tasks.insertBefore(nextNode, item);","            } else {","                q._tasks.push(item);","            }","        }","        (0, _setImmediate2.default)(q.process);","    };","","    // Remove unshift function","    delete q.unshift;","","    return q;","};","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _setImmediate = require('./setImmediate');","","var _setImmediate2 = _interopRequireDefault(_setImmediate);","","var _queue = require('./queue');","","var _queue2 = _interopRequireDefault(_queue);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","module.exports = exports['default'];","","/**"," * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and"," * completed in ascending priority order."," *"," * @name priorityQueue"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.queue]{@link module:ControlFlow.queue}"," * @category Control Flow"," * @param {AsyncFunction} worker - An async function for processing a queued task."," * If you want to handle errors from an individual task, pass a callback to"," * `q.push()`."," * Invoked with (task, callback)."," * @param {number} concurrency - An `integer` for determining how many `worker`"," * functions should be run in parallel.  If omitted, the concurrency defaults to"," * `1`.  If the concurrency is `0`, an error is thrown."," * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two"," * differences between `queue` and `priorityQueue` objects:"," * * `push(task, priority, [callback])` - `priority` should be a number. If an"," *   array of `tasks` is given, all tasks will be assigned the same priority."," * * The `unshift` method was removed."," */"],"l":{"3":1,"7":1,"9":0,"12":0,"13":0,"14":0,"15":0,"17":0,"18":0,"19":0,"21":0,"23":0,"24":0,"28":0,"29":0,"30":0,"31":0,"34":0,"35":0,"41":0,"42":0,"44":0,"47":0,"51":0,"53":0,"56":1,"58":1,"60":1,"62":1,"64":1,"66":1,"68":1,"70":1,"72":4,"74":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/setImmediate.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/setImmediate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{"1":[1,0],"2":[1,1]},"f":{"1":1},"fnMap":{"1":{"name":"_interopRequireDefault","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":95}},"5":{"start":{"line":11,"column":39},"end":{"line":11,"column":93}},"6":{"start":{"line":44,"column":0},"end":{"line":44,"column":41}},"7":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":70},"end":{"line":11,"column":73}},{"start":{"line":11,"column":76},"end":{"line":11,"column":92}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _setImmediate = require('./internal/setImmediate');","","var _setImmediate2 = _interopRequireDefault(_setImmediate);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Calls `callback` on a later loop around the event loop. In Node.js this just"," * calls `setImmediate`.  In the browser it will use `setImmediate` if"," * available, otherwise `setTimeout(callback, 0)`, which means other higher"," * priority events may precede the execution of `callback`."," *"," * This is used internally for browser-compatibility purposes."," *"," * @name setImmediate"," * @static"," * @memberOf module:Utils"," * @method"," * @see [async.nextTick]{@link module:Utils.nextTick}"," * @category Util"," * @param {Function} callback - The function to call on a later loop around"," * the event loop. Invoked with (args...)."," * @param {...*} args... - any number of additional arguments to pass to the"," * callback on the next tick."," * @example"," *"," * var call_order = [];"," * async.nextTick(function() {"," *     call_order.push('two');"," *     // call_order now equals ['one','two']"," * });"," * call_order.push('one');"," *"," * async.setImmediate(function (a, b, c) {"," *     // a, b, and c equal 1, 2, and 3"," * }, 1, 2, 3);"," */","exports.default = _setImmediate2.default;","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"44":1,"45":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/queue.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/queue.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":1,"9":1,"10":1,"11":2,"12":1},"b":{"1":[1,1],"2":[2,2]},"f":{"1":0,"2":0,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":49}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":30},"end":{"line":9,"column":51}}},"3":{"name":"_interopRequireDefault","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":49}},"4":{"start":{"line":9,"column":2},"end":{"line":11,"column":21}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":26}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":45}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":49}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":95}},"11":{"start":{"line":22,"column":39},"end":{"line":22,"column":93}},"12":{"start":{"line":24,"column":0},"end":{"line":24,"column":36}}},"branchMap":{"1":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":70},"end":{"line":22,"column":73}},{"start":{"line":22,"column":76},"end":{"line":22,"column":92}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":46},"end":{"line":22,"column":49}},{"start":{"line":22,"column":53},"end":{"line":22,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","exports.default = function (worker, concurrency) {","  var _worker = (0, _wrapAsync2.default)(worker);","  return (0, _queue2.default)(function (items, cb) {","    _worker(items[0], cb);","  }, concurrency, 1);","};","","var _queue = require('./internal/queue');","","var _queue2 = _interopRequireDefault(_queue);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","module.exports = exports['default'];","","/**"," * A queue of tasks for the worker function to complete."," * @typedef {Object} QueueObject"," * @memberOf module:ControlFlow"," * @property {Function} length - a function returning the number of items"," * waiting to be processed. Invoke with `queue.length()`."," * @property {boolean} started - a boolean indicating whether or not any"," * items have been pushed and processed by the queue."," * @property {Function} running - a function returning the number of items"," * currently being processed. Invoke with `queue.running()`."," * @property {Function} workersList - a function returning the array of items"," * currently being processed. Invoke with `queue.workersList()`."," * @property {Function} idle - a function returning false if there are items"," * waiting or being processed, or true if not. Invoke with `queue.idle()`."," * @property {number} concurrency - an integer for determining how many `worker`"," * functions should be run in parallel. This property can be changed after a"," * `queue` is created to alter the concurrency on-the-fly."," * @property {Function} push - add a new task to the `queue`. Calls `callback`"," * once the `worker` has finished processing the task. Instead of a single task,"," * a `tasks` array can be submitted. The respective callback is used for every"," * task in the list. Invoke with `queue.push(task, [callback])`,"," * @property {Function} unshift - add a new task to the front of the `queue`."," * Invoke with `queue.unshift(task, [callback])`."," * @property {Function} remove - remove items from the queue that match a test"," * function.  The test function will be passed an object with a `data` property,"," * and a `priority` property, if this is a"," * [priorityQueue]{@link module:ControlFlow.priorityQueue} object."," * Invoked with `queue.remove(testFn)`, where `testFn` is of the form"," * `function ({data, priority}) {}` and returns a Boolean."," * @property {Function} saturated - a callback that is called when the number of"," * running workers hits the `concurrency` limit, and further tasks will be"," * queued."," * @property {Function} unsaturated - a callback that is called when the number"," * of running workers is less than the `concurrency` & `buffer` limits, and"," * further tasks will not be queued."," * @property {number} buffer - A minimum threshold buffer in order to say that"," * the `queue` is `unsaturated`."," * @property {Function} empty - a callback that is called when the last item"," * from the `queue` is given to a `worker`."," * @property {Function} drain - a callback that is called when the last item"," * from the `queue` has returned from the `worker`."," * @property {Function} error - a callback that is called when a task errors."," * Has the signature `function(error, task)`."," * @property {boolean} paused - a boolean for determining whether the queue is"," * in a paused state."," * @property {Function} pause - a function that pauses the processing of tasks"," * until `resume()` is called. Invoke with `queue.pause()`."," * @property {Function} resume - a function that resumes the processing of"," * queued tasks when the queue is paused. Invoke with `queue.resume()`."," * @property {Function} kill - a function that removes the `drain` callback and"," * empties remaining tasks from the queue forcing it to go idle. No more tasks"," * should be pushed to the queue after calling this function. Invoke with `queue.kill()`."," */","","/**"," * Creates a `queue` object with the specified `concurrency`. Tasks added to the"," * `queue` are processed in parallel (up to the `concurrency` limit). If all"," * `worker`s are in progress, the task is queued until one becomes available."," * Once a `worker` completes a `task`, that `task`'s callback is called."," *"," * @name queue"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {AsyncFunction} worker - An async function for processing a queued task."," * If you want to handle errors from an individual task, pass a callback to"," * `q.push()`. Invoked with (task, callback)."," * @param {number} [concurrency=1] - An `integer` for determining how many"," * `worker` functions should be run in parallel.  If omitted, the concurrency"," * defaults to `1`.  If the concurrency is `0`, an error is thrown."," * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can"," * attached as certain properties to listen for specific events during the"," * lifecycle of the queue."," * @example"," *"," * // create a queue object with concurrency 2"," * var q = async.queue(function(task, callback) {"," *     console.log('hello ' + task.name);"," *     callback();"," * }, 2);"," *"," * // assign a callback"," * q.drain = function() {"," *     console.log('all items have been processed');"," * };"," *"," * // add some items to the queue"," * q.push({name: 'foo'}, function(err) {"," *     console.log('finished processing foo');"," * });"," * q.push({name: 'bar'}, function (err) {"," *     console.log('finished processing bar');"," * });"," *"," * // add some items to the queue (batch-wise)"," * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {"," *     console.log('finished processing item');"," * });"," *"," * // add some items to the front of the queue"," * q.unshift({name: 'bar'}, function (err) {"," *     console.log('finished processing bar');"," * });"," */"],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"14":1,"16":1,"18":1,"20":1,"22":2,"24":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/race.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/race.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":4,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"race","line":62,"loc":{"start":{"line":62,"column":0},"end":{"line":62,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":49}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":39}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":62,"column":0},"end":{"line":69,"column":1}},"14":{"start":{"line":63,"column":4},"end":{"line":63,"column":63}},"15":{"start":{"line":64,"column":4},"end":{"line":64,"column":127}},"16":{"start":{"line":64,"column":40},"end":{"line":64,"column":127}},"17":{"start":{"line":65,"column":4},"end":{"line":65,"column":41}},"18":{"start":{"line":65,"column":23},"end":{"line":65,"column":41}},"19":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"20":{"start":{"line":67,"column":8},"end":{"line":67,"column":53}},"21":{"start":{"line":70,"column":0},"end":{"line":70,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":35},"end":{"line":63,"column":43}},{"start":{"line":63,"column":47},"end":{"line":63,"column":61}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"5":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = race;","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Runs the `tasks` array of functions in parallel, without waiting until the"," * previous function has completed. Once any of the `tasks` complete or pass an"," * error to its callback, the main `callback` is immediately called. It's"," * equivalent to `Promise.race()`."," *"," * @name race"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}"," * to run. Each function can complete with an optional `result` value."," * @param {Function} callback - A callback to run once any of the functions have"," * completed. This function gets an error or result from the first function that"," * completed. Invoked with (err, result)."," * @returns undefined"," * @example"," *"," * async.race(["," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'two');"," *         }, 100);"," *     }"," * ],"," * // main callback"," * function(err, result) {"," *     // the result will be equal to 'two' as it finishes earlier"," * });"," */","function race(tasks, callback) {","    callback = (0, _once2.default)(callback || _noop2.default);","    if (!(0, _isArray2.default)(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));","    if (!tasks.length) return callback();","    for (var i = 0, l = tasks.length; i < l; i++) {","        (0, _wrapAsync2.default)(tasks[i])(callback);","    }","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"70":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reduceRight.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reduceRight.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"reduceRight","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":54}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":40,"column":0},"end":{"line":43,"column":1}},"10":{"start":{"line":41,"column":2},"end":{"line":41,"column":55}},"11":{"start":{"line":42,"column":2},"end":{"line":42,"column":60}},"12":{"start":{"line":44,"column":0},"end":{"line":44,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = reduceRight;","","var _reduce = require('./reduce');","","var _reduce2 = _interopRequireDefault(_reduce);","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order."," *"," * @name reduceRight"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reduce]{@link module:Collections.reduce}"," * @alias foldr"," * @category Collection"," * @param {Array} array - A collection to iterate over."," * @param {*} memo - The initial state of the reduction."," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * array to produce the next step in the reduction."," * The `iteratee` should complete with the next state of the reduction."," * If the iteratee complete with an error, the reduction is stopped and the"," * main `callback` is immediately called with the error."," * Invoked with (memo, item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the reduced value. Invoked with"," * (err, result)."," */","function reduceRight(array, memo, iteratee, callback) {","  var reversed = (0, _slice2.default)(array).reverse();","  (0, _reduce2.default)(reversed, memo, iteratee, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"40":1,"41":0,"42":0,"44":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reflect.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reflect.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[1,2],"2":[3,3],"3":[0,0],"4":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"reflect","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":21}}},"3":{"name":"reflectOn","line":63,"loc":{"start":{"line":63,"column":40},"end":{"line":63,"column":82}}},"4":{"name":"callback","line":64,"loc":{"start":{"line":64,"column":18},"end":{"line":64,"column":50}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":57}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":61}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":61,"column":0},"end":{"line":80,"column":1}},"12":{"start":{"line":62,"column":4},"end":{"line":62,"column":43}},"13":{"start":{"line":63,"column":4},"end":{"line":79,"column":7}},"14":{"start":{"line":64,"column":8},"end":{"line":76,"column":11}},"15":{"start":{"line":65,"column":12},"end":{"line":75,"column":13}},"16":{"start":{"line":66,"column":16},"end":{"line":66,"column":56}},"17":{"start":{"line":68,"column":16},"end":{"line":68,"column":26}},"18":{"start":{"line":69,"column":16},"end":{"line":73,"column":17}},"19":{"start":{"line":70,"column":20},"end":{"line":70,"column":34}},"20":{"start":{"line":72,"column":20},"end":{"line":72,"column":63}},"21":{"start":{"line":74,"column":16},"end":{"line":74,"column":56}},"22":{"start":{"line":78,"column":8},"end":{"line":78,"column":37}},"23":{"start":{"line":81,"column":0},"end":{"line":81,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":12}},{"start":{"line":65,"column":12},"end":{"line":65,"column":12}}]},"4":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":16},"end":{"line":69,"column":16}},{"start":{"line":69,"column":16},"end":{"line":69,"column":16}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = reflect;","","var _initialParams = require('./internal/initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Wraps the async function in another function that always completes with a"," * result object, even when it errors."," *"," * The result object has either the property `error` or `value`."," *"," * @name reflect"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} fn - The async function you want to wrap"," * @returns {Function} - A function that always passes null to it's callback as"," * the error. The second argument to the callback will be an `object` with"," * either an `error` or a `value` property."," * @example"," *"," * async.parallel(["," *     async.reflect(function(callback) {"," *         // do some stuff ..."," *         callback(null, 'one');"," *     }),"," *     async.reflect(function(callback) {"," *         // do some more stuff but error ..."," *         callback('bad stuff happened');"," *     }),"," *     async.reflect(function(callback) {"," *         // do some more stuff ..."," *         callback(null, 'two');"," *     })"," * ],"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results[0].value = 'one'"," *     // results[1].error = 'bad stuff happened'"," *     // results[2].value = 'two'"," * });"," */","function reflect(fn) {","    var _fn = (0, _wrapAsync2.default)(fn);","    return (0, _initialParams2.default)(function reflectOn(args, reflectCallback) {","        args.push(function callback(error, cbArg) {","            if (error) {","                reflectCallback(null, { error: error });","            } else {","                var value;","                if (arguments.length <= 2) {","                    value = cbArg;","                } else {","                    value = (0, _slice2.default)(arguments, 1);","                }","                reflectCallback(null, { value: value });","            }","        });","","        return _fn.apply(this, args);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"68":0,"69":0,"70":0,"72":0,"74":0,"78":0,"81":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reflectAll.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reflectAll.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0]},"f":{"1":4,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"reflectAll","line":93,"loc":{"start":{"line":93,"column":0},"end":{"line":93,"column":27}}},"3":{"name":"(anonymous_3)","line":99,"loc":{"start":{"line":99,"column":41},"end":{"line":99,"column":62}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":49}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":49}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":45}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":52}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":48}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":55}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":93,"column":0},"end":{"line":104,"column":1}},"14":{"start":{"line":94,"column":4},"end":{"line":94,"column":16}},"15":{"start":{"line":95,"column":4},"end":{"line":102,"column":5}},"16":{"start":{"line":96,"column":8},"end":{"line":96,"column":68}},"17":{"start":{"line":98,"column":8},"end":{"line":98,"column":21}},"18":{"start":{"line":99,"column":8},"end":{"line":101,"column":11}},"19":{"start":{"line":100,"column":12},"end":{"line":100,"column":62}},"20":{"start":{"line":103,"column":4},"end":{"line":103,"column":19}},"21":{"start":{"line":105,"column":0},"end":{"line":105,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = reflectAll;","","var _reflect = require('./reflect');","","var _reflect2 = _interopRequireDefault(_reflect);","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _arrayMap2 = require('lodash/_arrayMap');","","var _arrayMap3 = _interopRequireDefault(_arrayMap2);","","var _baseForOwn = require('lodash/_baseForOwn');","","var _baseForOwn2 = _interopRequireDefault(_baseForOwn);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * A helper function that wraps an array or an object of functions with `reflect`."," *"," * @name reflectAll"," * @static"," * @memberOf module:Utils"," * @method"," * @see [async.reflect]{@link module:Utils.reflect}"," * @category Util"," * @param {Array|Object|Iterable} tasks - The collection of"," * [async functions]{@link AsyncFunction} to wrap in `async.reflect`."," * @returns {Array} Returns an array of async functions, each wrapped in"," * `async.reflect`"," * @example"," *"," * let tasks = ["," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     function(callback) {"," *         // do some more stuff but error ..."," *         callback(new Error('bad stuff happened'));"," *     },"," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'two');"," *         }, 100);"," *     }"," * ];"," *"," * async.parallel(async.reflectAll(tasks),"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results[0].value = 'one'"," *     // results[1].error = Error('bad stuff happened')"," *     // results[2].value = 'two'"," * });"," *"," * // an example using an object instead of an array"," * let tasks = {"," *     one: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     two: function(callback) {"," *         callback('two');"," *     },"," *     three: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'three');"," *         }, 100);"," *     }"," * };"," *"," * async.parallel(async.reflectAll(tasks),"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results.one.value = 'one'"," *     // results.two.error = 'two'"," *     // results.three.value = 'three'"," * });"," */","function reflectAll(tasks) {","    var results;","    if ((0, _isArray2.default)(tasks)) {","        results = (0, _arrayMap3.default)(tasks, _reflect2.default);","    } else {","        results = {};","        (0, _baseForOwn2.default)(tasks, function (task, key) {","            results[key] = _reflect2.default.call(this, task);","        });","    }","    return results;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"93":1,"94":0,"95":0,"96":0,"98":0,"99":0,"100":0,"103":0,"105":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reject.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reject.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":44,"column":0},"end":{"line":44,"column":62}},"9":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _reject = require('./internal/reject');","","var _reject2 = _interopRequireDefault(_reject);","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test."," *"," * @name reject"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - An async truth test to apply to each item in"," * `coll`."," * The should complete with a boolean value as its `result`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," * @example"," *"," * async.reject(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, results) {"," *     // results now equals an array of missing files"," *     createFiles(results);"," * });"," */","exports.default = (0, _doParallel2.default)(_reject2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"44":1,"45":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/reject.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/reject.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"reject","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":49}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":39},"end":{"line":15,"column":60}}},"4":{"name":"(anonymous_4)","line":16,"loc":{"start":{"line":16,"column":24},"end":{"line":16,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":14,"column":0},"end":{"line":20,"column":1}},"8":{"start":{"line":15,"column":4},"end":{"line":19,"column":17}},"9":{"start":{"line":16,"column":8},"end":{"line":18,"column":11}},"10":{"start":{"line":17,"column":12},"end":{"line":17,"column":24}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = reject;","","var _filter = require('./filter');","","var _filter2 = _interopRequireDefault(_filter);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function reject(eachfn, arr, iteratee, callback) {","    (0, _filter2.default)(eachfn, arr, function (value, cb) {","        iteratee(value, function (err, v) {","            cb(err, !v);","        });","    }, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"15":0,"16":0,"17":0,"21":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/rejectLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/rejectLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":65}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":67}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _reject = require('./internal/reject');","","var _reject2 = _interopRequireDefault(_reject);","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name rejectLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reject]{@link module:Collections.reject}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - An async truth test to apply to each item in"," * `coll`."," * The should complete with a boolean value as its `result`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","exports.default = (0, _doParallelLimit2.default)(_reject2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/rejectSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/rejectSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":67}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _rejectLimit = require('./rejectLimit');","","var _rejectLimit2 = _interopRequireDefault(_rejectLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time."," *"," * @name rejectSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reject]{@link module:Collections.reject}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - An async truth test to apply to each item in"," * `coll`."," * The should complete with a boolean value as its `result`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","exports.default = (0, _doLimit2.default)(_rejectLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"34":1,"35":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/retry.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/retry.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1},"b":{"1":[1,2],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0]},"f":{"1":3,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"retry","line":106,"loc":{"start":{"line":106,"column":0},"end":{"line":106,"column":37}}},"3":{"name":"parseTimes","line":115,"loc":{"start":{"line":115,"column":4},"end":{"line":115,"column":32}}},"4":{"name":"retryAttempt","line":144,"loc":{"start":{"line":144,"column":4},"end":{"line":144,"column":28}}},"5":{"name":"(anonymous_5)","line":145,"loc":{"start":{"line":145,"column":14},"end":{"line":145,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":106,"column":0},"end":{"line":155,"column":1}},"12":{"start":{"line":107,"column":4},"end":{"line":107,"column":26}},"13":{"start":{"line":108,"column":4},"end":{"line":108,"column":29}},"14":{"start":{"line":110,"column":4},"end":{"line":113,"column":6}},"15":{"start":{"line":115,"column":4},"end":{"line":127,"column":5}},"16":{"start":{"line":116,"column":8},"end":{"line":126,"column":9}},"17":{"start":{"line":117,"column":12},"end":{"line":117,"column":50}},"18":{"start":{"line":119,"column":12},"end":{"line":119,"column":136}},"19":{"start":{"line":121,"column":12},"end":{"line":121,"column":44}},"20":{"start":{"line":122,"column":15},"end":{"line":126,"column":9}},"21":{"start":{"line":123,"column":12},"end":{"line":123,"column":44}},"22":{"start":{"line":125,"column":12},"end":{"line":125,"column":65}},"23":{"start":{"line":129,"column":4},"end":{"line":135,"column":5}},"24":{"start":{"line":130,"column":8},"end":{"line":130,"column":42}},"25":{"start":{"line":131,"column":8},"end":{"line":131,"column":20}},"26":{"start":{"line":133,"column":8},"end":{"line":133,"column":34}},"27":{"start":{"line":134,"column":8},"end":{"line":134,"column":46}},"28":{"start":{"line":137,"column":4},"end":{"line":139,"column":5}},"29":{"start":{"line":138,"column":8},"end":{"line":138,"column":61}},"30":{"start":{"line":141,"column":4},"end":{"line":141,"column":47}},"31":{"start":{"line":143,"column":4},"end":{"line":143,"column":20}},"32":{"start":{"line":144,"column":4},"end":{"line":152,"column":5}},"33":{"start":{"line":145,"column":8},"end":{"line":151,"column":11}},"34":{"start":{"line":146,"column":12},"end":{"line":150,"column":13}},"35":{"start":{"line":147,"column":16},"end":{"line":147,"column":72}},"36":{"start":{"line":149,"column":16},"end":{"line":149,"column":48}},"37":{"start":{"line":154,"column":4},"end":{"line":154,"column":19}},"38":{"start":{"line":156,"column":0},"end":{"line":156,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":8}},{"start":{"line":116,"column":8},"end":{"line":116,"column":8}}]},"4":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":24},"end":{"line":117,"column":32}},{"start":{"line":117,"column":36},"end":{"line":117,"column":49}}]},"5":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":66},"end":{"line":119,"column":76}},{"start":{"line":119,"column":79},"end":{"line":119,"column":135}}]},"6":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":103},"end":{"line":119,"column":114}},{"start":{"line":119,"column":118},"end":{"line":119,"column":134}}]},"7":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":15},"end":{"line":122,"column":15}},{"start":{"line":122,"column":15},"end":{"line":122,"column":15}}]},"8":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":19},"end":{"line":122,"column":40}},{"start":{"line":122,"column":44},"end":{"line":122,"column":65}}]},"9":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":24},"end":{"line":123,"column":26}},{"start":{"line":123,"column":30},"end":{"line":123,"column":43}}]},"10":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":4}},{"start":{"line":129,"column":4},"end":{"line":129,"column":4}}]},"11":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":8},"end":{"line":129,"column":28}},{"start":{"line":129,"column":32},"end":{"line":129,"column":58}}]},"12":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":19},"end":{"line":130,"column":23}},{"start":{"line":130,"column":27},"end":{"line":130,"column":41}}]},"13":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":19},"end":{"line":134,"column":27}},{"start":{"line":134,"column":31},"end":{"line":134,"column":45}}]},"14":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"15":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":12},"end":{"line":146,"column":12}},{"start":{"line":146,"column":12},"end":{"line":146,"column":12}}]},"16":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":16},"end":{"line":146,"column":19}},{"start":{"line":146,"column":23},"end":{"line":146,"column":48}},{"start":{"line":146,"column":53},"end":{"line":146,"column":93}},{"start":{"line":146,"column":97},"end":{"line":146,"column":121}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = retry;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _constant = require('lodash/constant');","","var _constant2 = _interopRequireDefault(_constant);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Attempts to get a successful response from `task` no more than `times` times"," * before returning an error. If the task is successful, the `callback` will be"," * passed the result of the successful task. If all attempts fail, the callback"," * will be passed the error and result (if any) of the final attempt."," *"," * @name retry"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @see [async.retryable]{@link module:ControlFlow.retryable}"," * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an"," * object with `times` and `interval` or a number."," * * `times` - The number of attempts to make before giving up.  The default"," *   is `5`."," * * `interval` - The time to wait between retries, in milliseconds.  The"," *   default is `0`. The interval may also be specified as a function of the"," *   retry count (see example)."," * * `errorFilter` - An optional synchronous function that is invoked on"," *   erroneous result. If it returns `true` the retry attempts will continue;"," *   if the function returns `false` the retry flow is aborted with the current"," *   attempt's error and result being returned to the final callback."," *   Invoked with (err)."," * * If `opts` is a number, the number specifies the number of times to retry,"," *   with the default interval of `0`."," * @param {AsyncFunction} task - An async function to retry."," * Invoked with (callback)."," * @param {Function} [callback] - An optional callback which is called when the"," * task has succeeded, or after the final failed attempt. It receives the `err`"," * and `result` arguments of the last attempt at completing the `task`. Invoked"," * with (err, results)."," *"," * @example"," *"," * // The `retry` function can be used as a stand-alone control flow by passing"," * // a callback, as shown below:"," *"," * // try calling apiMethod 3 times"," * async.retry(3, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod 3 times, waiting 200 ms between each retry"," * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod 10 times with exponential backoff"," * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)"," * async.retry({"," *   times: 10,"," *   interval: function(retryCount) {"," *     return 50 * Math.pow(2, retryCount);"," *   }"," * }, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod the default 5 times no delay between each retry"," * async.retry(apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod only when error condition satisfies, all other"," * // errors will abort the retry control flow and return to final callback"," * async.retry({"," *   errorFilter: function(err) {"," *     return err.message === 'Temporary error'; // only retry on a specific error"," *   }"," * }, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // to retry individual methods that are not as reliable within other"," * // control flow functions, use the `retryable` wrapper:"," * async.auto({"," *     users: api.getUsers.bind(api),"," *     payments: async.retryable(3, api.getPayments.bind(api))"," * }, function(err, results) {"," *     // do something with the results"," * });"," *"," */","function retry(opts, task, callback) {","    var DEFAULT_TIMES = 5;","    var DEFAULT_INTERVAL = 0;","","    var options = {","        times: DEFAULT_TIMES,","        intervalFunc: (0, _constant2.default)(DEFAULT_INTERVAL)","    };","","    function parseTimes(acc, t) {","        if (typeof t === 'object') {","            acc.times = +t.times || DEFAULT_TIMES;","","            acc.intervalFunc = typeof t.interval === 'function' ? t.interval : (0, _constant2.default)(+t.interval || DEFAULT_INTERVAL);","","            acc.errorFilter = t.errorFilter;","        } else if (typeof t === 'number' || typeof t === 'string') {","            acc.times = +t || DEFAULT_TIMES;","        } else {","            throw new Error(\"Invalid arguments for async.retry\");","        }","    }","","    if (arguments.length < 3 && typeof opts === 'function') {","        callback = task || _noop2.default;","        task = opts;","    } else {","        parseTimes(options, opts);","        callback = callback || _noop2.default;","    }","","    if (typeof task !== 'function') {","        throw new Error(\"Invalid arguments for async.retry\");","    }","","    var _task = (0, _wrapAsync2.default)(task);","","    var attempt = 1;","    function retryAttempt() {","        _task(function (err) {","            if (err && attempt++ < options.times && (typeof options.errorFilter != 'function' || options.errorFilter(err))) {","                setTimeout(retryAttempt, options.intervalFunc(attempt));","            } else {","                callback.apply(null, arguments);","            }","        });","    }","","    retryAttempt();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"106":1,"107":0,"108":0,"110":0,"115":1,"116":0,"117":0,"119":0,"121":0,"122":0,"123":0,"125":0,"129":0,"130":0,"131":0,"133":0,"134":0,"137":0,"138":0,"141":0,"143":0,"144":1,"145":0,"146":0,"147":0,"149":0,"154":0,"156":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/retryable.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/retryable.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":3,"21":1},"b":{"1":[0,0],"2":[0,0],"3":[1,2],"4":[3,3]},"f":{"1":0,"2":0,"3":0,"4":3},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":40}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":40},"end":{"line":13,"column":66}}},"3":{"name":"taskFn","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"4":{"name":"_interopRequireDefault","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":11,"column":5}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":20}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":20}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":47}},"7":{"start":{"line":13,"column":4},"end":{"line":19,"column":7}},"8":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"9":{"start":{"line":15,"column":12},"end":{"line":15,"column":47}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":107}},"11":{"start":{"line":18,"column":18},"end":{"line":18,"column":63}},"12":{"start":{"line":18,"column":68},"end":{"line":18,"column":107}},"13":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}},"14":{"start":{"line":24,"column":0},"end":{"line":24,"column":45}},"15":{"start":{"line":26,"column":0},"end":{"line":26,"column":57}},"16":{"start":{"line":28,"column":0},"end":{"line":28,"column":61}},"17":{"start":{"line":30,"column":0},"end":{"line":30,"column":49}},"18":{"start":{"line":32,"column":0},"end":{"line":32,"column":53}},"19":{"start":{"line":34,"column":0},"end":{"line":34,"column":95}},"20":{"start":{"line":34,"column":39},"end":{"line":34,"column":93}},"21":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":8}},{"start":{"line":18,"column":8},"end":{"line":18,"column":8}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":70},"end":{"line":34,"column":73}},{"start":{"line":34,"column":76},"end":{"line":34,"column":92}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":46},"end":{"line":34,"column":49}},{"start":{"line":34,"column":53},"end":{"line":34,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (opts, task) {","    if (!task) {","        task = opts;","        opts = null;","    }","    var _task = (0, _wrapAsync2.default)(task);","    return (0, _initialParams2.default)(function (args, callback) {","        function taskFn(cb) {","            _task.apply(null, args.concat(cb));","        }","","        if (opts) (0, _retry2.default)(opts, taskFn, callback);else (0, _retry2.default)(taskFn, callback);","    });","};","","var _retry = require('./retry');","","var _retry2 = _interopRequireDefault(_retry);","","var _initialParams = require('./internal/initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","module.exports = exports['default'];","","/**"," * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method"," * wraps a task and makes it retryable, rather than immediately calling it"," * with retries."," *"," * @name retryable"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.retry]{@link module:ControlFlow.retry}"," * @category Control Flow"," * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional"," * options, exactly the same as from `retry`"," * @param {AsyncFunction} task - the asynchronous function to wrap."," * This function will be passed any arguments passed to the returned wrapper."," * Invoked with (...args, callback)."," * @returns {AsyncFunction} The wrapped function, which when invoked, will"," * retry on an error, based on the parameters specified in `opts`."," * This function will accept the same parameters as `task`."," * @example"," *"," * async.auto({"," *     dep1: async.retryable(3, getFromFlakyService),"," *     process: [\"dep1\", async.retryable(3, function (results, cb) {"," *         maybeProcessData(results.dep1, cb);"," *     })]"," * }, callback);"," */"],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"12":0,"13":0,"14":1,"15":0,"18":0,"22":1,"24":1,"26":1,"28":1,"30":1,"32":1,"34":3,"36":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/series.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/series.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"series","line":82,"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":59}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":82,"column":0},"end":{"line":84,"column":1}},"10":{"start":{"line":83,"column":2},"end":{"line":83,"column":67}},"11":{"start":{"line":85,"column":0},"end":{"line":85,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = series;","","var _parallel = require('./internal/parallel');","","var _parallel2 = _interopRequireDefault(_parallel);","","var _eachOfSeries = require('./eachOfSeries');","","var _eachOfSeries2 = _interopRequireDefault(_eachOfSeries);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Run the functions in the `tasks` collection in series, each one running once"," * the previous function has completed. If any functions in the series pass an"," * error to its callback, no more functions are run, and `callback` is"," * immediately called with the value of the error. Otherwise, `callback`"," * receives an array of results when `tasks` have completed."," *"," * It is also possible to use an object instead of an array. Each property will"," * be run as a function, and the results will be passed to the final `callback`"," * as an object instead of an array. This can be a more readable way of handling"," *  results from {@link async.series}."," *"," * **Note** that while many implementations preserve the order of object"," * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)"," * explicitly states that"," *"," * > The mechanics and order of enumerating the properties is not specified."," *"," * So if you rely on the order in which your series of functions are executed,"," * and want this to work on all platforms, consider using an array."," *"," * @name series"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection containing"," * [async functions]{@link AsyncFunction} to run in series."," * Each function can complete with any number of optional `result` values."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed. This function gets a results array (or object)"," * containing all the result arguments passed to the `task` callbacks. Invoked"," * with (err, result)."," * @example"," * async.series(["," *     function(callback) {"," *         // do some stuff ..."," *         callback(null, 'one');"," *     },"," *     function(callback) {"," *         // do some more stuff ..."," *         callback(null, 'two');"," *     }"," * ],"," * // optional callback"," * function(err, results) {"," *     // results is now equal to ['one', 'two']"," * });"," *"," * async.series({"," *     one: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 1);"," *         }, 200);"," *     },"," *     two: function(callback){"," *         setTimeout(function() {"," *             callback(null, 2);"," *         }, 100);"," *     }"," * }, function(err, results) {"," *     // results is now equal to: {one: 1, two: 2}"," * });"," */","function series(tasks, callback) {","  (0, _parallel2.default)(_eachOfSeries2.default, tasks, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"82":1,"83":0,"85":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/some.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/some.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":1,"11":1},"b":{"1":[0,3],"2":[3,3]},"f":{"1":3},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":51}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"9":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"10":{"start":{"line":51,"column":0},"end":{"line":51,"column":102}},"11":{"start":{"line":52,"column":0},"end":{"line":52,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns `true` if at least one element in the `coll` satisfies an async test."," * If any iteratee call returns `true`, the main `callback` is immediately"," * called."," *"," * @name some"," * @static"," * @memberOf module:Collections"," * @method"," * @alias any"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in parallel."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," * @example"," *"," * async.some(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // if result is true then at least one of the files exists"," * });"," */","exports.default = (0, _doParallel2.default)((0, _createTester2.default)(Boolean, _identity2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":3,"51":1,"52":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/someSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/someSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":37,"column":0},"end":{"line":37,"column":65}},"9":{"start":{"line":38,"column":0},"end":{"line":38,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _someLimit = require('./someLimit');","","var _someLimit2 = _interopRequireDefault(_someLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time."," *"," * @name someSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.some]{@link module:Collections.some}"," * @alias anySeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in series."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," */","exports.default = (0, _doLimit2.default)(_someLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"37":1,"38":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/sortBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/sortBy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"sortBy","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":42}}},"3":{"name":"(anonymous_3)","line":75,"loc":{"start":{"line":75,"column":29},"end":{"line":75,"column":52}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":21},"end":{"line":76,"column":46}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":7},"end":{"line":80,"column":31}}},"6":{"name":"comparator","line":85,"loc":{"start":{"line":85,"column":4},"end":{"line":85,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":52}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":59}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":28}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":73,"column":0},"end":{"line":90,"column":1}},"14":{"start":{"line":74,"column":4},"end":{"line":74,"column":55}},"15":{"start":{"line":75,"column":4},"end":{"line":83,"column":7}},"16":{"start":{"line":76,"column":8},"end":{"line":79,"column":11}},"17":{"start":{"line":77,"column":12},"end":{"line":77,"column":42}},"18":{"start":{"line":77,"column":21},"end":{"line":77,"column":42}},"19":{"start":{"line":78,"column":12},"end":{"line":78,"column":61}},"20":{"start":{"line":81,"column":8},"end":{"line":81,"column":38}},"21":{"start":{"line":81,"column":17},"end":{"line":81,"column":38}},"22":{"start":{"line":82,"column":8},"end":{"line":82,"column":112}},"23":{"start":{"line":85,"column":4},"end":{"line":89,"column":5}},"24":{"start":{"line":86,"column":8},"end":{"line":87,"column":31}},"25":{"start":{"line":88,"column":8},"end":{"line":88,"column":42}},"26":{"start":{"line":91,"column":0},"end":{"line":91,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":12},"end":{"line":77,"column":12}},{"start":{"line":77,"column":12},"end":{"line":77,"column":12}}]},"4":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":8}},{"start":{"line":81,"column":8},"end":{"line":81,"column":8}}]},"5":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":23},"end":{"line":88,"column":25}},{"start":{"line":88,"column":28},"end":{"line":88,"column":41}}]},"6":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":36},"end":{"line":88,"column":37}},{"start":{"line":88,"column":40},"end":{"line":88,"column":41}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = sortBy;","","var _arrayMap = require('lodash/_arrayMap');","","var _arrayMap2 = _interopRequireDefault(_arrayMap);","","var _baseProperty = require('lodash/_baseProperty');","","var _baseProperty2 = _interopRequireDefault(_baseProperty);","","var _map = require('./map');","","var _map2 = _interopRequireDefault(_map);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Sorts a list by the results of running each `coll` value through an async"," * `iteratee`."," *"," * @name sortBy"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a value to use as the sort criteria as"," * its `result`."," * Invoked with (item, callback)."," * @param {Function} callback - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is the items"," * from the original `coll` sorted by the values returned by the `iteratee`"," * calls. Invoked with (err, results)."," * @example"," *"," * async.sortBy(['file1','file2','file3'], function(file, callback) {"," *     fs.stat(file, function(err, stats) {"," *         callback(err, stats.mtime);"," *     });"," * }, function(err, results) {"," *     // results is now the original array of files sorted by"," *     // modified date"," * });"," *"," * // By modifying the callback parameter the"," * // sorting order can be influenced:"," *"," * // ascending order"," * async.sortBy([1,9,3,5], function(x, callback) {"," *     callback(null, x);"," * }, function(err,result) {"," *     // result callback"," * });"," *"," * // descending order"," * async.sortBy([1,9,3,5], function(x, callback) {"," *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around"," * }, function(err,result) {"," *     // result callback"," * });"," */","function sortBy(coll, iteratee, callback) {","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    (0, _map2.default)(coll, function (x, callback) {","        _iteratee(x, function (err, criteria) {","            if (err) return callback(err);","            callback(null, { value: x, criteria: criteria });","        });","    }, function (err, results) {","        if (err) return callback(err);","        callback(null, (0, _arrayMap2.default)(results.sort(comparator), (0, _baseProperty2.default)('value')));","    });","","    function comparator(left, right) {","        var a = left.criteria,","            b = right.criteria;","        return a < b ? -1 : a > b ? 1 : 0;","    }","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"81":0,"82":0,"85":1,"86":0,"88":0,"91":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/timeout.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/timeout.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[1,1],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"timeout","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":46}}},"3":{"name":"(anonymous_3)","line":62,"loc":{"start":{"line":62,"column":40},"end":{"line":62,"column":66}}},"4":{"name":"timeoutCallback","line":66,"loc":{"start":{"line":66,"column":8},"end":{"line":66,"column":35}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":18},"end":{"line":77,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":57}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":61}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":59,"column":0},"end":{"line":88,"column":1}},"10":{"start":{"line":60,"column":4},"end":{"line":60,"column":47}},"11":{"start":{"line":62,"column":4},"end":{"line":87,"column":7}},"12":{"start":{"line":63,"column":8},"end":{"line":63,"column":29}},"13":{"start":{"line":64,"column":8},"end":{"line":64,"column":18}},"14":{"start":{"line":66,"column":8},"end":{"line":75,"column":9}},"15":{"start":{"line":67,"column":12},"end":{"line":67,"column":51}},"16":{"start":{"line":68,"column":12},"end":{"line":68,"column":81}},"17":{"start":{"line":69,"column":12},"end":{"line":69,"column":37}},"18":{"start":{"line":70,"column":12},"end":{"line":72,"column":13}},"19":{"start":{"line":71,"column":16},"end":{"line":71,"column":34}},"20":{"start":{"line":73,"column":12},"end":{"line":73,"column":28}},"21":{"start":{"line":74,"column":12},"end":{"line":74,"column":28}},"22":{"start":{"line":77,"column":8},"end":{"line":82,"column":11}},"23":{"start":{"line":78,"column":12},"end":{"line":81,"column":13}},"24":{"start":{"line":79,"column":16},"end":{"line":79,"column":48}},"25":{"start":{"line":80,"column":16},"end":{"line":80,"column":36}},"26":{"start":{"line":85,"column":8},"end":{"line":85,"column":58}},"27":{"start":{"line":86,"column":8},"end":{"line":86,"column":29}},"28":{"start":{"line":89,"column":0},"end":{"line":89,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":23},"end":{"line":67,"column":35}},{"start":{"line":67,"column":39},"end":{"line":67,"column":50}}]},"4":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12}},{"start":{"line":70,"column":12},"end":{"line":70,"column":12}}]},"5":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":12},"end":{"line":78,"column":12}},{"start":{"line":78,"column":12},"end":{"line":78,"column":12}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = timeout;","","var _initialParams = require('./internal/initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Sets a time limit on an asynchronous function. If the function does not call"," * its callback within the specified milliseconds, it will be called with a"," * timeout error. The code property for the error object will be `'ETIMEDOUT'`."," *"," * @name timeout"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} asyncFn - The async function to limit in time."," * @param {number} milliseconds - The specified time limit."," * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)"," * to timeout Error for more information.."," * @returns {AsyncFunction} Returns a wrapped function that can be used with any"," * of the control flow functions."," * Invoke this function with the same parameters as you would `asyncFunc`."," * @example"," *"," * function myFunction(foo, callback) {"," *     doAsyncTask(foo, function(err, data) {"," *         // handle errors"," *         if (err) return callback(err);"," *"," *         // do some stuff ..."," *"," *         // return processed data"," *         return callback(null, data);"," *     });"," * }"," *"," * var wrapped = async.timeout(myFunction, 1000);"," *"," * // call `wrapped` as you would `myFunction`"," * wrapped({ bar: 'bar' }, function(err, data) {"," *     // if `myFunction` takes < 1000 ms to execute, `err`"," *     // and `data` will have their expected values"," *"," *     // else `err` will be an Error with the code 'ETIMEDOUT'"," * });"," */","function timeout(asyncFn, milliseconds, info) {","    var fn = (0, _wrapAsync2.default)(asyncFn);","","    return (0, _initialParams2.default)(function (args, callback) {","        var timedOut = false;","        var timer;","","        function timeoutCallback() {","            var name = asyncFn.name || 'anonymous';","            var error = new Error('Callback function \"' + name + '\" timed out.');","            error.code = 'ETIMEDOUT';","            if (info) {","                error.info = info;","            }","            timedOut = true;","            callback(error);","        }","","        args.push(function () {","            if (!timedOut) {","                callback.apply(null, arguments);","                clearTimeout(timer);","            }","        });","","        // setup timer and call original function","        timer = setTimeout(timeoutCallback, milliseconds);","        fn.apply(null, args);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"59":1,"60":0,"62":0,"63":0,"64":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"73":0,"74":0,"77":0,"78":0,"79":0,"80":0,"85":0,"86":0,"89":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/times.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/times.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":55}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":49,"column":0},"end":{"line":49,"column":73}},"9":{"start":{"line":50,"column":0},"end":{"line":50,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _timesLimit = require('./timesLimit');","","var _timesLimit2 = _interopRequireDefault(_timesLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Calls the `iteratee` function `n` times, and accumulates results in the same"," * manner you would use with [map]{@link module:Collections.map}."," *"," * @name times"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Control Flow"," * @param {number} n - The number of times to run the function."," * @param {AsyncFunction} iteratee - The async function to call `n` times."," * Invoked with the iteration index and a callback: (n, next)."," * @param {Function} callback - see {@link module:Collections.map}."," * @example"," *"," * // Pretend this is some complicated async factory"," * var createUser = function(id, callback) {"," *     callback(null, {"," *         id: 'user' + id"," *     });"," * };"," *"," * // generate 5 users"," * async.times(5, function(n, next) {"," *     createUser(n, function(err, user) {"," *         next(err, user);"," *     });"," * }, function(err, users) {"," *     // we should now have 5 users"," * });"," */","exports.default = (0, _doLimit2.default)(_timesLimit2.default, Infinity);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/timesLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/timesLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":1},"b":{"1":[1,2],"2":[3,3]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"timeLimit","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":53}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":38,"column":0},"end":{"line":41,"column":1}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":53}},"13":{"start":{"line":40,"column":2},"end":{"line":40,"column":93}},"14":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = timeLimit;","","var _mapLimit = require('./mapLimit');","","var _mapLimit2 = _interopRequireDefault(_mapLimit);","","var _baseRange = require('lodash/_baseRange');","","var _baseRange2 = _interopRequireDefault(_baseRange);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name timesLimit"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.times]{@link module:ControlFlow.times}"," * @category Control Flow"," * @param {number} count - The number of times to run the function."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - The async function to call `n` times."," * Invoked with the iteration index and a callback: (n, next)."," * @param {Function} callback - see [async.map]{@link module:Collections.map}."," */","function timeLimit(count, limit, iteratee, callback) {","  var _iteratee = (0, _wrapAsync2.default)(iteratee);","  (0, _mapLimit2.default)((0, _baseRange2.default)(0, count, 1), limit, _iteratee, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"38":1,"39":0,"40":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/timesSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/timesSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":55}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":31,"column":0},"end":{"line":31,"column":66}},"9":{"start":{"line":32,"column":0},"end":{"line":32,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _timesLimit = require('./timesLimit');","","var _timesLimit2 = _interopRequireDefault(_timesLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time."," *"," * @name timesSeries"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.times]{@link module:ControlFlow.times}"," * @category Control Flow"," * @param {number} n - The number of times to run the function."," * @param {AsyncFunction} iteratee - The async function to call `n` times."," * Invoked with the iteration index and a callback: (n, next)."," * @param {Function} callback - see {@link module:Collections.map}."," */","exports.default = (0, _doLimit2.default)(_timesLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"31":1,"32":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/transform.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/transform.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[1,4],"2":[5,5],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":5,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"2":{"name":"transform","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":58}}},"3":{"name":"(anonymous_3)","line":81,"loc":{"start":{"line":81,"column":32},"end":{"line":81,"column":52}}},"4":{"name":"(anonymous_4)","line":83,"loc":{"start":{"line":83,"column":7},"end":{"line":83,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":49}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":39}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":43}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":49}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":53}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":95}},"14":{"start":{"line":28,"column":39},"end":{"line":28,"column":93}},"15":{"start":{"line":72,"column":0},"end":{"line":86,"column":1}},"16":{"start":{"line":73,"column":4},"end":{"line":77,"column":5}},"17":{"start":{"line":74,"column":8},"end":{"line":74,"column":28}},"18":{"start":{"line":75,"column":8},"end":{"line":75,"column":31}},"19":{"start":{"line":76,"column":8},"end":{"line":76,"column":61}},"20":{"start":{"line":78,"column":4},"end":{"line":78,"column":63}},"21":{"start":{"line":79,"column":4},"end":{"line":79,"column":55}},"22":{"start":{"line":81,"column":4},"end":{"line":85,"column":7}},"23":{"start":{"line":82,"column":8},"end":{"line":82,"column":41}},"24":{"start":{"line":84,"column":8},"end":{"line":84,"column":35}},"25":{"start":{"line":87,"column":0},"end":{"line":87,"column":36}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":70},"end":{"line":28,"column":73}},{"start":{"line":28,"column":76},"end":{"line":28,"column":92}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}]},"3":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"4":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":53},"end":{"line":76,"column":55}},{"start":{"line":76,"column":58},"end":{"line":76,"column":60}}]},"5":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":35},"end":{"line":78,"column":43}},{"start":{"line":78,"column":47},"end":{"line":78,"column":61}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = transform;","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _eachOf = require('./eachOf');","","var _eachOf2 = _interopRequireDefault(_eachOf);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * A relative of `reduce`.  Takes an Object or Array, and iterates over each"," * element in series, each step potentially mutating an `accumulator` value."," * The type of the accumulator defaults to the type of collection passed in."," *"," * @name transform"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {*} [accumulator] - The initial state of the transform.  If omitted,"," * it will default to an empty Object or Array, depending on the type of `coll`"," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * collection that potentially modifies the accumulator."," * Invoked with (accumulator, item, key, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the transformed accumulator."," * Invoked with (err, result)."," * @example"," *"," * async.transform([1,2,3], function(acc, item, index, callback) {"," *     // pointless async:"," *     process.nextTick(function() {"," *         acc.push(item * 2)"," *         callback(null)"," *     });"," * }, function(err, result) {"," *     // result is now equal to [2, 4, 6]"," * });"," *"," * @example"," *"," * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {"," *     setImmediate(function () {"," *         obj[key] = val * 2;"," *         callback();"," *     })"," * }, function (err, result) {"," *     // result is equal to {a: 2, b: 4, c: 6}"," * })"," */","function transform(coll, accumulator, iteratee, callback) {","    if (arguments.length <= 3) {","        callback = iteratee;","        iteratee = accumulator;","        accumulator = (0, _isArray2.default)(coll) ? [] : {};","    }","    callback = (0, _once2.default)(callback || _noop2.default);","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","","    (0, _eachOf2.default)(coll, function (v, k, cb) {","        _iteratee(accumulator, v, k, cb);","    }, function (err) {","        callback(err, accumulator);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":5,"72":1,"73":0,"74":0,"75":0,"76":0,"78":0,"79":0,"81":0,"82":0,"84":0,"87":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/tryEach.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/tryEach.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"tryEach","line":63,"loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":34}}},"3":{"name":"(anonymous_3)","line":67,"loc":{"start":{"line":67,"column":37},"end":{"line":67,"column":63}}},"4":{"name":"(anonymous_4)","line":68,"loc":{"start":{"line":68,"column":39},"end":{"line":68,"column":73}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":7},"end":{"line":77,"column":19}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":41}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":45}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":63,"column":0},"end":{"line":80,"column":1}},"14":{"start":{"line":64,"column":4},"end":{"line":64,"column":21}},"15":{"start":{"line":65,"column":4},"end":{"line":65,"column":15}},"16":{"start":{"line":66,"column":4},"end":{"line":66,"column":42}},"17":{"start":{"line":67,"column":4},"end":{"line":79,"column":7}},"18":{"start":{"line":68,"column":8},"end":{"line":76,"column":11}},"19":{"start":{"line":69,"column":12},"end":{"line":73,"column":13}},"20":{"start":{"line":70,"column":16},"end":{"line":70,"column":60}},"21":{"start":{"line":72,"column":16},"end":{"line":72,"column":29}},"22":{"start":{"line":74,"column":12},"end":{"line":74,"column":24}},"23":{"start":{"line":75,"column":12},"end":{"line":75,"column":27}},"24":{"start":{"line":78,"column":8},"end":{"line":78,"column":32}},"25":{"start":{"line":81,"column":0},"end":{"line":81,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":15},"end":{"line":66,"column":23}},{"start":{"line":66,"column":27},"end":{"line":66,"column":41}}]},"4":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":12}},{"start":{"line":69,"column":12},"end":{"line":69,"column":12}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = tryEach;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _eachSeries = require('./eachSeries');","","var _eachSeries2 = _interopRequireDefault(_eachSeries);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * It runs each task in series but stops whenever any of the functions were"," * successful. If one of the tasks were successful, the `callback` will be"," * passed the result of the successful task. If all tasks fail, the callback"," * will be passed the error and result (if any) of the final attempt."," *"," * @name tryEach"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection containing functions to"," * run, each function is passed a `callback(err, result)` it must call on"," * completion with an error `err` (which can be `null`) and an optional `result`"," * value."," * @param {Function} [callback] - An optional callback which is called when one"," * of the tasks has succeeded, or all have failed. It receives the `err` and"," * `result` arguments of the last attempt at completing the `task`. Invoked with"," * (err, results)."," * @example"," * async.tryEach(["," *     function getDataFromFirstWebsite(callback) {"," *         // Try getting the data from the first website"," *         callback(err, data);"," *     },"," *     function getDataFromSecondWebsite(callback) {"," *         // First website failed,"," *         // Try getting the data from the backup website"," *         callback(err, data);"," *     }"," * ],"," * // optional callback"," * function(err, results) {"," *     Now do something with the data."," * });"," *"," */","function tryEach(tasks, callback) {","    var error = null;","    var result;","    callback = callback || _noop2.default;","    (0, _eachSeries2.default)(tasks, function (task, callback) {","        (0, _wrapAsync2.default)(task)(function (err, res /*, ...args*/) {","            if (arguments.length > 2) {","                result = (0, _slice2.default)(arguments, 1);","            } else {","                result = res;","            }","            error = err;","            callback(!err);","        });","    }, function () {","        callback(error, result);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"72":0,"74":0,"75":0,"78":0,"81":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/unmemoize.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/unmemoize.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"unmemoize","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":23}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":11},"end":{"line":21,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":20,"column":0},"end":{"line":24,"column":1}},"4":{"start":{"line":21,"column":4},"end":{"line":23,"column":6}},"5":{"start":{"line":22,"column":8},"end":{"line":22,"column":60}},"6":{"start":{"line":25,"column":0},"end":{"line":25,"column":36}}},"branchMap":{"1":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":16},"end":{"line":22,"column":29}},{"start":{"line":22,"column":33},"end":{"line":22,"column":35}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = unmemoize;","/**"," * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,"," * unmemoized form. Handy for testing."," *"," * @name unmemoize"," * @static"," * @memberOf module:Utils"," * @method"," * @see [async.memoize]{@link module:Utils.memoize}"," * @category Util"," * @param {AsyncFunction} fn - the memoized function"," * @returns {AsyncFunction} a function that calls the original unmemoized function"," */","function unmemoize(fn) {","    return function () {","        return (fn.unmemoized || fn).apply(null, arguments);","    };","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"20":1,"21":0,"22":0,"25":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/until.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/until.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"until","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":41}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":26},"end":{"line":37,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":36,"column":0},"end":{"line":40,"column":1}},"8":{"start":{"line":37,"column":4},"end":{"line":39,"column":27}},"9":{"start":{"line":38,"column":8},"end":{"line":38,"column":44}},"10":{"start":{"line":41,"column":0},"end":{"line":41,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = until;","","var _whilst = require('./whilst');","","var _whilst2 = _interopRequireDefault(_whilst);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when"," * stopped, or an error occurs. `callback` will be passed an error and any"," * arguments passed to the final `iteratee`'s callback."," *"," * The inverse of [whilst]{@link module:ControlFlow.whilst}."," *"," * @name until"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {Function} test - synchronous truth test to perform before each"," * execution of `iteratee`. Invoked with ()."," * @param {AsyncFunction} iteratee - An async function which is called each time"," * `test` fails. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has passed and repeated execution of `iteratee` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `iteratee`'s"," * callback. Invoked with (err, [results]);"," */","function until(test, iteratee, callback) {","    (0, _whilst2.default)(function () {","        return !test.apply(this, arguments);","    }, iteratee, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"36":1,"37":0,"38":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/whilst.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/whilst.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":4,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"whilst","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":42}}},"3":{"name":"(anonymous_3)","line":64,"loc":{"start":{"line":64,"column":15},"end":{"line":64,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":47}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":60,"column":0},"end":{"line":71,"column":1}},"14":{"start":{"line":61,"column":4},"end":{"line":61,"column":67}},"15":{"start":{"line":62,"column":4},"end":{"line":62,"column":55}},"16":{"start":{"line":63,"column":4},"end":{"line":63,"column":39}},"17":{"start":{"line":63,"column":17},"end":{"line":63,"column":39}},"18":{"start":{"line":64,"column":4},"end":{"line":69,"column":6}},"19":{"start":{"line":65,"column":8},"end":{"line":65,"column":38}},"20":{"start":{"line":65,"column":17},"end":{"line":65,"column":38}},"21":{"start":{"line":66,"column":8},"end":{"line":66,"column":43}},"22":{"start":{"line":66,"column":20},"end":{"line":66,"column":43}},"23":{"start":{"line":67,"column":8},"end":{"line":67,"column":54}},"24":{"start":{"line":68,"column":8},"end":{"line":68,"column":50}},"25":{"start":{"line":70,"column":4},"end":{"line":70,"column":20}},"26":{"start":{"line":72,"column":0},"end":{"line":72,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":39},"end":{"line":61,"column":47}},{"start":{"line":61,"column":51},"end":{"line":61,"column":65}}]},"4":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"5":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"6":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":8}},{"start":{"line":66,"column":8},"end":{"line":66,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = whilst;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when"," * stopped, or an error occurs."," *"," * @name whilst"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Function} test - synchronous truth test to perform before each"," * execution of `iteratee`. Invoked with ()."," * @param {AsyncFunction} iteratee - An async function which is called each time"," * `test` passes. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `iteratee` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `iteratee`'s"," * callback. Invoked with (err, [results]);"," * @returns undefined"," * @example"," *"," * var count = 0;"," * async.whilst("," *     function() { return count < 5; },"," *     function(callback) {"," *         count++;"," *         setTimeout(function() {"," *             callback(null, count);"," *         }, 1000);"," *     },"," *     function (err, n) {"," *         // 5 seconds have passed, n = 5"," *     }"," * );"," */","function whilst(test, iteratee, callback) {","    callback = (0, _onlyOnce2.default)(callback || _noop2.default);","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    if (!test()) return callback(null);","    var next = function (err /*, ...args*/) {","        if (err) return callback(err);","        if (test()) return _iteratee(next);","        var args = (0, _slice2.default)(arguments, 1);","        callback.apply(null, [null].concat(args));","    };","    _iteratee(next);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"70":0,"72":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/waterfall.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/waterfall.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":6,"32":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[1,5],"7":[6,6]},"f":{"1":0,"2":0,"3":0,"4":6},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":45}}},"2":{"name":"nextTask","line":13,"loc":{"start":{"line":13,"column":4},"end":{"line":13,"column":28}}},"3":{"name":"next","line":19,"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":37}}},"4":{"name":"_interopRequireDefault","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":27,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":63}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":128}},"5":{"start":{"line":9,"column":40},"end":{"line":9,"column":128}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":41}},"7":{"start":{"line":10,"column":23},"end":{"line":10,"column":41}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":22}},"9":{"start":{"line":13,"column":4},"end":{"line":17,"column":5}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":64}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":49}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":31}},"13":{"start":{"line":19,"column":4},"end":{"line":24,"column":5}},"14":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"15":{"start":{"line":21,"column":12},"end":{"line":21,"column":51}},"16":{"start":{"line":23,"column":8},"end":{"line":23,"column":53}},"17":{"start":{"line":26,"column":4},"end":{"line":26,"column":17}},"18":{"start":{"line":29,"column":0},"end":{"line":29,"column":41}},"19":{"start":{"line":31,"column":0},"end":{"line":31,"column":49}},"20":{"start":{"line":33,"column":0},"end":{"line":33,"column":35}},"21":{"start":{"line":35,"column":0},"end":{"line":35,"column":43}},"22":{"start":{"line":37,"column":0},"end":{"line":37,"column":39}},"23":{"start":{"line":39,"column":0},"end":{"line":39,"column":43}},"24":{"start":{"line":41,"column":0},"end":{"line":41,"column":41}},"25":{"start":{"line":43,"column":0},"end":{"line":43,"column":45}},"26":{"start":{"line":45,"column":0},"end":{"line":45,"column":47}},"27":{"start":{"line":47,"column":0},"end":{"line":47,"column":51}},"28":{"start":{"line":49,"column":0},"end":{"line":49,"column":49}},"29":{"start":{"line":51,"column":0},"end":{"line":51,"column":53}},"30":{"start":{"line":53,"column":0},"end":{"line":53,"column":95}},"31":{"start":{"line":53,"column":39},"end":{"line":53,"column":93}},"32":{"start":{"line":55,"column":0},"end":{"line":55,"column":36}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":35},"end":{"line":8,"column":43}},{"start":{"line":8,"column":47},"end":{"line":8,"column":61}}]},"2":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":4}},{"start":{"line":9,"column":4},"end":{"line":9,"column":4}}]},"3":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":8}},{"start":{"line":20,"column":8},"end":{"line":20,"column":8}}]},"5":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":15}},{"start":{"line":20,"column":19},"end":{"line":20,"column":45}}]},"6":{"line":53,"type":"cond-expr","locations":[{"start":{"line":53,"column":70},"end":{"line":53,"column":73}},{"start":{"line":53,"column":76},"end":{"line":53,"column":92}}]},"7":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":46},"end":{"line":53,"column":49}},{"start":{"line":53,"column":53},"end":{"line":53,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (tasks, callback) {","    callback = (0, _once2.default)(callback || _noop2.default);","    if (!(0, _isArray2.default)(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));","    if (!tasks.length) return callback();","    var taskIndex = 0;","","    function nextTask(args) {","        var task = (0, _wrapAsync2.default)(tasks[taskIndex++]);","        args.push((0, _onlyOnce2.default)(next));","        task.apply(null, args);","    }","","    function next(err /*, ...args*/) {","        if (err || taskIndex === tasks.length) {","            return callback.apply(null, arguments);","        }","        nextTask((0, _slice2.default)(arguments, 1));","    }","","    nextTask([]);","};","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _slice = require('./internal/slice');","","var _slice2 = _interopRequireDefault(_slice);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","module.exports = exports['default'];","","/**"," * Runs the `tasks` array of functions in series, each passing their results to"," * the next in the array. However, if any of the `tasks` pass an error to their"," * own callback, the next function is not executed, and the main `callback` is"," * immediately called with the error."," *"," * @name waterfall"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}"," * to run."," * Each function should complete with any number of `result` values."," * The `result` values will be passed as arguments, in order, to the next task."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed. This will be passed the results of the last task's"," * callback. Invoked with (err, [results])."," * @returns undefined"," * @example"," *"," * async.waterfall(["," *     function(callback) {"," *         callback(null, 'one', 'two');"," *     },"," *     function(arg1, arg2, callback) {"," *         // arg1 now equals 'one' and arg2 now equals 'two'"," *         callback(null, 'three');"," *     },"," *     function(arg1, callback) {"," *         // arg1 now equals 'three'"," *         callback(null, 'done');"," *     }"," * ], function (err, result) {"," *     // result now equals 'done'"," * });"," *"," * // Or, with named functions:"," * async.waterfall(["," *     myFirstFunction,"," *     mySecondFunction,"," *     myLastFunction,"," * ], function (err, result) {"," *     // result now equals 'done'"," * });"," * function myFirstFunction(callback) {"," *     callback(null, 'one', 'two');"," * }"," * function mySecondFunction(arg1, arg2, callback) {"," *     // arg1 now equals 'one' and arg2 now equals 'two'"," *     callback(null, 'three');"," * }"," * function myLastFunction(arg1, callback) {"," *     // arg1 now equals 'three'"," *     callback(null, 'done');"," * }"," */"],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"11":0,"13":1,"14":0,"15":0,"16":0,"19":1,"20":0,"21":0,"23":0,"26":0,"29":1,"31":1,"33":1,"35":1,"37":1,"39":1,"41":1,"43":1,"45":1,"47":1,"49":1,"51":1,"53":6,"55":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/inject.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/inject.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"reduce","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":48}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":38},"end":{"line":69,"column":64}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":27},"end":{"line":70,"column":45}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":7},"end":{"line":74,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":59}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":39}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":66,"column":0},"end":{"line":77,"column":1}},"14":{"start":{"line":67,"column":4},"end":{"line":67,"column":63}},"15":{"start":{"line":68,"column":4},"end":{"line":68,"column":55}},"16":{"start":{"line":69,"column":4},"end":{"line":76,"column":7}},"17":{"start":{"line":70,"column":8},"end":{"line":73,"column":11}},"18":{"start":{"line":71,"column":12},"end":{"line":71,"column":21}},"19":{"start":{"line":72,"column":12},"end":{"line":72,"column":26}},"20":{"start":{"line":75,"column":8},"end":{"line":75,"column":28}},"21":{"start":{"line":78,"column":0},"end":{"line":78,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":35},"end":{"line":67,"column":43}},{"start":{"line":67,"column":47},"end":{"line":67,"column":61}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = reduce;","","var _eachOfSeries = require('./eachOfSeries');","","var _eachOfSeries2 = _interopRequireDefault(_eachOfSeries);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Reduces `coll` into a single value using an async `iteratee` to return each"," * successive step. `memo` is the initial state of the reduction. This function"," * only operates in series."," *"," * For performance reasons, it may make sense to split a call to this function"," * into a parallel map, and then use the normal `Array.prototype.reduce` on the"," * results. This function is for situations where each step in the reduction"," * needs to be async; if you can get the data before reducing it, then it's"," * probably a good idea to do so."," *"," * @name reduce"," * @static"," * @memberOf module:Collections"," * @method"," * @alias inject"," * @alias foldl"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {*} memo - The initial state of the reduction."," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * array to produce the next step in the reduction."," * The `iteratee` should complete with the next state of the reduction."," * If the iteratee complete with an error, the reduction is stopped and the"," * main `callback` is immediately called with the error."," * Invoked with (memo, item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the reduced value. Invoked with"," * (err, result)."," * @example"," *"," * async.reduce([1,2,3], 0, function(memo, item, callback) {"," *     // pointless async:"," *     process.nextTick(function() {"," *         callback(null, memo + item)"," *     });"," * }, function(err, result) {"," *     // result is now equal to the last value of memo, which is 6"," * });"," */","function reduce(coll, memo, iteratee, callback) {","    callback = (0, _once2.default)(callback || _noop2.default);","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    (0, _eachOfSeries2.default)(coll, function (x, i, callback) {","        _iteratee(memo, x, function (err, v) {","            memo = v;","            callback(err);","        });","    }, function (err) {","        callback(err, memo);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"75":0,"78":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/select.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/select.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":44,"column":0},"end":{"line":44,"column":62}},"9":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _filter = require('./internal/filter');","","var _filter2 = _interopRequireDefault(_filter);","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns a new array of all the values in `coll` which pass an async truth"," * test. This operation is performed in parallel, but the results array will be"," * in the same order as the original."," *"," * @name filter"," * @static"," * @memberOf module:Collections"," * @method"," * @alias select"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," * @example"," *"," * async.filter(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, results) {"," *     // results now equals an array of the existing files"," * });"," */","exports.default = (0, _doParallel2.default)(_filter2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"44":1,"45":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/selectLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/selectLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":65}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":67}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _filter = require('./internal/filter');","","var _filter2 = _interopRequireDefault(_filter);","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name filterLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @alias selectLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","exports.default = (0, _doParallelLimit2.default)(_filter2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/selectSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/selectSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":67}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _filterLimit = require('./filterLimit');","","var _filterLimit2 = _interopRequireDefault(_filterLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time."," *"," * @name filterSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @alias selectSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)"," */","exports.default = (0, _doLimit2.default)(_filterLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"34":1,"35":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/wrapSync.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/wrapSync.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":1,"27":0,"28":1},"b":{"1":[1,2],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"asyncify","line":78,"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":24}}},"3":{"name":"(anonymous_3)","line":79,"loc":{"start":{"line":79,"column":40},"end":{"line":79,"column":66}}},"4":{"name":"(anonymous_4)","line":88,"loc":{"start":{"line":88,"column":24},"end":{"line":88,"column":41}}},"5":{"name":"(anonymous_5)","line":90,"loc":{"start":{"line":90,"column":15},"end":{"line":90,"column":30}}},"6":{"name":"invokeCallback","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":48}}},"7":{"name":"rethrow","line":107,"loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":61}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":55}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":59}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":78,"column":0},"end":{"line":97,"column":1}},"12":{"start":{"line":79,"column":4},"end":{"line":96,"column":7}},"13":{"start":{"line":80,"column":8},"end":{"line":80,"column":19}},"14":{"start":{"line":81,"column":8},"end":{"line":85,"column":9}},"15":{"start":{"line":82,"column":12},"end":{"line":82,"column":44}},"16":{"start":{"line":84,"column":12},"end":{"line":84,"column":31}},"17":{"start":{"line":87,"column":8},"end":{"line":95,"column":9}},"18":{"start":{"line":88,"column":12},"end":{"line":92,"column":15}},"19":{"start":{"line":89,"column":16},"end":{"line":89,"column":54}},"20":{"start":{"line":91,"column":16},"end":{"line":91,"column":77}},"21":{"start":{"line":94,"column":12},"end":{"line":94,"column":35}},"22":{"start":{"line":99,"column":0},"end":{"line":105,"column":1}},"23":{"start":{"line":100,"column":4},"end":{"line":104,"column":5}},"24":{"start":{"line":101,"column":8},"end":{"line":101,"column":31}},"25":{"start":{"line":103,"column":8},"end":{"line":103,"column":48}},"26":{"start":{"line":107,"column":0},"end":{"line":109,"column":1}},"27":{"start":{"line":108,"column":4},"end":{"line":108,"column":16}},"28":{"start":{"line":110,"column":0},"end":{"line":110,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":8}},{"start":{"line":87,"column":8},"end":{"line":87,"column":8}}]},"4":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":12},"end":{"line":87,"column":43}},{"start":{"line":87,"column":47},"end":{"line":87,"column":80}}]},"5":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":55},"end":{"line":91,"column":58}},{"start":{"line":91,"column":61},"end":{"line":91,"column":75}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = asyncify;","","var _isObject = require('lodash/isObject');","","var _isObject2 = _interopRequireDefault(_isObject);","","var _initialParams = require('./internal/initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","var _setImmediate = require('./internal/setImmediate');","","var _setImmediate2 = _interopRequireDefault(_setImmediate);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Take a sync function and make it async, passing its return value to a"," * callback. This is useful for plugging sync functions into a waterfall,"," * series, or other async functions. Any arguments passed to the generated"," * function will be passed to the wrapped function (except for the final"," * callback argument). Errors thrown will be passed to the callback."," *"," * If the function passed to `asyncify` returns a Promise, that promises's"," * resolved/rejected state will be used to call the callback, rather than simply"," * the synchronous return value."," *"," * This also means you can asyncify ES2017 `async` functions."," *"," * @name asyncify"," * @static"," * @memberOf module:Utils"," * @method"," * @alias wrapSync"," * @category Util"," * @param {Function} func - The synchronous function, or Promise-returning"," * function to convert to an {@link AsyncFunction}."," * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be"," * invoked with `(args..., callback)`."," * @example"," *"," * // passing a regular synchronous function"," * async.waterfall(["," *     async.apply(fs.readFile, filename, \"utf8\"),"," *     async.asyncify(JSON.parse),"," *     function (data, next) {"," *         // data is the result of parsing the text."," *         // If there was a parsing error, it would have been caught."," *     }"," * ], callback);"," *"," * // passing a function returning a promise"," * async.waterfall(["," *     async.apply(fs.readFile, filename, \"utf8\"),"," *     async.asyncify(function (contents) {"," *         return db.model.create(contents);"," *     }),"," *     function (model, next) {"," *         // `model` is the instantiated model object."," *         // If there was an error, this function would be skipped."," *     }"," * ], callback);"," *"," * // es2017 example, though `asyncify` is not needed if your JS environment"," * // supports async functions out of the box"," * var q = async.queue(async.asyncify(async function(file) {"," *     var intermediateStep = await processFile(file);"," *     return await somePromise(intermediateStep)"," * }));"," *"," * q.push(files);"," */","function asyncify(func) {","    return (0, _initialParams2.default)(function (args, callback) {","        var result;","        try {","            result = func.apply(this, args);","        } catch (e) {","            return callback(e);","        }","        // if result is Promise object","        if ((0, _isObject2.default)(result) && typeof result.then === 'function') {","            result.then(function (value) {","                invokeCallback(callback, null, value);","            }, function (err) {","                invokeCallback(callback, err.message ? err : new Error(err));","            });","        } else {","            callback(null, result);","        }","    });","}","","function invokeCallback(callback, error, value) {","    try {","        callback(error, value);","    } catch (e) {","        (0, _setImmediate2.default)(rethrow, e);","    }","}","","function rethrow(error) {","    throw error;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"78":1,"79":0,"80":0,"81":0,"82":0,"84":0,"87":0,"88":0,"89":0,"91":0,"94":0,"99":1,"100":0,"101":0,"103":0,"107":1,"108":0,"110":1}}}