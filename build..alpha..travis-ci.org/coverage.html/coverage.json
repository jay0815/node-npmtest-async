{"/home/travis/build/npmtest/node-npmtest-async/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_async */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-async/lib.npmtest_async.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/lib.npmtest_async.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":50}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":56}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_async */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_async = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_async = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-async/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":49}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":63},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-async && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_async */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_async","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_async.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_async.rollup.js'] =","            local.assetsDict['/assets.npmtest_async.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_async.__dirname + '/lib.npmtest_async.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/dist/async.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/dist/async.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":10,"13":10,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":10,"27":1,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":0,"54":1,"55":0,"56":1,"57":1,"58":2,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":0,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":0,"103":0,"104":0,"105":0,"106":1,"107":1,"108":0,"109":1,"110":0,"111":1,"112":1,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":1,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":0,"139":1,"140":1,"141":0,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":0,"152":0,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":0,"182":1,"183":1,"184":0,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":0,"198":0,"199":0,"200":0,"201":0,"202":1,"203":1,"204":0,"205":0,"206":1,"207":1,"208":0,"209":1,"210":1,"211":1,"212":1,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":1,"221":0,"222":1,"223":0,"224":0,"225":0,"226":0,"227":1,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":1,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":1,"243":0,"244":0,"245":0,"246":0,"247":1,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":1,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":1,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":1,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":1,"283":0,"284":1,"285":15,"286":0,"287":1,"288":0,"289":0,"290":0,"291":0,"292":1,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":1,"300":1,"301":0,"302":0,"303":1,"304":7,"305":0,"306":1,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":1,"319":1,"320":1,"321":6,"322":0,"323":1,"324":1,"325":1,"326":1,"327":0,"328":0,"329":1,"330":0,"331":0,"332":0,"333":0,"334":0,"335":1,"336":1,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":1,"344":1,"345":0,"346":1,"347":0,"348":0,"349":0,"350":0,"351":0,"352":1,"353":0,"354":1,"355":0,"356":0,"357":0,"358":0,"359":0,"360":1,"361":0,"362":1,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":1,"402":0,"403":0,"404":1,"405":0,"406":0,"407":0,"408":0,"409":0,"410":1,"411":0,"412":0,"413":0,"414":0,"415":1,"416":0,"417":0,"418":0,"419":0,"420":1,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":1,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":1,"454":0,"455":0,"456":0,"457":0,"458":0,"459":1,"460":0,"461":0,"462":0,"463":0,"464":1,"465":1,"466":0,"467":1,"468":1,"469":1,"470":1,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":1,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":1,"493":0,"494":0,"495":0,"496":1,"497":0,"498":0,"499":0,"500":1,"501":0,"502":0,"503":0,"504":1,"505":0,"506":1,"507":1,"508":1,"509":1,"510":1,"511":1,"512":1,"513":0,"514":1,"515":1,"516":1,"517":1,"518":1,"519":1,"520":1,"521":1,"522":1,"523":1,"524":1,"525":1,"526":1,"527":1,"528":1,"529":1,"530":1,"531":1,"532":1,"533":0,"534":1,"535":0,"536":1,"537":0,"538":1,"539":1,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":1,"548":1,"549":1,"550":1,"551":1,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":1,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":1,"577":0,"578":0,"579":0,"580":0,"581":0,"582":1,"583":1,"584":1,"585":0,"586":1,"587":2,"588":0,"589":0,"590":1,"591":1,"592":1,"593":0,"594":0,"595":0,"596":1,"597":1,"598":0,"599":0,"600":1,"601":0,"602":0,"603":1,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":1,"614":1,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":1,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":1,"631":0,"632":0,"633":0,"634":1,"635":0,"636":0,"637":0,"638":1,"639":0,"640":1,"641":0,"642":1,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":1,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":1,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":1,"719":0,"720":1,"721":1,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":1,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":1,"742":0,"743":1,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":1,"751":1,"752":1,"753":0,"754":1,"755":1,"756":0,"757":0,"758":0,"759":1,"760":6,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":1,"777":0,"778":1,"779":1,"780":1,"781":1,"782":2,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":1,"792":1,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":1,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":1,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":1,"819":0,"820":0,"821":1,"822":0,"823":0,"824":0,"825":1,"826":0,"827":0,"828":0,"829":1,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":1,"837":0,"838":0,"839":1,"840":0,"841":1,"842":0,"843":1,"844":1,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":1,"858":0,"859":1,"860":1,"861":1,"862":1,"863":0,"864":0,"865":1,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":1,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":1,"892":0,"893":0,"894":1,"895":1,"896":1,"897":1,"898":0,"899":0,"900":1,"901":0,"902":0,"903":0,"904":0,"905":1,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":1,"924":1,"925":1,"926":1,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":1,"938":1,"939":1,"940":0,"941":1,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":1,"964":1,"965":1,"966":0,"967":0,"968":0,"969":1,"970":1,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":1,"981":0,"982":1,"983":0,"984":1,"985":0,"986":0,"987":0,"988":1,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":1,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":1,"1022":1,"1023":0,"1024":0,"1025":1,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":1,"1039":0,"1040":0,"1041":0,"1042":1,"1043":1,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":1,"1052":1,"1053":1,"1054":0,"1055":0,"1056":1,"1057":0,"1058":0,"1059":0,"1060":1,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":1,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":1,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":1,"1090":0,"1091":0,"1092":0,"1093":0,"1094":1,"1095":0,"1096":1,"1097":1,"1098":1,"1099":1,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":1,"1110":0,"1111":0,"1112":1,"1113":0,"1114":0,"1115":1,"1116":0,"1117":0,"1118":0,"1119":1,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":1,"1133":1,"1134":1,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":1,"1141":0,"1142":0,"1143":1,"1144":1,"1145":1,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":1,"1156":0,"1157":0,"1158":1,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":1,"1171":0,"1172":0,"1173":1,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":1,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":1,"1192":1,"1193":1,"1194":1,"1195":1,"1196":1,"1197":1,"1198":1,"1199":1,"1200":1,"1201":1,"1202":1,"1203":1,"1204":1,"1205":1,"1206":1,"1207":1,"1208":1,"1209":1,"1210":1,"1211":1,"1212":1,"1213":1,"1214":1,"1215":1,"1216":1,"1217":1,"1218":1,"1219":1,"1220":1,"1221":1,"1222":1,"1223":1,"1224":1,"1225":1,"1226":1,"1227":1,"1228":1,"1229":1,"1230":1,"1231":1,"1232":1,"1233":1,"1234":1,"1235":1,"1236":1,"1237":1,"1238":1,"1239":1,"1240":1,"1241":1,"1242":1,"1243":1,"1244":1,"1245":1,"1246":1,"1247":1,"1248":1,"1249":1,"1250":1,"1251":1,"1252":1,"1253":1,"1254":1,"1255":1,"1256":1,"1257":1,"1258":1,"1259":1,"1260":1,"1261":1,"1262":1,"1263":1,"1264":1,"1265":1,"1266":1,"1267":1,"1268":1,"1269":1,"1270":1,"1271":1,"1272":1,"1273":1,"1274":1,"1275":1,"1276":1,"1277":1,"1278":1,"1279":1,"1280":1,"1281":1,"1282":1,"1283":1,"1284":1,"1285":1,"1286":1,"1287":1,"1288":1,"1289":1,"1290":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[10,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,1],"15":[0,0],"16":[1,1,1,1],"17":[1,0,0,0],"18":[1,0,0],"19":[1,0],"20":[0,0],"21":[0,0],"22":[1,0],"23":[0,1],"24":[0,0],"25":[0,1],"26":[1,1],"27":[0,0],"28":[0,0,0,0],"29":[0,0,0,0],"30":[0,0,0],"31":[0,0],"32":[1,1],"33":[0,0,0],"34":[1,1],"35":[1,1],"36":[1,0],"37":[0,0,0],"38":[1,1,1,1],"39":[1,1,1,1,1],"40":[1,1],"41":[1,0],"42":[1,0],"43":[1,0],"44":[0,0],"45":[0,0,0,0,0,0],"46":[0,0,0],"47":[1,1,1,1],"48":[1,1,1,1,1],"49":[1,1],"50":[1,1],"51":[1,1],"52":[1,1],"53":[1,0],"54":[0,0],"55":[0,0,0],"56":[0,0,0,0],"57":[0,0,0,0],"58":[0,0],"59":[0,0],"60":[0,0,0],"61":[0,0,0,0,0,0,0,0,0,0],"62":[0,0],"63":[0,0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0,0],"124":[1,0],"125":[1,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0,0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0,0],"156":[0,0],"157":[1,1],"158":[1,1],"159":[1,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[1,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0,0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0]},"f":{"1":1,"2":1,"3":0,"4":10,"5":0,"6":0,"7":10,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":2,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":1,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":15,"64":0,"65":0,"66":0,"67":0,"68":7,"69":0,"70":0,"71":0,"72":0,"73":0,"74":6,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":2,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":0,"168":0,"169":6,"170":0,"171":0,"172":0,"173":0,"174":0,"175":2,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":28}}},"2":{"name":"(anonymous_2)","line":5,"loc":{"start":{"line":5,"column":9},"end":{"line":5,"column":28}}},"3":{"name":"apply","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}}},"4":{"name":"overRest$1","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":44}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":9},"end":{"line":41,"column":20}}},"6":{"name":"identity","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":25}}},"7":{"name":"rest","line":82,"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":27}}},"8":{"name":"(anonymous_8)","line":86,"loc":{"start":{"line":86,"column":20},"end":{"line":86,"column":34}}},"9":{"name":"(anonymous_9)","line":87,"loc":{"start":{"line":87,"column":16},"end":{"line":87,"column":50}}},"10":{"name":"isObject","line":118,"loc":{"start":{"line":118,"column":0},"end":{"line":118,"column":25}}},"11":{"name":"asyncify","line":179,"loc":{"start":{"line":179,"column":0},"end":{"line":179,"column":24}}},"12":{"name":"(anonymous_12)","line":180,"loc":{"start":{"line":180,"column":25},"end":{"line":180,"column":51}}},"13":{"name":"(anonymous_13)","line":189,"loc":{"start":{"line":189,"column":24},"end":{"line":189,"column":41}}},"14":{"name":"(anonymous_14)","line":191,"loc":{"start":{"line":191,"column":15},"end":{"line":191,"column":30}}},"15":{"name":"supportsAsync","line":202,"loc":{"start":{"line":202,"column":0},"end":{"line":202,"column":25}}},"16":{"name":"isAsync","line":213,"loc":{"start":{"line":213,"column":0},"end":{"line":213,"column":21}}},"17":{"name":"wrapAsync","line":217,"loc":{"start":{"line":217,"column":0},"end":{"line":217,"column":28}}},"18":{"name":"applyEach$1","line":223,"loc":{"start":{"line":223,"column":0},"end":{"line":223,"column":29}}},"19":{"name":"(anonymous_19)","line":224,"loc":{"start":{"line":224,"column":16},"end":{"line":224,"column":37}}},"20":{"name":"(anonymous_20)","line":225,"loc":{"start":{"line":225,"column":31},"end":{"line":225,"column":57}}},"21":{"name":"(anonymous_21)","line":227,"loc":{"start":{"line":227,"column":31},"end":{"line":227,"column":49}}},"22":{"name":"getRawTag","line":274,"loc":{"start":{"line":274,"column":0},"end":{"line":274,"column":26}}},"23":{"name":"objectToString","line":311,"loc":{"start":{"line":311,"column":0},"end":{"line":311,"column":31}}},"24":{"name":"baseGetTag","line":329,"loc":{"start":{"line":329,"column":0},"end":{"line":329,"column":27}}},"25":{"name":"isFunction","line":362,"loc":{"start":{"line":362,"column":0},"end":{"line":362,"column":27}}},"26":{"name":"isLength","line":401,"loc":{"start":{"line":401,"column":0},"end":{"line":401,"column":25}}},"27":{"name":"isArrayLike","line":431,"loc":{"start":{"line":431,"column":0},"end":{"line":431,"column":28}}},"28":{"name":"noop","line":451,"loc":{"start":{"line":451,"column":0},"end":{"line":451,"column":16}}},"29":{"name":"once","line":455,"loc":{"start":{"line":455,"column":0},"end":{"line":455,"column":18}}},"30":{"name":"(anonymous_30)","line":456,"loc":{"start":{"line":456,"column":11},"end":{"line":456,"column":23}}},"31":{"name":"(anonymous_31)","line":466,"loc":{"start":{"line":466,"column":18},"end":{"line":466,"column":34}}},"32":{"name":"baseTimes","line":479,"loc":{"start":{"line":479,"column":0},"end":{"line":479,"column":32}}},"33":{"name":"isObjectLike","line":513,"loc":{"start":{"line":513,"column":0},"end":{"line":513,"column":29}}},"34":{"name":"baseIsArguments","line":527,"loc":{"start":{"line":527,"column":0},"end":{"line":527,"column":32}}},"35":{"name":"(anonymous_35)","line":558,"loc":{"start":{"line":558,"column":34},"end":{"line":558,"column":45}}},"36":{"name":"(anonymous_36)","line":558,"loc":{"start":{"line":558,"column":90},"end":{"line":558,"column":106}}},"37":{"name":"stubFalse","line":601,"loc":{"start":{"line":601,"column":0},"end":{"line":601,"column":21}}},"38":{"name":"isIndex","line":653,"loc":{"start":{"line":653,"column":0},"end":{"line":653,"column":32}}},"39":{"name":"baseIsTypedArray","line":710,"loc":{"start":{"line":710,"column":0},"end":{"line":710,"column":33}}},"40":{"name":"baseUnary","line":722,"loc":{"start":{"line":722,"column":0},"end":{"line":722,"column":25}}},"41":{"name":"(anonymous_41)","line":723,"loc":{"start":{"line":723,"column":9},"end":{"line":723,"column":25}}},"42":{"name":"(anonymous_42)","line":741,"loc":{"start":{"line":741,"column":16},"end":{"line":741,"column":27}}},"43":{"name":"arrayLikeKeys","line":783,"loc":{"start":{"line":783,"column":0},"end":{"line":783,"column":41}}},"44":{"name":"isPrototype","line":820,"loc":{"start":{"line":820,"column":0},"end":{"line":820,"column":28}}},"45":{"name":"overArg","line":835,"loc":{"start":{"line":835,"column":0},"end":{"line":835,"column":34}}},"46":{"name":"(anonymous_46)","line":836,"loc":{"start":{"line":836,"column":9},"end":{"line":836,"column":23}}},"47":{"name":"baseKeys","line":857,"loc":{"start":{"line":857,"column":0},"end":{"line":857,"column":26}}},"48":{"name":"keys","line":898,"loc":{"start":{"line":898,"column":0},"end":{"line":898,"column":22}}},"49":{"name":"createArrayIterator","line":902,"loc":{"start":{"line":902,"column":0},"end":{"line":902,"column":35}}},"50":{"name":"next","line":905,"loc":{"start":{"line":905,"column":11},"end":{"line":905,"column":27}}},"51":{"name":"createES2015Iterator","line":910,"loc":{"start":{"line":910,"column":0},"end":{"line":910,"column":40}}},"52":{"name":"next","line":912,"loc":{"start":{"line":912,"column":11},"end":{"line":912,"column":27}}},"53":{"name":"createObjectIterator","line":920,"loc":{"start":{"line":920,"column":0},"end":{"line":920,"column":35}}},"54":{"name":"next","line":924,"loc":{"start":{"line":924,"column":11},"end":{"line":924,"column":27}}},"55":{"name":"iterator","line":930,"loc":{"start":{"line":930,"column":0},"end":{"line":930,"column":24}}},"56":{"name":"onlyOnce","line":939,"loc":{"start":{"line":939,"column":0},"end":{"line":939,"column":22}}},"57":{"name":"(anonymous_57)","line":940,"loc":{"start":{"line":940,"column":11},"end":{"line":940,"column":23}}},"58":{"name":"_eachOfLimit","line":948,"loc":{"start":{"line":948,"column":0},"end":{"line":948,"column":29}}},"59":{"name":"(anonymous_59)","line":949,"loc":{"start":{"line":949,"column":11},"end":{"line":949,"column":46}}},"60":{"name":"iterateeCallback","line":958,"loc":{"start":{"line":958,"column":8},"end":{"line":958,"column":46}}},"61":{"name":"replenish","line":971,"loc":{"start":{"line":971,"column":8},"end":{"line":971,"column":29}}},"62":{"name":"eachOfLimit","line":1010,"loc":{"start":{"line":1010,"column":0},"end":{"line":1010,"column":54}}},"63":{"name":"doLimit","line":1014,"loc":{"start":{"line":1014,"column":0},"end":{"line":1014,"column":28}}},"64":{"name":"(anonymous_64)","line":1015,"loc":{"start":{"line":1015,"column":11},"end":{"line":1015,"column":51}}},"65":{"name":"eachOfArrayLike","line":1021,"loc":{"start":{"line":1021,"column":0},"end":{"line":1021,"column":51}}},"66":{"name":"iteratorCallback","line":1030,"loc":{"start":{"line":1030,"column":4},"end":{"line":1030,"column":42}}},"67":{"name":"(anonymous_67)","line":1085,"loc":{"start":{"line":1085,"column":13},"end":{"line":1085,"column":49}}},"68":{"name":"doParallel","line":1090,"loc":{"start":{"line":1090,"column":0},"end":{"line":1090,"column":24}}},"69":{"name":"(anonymous_69)","line":1091,"loc":{"start":{"line":1091,"column":11},"end":{"line":1091,"column":46}}},"70":{"name":"_asyncMap","line":1096,"loc":{"start":{"line":1096,"column":0},"end":{"line":1096,"column":52}}},"71":{"name":"(anonymous_71)","line":1103,"loc":{"start":{"line":1103,"column":16},"end":{"line":1103,"column":46}}},"72":{"name":"(anonymous_72)","line":1105,"loc":{"start":{"line":1105,"column":25},"end":{"line":1105,"column":43}}},"73":{"name":"(anonymous_73)","line":1109,"loc":{"start":{"line":1109,"column":7},"end":{"line":1109,"column":22}}},"74":{"name":"doParallelLimit","line":1187,"loc":{"start":{"line":1187,"column":0},"end":{"line":1187,"column":29}}},"75":{"name":"(anonymous_75)","line":1188,"loc":{"start":{"line":1188,"column":11},"end":{"line":1188,"column":53}}},"76":{"name":"(anonymous_76)","line":1299,"loc":{"start":{"line":1299,"column":19},"end":{"line":1299,"column":39}}},"77":{"name":"(anonymous_77)","line":1300,"loc":{"start":{"line":1300,"column":16},"end":{"line":1300,"column":36}}},"78":{"name":"arrayEach","line":1314,"loc":{"start":{"line":1314,"column":0},"end":{"line":1314,"column":36}}},"79":{"name":"createBaseFor","line":1333,"loc":{"start":{"line":1333,"column":0},"end":{"line":1333,"column":34}}},"80":{"name":"(anonymous_80)","line":1334,"loc":{"start":{"line":1334,"column":9},"end":{"line":1334,"column":46}}},"81":{"name":"baseForOwn","line":1371,"loc":{"start":{"line":1371,"column":0},"end":{"line":1371,"column":38}}},"82":{"name":"baseFindIndex","line":1386,"loc":{"start":{"line":1386,"column":0},"end":{"line":1386,"column":63}}},"83":{"name":"baseIsNaN","line":1405,"loc":{"start":{"line":1405,"column":0},"end":{"line":1405,"column":26}}},"84":{"name":"strictIndexOf","line":1419,"loc":{"start":{"line":1419,"column":0},"end":{"line":1419,"column":48}}},"85":{"name":"baseIndexOf","line":1440,"loc":{"start":{"line":1440,"column":0},"end":{"line":1440,"column":46}}},"86":{"name":"(anonymous_86)","line":1525,"loc":{"start":{"line":1525,"column":11},"end":{"line":1525,"column":51}}},"87":{"name":"(anonymous_87)","line":1554,"loc":{"start":{"line":1554,"column":22},"end":{"line":1554,"column":43}}},"88":{"name":"(anonymous_88)","line":1571,"loc":{"start":{"line":1571,"column":32},"end":{"line":1571,"column":58}}},"89":{"name":"(anonymous_89)","line":1575,"loc":{"start":{"line":1575,"column":40},"end":{"line":1575,"column":52}}},"90":{"name":"enqueueTask","line":1587,"loc":{"start":{"line":1587,"column":4},"end":{"line":1587,"column":36}}},"91":{"name":"(anonymous_91)","line":1588,"loc":{"start":{"line":1588,"column":24},"end":{"line":1588,"column":36}}},"92":{"name":"processQueue","line":1593,"loc":{"start":{"line":1593,"column":4},"end":{"line":1593,"column":28}}},"93":{"name":"addListener","line":1603,"loc":{"start":{"line":1603,"column":4},"end":{"line":1603,"column":39}}},"94":{"name":"taskComplete","line":1612,"loc":{"start":{"line":1612,"column":4},"end":{"line":1612,"column":36}}},"95":{"name":"(anonymous_95)","line":1614,"loc":{"start":{"line":1614,"column":33},"end":{"line":1614,"column":47}}},"96":{"name":"runTask","line":1620,"loc":{"start":{"line":1620,"column":4},"end":{"line":1620,"column":32}}},"97":{"name":"(anonymous_97)","line":1623,"loc":{"start":{"line":1623,"column":41},"end":{"line":1623,"column":62}}},"98":{"name":"(anonymous_98)","line":1630,"loc":{"start":{"line":1630,"column":36},"end":{"line":1630,"column":57}}},"99":{"name":"checkForDeadlocks","line":1653,"loc":{"start":{"line":1653,"column":4},"end":{"line":1653,"column":33}}},"100":{"name":"(anonymous_100)","line":1662,"loc":{"start":{"line":1662,"column":50},"end":{"line":1662,"column":71}}},"101":{"name":"getDependents","line":1674,"loc":{"start":{"line":1674,"column":4},"end":{"line":1674,"column":37}}},"102":{"name":"(anonymous_102)","line":1676,"loc":{"start":{"line":1676,"column":26},"end":{"line":1676,"column":47}}},"103":{"name":"arrayMap","line":1694,"loc":{"start":{"line":1694,"column":0},"end":{"line":1694,"column":35}}},"104":{"name":"isSymbol","line":1725,"loc":{"start":{"line":1725,"column":0},"end":{"line":1725,"column":25}}},"105":{"name":"baseToString","line":1745,"loc":{"start":{"line":1745,"column":0},"end":{"line":1745,"column":29}}},"106":{"name":"baseSlice","line":1770,"loc":{"start":{"line":1770,"column":0},"end":{"line":1770,"column":38}}},"107":{"name":"castSlice","line":1800,"loc":{"start":{"line":1800,"column":0},"end":{"line":1800,"column":38}}},"108":{"name":"charsEndIndex","line":1815,"loc":{"start":{"line":1815,"column":0},"end":{"line":1815,"column":47}}},"109":{"name":"charsStartIndex","line":1831,"loc":{"start":{"line":1831,"column":0},"end":{"line":1831,"column":49}}},"110":{"name":"asciiToArray","line":1846,"loc":{"start":{"line":1846,"column":0},"end":{"line":1846,"column":30}}},"111":{"name":"hasUnicode","line":1869,"loc":{"start":{"line":1869,"column":0},"end":{"line":1869,"column":28}}},"112":{"name":"unicodeToArray","line":1906,"loc":{"start":{"line":1906,"column":0},"end":{"line":1906,"column":32}}},"113":{"name":"stringToArray","line":1917,"loc":{"start":{"line":1917,"column":0},"end":{"line":1917,"column":31}}},"114":{"name":"toString","line":1944,"loc":{"start":{"line":1944,"column":0},"end":{"line":1944,"column":25}}},"115":{"name":"trim","line":1973,"loc":{"start":{"line":1973,"column":0},"end":{"line":1973,"column":36}}},"116":{"name":"parseParams","line":1994,"loc":{"start":{"line":1994,"column":0},"end":{"line":1994,"column":27}}},"117":{"name":"(anonymous_117)","line":1998,"loc":{"start":{"line":1998,"column":20},"end":{"line":1998,"column":35}}},"118":{"name":"autoInject","line":2086,"loc":{"start":{"line":2086,"column":0},"end":{"line":2086,"column":37}}},"119":{"name":"(anonymous_119)","line":2089,"loc":{"start":{"line":2089,"column":22},"end":{"line":2089,"column":45}}},"120":{"name":"newTask","line":2114,"loc":{"start":{"line":2114,"column":8},"end":{"line":2114,"column":42}}},"121":{"name":"(anonymous_121)","line":2115,"loc":{"start":{"line":2115,"column":43},"end":{"line":2115,"column":59}}},"122":{"name":"fallback","line":2129,"loc":{"start":{"line":2129,"column":0},"end":{"line":2129,"column":22}}},"123":{"name":"wrap","line":2133,"loc":{"start":{"line":2133,"column":0},"end":{"line":2133,"column":21}}},"124":{"name":"(anonymous_124)","line":2134,"loc":{"start":{"line":2134,"column":16},"end":{"line":2134,"column":36}}},"125":{"name":"(anonymous_125)","line":2135,"loc":{"start":{"line":2135,"column":14},"end":{"line":2135,"column":26}}},"126":{"name":"DLL","line":2157,"loc":{"start":{"line":2157,"column":0},"end":{"line":2157,"column":15}}},"127":{"name":"setInitial","line":2162,"loc":{"start":{"line":2162,"column":0},"end":{"line":2162,"column":31}}},"128":{"name":"(anonymous_128)","line":2167,"loc":{"start":{"line":2167,"column":27},"end":{"line":2167,"column":43}}},"129":{"name":"(anonymous_129)","line":2178,"loc":{"start":{"line":2178,"column":28},"end":{"line":2178,"column":53}}},"130":{"name":"(anonymous_130)","line":2186,"loc":{"start":{"line":2186,"column":29},"end":{"line":2186,"column":54}}},"131":{"name":"(anonymous_131)","line":2194,"loc":{"start":{"line":2194,"column":24},"end":{"line":2194,"column":40}}},"132":{"name":"(anonymous_132)","line":2198,"loc":{"start":{"line":2198,"column":21},"end":{"line":2198,"column":37}}},"133":{"name":"(anonymous_133)","line":2202,"loc":{"start":{"line":2202,"column":22},"end":{"line":2202,"column":34}}},"134":{"name":"(anonymous_134)","line":2206,"loc":{"start":{"line":2206,"column":20},"end":{"line":2206,"column":32}}},"135":{"name":"queue","line":2210,"loc":{"start":{"line":2210,"column":0},"end":{"line":2210,"column":45}}},"136":{"name":"_insert","line":2221,"loc":{"start":{"line":2221,"column":4},"end":{"line":2221,"column":52}}},"137":{"name":"(anonymous_137)","line":2231,"loc":{"start":{"line":2231,"column":34},"end":{"line":2231,"column":46}}},"138":{"name":"_next","line":2251,"loc":{"start":{"line":2251,"column":4},"end":{"line":2251,"column":26}}},"139":{"name":"(anonymous_139)","line":2252,"loc":{"start":{"line":2252,"column":20},"end":{"line":2252,"column":36}}},"140":{"name":"(anonymous_140)","line":2293,"loc":{"start":{"line":2293,"column":14},"end":{"line":2293,"column":40}}},"141":{"name":"(anonymous_141)","line":2296,"loc":{"start":{"line":2296,"column":14},"end":{"line":2296,"column":26}}},"142":{"name":"(anonymous_142)","line":2300,"loc":{"start":{"line":2300,"column":17},"end":{"line":2300,"column":43}}},"143":{"name":"(anonymous_143)","line":2303,"loc":{"start":{"line":2303,"column":17},"end":{"line":2303,"column":29}}},"144":{"name":"(anonymous_144)","line":2336,"loc":{"start":{"line":2336,"column":16},"end":{"line":2336,"column":28}}},"145":{"name":"(anonymous_145)","line":2339,"loc":{"start":{"line":2339,"column":17},"end":{"line":2339,"column":29}}},"146":{"name":"(anonymous_146)","line":2342,"loc":{"start":{"line":2342,"column":21},"end":{"line":2342,"column":33}}},"147":{"name":"(anonymous_147)","line":2345,"loc":{"start":{"line":2345,"column":14},"end":{"line":2345,"column":26}}},"148":{"name":"(anonymous_148)","line":2348,"loc":{"start":{"line":2348,"column":15},"end":{"line":2348,"column":27}}},"149":{"name":"(anonymous_149)","line":2351,"loc":{"start":{"line":2351,"column":16},"end":{"line":2351,"column":28}}},"150":{"name":"cargo","line":2439,"loc":{"start":{"line":2439,"column":0},"end":{"line":2439,"column":32}}},"151":{"name":"reduce","line":2502,"loc":{"start":{"line":2502,"column":0},"end":{"line":2502,"column":48}}},"152":{"name":"(anonymous_152)","line":2505,"loc":{"start":{"line":2505,"column":23},"end":{"line":2505,"column":49}}},"153":{"name":"(anonymous_153)","line":2506,"loc":{"start":{"line":2506,"column":27},"end":{"line":2506,"column":45}}},"154":{"name":"(anonymous_154)","line":2510,"loc":{"start":{"line":2510,"column":7},"end":{"line":2510,"column":22}}},"155":{"name":"seq","line":2553,"loc":{"start":{"line":2553,"column":17},"end":{"line":2553,"column":41}}},"156":{"name":"(anonymous_156)","line":2555,"loc":{"start":{"line":2555,"column":16},"end":{"line":2555,"column":32}}},"157":{"name":"(anonymous_157)","line":2565,"loc":{"start":{"line":2565,"column":33},"end":{"line":2565,"column":60}}},"158":{"name":"(anonymous_158)","line":2566,"loc":{"start":{"line":2566,"column":47},"end":{"line":2566,"column":72}}},"159":{"name":"(anonymous_159)","line":2569,"loc":{"start":{"line":2569,"column":11},"end":{"line":2569,"column":35}}},"160":{"name":"(anonymous_160)","line":2610,"loc":{"start":{"line":2610,"column":19},"end":{"line":2610,"column":35}}},"161":{"name":"concat$1","line":2614,"loc":{"start":{"line":2614,"column":0},"end":{"line":2614,"column":45}}},"162":{"name":"(anonymous_162)","line":2616,"loc":{"start":{"line":2616,"column":16},"end":{"line":2616,"column":40}}},"163":{"name":"(anonymous_163)","line":2617,"loc":{"start":{"line":2617,"column":14},"end":{"line":2617,"column":32}}},"164":{"name":"(anonymous_164)","line":2621,"loc":{"start":{"line":2621,"column":7},"end":{"line":2621,"column":22}}},"165":{"name":"doSeries","line":2653,"loc":{"start":{"line":2653,"column":0},"end":{"line":2653,"column":22}}},"166":{"name":"(anonymous_166)","line":2654,"loc":{"start":{"line":2654,"column":11},"end":{"line":2654,"column":46}}},"167":{"name":"(anonymous_167)","line":2721,"loc":{"start":{"line":2721,"column":20},"end":{"line":2721,"column":38}}},"168":{"name":"(anonymous_168)","line":2723,"loc":{"start":{"line":2723,"column":25},"end":{"line":2723,"column":58}}},"169":{"name":"_createTester","line":2728,"loc":{"start":{"line":2728,"column":0},"end":{"line":2728,"column":41}}},"170":{"name":"(anonymous_170)","line":2729,"loc":{"start":{"line":2729,"column":11},"end":{"line":2729,"column":48}}},"171":{"name":"(anonymous_171)","line":2733,"loc":{"start":{"line":2733,"column":20},"end":{"line":2733,"column":50}}},"172":{"name":"(anonymous_172)","line":2734,"loc":{"start":{"line":2734,"column":28},"end":{"line":2734,"column":51}}},"173":{"name":"(anonymous_173)","line":2745,"loc":{"start":{"line":2745,"column":11},"end":{"line":2745,"column":26}}},"174":{"name":"_findGetResult","line":2755,"loc":{"start":{"line":2755,"column":0},"end":{"line":2755,"column":30}}},"175":{"name":"consoleFunc","line":2842,"loc":{"start":{"line":2842,"column":0},"end":{"line":2842,"column":27}}},"176":{"name":"(anonymous_176)","line":2843,"loc":{"start":{"line":2843,"column":16},"end":{"line":2843,"column":36}}},"177":{"name":"(anonymous_177)","line":2844,"loc":{"start":{"line":2844,"column":53},"end":{"line":2844,"column":74}}},"178":{"name":"(anonymous_178)","line":2851,"loc":{"start":{"line":2851,"column":36},"end":{"line":2851,"column":49}}},"179":{"name":"doDuring","line":2911,"loc":{"start":{"line":2911,"column":0},"end":{"line":2911,"column":38}}},"180":{"name":"(anonymous_180)","line":2916,"loc":{"start":{"line":2916,"column":20},"end":{"line":2916,"column":41}}},"181":{"name":"check","line":2922,"loc":{"start":{"line":2922,"column":4},"end":{"line":2922,"column":31}}},"182":{"name":"doWhilst","line":2953,"loc":{"start":{"line":2953,"column":0},"end":{"line":2953,"column":44}}},"183":{"name":"(anonymous_183)","line":2956,"loc":{"start":{"line":2956,"column":20},"end":{"line":2956,"column":41}}},"184":{"name":"doUntil","line":2984,"loc":{"start":{"line":2984,"column":0},"end":{"line":2984,"column":43}}},"185":{"name":"(anonymous_185)","line":2985,"loc":{"start":{"line":2985,"column":23},"end":{"line":2985,"column":35}}},"186":{"name":"during","line":3026,"loc":{"start":{"line":3026,"column":0},"end":{"line":3026,"column":36}}},"187":{"name":"next","line":3031,"loc":{"start":{"line":3031,"column":4},"end":{"line":3031,"column":23}}},"188":{"name":"check","line":3036,"loc":{"start":{"line":3036,"column":4},"end":{"line":3036,"column":31}}},"189":{"name":"_withoutIndex","line":3045,"loc":{"start":{"line":3045,"column":0},"end":{"line":3045,"column":33}}},"190":{"name":"(anonymous_190)","line":3046,"loc":{"start":{"line":3046,"column":11},"end":{"line":3046,"column":45}}},"191":{"name":"eachLimit","line":3108,"loc":{"start":{"line":3108,"column":0},"end":{"line":3108,"column":45}}},"192":{"name":"eachLimit$1","line":3132,"loc":{"start":{"line":3132,"column":0},"end":{"line":3132,"column":54}}},"193":{"name":"ensureAsync","line":3192,"loc":{"start":{"line":3192,"column":0},"end":{"line":3192,"column":25}}},"194":{"name":"(anonymous_194)","line":3194,"loc":{"start":{"line":3194,"column":25},"end":{"line":3194,"column":51}}},"195":{"name":"(anonymous_195)","line":3196,"loc":{"start":{"line":3196,"column":18},"end":{"line":3196,"column":30}}},"196":{"name":"(anonymous_196)","line":3199,"loc":{"start":{"line":3199,"column":31},"end":{"line":3199,"column":43}}},"197":{"name":"notId","line":3211,"loc":{"start":{"line":3211,"column":0},"end":{"line":3211,"column":18}}},"198":{"name":"baseProperty","line":3295,"loc":{"start":{"line":3295,"column":0},"end":{"line":3295,"column":27}}},"199":{"name":"(anonymous_199)","line":3296,"loc":{"start":{"line":3296,"column":9},"end":{"line":3296,"column":26}}},"200":{"name":"filterArray","line":3301,"loc":{"start":{"line":3301,"column":0},"end":{"line":3301,"column":54}}},"201":{"name":"(anonymous_201)","line":3303,"loc":{"start":{"line":3303,"column":16},"end":{"line":3303,"column":46}}},"202":{"name":"(anonymous_202)","line":3304,"loc":{"start":{"line":3304,"column":20},"end":{"line":3304,"column":38}}},"203":{"name":"(anonymous_203)","line":3308,"loc":{"start":{"line":3308,"column":7},"end":{"line":3308,"column":22}}},"204":{"name":"filterGeneric","line":3318,"loc":{"start":{"line":3318,"column":0},"end":{"line":3318,"column":57}}},"205":{"name":"(anonymous_205)","line":3320,"loc":{"start":{"line":3320,"column":17},"end":{"line":3320,"column":47}}},"206":{"name":"(anonymous_206)","line":3321,"loc":{"start":{"line":3321,"column":20},"end":{"line":3321,"column":38}}},"207":{"name":"(anonymous_207)","line":3331,"loc":{"start":{"line":3331,"column":7},"end":{"line":3331,"column":22}}},"208":{"name":"(anonymous_208)","line":3335,"loc":{"start":{"line":3335,"column":49},"end":{"line":3335,"column":65}}},"209":{"name":"_filter","line":3342,"loc":{"start":{"line":3342,"column":0},"end":{"line":3342,"column":51}}},"210":{"name":"forever","line":3445,"loc":{"start":{"line":3445,"column":0},"end":{"line":3445,"column":30}}},"211":{"name":"next","line":3449,"loc":{"start":{"line":3449,"column":4},"end":{"line":3449,"column":23}}},"212":{"name":"(anonymous_212)","line":3475,"loc":{"start":{"line":3475,"column":19},"end":{"line":3475,"column":62}}},"213":{"name":"(anonymous_213)","line":3478,"loc":{"start":{"line":3478,"column":26},"end":{"line":3478,"column":51}}},"214":{"name":"(anonymous_214)","line":3479,"loc":{"start":{"line":3479,"column":23},"end":{"line":3479,"column":43}}},"215":{"name":"(anonymous_215)","line":3483,"loc":{"start":{"line":3483,"column":7},"end":{"line":3483,"column":34}}},"216":{"name":"mapValuesLimit","line":3614,"loc":{"start":{"line":3614,"column":0},"end":{"line":3614,"column":56}}},"217":{"name":"(anonymous_217)","line":3618,"loc":{"start":{"line":3618,"column":28},"end":{"line":3618,"column":54}}},"218":{"name":"(anonymous_218)","line":3619,"loc":{"start":{"line":3619,"column":28},"end":{"line":3619,"column":51}}},"219":{"name":"(anonymous_219)","line":3624,"loc":{"start":{"line":3624,"column":7},"end":{"line":3624,"column":22}}},"220":{"name":"has","line":3697,"loc":{"start":{"line":3697,"column":0},"end":{"line":3697,"column":23}}},"221":{"name":"memoize","line":3738,"loc":{"start":{"line":3738,"column":0},"end":{"line":3738,"column":29}}},"222":{"name":"memoized","line":3743,"loc":{"start":{"line":3743,"column":33},"end":{"line":3743,"column":67}}},"223":{"name":"(anonymous_223)","line":3746,"loc":{"start":{"line":3746,"column":27},"end":{"line":3746,"column":39}}},"224":{"name":"(anonymous_224)","line":3753,"loc":{"start":{"line":3753,"column":45},"end":{"line":3753,"column":61}}},"225":{"name":"_parallel","line":3811,"loc":{"start":{"line":3811,"column":0},"end":{"line":3811,"column":44}}},"226":{"name":"(anonymous_226)","line":3815,"loc":{"start":{"line":3815,"column":18},"end":{"line":3815,"column":49}}},"227":{"name":"(anonymous_227)","line":3816,"loc":{"start":{"line":3816,"column":31},"end":{"line":3816,"column":52}}},"228":{"name":"(anonymous_228)","line":3823,"loc":{"start":{"line":3823,"column":7},"end":{"line":3823,"column":22}}},"229":{"name":"parallelLimit","line":3897,"loc":{"start":{"line":3897,"column":0},"end":{"line":3897,"column":40}}},"230":{"name":"parallelLimit$1","line":3920,"loc":{"start":{"line":3920,"column":0},"end":{"line":3920,"column":49}}},"231":{"name":"(anonymous_231)","line":4022,"loc":{"start":{"line":4022,"column":14},"end":{"line":4022,"column":45}}},"232":{"name":"(anonymous_232)","line":4024,"loc":{"start":{"line":4024,"column":15},"end":{"line":4024,"column":36}}},"233":{"name":"(anonymous_233)","line":4052,"loc":{"start":{"line":4052,"column":20},"end":{"line":4052,"column":51}}},"234":{"name":"(anonymous_234)","line":4057,"loc":{"start":{"line":4057,"column":13},"end":{"line":4057,"column":49}}},"235":{"name":"(anonymous_235)","line":4068,"loc":{"start":{"line":4068,"column":34},"end":{"line":4068,"column":46}}},"236":{"name":"race","line":4137,"loc":{"start":{"line":4137,"column":0},"end":{"line":4137,"column":31}}},"237":{"name":"reduceRight","line":4170,"loc":{"start":{"line":4170,"column":0},"end":{"line":4170,"column":54}}},"238":{"name":"reflect","line":4214,"loc":{"start":{"line":4214,"column":0},"end":{"line":4214,"column":21}}},"239":{"name":"reflectOn","line":4216,"loc":{"start":{"line":4216,"column":25},"end":{"line":4216,"column":67}}},"240":{"name":"callback","line":4217,"loc":{"start":{"line":4217,"column":23},"end":{"line":4217,"column":54}}},"241":{"name":"reject$1","line":4239,"loc":{"start":{"line":4239,"column":0},"end":{"line":4239,"column":51}}},"242":{"name":"(anonymous_242)","line":4240,"loc":{"start":{"line":4240,"column":25},"end":{"line":4240,"column":46}}},"243":{"name":"(anonymous_243)","line":4241,"loc":{"start":{"line":4241,"column":24},"end":{"line":4241,"column":42}}},"244":{"name":"reflectAll","line":4343,"loc":{"start":{"line":4343,"column":0},"end":{"line":4343,"column":27}}},"245":{"name":"(anonymous_245)","line":4349,"loc":{"start":{"line":4349,"column":26},"end":{"line":4349,"column":47}}},"246":{"name":"constant$1","line":4415,"loc":{"start":{"line":4415,"column":0},"end":{"line":4415,"column":27}}},"247":{"name":"(anonymous_247)","line":4416,"loc":{"start":{"line":4416,"column":9},"end":{"line":4416,"column":20}}},"248":{"name":"retry","line":4505,"loc":{"start":{"line":4505,"column":0},"end":{"line":4505,"column":37}}},"249":{"name":"parseTimes","line":4514,"loc":{"start":{"line":4514,"column":4},"end":{"line":4514,"column":32}}},"250":{"name":"retryAttempt","line":4543,"loc":{"start":{"line":4543,"column":4},"end":{"line":4543,"column":28}}},"251":{"name":"(anonymous_251)","line":4544,"loc":{"start":{"line":4544,"column":14},"end":{"line":4544,"column":29}}},"252":{"name":"(anonymous_252)","line":4584,"loc":{"start":{"line":4584,"column":16},"end":{"line":4584,"column":38}}},"253":{"name":"(anonymous_253)","line":4590,"loc":{"start":{"line":4590,"column":25},"end":{"line":4590,"column":51}}},"254":{"name":"taskFn","line":4591,"loc":{"start":{"line":4591,"column":8},"end":{"line":4591,"column":28}}},"255":{"name":"series","line":4663,"loc":{"start":{"line":4663,"column":0},"end":{"line":4663,"column":33}}},"256":{"name":"sortBy","line":4791,"loc":{"start":{"line":4791,"column":0},"end":{"line":4791,"column":42}}},"257":{"name":"(anonymous_257)","line":4793,"loc":{"start":{"line":4793,"column":14},"end":{"line":4793,"column":37}}},"258":{"name":"(anonymous_258)","line":4794,"loc":{"start":{"line":4794,"column":21},"end":{"line":4794,"column":46}}},"259":{"name":"(anonymous_259)","line":4798,"loc":{"start":{"line":4798,"column":7},"end":{"line":4798,"column":31}}},"260":{"name":"comparator","line":4803,"loc":{"start":{"line":4803,"column":4},"end":{"line":4803,"column":37}}},"261":{"name":"timeout","line":4851,"loc":{"start":{"line":4851,"column":0},"end":{"line":4851,"column":46}}},"262":{"name":"injectedCallback","line":4855,"loc":{"start":{"line":4855,"column":4},"end":{"line":4855,"column":32}}},"263":{"name":"timeoutCallback","line":4862,"loc":{"start":{"line":4862,"column":4},"end":{"line":4862,"column":31}}},"264":{"name":"(anonymous_264)","line":4875,"loc":{"start":{"line":4875,"column":25},"end":{"line":4875,"column":55}}},"265":{"name":"baseRange","line":4898,"loc":{"start":{"line":4898,"column":0},"end":{"line":4898,"column":48}}},"266":{"name":"timeLimit","line":4926,"loc":{"start":{"line":4926,"column":0},"end":{"line":4926,"column":53}}},"267":{"name":"transform","line":5023,"loc":{"start":{"line":5023,"column":0},"end":{"line":5023,"column":58}}},"268":{"name":"(anonymous_268)","line":5032,"loc":{"start":{"line":5032,"column":17},"end":{"line":5032,"column":37}}},"269":{"name":"(anonymous_269)","line":5034,"loc":{"start":{"line":5034,"column":7},"end":{"line":5034,"column":22}}},"270":{"name":"unmemoize","line":5052,"loc":{"start":{"line":5052,"column":0},"end":{"line":5052,"column":23}}},"271":{"name":"(anonymous_271)","line":5053,"loc":{"start":{"line":5053,"column":11},"end":{"line":5053,"column":23}}},"272":{"name":"whilst","line":5092,"loc":{"start":{"line":5092,"column":0},"end":{"line":5092,"column":42}}},"273":{"name":"(anonymous_273)","line":5096,"loc":{"start":{"line":5096,"column":20},"end":{"line":5096,"column":41}}},"274":{"name":"until","line":5126,"loc":{"start":{"line":5126,"column":0},"end":{"line":5126,"column":41}}},"275":{"name":"(anonymous_275)","line":5127,"loc":{"start":{"line":5127,"column":11},"end":{"line":5127,"column":23}}},"276":{"name":"(anonymous_276)","line":5189,"loc":{"start":{"line":5189,"column":16},"end":{"line":5189,"column":43}}},"277":{"name":"nextTask","line":5195,"loc":{"start":{"line":5195,"column":4},"end":{"line":5195,"column":28}}},"278":{"name":"(anonymous_278)","line":5200,"loc":{"start":{"line":5200,"column":41},"end":{"line":5200,"column":62}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5476,"column":5}},"2":{"start":{"line":2,"column":4},"end":{"line":4,"column":51}},"3":{"start":{"line":17,"column":0},"end":{"line":25,"column":1}},"4":{"start":{"line":18,"column":2},"end":{"line":23,"column":3}},"5":{"start":{"line":19,"column":12},"end":{"line":19,"column":38}},"6":{"start":{"line":20,"column":12},"end":{"line":20,"column":47}},"7":{"start":{"line":21,"column":12},"end":{"line":21,"column":56}},"8":{"start":{"line":22,"column":12},"end":{"line":22,"column":65}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":35}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":25}},"11":{"start":{"line":39,"column":0},"end":{"line":58,"column":1}},"12":{"start":{"line":40,"column":2},"end":{"line":40,"column":72}},"13":{"start":{"line":41,"column":2},"end":{"line":57,"column":4}},"14":{"start":{"line":42,"column":4},"end":{"line":45,"column":30}},"15":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"16":{"start":{"line":48,"column":6},"end":{"line":48,"column":41}},"17":{"start":{"line":50,"column":4},"end":{"line":50,"column":15}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":37}},"19":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"20":{"start":{"line":53,"column":6},"end":{"line":53,"column":37}},"21":{"start":{"line":55,"column":4},"end":{"line":55,"column":40}},"22":{"start":{"line":56,"column":4},"end":{"line":56,"column":40}},"23":{"start":{"line":76,"column":0},"end":{"line":78,"column":1}},"24":{"start":{"line":77,"column":2},"end":{"line":77,"column":15}},"25":{"start":{"line":82,"column":0},"end":{"line":84,"column":1}},"26":{"start":{"line":83,"column":4},"end":{"line":83,"column":45}},"27":{"start":{"line":86,"column":0},"end":{"line":91,"column":2}},"28":{"start":{"line":87,"column":4},"end":{"line":90,"column":7}},"29":{"start":{"line":88,"column":8},"end":{"line":88,"column":34}},"30":{"start":{"line":89,"column":8},"end":{"line":89,"column":38}},"31":{"start":{"line":118,"column":0},"end":{"line":121,"column":1}},"32":{"start":{"line":119,"column":2},"end":{"line":119,"column":26}},"33":{"start":{"line":120,"column":2},"end":{"line":120,"column":67}},"34":{"start":{"line":179,"column":0},"end":{"line":198,"column":1}},"35":{"start":{"line":180,"column":4},"end":{"line":197,"column":7}},"36":{"start":{"line":181,"column":8},"end":{"line":181,"column":19}},"37":{"start":{"line":182,"column":8},"end":{"line":186,"column":9}},"38":{"start":{"line":183,"column":12},"end":{"line":183,"column":44}},"39":{"start":{"line":185,"column":12},"end":{"line":185,"column":31}},"40":{"start":{"line":188,"column":8},"end":{"line":196,"column":9}},"41":{"start":{"line":189,"column":12},"end":{"line":193,"column":15}},"42":{"start":{"line":190,"column":16},"end":{"line":190,"column":38}},"43":{"start":{"line":192,"column":16},"end":{"line":192,"column":61}},"44":{"start":{"line":195,"column":12},"end":{"line":195,"column":35}},"45":{"start":{"line":200,"column":0},"end":{"line":200,"column":50}},"46":{"start":{"line":202,"column":0},"end":{"line":211,"column":1}},"47":{"start":{"line":203,"column":4},"end":{"line":203,"column":18}},"48":{"start":{"line":204,"column":4},"end":{"line":209,"column":5}},"49":{"start":{"line":206,"column":8},"end":{"line":206,"column":60}},"50":{"start":{"line":208,"column":8},"end":{"line":208,"column":26}},"51":{"start":{"line":210,"column":4},"end":{"line":210,"column":21}},"52":{"start":{"line":213,"column":0},"end":{"line":215,"column":1}},"53":{"start":{"line":214,"column":4},"end":{"line":214,"column":72}},"54":{"start":{"line":217,"column":0},"end":{"line":219,"column":1}},"55":{"start":{"line":218,"column":4},"end":{"line":218,"column":58}},"56":{"start":{"line":221,"column":0},"end":{"line":221,"column":57}},"57":{"start":{"line":223,"column":0},"end":{"line":237,"column":1}},"58":{"start":{"line":224,"column":4},"end":{"line":236,"column":7}},"59":{"start":{"line":225,"column":8},"end":{"line":230,"column":11}},"60":{"start":{"line":226,"column":12},"end":{"line":226,"column":28}},"61":{"start":{"line":227,"column":12},"end":{"line":229,"column":25}},"62":{"start":{"line":228,"column":16},"end":{"line":228,"column":61}},"63":{"start":{"line":231,"column":8},"end":{"line":235,"column":9}},"64":{"start":{"line":232,"column":12},"end":{"line":232,"column":40}},"65":{"start":{"line":234,"column":12},"end":{"line":234,"column":22}},"66":{"start":{"line":240,"column":0},"end":{"line":240,"column":91}},"67":{"start":{"line":243,"column":0},"end":{"line":243,"column":81}},"68":{"start":{"line":246,"column":0},"end":{"line":246,"column":63}},"69":{"start":{"line":249,"column":0},"end":{"line":249,"column":27}},"70":{"start":{"line":252,"column":0},"end":{"line":252,"column":35}},"71":{"start":{"line":255,"column":0},"end":{"line":255,"column":48}},"72":{"start":{"line":262,"column":0},"end":{"line":262,"column":48}},"73":{"start":{"line":265,"column":0},"end":{"line":265,"column":67}},"74":{"start":{"line":274,"column":0},"end":{"line":292,"column":1}},"75":{"start":{"line":275,"column":2},"end":{"line":276,"column":36}},"76":{"start":{"line":278,"column":2},"end":{"line":281,"column":16}},"77":{"start":{"line":279,"column":4},"end":{"line":279,"column":40}},"78":{"start":{"line":280,"column":4},"end":{"line":280,"column":24}},"79":{"start":{"line":283,"column":2},"end":{"line":283,"column":48}},"80":{"start":{"line":284,"column":2},"end":{"line":290,"column":3}},"81":{"start":{"line":285,"column":4},"end":{"line":289,"column":5}},"82":{"start":{"line":286,"column":6},"end":{"line":286,"column":36}},"83":{"start":{"line":288,"column":6},"end":{"line":288,"column":37}},"84":{"start":{"line":291,"column":2},"end":{"line":291,"column":16}},"85":{"start":{"line":295,"column":0},"end":{"line":295,"column":37}},"86":{"start":{"line":302,"column":0},"end":{"line":302,"column":52}},"87":{"start":{"line":311,"column":0},"end":{"line":313,"column":1}},"88":{"start":{"line":312,"column":2},"end":{"line":312,"column":44}},"89":{"start":{"line":316,"column":0},"end":{"line":316,"column":30}},"90":{"start":{"line":317,"column":0},"end":{"line":317,"column":40}},"91":{"start":{"line":320,"column":0},"end":{"line":320,"column":65}},"92":{"start":{"line":329,"column":0},"end":{"line":337,"column":1}},"93":{"start":{"line":330,"column":2},"end":{"line":332,"column":3}},"94":{"start":{"line":331,"column":4},"end":{"line":331,"column":56}},"95":{"start":{"line":333,"column":2},"end":{"line":333,"column":24}},"96":{"start":{"line":334,"column":2},"end":{"line":336,"column":28}},"97":{"start":{"line":340,"column":0},"end":{"line":340,"column":40}},"98":{"start":{"line":341,"column":0},"end":{"line":341,"column":34}},"99":{"start":{"line":342,"column":0},"end":{"line":342,"column":42}},"100":{"start":{"line":343,"column":0},"end":{"line":343,"column":32}},"101":{"start":{"line":362,"column":0},"end":{"line":370,"column":1}},"102":{"start":{"line":363,"column":2},"end":{"line":365,"column":3}},"103":{"start":{"line":364,"column":4},"end":{"line":364,"column":17}},"104":{"start":{"line":368,"column":2},"end":{"line":368,"column":30}},"105":{"start":{"line":369,"column":2},"end":{"line":369,"column":79}},"106":{"start":{"line":373,"column":0},"end":{"line":373,"column":40}},"107":{"start":{"line":401,"column":0},"end":{"line":404,"column":1}},"108":{"start":{"line":402,"column":2},"end":{"line":403,"column":62}},"109":{"start":{"line":431,"column":0},"end":{"line":433,"column":1}},"110":{"start":{"line":432,"column":2},"end":{"line":432,"column":71}},"111":{"start":{"line":437,"column":0},"end":{"line":437,"column":19}},"112":{"start":{"line":451,"column":0},"end":{"line":453,"column":1}},"113":{"start":{"line":455,"column":0},"end":{"line":462,"column":1}},"114":{"start":{"line":456,"column":4},"end":{"line":461,"column":6}},"115":{"start":{"line":457,"column":8},"end":{"line":457,"column":32}},"116":{"start":{"line":457,"column":25},"end":{"line":457,"column":32}},"117":{"start":{"line":458,"column":8},"end":{"line":458,"column":24}},"118":{"start":{"line":459,"column":8},"end":{"line":459,"column":18}},"119":{"start":{"line":460,"column":8},"end":{"line":460,"column":38}},"120":{"start":{"line":464,"column":0},"end":{"line":464,"column":69}},"121":{"start":{"line":466,"column":0},"end":{"line":468,"column":2}},"122":{"start":{"line":467,"column":4},"end":{"line":467,"column":76}},"123":{"start":{"line":479,"column":0},"end":{"line":487,"column":1}},"124":{"start":{"line":480,"column":2},"end":{"line":481,"column":24}},"125":{"start":{"line":483,"column":2},"end":{"line":485,"column":3}},"126":{"start":{"line":484,"column":4},"end":{"line":484,"column":36}},"127":{"start":{"line":486,"column":2},"end":{"line":486,"column":16}},"128":{"start":{"line":513,"column":0},"end":{"line":515,"column":1}},"129":{"start":{"line":514,"column":2},"end":{"line":514,"column":51}},"130":{"start":{"line":518,"column":0},"end":{"line":518,"column":35}},"131":{"start":{"line":527,"column":0},"end":{"line":529,"column":1}},"132":{"start":{"line":528,"column":2},"end":{"line":528,"column":61}},"133":{"start":{"line":532,"column":0},"end":{"line":532,"column":37}},"134":{"start":{"line":535,"column":0},"end":{"line":535,"column":52}},"135":{"start":{"line":538,"column":0},"end":{"line":538,"column":62}},"136":{"start":{"line":558,"column":0},"end":{"line":561,"column":2}},"137":{"start":{"line":558,"column":47},"end":{"line":558,"column":64}},"138":{"start":{"line":559,"column":2},"end":{"line":560,"column":48}},"139":{"start":{"line":586,"column":0},"end":{"line":586,"column":28}},"140":{"start":{"line":601,"column":0},"end":{"line":603,"column":1}},"141":{"start":{"line":602,"column":2},"end":{"line":602,"column":15}},"142":{"start":{"line":606,"column":0},"end":{"line":606,"column":88}},"143":{"start":{"line":609,"column":0},"end":{"line":609,"column":98}},"144":{"start":{"line":612,"column":0},"end":{"line":612,"column":69}},"145":{"start":{"line":615,"column":0},"end":{"line":615,"column":53}},"146":{"start":{"line":618,"column":0},"end":{"line":618,"column":58}},"147":{"start":{"line":637,"column":0},"end":{"line":637,"column":43}},"148":{"start":{"line":640,"column":0},"end":{"line":640,"column":42}},"149":{"start":{"line":643,"column":0},"end":{"line":643,"column":34}},"150":{"start":{"line":653,"column":0},"end":{"line":658,"column":1}},"151":{"start":{"line":654,"column":2},"end":{"line":654,"column":56}},"152":{"start":{"line":655,"column":2},"end":{"line":657,"column":53}},"153":{"start":{"line":661,"column":0},"end":{"line":661,"column":37}},"154":{"start":{"line":662,"column":0},"end":{"line":662,"column":32}},"155":{"start":{"line":663,"column":0},"end":{"line":663,"column":33}},"156":{"start":{"line":664,"column":0},"end":{"line":664,"column":30}},"157":{"start":{"line":665,"column":0},"end":{"line":665,"column":32}},"158":{"start":{"line":666,"column":0},"end":{"line":666,"column":36}},"159":{"start":{"line":667,"column":0},"end":{"line":667,"column":28}},"160":{"start":{"line":668,"column":0},"end":{"line":668,"column":34}},"161":{"start":{"line":669,"column":0},"end":{"line":669,"column":34}},"162":{"start":{"line":670,"column":0},"end":{"line":670,"column":34}},"163":{"start":{"line":671,"column":0},"end":{"line":671,"column":28}},"164":{"start":{"line":672,"column":0},"end":{"line":672,"column":34}},"165":{"start":{"line":673,"column":0},"end":{"line":673,"column":36}},"166":{"start":{"line":675,"column":0},"end":{"line":675,"column":44}},"167":{"start":{"line":676,"column":0},"end":{"line":676,"column":38}},"168":{"start":{"line":677,"column":0},"end":{"line":677,"column":41}},"169":{"start":{"line":678,"column":0},"end":{"line":678,"column":41}},"170":{"start":{"line":679,"column":0},"end":{"line":679,"column":35}},"171":{"start":{"line":680,"column":0},"end":{"line":680,"column":37}},"172":{"start":{"line":681,"column":0},"end":{"line":681,"column":37}},"173":{"start":{"line":682,"column":0},"end":{"line":682,"column":37}},"174":{"start":{"line":683,"column":0},"end":{"line":683,"column":51}},"175":{"start":{"line":684,"column":0},"end":{"line":684,"column":39}},"176":{"start":{"line":685,"column":0},"end":{"line":685,"column":39}},"177":{"start":{"line":688,"column":0},"end":{"line":688,"column":24}},"178":{"start":{"line":689,"column":0},"end":{"line":693,"column":33}},"179":{"start":{"line":694,"column":0},"end":{"line":701,"column":35}},"180":{"start":{"line":710,"column":0},"end":{"line":713,"column":1}},"181":{"start":{"line":711,"column":2},"end":{"line":712,"column":66}},"182":{"start":{"line":722,"column":0},"end":{"line":726,"column":1}},"183":{"start":{"line":723,"column":2},"end":{"line":725,"column":4}},"184":{"start":{"line":724,"column":4},"end":{"line":724,"column":23}},"185":{"start":{"line":729,"column":0},"end":{"line":729,"column":90}},"186":{"start":{"line":732,"column":0},"end":{"line":732,"column":102}},"187":{"start":{"line":735,"column":0},"end":{"line":735,"column":77}},"188":{"start":{"line":738,"column":0},"end":{"line":738,"column":56}},"189":{"start":{"line":741,"column":0},"end":{"line":745,"column":5}},"190":{"start":{"line":742,"column":2},"end":{"line":744,"column":16}},"191":{"start":{"line":743,"column":4},"end":{"line":743,"column":54}},"192":{"start":{"line":748,"column":0},"end":{"line":748,"column":57}},"193":{"start":{"line":767,"column":0},"end":{"line":767,"column":85}},"194":{"start":{"line":770,"column":0},"end":{"line":770,"column":37}},"195":{"start":{"line":773,"column":0},"end":{"line":773,"column":52}},"196":{"start":{"line":783,"column":0},"end":{"line":808,"column":1}},"197":{"start":{"line":784,"column":2},"end":{"line":790,"column":29}},"198":{"start":{"line":792,"column":2},"end":{"line":806,"column":3}},"199":{"start":{"line":793,"column":4},"end":{"line":805,"column":5}},"200":{"start":{"line":804,"column":6},"end":{"line":804,"column":23}},"201":{"start":{"line":807,"column":2},"end":{"line":807,"column":16}},"202":{"start":{"line":811,"column":0},"end":{"line":811,"column":37}},"203":{"start":{"line":820,"column":0},"end":{"line":825,"column":1}},"204":{"start":{"line":821,"column":2},"end":{"line":822,"column":77}},"205":{"start":{"line":824,"column":2},"end":{"line":824,"column":25}},"206":{"start":{"line":835,"column":0},"end":{"line":839,"column":1}},"207":{"start":{"line":836,"column":2},"end":{"line":838,"column":4}},"208":{"start":{"line":837,"column":4},"end":{"line":837,"column":32}},"209":{"start":{"line":842,"column":0},"end":{"line":842,"column":46}},"210":{"start":{"line":845,"column":0},"end":{"line":845,"column":37}},"211":{"start":{"line":848,"column":0},"end":{"line":848,"column":52}},"212":{"start":{"line":857,"column":0},"end":{"line":868,"column":1}},"213":{"start":{"line":858,"column":2},"end":{"line":860,"column":3}},"214":{"start":{"line":859,"column":4},"end":{"line":859,"column":30}},"215":{"start":{"line":861,"column":2},"end":{"line":861,"column":18}},"216":{"start":{"line":862,"column":2},"end":{"line":866,"column":3}},"217":{"start":{"line":863,"column":4},"end":{"line":865,"column":5}},"218":{"start":{"line":864,"column":6},"end":{"line":864,"column":23}},"219":{"start":{"line":867,"column":2},"end":{"line":867,"column":16}},"220":{"start":{"line":898,"column":0},"end":{"line":900,"column":1}},"221":{"start":{"line":899,"column":2},"end":{"line":899,"column":72}},"222":{"start":{"line":902,"column":0},"end":{"line":908,"column":1}},"223":{"start":{"line":903,"column":4},"end":{"line":903,"column":15}},"224":{"start":{"line":904,"column":4},"end":{"line":904,"column":26}},"225":{"start":{"line":905,"column":4},"end":{"line":907,"column":6}},"226":{"start":{"line":906,"column":8},"end":{"line":906,"column":61}},"227":{"start":{"line":910,"column":0},"end":{"line":918,"column":1}},"228":{"start":{"line":911,"column":4},"end":{"line":911,"column":15}},"229":{"start":{"line":912,"column":4},"end":{"line":917,"column":6}},"230":{"start":{"line":913,"column":8},"end":{"line":913,"column":35}},"231":{"start":{"line":914,"column":8},"end":{"line":914,"column":35}},"232":{"start":{"line":914,"column":23},"end":{"line":914,"column":35}},"233":{"start":{"line":915,"column":8},"end":{"line":915,"column":12}},"234":{"start":{"line":916,"column":8},"end":{"line":916,"column":45}},"235":{"start":{"line":920,"column":0},"end":{"line":928,"column":1}},"236":{"start":{"line":921,"column":4},"end":{"line":921,"column":26}},"237":{"start":{"line":922,"column":4},"end":{"line":922,"column":15}},"238":{"start":{"line":923,"column":4},"end":{"line":923,"column":27}},"239":{"start":{"line":924,"column":4},"end":{"line":927,"column":6}},"240":{"start":{"line":925,"column":8},"end":{"line":925,"column":29}},"241":{"start":{"line":926,"column":8},"end":{"line":926,"column":62}},"242":{"start":{"line":930,"column":0},"end":{"line":937,"column":1}},"243":{"start":{"line":931,"column":4},"end":{"line":933,"column":5}},"244":{"start":{"line":932,"column":8},"end":{"line":932,"column":41}},"245":{"start":{"line":935,"column":4},"end":{"line":935,"column":37}},"246":{"start":{"line":936,"column":4},"end":{"line":936,"column":82}},"247":{"start":{"line":939,"column":0},"end":{"line":946,"column":1}},"248":{"start":{"line":940,"column":4},"end":{"line":945,"column":6}},"249":{"start":{"line":941,"column":8},"end":{"line":941,"column":73}},"250":{"start":{"line":941,"column":25},"end":{"line":941,"column":73}},"251":{"start":{"line":942,"column":8},"end":{"line":942,"column":24}},"252":{"start":{"line":943,"column":8},"end":{"line":943,"column":18}},"253":{"start":{"line":944,"column":8},"end":{"line":944,"column":38}},"254":{"start":{"line":948,"column":0},"end":{"line":988,"column":1}},"255":{"start":{"line":949,"column":4},"end":{"line":987,"column":6}},"256":{"start":{"line":950,"column":8},"end":{"line":950,"column":42}},"257":{"start":{"line":951,"column":8},"end":{"line":953,"column":9}},"258":{"start":{"line":952,"column":12},"end":{"line":952,"column":34}},"259":{"start":{"line":954,"column":8},"end":{"line":954,"column":37}},"260":{"start":{"line":955,"column":8},"end":{"line":955,"column":25}},"261":{"start":{"line":956,"column":8},"end":{"line":956,"column":24}},"262":{"start":{"line":958,"column":8},"end":{"line":969,"column":9}},"263":{"start":{"line":959,"column":12},"end":{"line":959,"column":25}},"264":{"start":{"line":960,"column":12},"end":{"line":968,"column":13}},"265":{"start":{"line":961,"column":16},"end":{"line":961,"column":28}},"266":{"start":{"line":962,"column":16},"end":{"line":962,"column":30}},"267":{"start":{"line":963,"column":19},"end":{"line":968,"column":13}},"268":{"start":{"line":964,"column":16},"end":{"line":964,"column":28}},"269":{"start":{"line":965,"column":16},"end":{"line":965,"column":38}},"270":{"start":{"line":967,"column":16},"end":{"line":967,"column":28}},"271":{"start":{"line":971,"column":8},"end":{"line":984,"column":9}},"272":{"start":{"line":972,"column":12},"end":{"line":983,"column":13}},"273":{"start":{"line":973,"column":16},"end":{"line":973,"column":38}},"274":{"start":{"line":974,"column":16},"end":{"line":980,"column":17}},"275":{"start":{"line":975,"column":20},"end":{"line":975,"column":32}},"276":{"start":{"line":976,"column":20},"end":{"line":978,"column":21}},"277":{"start":{"line":977,"column":24},"end":{"line":977,"column":39}},"278":{"start":{"line":979,"column":20},"end":{"line":979,"column":27}},"279":{"start":{"line":981,"column":16},"end":{"line":981,"column":29}},"280":{"start":{"line":982,"column":16},"end":{"line":982,"column":75}},"281":{"start":{"line":986,"column":8},"end":{"line":986,"column":20}},"282":{"start":{"line":1010,"column":0},"end":{"line":1012,"column":1}},"283":{"start":{"line":1011,"column":2},"end":{"line":1011,"column":61}},"284":{"start":{"line":1014,"column":0},"end":{"line":1018,"column":1}},"285":{"start":{"line":1015,"column":4},"end":{"line":1017,"column":6}},"286":{"start":{"line":1016,"column":8},"end":{"line":1016,"column":55}},"287":{"start":{"line":1021,"column":0},"end":{"line":1041,"column":1}},"288":{"start":{"line":1022,"column":4},"end":{"line":1022,"column":38}},"289":{"start":{"line":1023,"column":4},"end":{"line":1025,"column":29}},"290":{"start":{"line":1026,"column":4},"end":{"line":1028,"column":5}},"291":{"start":{"line":1027,"column":8},"end":{"line":1027,"column":23}},"292":{"start":{"line":1030,"column":4},"end":{"line":1036,"column":5}},"293":{"start":{"line":1031,"column":8},"end":{"line":1035,"column":9}},"294":{"start":{"line":1032,"column":12},"end":{"line":1032,"column":26}},"295":{"start":{"line":1033,"column":15},"end":{"line":1035,"column":9}},"296":{"start":{"line":1034,"column":12},"end":{"line":1034,"column":27}},"297":{"start":{"line":1038,"column":4},"end":{"line":1040,"column":5}},"298":{"start":{"line":1039,"column":8},"end":{"line":1039,"column":65}},"299":{"start":{"line":1044,"column":0},"end":{"line":1044,"column":51}},"300":{"start":{"line":1085,"column":0},"end":{"line":1088,"column":2}},"301":{"start":{"line":1086,"column":4},"end":{"line":1086,"column":83}},"302":{"start":{"line":1087,"column":4},"end":{"line":1087,"column":64}},"303":{"start":{"line":1090,"column":0},"end":{"line":1094,"column":1}},"304":{"start":{"line":1091,"column":4},"end":{"line":1093,"column":6}},"305":{"start":{"line":1092,"column":8},"end":{"line":1092,"column":64}},"306":{"start":{"line":1096,"column":0},"end":{"line":1112,"column":1}},"307":{"start":{"line":1097,"column":4},"end":{"line":1097,"column":32}},"308":{"start":{"line":1098,"column":4},"end":{"line":1098,"column":20}},"309":{"start":{"line":1099,"column":4},"end":{"line":1099,"column":21}},"310":{"start":{"line":1100,"column":4},"end":{"line":1100,"column":20}},"311":{"start":{"line":1101,"column":4},"end":{"line":1101,"column":42}},"312":{"start":{"line":1103,"column":4},"end":{"line":1111,"column":7}},"313":{"start":{"line":1104,"column":8},"end":{"line":1104,"column":30}},"314":{"start":{"line":1105,"column":8},"end":{"line":1108,"column":11}},"315":{"start":{"line":1106,"column":12},"end":{"line":1106,"column":31}},"316":{"start":{"line":1107,"column":12},"end":{"line":1107,"column":26}},"317":{"start":{"line":1110,"column":8},"end":{"line":1110,"column":31}},"318":{"start":{"line":1150,"column":0},"end":{"line":1150,"column":32}},"319":{"start":{"line":1185,"column":0},"end":{"line":1185,"column":33}},"320":{"start":{"line":1187,"column":0},"end":{"line":1191,"column":1}},"321":{"start":{"line":1188,"column":4},"end":{"line":1190,"column":6}},"322":{"start":{"line":1189,"column":8},"end":{"line":1189,"column":77}},"323":{"start":{"line":1212,"column":0},"end":{"line":1212,"column":42}},"324":{"start":{"line":1232,"column":0},"end":{"line":1232,"column":37}},"325":{"start":{"line":1253,"column":0},"end":{"line":1253,"column":45}},"326":{"start":{"line":1299,"column":0},"end":{"line":1303,"column":3}},"327":{"start":{"line":1300,"column":4},"end":{"line":1302,"column":7}},"328":{"start":{"line":1301,"column":8},"end":{"line":1301,"column":53}},"329":{"start":{"line":1314,"column":0},"end":{"line":1324,"column":1}},"330":{"start":{"line":1315,"column":2},"end":{"line":1316,"column":48}},"331":{"start":{"line":1318,"column":2},"end":{"line":1322,"column":3}},"332":{"start":{"line":1319,"column":4},"end":{"line":1321,"column":5}},"333":{"start":{"line":1320,"column":6},"end":{"line":1320,"column":12}},"334":{"start":{"line":1323,"column":2},"end":{"line":1323,"column":15}},"335":{"start":{"line":1333,"column":0},"end":{"line":1348,"column":1}},"336":{"start":{"line":1334,"column":2},"end":{"line":1347,"column":4}},"337":{"start":{"line":1335,"column":4},"end":{"line":1338,"column":30}},"338":{"start":{"line":1340,"column":4},"end":{"line":1345,"column":5}},"339":{"start":{"line":1341,"column":6},"end":{"line":1341,"column":52}},"340":{"start":{"line":1342,"column":6},"end":{"line":1344,"column":7}},"341":{"start":{"line":1343,"column":8},"end":{"line":1343,"column":14}},"342":{"start":{"line":1346,"column":4},"end":{"line":1346,"column":18}},"343":{"start":{"line":1361,"column":0},"end":{"line":1361,"column":30}},"344":{"start":{"line":1371,"column":0},"end":{"line":1373,"column":1}},"345":{"start":{"line":1372,"column":2},"end":{"line":1372,"column":51}},"346":{"start":{"line":1386,"column":0},"end":{"line":1396,"column":1}},"347":{"start":{"line":1387,"column":2},"end":{"line":1388,"column":47}},"348":{"start":{"line":1390,"column":2},"end":{"line":1394,"column":3}},"349":{"start":{"line":1391,"column":4},"end":{"line":1393,"column":5}},"350":{"start":{"line":1392,"column":6},"end":{"line":1392,"column":19}},"351":{"start":{"line":1395,"column":2},"end":{"line":1395,"column":12}},"352":{"start":{"line":1405,"column":0},"end":{"line":1407,"column":1}},"353":{"start":{"line":1406,"column":2},"end":{"line":1406,"column":25}},"354":{"start":{"line":1419,"column":0},"end":{"line":1429,"column":1}},"355":{"start":{"line":1420,"column":2},"end":{"line":1421,"column":28}},"356":{"start":{"line":1423,"column":2},"end":{"line":1427,"column":3}},"357":{"start":{"line":1424,"column":4},"end":{"line":1426,"column":5}},"358":{"start":{"line":1425,"column":6},"end":{"line":1425,"column":19}},"359":{"start":{"line":1428,"column":2},"end":{"line":1428,"column":12}},"360":{"start":{"line":1440,"column":0},"end":{"line":1444,"column":1}},"361":{"start":{"line":1441,"column":2},"end":{"line":1443,"column":49}},"362":{"start":{"line":1525,"column":0},"end":{"line":1683,"column":2}},"363":{"start":{"line":1526,"column":4},"end":{"line":1530,"column":5}},"364":{"start":{"line":1528,"column":8},"end":{"line":1528,"column":31}},"365":{"start":{"line":1529,"column":8},"end":{"line":1529,"column":27}},"366":{"start":{"line":1531,"column":4},"end":{"line":1531,"column":38}},"367":{"start":{"line":1532,"column":4},"end":{"line":1532,"column":30}},"368":{"start":{"line":1533,"column":4},"end":{"line":1533,"column":34}},"369":{"start":{"line":1534,"column":4},"end":{"line":1536,"column":5}},"370":{"start":{"line":1535,"column":8},"end":{"line":1535,"column":30}},"371":{"start":{"line":1537,"column":4},"end":{"line":1539,"column":5}},"372":{"start":{"line":1538,"column":8},"end":{"line":1538,"column":31}},"373":{"start":{"line":1541,"column":4},"end":{"line":1541,"column":21}},"374":{"start":{"line":1542,"column":4},"end":{"line":1542,"column":25}},"375":{"start":{"line":1543,"column":4},"end":{"line":1543,"column":25}},"376":{"start":{"line":1545,"column":4},"end":{"line":1545,"column":40}},"377":{"start":{"line":1547,"column":4},"end":{"line":1547,"column":24}},"378":{"start":{"line":1550,"column":4},"end":{"line":1550,"column":26}},"379":{"start":{"line":1552,"column":4},"end":{"line":1552,"column":35}},"380":{"start":{"line":1554,"column":4},"end":{"line":1582,"column":7}},"381":{"start":{"line":1555,"column":8},"end":{"line":1560,"column":9}},"382":{"start":{"line":1557,"column":12},"end":{"line":1557,"column":37}},"383":{"start":{"line":1558,"column":12},"end":{"line":1558,"column":35}},"384":{"start":{"line":1559,"column":12},"end":{"line":1559,"column":19}},"385":{"start":{"line":1562,"column":8},"end":{"line":1562,"column":58}},"386":{"start":{"line":1563,"column":8},"end":{"line":1563,"column":56}},"387":{"start":{"line":1564,"column":8},"end":{"line":1568,"column":9}},"388":{"start":{"line":1565,"column":12},"end":{"line":1565,"column":35}},"389":{"start":{"line":1566,"column":12},"end":{"line":1566,"column":35}},"390":{"start":{"line":1567,"column":12},"end":{"line":1567,"column":19}},"391":{"start":{"line":1569,"column":8},"end":{"line":1569,"column":59}},"392":{"start":{"line":1571,"column":8},"end":{"line":1581,"column":11}},"393":{"start":{"line":1572,"column":12},"end":{"line":1574,"column":13}},"394":{"start":{"line":1573,"column":16},"end":{"line":1573,"column":150}},"395":{"start":{"line":1575,"column":12},"end":{"line":1580,"column":15}},"396":{"start":{"line":1576,"column":16},"end":{"line":1576,"column":40}},"397":{"start":{"line":1577,"column":16},"end":{"line":1579,"column":17}},"398":{"start":{"line":1578,"column":20},"end":{"line":1578,"column":43}},"399":{"start":{"line":1584,"column":4},"end":{"line":1584,"column":24}},"400":{"start":{"line":1585,"column":4},"end":{"line":1585,"column":19}},"401":{"start":{"line":1587,"column":4},"end":{"line":1591,"column":5}},"402":{"start":{"line":1588,"column":8},"end":{"line":1590,"column":11}},"403":{"start":{"line":1589,"column":12},"end":{"line":1589,"column":31}},"404":{"start":{"line":1593,"column":4},"end":{"line":1601,"column":5}},"405":{"start":{"line":1594,"column":8},"end":{"line":1596,"column":9}},"406":{"start":{"line":1595,"column":12},"end":{"line":1595,"column":43}},"407":{"start":{"line":1597,"column":8},"end":{"line":1600,"column":9}},"408":{"start":{"line":1598,"column":12},"end":{"line":1598,"column":41}},"409":{"start":{"line":1599,"column":12},"end":{"line":1599,"column":18}},"410":{"start":{"line":1603,"column":4},"end":{"line":1610,"column":5}},"411":{"start":{"line":1604,"column":8},"end":{"line":1604,"column":48}},"412":{"start":{"line":1605,"column":8},"end":{"line":1607,"column":9}},"413":{"start":{"line":1606,"column":12},"end":{"line":1606,"column":53}},"414":{"start":{"line":1609,"column":8},"end":{"line":1609,"column":31}},"415":{"start":{"line":1612,"column":4},"end":{"line":1618,"column":5}},"416":{"start":{"line":1613,"column":8},"end":{"line":1613,"column":54}},"417":{"start":{"line":1614,"column":8},"end":{"line":1616,"column":11}},"418":{"start":{"line":1615,"column":12},"end":{"line":1615,"column":17}},"419":{"start":{"line":1617,"column":8},"end":{"line":1617,"column":23}},"420":{"start":{"line":1620,"column":4},"end":{"line":1651,"column":5}},"421":{"start":{"line":1621,"column":8},"end":{"line":1621,"column":29}},"422":{"start":{"line":1621,"column":22},"end":{"line":1621,"column":29}},"423":{"start":{"line":1623,"column":8},"end":{"line":1642,"column":12}},"424":{"start":{"line":1624,"column":12},"end":{"line":1624,"column":27}},"425":{"start":{"line":1625,"column":12},"end":{"line":1627,"column":13}},"426":{"start":{"line":1626,"column":16},"end":{"line":1626,"column":31}},"427":{"start":{"line":1628,"column":12},"end":{"line":1641,"column":13}},"428":{"start":{"line":1629,"column":16},"end":{"line":1629,"column":37}},"429":{"start":{"line":1630,"column":16},"end":{"line":1632,"column":19}},"430":{"start":{"line":1631,"column":20},"end":{"line":1631,"column":44}},"431":{"start":{"line":1633,"column":16},"end":{"line":1633,"column":40}},"432":{"start":{"line":1634,"column":16},"end":{"line":1634,"column":32}},"433":{"start":{"line":1635,"column":16},"end":{"line":1635,"column":48}},"434":{"start":{"line":1637,"column":16},"end":{"line":1637,"column":43}},"435":{"start":{"line":1639,"column":16},"end":{"line":1639,"column":36}},"436":{"start":{"line":1640,"column":16},"end":{"line":1640,"column":34}},"437":{"start":{"line":1644,"column":8},"end":{"line":1644,"column":23}},"438":{"start":{"line":1645,"column":8},"end":{"line":1645,"column":56}},"439":{"start":{"line":1646,"column":8},"end":{"line":1650,"column":9}},"440":{"start":{"line":1647,"column":12},"end":{"line":1647,"column":42}},"441":{"start":{"line":1649,"column":12},"end":{"line":1649,"column":33}},"442":{"start":{"line":1653,"column":4},"end":{"line":1672,"column":5}},"443":{"start":{"line":1657,"column":8},"end":{"line":1657,"column":24}},"444":{"start":{"line":1658,"column":8},"end":{"line":1658,"column":24}},"445":{"start":{"line":1659,"column":8},"end":{"line":1667,"column":9}},"446":{"start":{"line":1660,"column":12},"end":{"line":1660,"column":45}},"447":{"start":{"line":1661,"column":12},"end":{"line":1661,"column":22}},"448":{"start":{"line":1662,"column":12},"end":{"line":1666,"column":15}},"449":{"start":{"line":1663,"column":16},"end":{"line":1665,"column":17}},"450":{"start":{"line":1664,"column":20},"end":{"line":1664,"column":49}},"451":{"start":{"line":1669,"column":8},"end":{"line":1671,"column":9}},"452":{"start":{"line":1670,"column":12},"end":{"line":1670,"column":93}},"453":{"start":{"line":1674,"column":4},"end":{"line":1682,"column":5}},"454":{"start":{"line":1675,"column":8},"end":{"line":1675,"column":24}},"455":{"start":{"line":1676,"column":8},"end":{"line":1680,"column":11}},"456":{"start":{"line":1677,"column":12},"end":{"line":1679,"column":13}},"457":{"start":{"line":1678,"column":16},"end":{"line":1678,"column":33}},"458":{"start":{"line":1681,"column":8},"end":{"line":1681,"column":22}},"459":{"start":{"line":1694,"column":0},"end":{"line":1703,"column":1}},"460":{"start":{"line":1695,"column":2},"end":{"line":1697,"column":29}},"461":{"start":{"line":1699,"column":2},"end":{"line":1701,"column":3}},"462":{"start":{"line":1700,"column":4},"end":{"line":1700,"column":57}},"463":{"start":{"line":1702,"column":2},"end":{"line":1702,"column":16}},"464":{"start":{"line":1706,"column":0},"end":{"line":1706,"column":34}},"465":{"start":{"line":1725,"column":0},"end":{"line":1728,"column":1}},"466":{"start":{"line":1726,"column":2},"end":{"line":1727,"column":60}},"467":{"start":{"line":1731,"column":0},"end":{"line":1731,"column":21}},"468":{"start":{"line":1734,"column":0},"end":{"line":1734,"column":60}},"469":{"start":{"line":1735,"column":0},"end":{"line":1735,"column":68}},"470":{"start":{"line":1745,"column":0},"end":{"line":1759,"column":1}},"471":{"start":{"line":1747,"column":2},"end":{"line":1749,"column":3}},"472":{"start":{"line":1748,"column":4},"end":{"line":1748,"column":17}},"473":{"start":{"line":1750,"column":2},"end":{"line":1753,"column":3}},"474":{"start":{"line":1752,"column":4},"end":{"line":1752,"column":46}},"475":{"start":{"line":1754,"column":2},"end":{"line":1756,"column":3}},"476":{"start":{"line":1755,"column":4},"end":{"line":1755,"column":60}},"477":{"start":{"line":1757,"column":2},"end":{"line":1757,"column":28}},"478":{"start":{"line":1758,"column":2},"end":{"line":1758,"column":69}},"479":{"start":{"line":1770,"column":0},"end":{"line":1789,"column":1}},"480":{"start":{"line":1771,"column":2},"end":{"line":1772,"column":28}},"481":{"start":{"line":1774,"column":2},"end":{"line":1776,"column":3}},"482":{"start":{"line":1775,"column":4},"end":{"line":1775,"column":51}},"483":{"start":{"line":1777,"column":2},"end":{"line":1777,"column":36}},"484":{"start":{"line":1778,"column":2},"end":{"line":1780,"column":3}},"485":{"start":{"line":1779,"column":4},"end":{"line":1779,"column":18}},"486":{"start":{"line":1781,"column":2},"end":{"line":1781,"column":51}},"487":{"start":{"line":1782,"column":2},"end":{"line":1782,"column":15}},"488":{"start":{"line":1784,"column":2},"end":{"line":1784,"column":29}},"489":{"start":{"line":1785,"column":2},"end":{"line":1787,"column":3}},"490":{"start":{"line":1786,"column":4},"end":{"line":1786,"column":41}},"491":{"start":{"line":1788,"column":2},"end":{"line":1788,"column":16}},"492":{"start":{"line":1800,"column":0},"end":{"line":1804,"column":1}},"493":{"start":{"line":1801,"column":2},"end":{"line":1801,"column":28}},"494":{"start":{"line":1802,"column":2},"end":{"line":1802,"column":41}},"495":{"start":{"line":1803,"column":2},"end":{"line":1803,"column":74}},"496":{"start":{"line":1815,"column":0},"end":{"line":1820,"column":1}},"497":{"start":{"line":1816,"column":2},"end":{"line":1816,"column":32}},"498":{"start":{"line":1818,"column":2},"end":{"line":1818,"column":74}},"499":{"start":{"line":1819,"column":2},"end":{"line":1819,"column":15}},"500":{"start":{"line":1831,"column":0},"end":{"line":1837,"column":1}},"501":{"start":{"line":1832,"column":2},"end":{"line":1833,"column":33}},"502":{"start":{"line":1835,"column":2},"end":{"line":1835,"column":83}},"503":{"start":{"line":1836,"column":2},"end":{"line":1836,"column":15}},"504":{"start":{"line":1846,"column":0},"end":{"line":1848,"column":1}},"505":{"start":{"line":1847,"column":2},"end":{"line":1847,"column":26}},"506":{"start":{"line":1851,"column":0},"end":{"line":1851,"column":38}},"507":{"start":{"line":1852,"column":0},"end":{"line":1852,"column":57}},"508":{"start":{"line":1853,"column":0},"end":{"line":1853,"column":44}},"509":{"start":{"line":1854,"column":0},"end":{"line":1854,"column":34}},"510":{"start":{"line":1857,"column":0},"end":{"line":1857,"column":22}},"511":{"start":{"line":1860,"column":0},"end":{"line":1860,"column":117}},"512":{"start":{"line":1869,"column":0},"end":{"line":1871,"column":1}},"513":{"start":{"line":1870,"column":2},"end":{"line":1870,"column":35}},"514":{"start":{"line":1874,"column":0},"end":{"line":1874,"column":40}},"515":{"start":{"line":1875,"column":0},"end":{"line":1875,"column":59}},"516":{"start":{"line":1876,"column":0},"end":{"line":1876,"column":46}},"517":{"start":{"line":1877,"column":0},"end":{"line":1877,"column":36}},"518":{"start":{"line":1880,"column":0},"end":{"line":1880,"column":43}},"519":{"start":{"line":1881,"column":0},"end":{"line":1881,"column":70}},"520":{"start":{"line":1882,"column":0},"end":{"line":1882,"column":40}},"521":{"start":{"line":1883,"column":0},"end":{"line":1883,"column":54}},"522":{"start":{"line":1884,"column":0},"end":{"line":1884,"column":47}},"523":{"start":{"line":1885,"column":0},"end":{"line":1885,"column":51}},"524":{"start":{"line":1886,"column":0},"end":{"line":1886,"column":54}},"525":{"start":{"line":1887,"column":0},"end":{"line":1887,"column":24}},"526":{"start":{"line":1890,"column":0},"end":{"line":1890,"column":32}},"527":{"start":{"line":1891,"column":0},"end":{"line":1891,"column":41}},"528":{"start":{"line":1892,"column":0},"end":{"line":1892,"column":125}},"529":{"start":{"line":1893,"column":0},"end":{"line":1893,"column":44}},"530":{"start":{"line":1894,"column":0},"end":{"line":1894,"column":112}},"531":{"start":{"line":1897,"column":0},"end":{"line":1897,"column":79}},"532":{"start":{"line":1906,"column":0},"end":{"line":1908,"column":1}},"533":{"start":{"line":1907,"column":2},"end":{"line":1907,"column":39}},"534":{"start":{"line":1917,"column":0},"end":{"line":1921,"column":1}},"535":{"start":{"line":1918,"column":2},"end":{"line":1920,"column":27}},"536":{"start":{"line":1944,"column":0},"end":{"line":1946,"column":1}},"537":{"start":{"line":1945,"column":2},"end":{"line":1945,"column":50}},"538":{"start":{"line":1949,"column":0},"end":{"line":1949,"column":26}},"539":{"start":{"line":1973,"column":0},"end":{"line":1987,"column":1}},"540":{"start":{"line":1974,"column":2},"end":{"line":1974,"column":28}},"541":{"start":{"line":1975,"column":2},"end":{"line":1977,"column":3}},"542":{"start":{"line":1976,"column":4},"end":{"line":1976,"column":38}},"543":{"start":{"line":1978,"column":2},"end":{"line":1980,"column":3}},"544":{"start":{"line":1979,"column":4},"end":{"line":1979,"column":18}},"545":{"start":{"line":1981,"column":2},"end":{"line":1984,"column":54}},"546":{"start":{"line":1986,"column":2},"end":{"line":1986,"column":52}},"547":{"start":{"line":1989,"column":0},"end":{"line":1989,"column":67}},"548":{"start":{"line":1990,"column":0},"end":{"line":1990,"column":23}},"549":{"start":{"line":1991,"column":0},"end":{"line":1991,"column":28}},"550":{"start":{"line":1992,"column":0},"end":{"line":1992,"column":56}},"551":{"start":{"line":1994,"column":0},"end":{"line":2002,"column":1}},"552":{"start":{"line":1995,"column":4},"end":{"line":1995,"column":55}},"553":{"start":{"line":1996,"column":4},"end":{"line":1996,"column":51}},"554":{"start":{"line":1997,"column":4},"end":{"line":1997,"column":48}},"555":{"start":{"line":1998,"column":4},"end":{"line":2000,"column":7}},"556":{"start":{"line":1999,"column":8},"end":{"line":1999,"column":45}},"557":{"start":{"line":2001,"column":4},"end":{"line":2001,"column":16}},"558":{"start":{"line":2086,"column":0},"end":{"line":2124,"column":1}},"559":{"start":{"line":2087,"column":4},"end":{"line":2087,"column":22}},"560":{"start":{"line":2089,"column":4},"end":{"line":2121,"column":7}},"561":{"start":{"line":2090,"column":8},"end":{"line":2090,"column":19}},"562":{"start":{"line":2091,"column":8},"end":{"line":2091,"column":40}},"563":{"start":{"line":2092,"column":8},"end":{"line":2092,"column":94}},"564":{"start":{"line":2094,"column":8},"end":{"line":2112,"column":9}},"565":{"start":{"line":2095,"column":12},"end":{"line":2095,"column":41}},"566":{"start":{"line":2096,"column":12},"end":{"line":2096,"column":47}},"567":{"start":{"line":2098,"column":12},"end":{"line":2098,"column":80}},"568":{"start":{"line":2099,"column":15},"end":{"line":2112,"column":9}},"569":{"start":{"line":2101,"column":12},"end":{"line":2101,"column":35}},"570":{"start":{"line":2103,"column":12},"end":{"line":2103,"column":41}},"571":{"start":{"line":2104,"column":12},"end":{"line":2106,"column":13}},"572":{"start":{"line":2105,"column":16},"end":{"line":2105,"column":90}},"573":{"start":{"line":2109,"column":12},"end":{"line":2109,"column":41}},"574":{"start":{"line":2109,"column":28},"end":{"line":2109,"column":41}},"575":{"start":{"line":2111,"column":12},"end":{"line":2111,"column":51}},"576":{"start":{"line":2114,"column":8},"end":{"line":2120,"column":9}},"577":{"start":{"line":2115,"column":12},"end":{"line":2117,"column":15}},"578":{"start":{"line":2116,"column":16},"end":{"line":2116,"column":37}},"579":{"start":{"line":2118,"column":12},"end":{"line":2118,"column":33}},"580":{"start":{"line":2119,"column":12},"end":{"line":2119,"column":53}},"581":{"start":{"line":2123,"column":4},"end":{"line":2123,"column":29}},"582":{"start":{"line":2126,"column":0},"end":{"line":2126,"column":73}},"583":{"start":{"line":2127,"column":0},"end":{"line":2127,"column":88}},"584":{"start":{"line":2129,"column":0},"end":{"line":2131,"column":1}},"585":{"start":{"line":2130,"column":4},"end":{"line":2130,"column":22}},"586":{"start":{"line":2133,"column":0},"end":{"line":2139,"column":1}},"587":{"start":{"line":2134,"column":4},"end":{"line":2138,"column":7}},"588":{"start":{"line":2135,"column":8},"end":{"line":2137,"column":11}},"589":{"start":{"line":2136,"column":12},"end":{"line":2136,"column":33}},"590":{"start":{"line":2141,"column":0},"end":{"line":2141,"column":11}},"591":{"start":{"line":2143,"column":0},"end":{"line":2149,"column":1}},"592":{"start":{"line":2144,"column":4},"end":{"line":2144,"column":26}},"593":{"start":{"line":2145,"column":7},"end":{"line":2149,"column":1}},"594":{"start":{"line":2146,"column":4},"end":{"line":2146,"column":30}},"595":{"start":{"line":2148,"column":4},"end":{"line":2148,"column":22}},"596":{"start":{"line":2151,"column":0},"end":{"line":2151,"column":34}},"597":{"start":{"line":2157,"column":0},"end":{"line":2160,"column":1}},"598":{"start":{"line":2158,"column":4},"end":{"line":2158,"column":33}},"599":{"start":{"line":2159,"column":4},"end":{"line":2159,"column":20}},"600":{"start":{"line":2162,"column":0},"end":{"line":2165,"column":1}},"601":{"start":{"line":2163,"column":4},"end":{"line":2163,"column":19}},"602":{"start":{"line":2164,"column":4},"end":{"line":2164,"column":31}},"603":{"start":{"line":2167,"column":0},"end":{"line":2174,"column":2}},"604":{"start":{"line":2168,"column":4},"end":{"line":2168,"column":73}},"605":{"start":{"line":2168,"column":19},"end":{"line":2168,"column":46}},"606":{"start":{"line":2168,"column":51},"end":{"line":2168,"column":73}},"607":{"start":{"line":2169,"column":4},"end":{"line":2169,"column":73}},"608":{"start":{"line":2169,"column":19},"end":{"line":2169,"column":46}},"609":{"start":{"line":2169,"column":51},"end":{"line":2169,"column":73}},"610":{"start":{"line":2171,"column":4},"end":{"line":2171,"column":33}},"611":{"start":{"line":2172,"column":4},"end":{"line":2172,"column":21}},"612":{"start":{"line":2173,"column":4},"end":{"line":2173,"column":16}},"613":{"start":{"line":2176,"column":0},"end":{"line":2176,"column":26}},"614":{"start":{"line":2178,"column":0},"end":{"line":2184,"column":2}},"615":{"start":{"line":2179,"column":4},"end":{"line":2179,"column":24}},"616":{"start":{"line":2180,"column":4},"end":{"line":2180,"column":29}},"617":{"start":{"line":2181,"column":4},"end":{"line":2181,"column":69}},"618":{"start":{"line":2181,"column":19},"end":{"line":2181,"column":44}},"619":{"start":{"line":2181,"column":49},"end":{"line":2181,"column":69}},"620":{"start":{"line":2182,"column":4},"end":{"line":2182,"column":24}},"621":{"start":{"line":2183,"column":4},"end":{"line":2183,"column":21}},"622":{"start":{"line":2186,"column":0},"end":{"line":2192,"column":2}},"623":{"start":{"line":2187,"column":4},"end":{"line":2187,"column":29}},"624":{"start":{"line":2188,"column":4},"end":{"line":2188,"column":24}},"625":{"start":{"line":2189,"column":4},"end":{"line":2189,"column":69}},"626":{"start":{"line":2189,"column":19},"end":{"line":2189,"column":44}},"627":{"start":{"line":2189,"column":49},"end":{"line":2189,"column":69}},"628":{"start":{"line":2190,"column":4},"end":{"line":2190,"column":24}},"629":{"start":{"line":2191,"column":4},"end":{"line":2191,"column":21}},"630":{"start":{"line":2194,"column":0},"end":{"line":2196,"column":2}},"631":{"start":{"line":2195,"column":4},"end":{"line":2195,"column":82}},"632":{"start":{"line":2195,"column":19},"end":{"line":2195,"column":54}},"633":{"start":{"line":2195,"column":59},"end":{"line":2195,"column":82}},"634":{"start":{"line":2198,"column":0},"end":{"line":2200,"column":2}},"635":{"start":{"line":2199,"column":4},"end":{"line":2199,"column":81}},"636":{"start":{"line":2199,"column":19},"end":{"line":2199,"column":53}},"637":{"start":{"line":2199,"column":58},"end":{"line":2199,"column":81}},"638":{"start":{"line":2202,"column":0},"end":{"line":2204,"column":2}},"639":{"start":{"line":2203,"column":4},"end":{"line":2203,"column":51}},"640":{"start":{"line":2206,"column":0},"end":{"line":2208,"column":2}},"641":{"start":{"line":2207,"column":4},"end":{"line":2207,"column":51}},"642":{"start":{"line":2210,"column":0},"end":{"line":2360,"column":1}},"643":{"start":{"line":2211,"column":4},"end":{"line":2215,"column":5}},"644":{"start":{"line":2212,"column":8},"end":{"line":2212,"column":24}},"645":{"start":{"line":2213,"column":11},"end":{"line":2215,"column":5}},"646":{"start":{"line":2214,"column":8},"end":{"line":2214,"column":56}},"647":{"start":{"line":2217,"column":4},"end":{"line":2217,"column":38}},"648":{"start":{"line":2218,"column":4},"end":{"line":2218,"column":23}},"649":{"start":{"line":2219,"column":4},"end":{"line":2219,"column":25}},"650":{"start":{"line":2221,"column":4},"end":{"line":2249,"column":5}},"651":{"start":{"line":2222,"column":8},"end":{"line":2224,"column":9}},"652":{"start":{"line":2223,"column":12},"end":{"line":2223,"column":64}},"653":{"start":{"line":2225,"column":8},"end":{"line":2225,"column":25}},"654":{"start":{"line":2226,"column":8},"end":{"line":2228,"column":9}},"655":{"start":{"line":2227,"column":12},"end":{"line":2227,"column":26}},"656":{"start":{"line":2229,"column":8},"end":{"line":2234,"column":9}},"657":{"start":{"line":2231,"column":12},"end":{"line":2233,"column":15}},"658":{"start":{"line":2232,"column":16},"end":{"line":2232,"column":26}},"659":{"start":{"line":2236,"column":8},"end":{"line":2247,"column":9}},"660":{"start":{"line":2237,"column":12},"end":{"line":2240,"column":14}},"661":{"start":{"line":2242,"column":12},"end":{"line":2246,"column":13}},"662":{"start":{"line":2243,"column":16},"end":{"line":2243,"column":39}},"663":{"start":{"line":2245,"column":16},"end":{"line":2245,"column":36}},"664":{"start":{"line":2248,"column":8},"end":{"line":2248,"column":34}},"665":{"start":{"line":2251,"column":4},"end":{"line":2278,"column":5}},"666":{"start":{"line":2252,"column":8},"end":{"line":2277,"column":11}},"667":{"start":{"line":2253,"column":12},"end":{"line":2253,"column":28}},"668":{"start":{"line":2255,"column":12},"end":{"line":2267,"column":13}},"669":{"start":{"line":2256,"column":16},"end":{"line":2256,"column":36}},"670":{"start":{"line":2257,"column":16},"end":{"line":2257,"column":62}},"671":{"start":{"line":2258,"column":16},"end":{"line":2260,"column":17}},"672":{"start":{"line":2259,"column":20},"end":{"line":2259,"column":46}},"673":{"start":{"line":2262,"column":16},"end":{"line":2262,"column":48}},"674":{"start":{"line":2264,"column":16},"end":{"line":2266,"column":17}},"675":{"start":{"line":2265,"column":20},"end":{"line":2265,"column":48}},"676":{"start":{"line":2269,"column":12},"end":{"line":2271,"column":13}},"677":{"start":{"line":2270,"column":16},"end":{"line":2270,"column":32}},"678":{"start":{"line":2273,"column":12},"end":{"line":2275,"column":13}},"679":{"start":{"line":2274,"column":16},"end":{"line":2274,"column":26}},"680":{"start":{"line":2276,"column":12},"end":{"line":2276,"column":24}},"681":{"start":{"line":2280,"column":4},"end":{"line":2280,"column":29}},"682":{"start":{"line":2281,"column":4},"end":{"line":2358,"column":6}},"683":{"start":{"line":2294,"column":12},"end":{"line":2294,"column":43}},"684":{"start":{"line":2297,"column":12},"end":{"line":2297,"column":27}},"685":{"start":{"line":2298,"column":12},"end":{"line":2298,"column":29}},"686":{"start":{"line":2301,"column":12},"end":{"line":2301,"column":42}},"687":{"start":{"line":2306,"column":12},"end":{"line":2308,"column":13}},"688":{"start":{"line":2307,"column":16},"end":{"line":2307,"column":23}},"689":{"start":{"line":2309,"column":12},"end":{"line":2309,"column":32}},"690":{"start":{"line":2310,"column":12},"end":{"line":2333,"column":13}},"691":{"start":{"line":2311,"column":16},"end":{"line":2312,"column":30}},"692":{"start":{"line":2313,"column":16},"end":{"line":2313,"column":40}},"693":{"start":{"line":2314,"column":16},"end":{"line":2314,"column":58}},"694":{"start":{"line":2314,"column":31},"end":{"line":2314,"column":58}},"695":{"start":{"line":2315,"column":16},"end":{"line":2319,"column":17}},"696":{"start":{"line":2316,"column":20},"end":{"line":2316,"column":48}},"697":{"start":{"line":2317,"column":20},"end":{"line":2317,"column":37}},"698":{"start":{"line":2318,"column":20},"end":{"line":2318,"column":41}},"699":{"start":{"line":2321,"column":16},"end":{"line":2323,"column":17}},"700":{"start":{"line":2322,"column":20},"end":{"line":2322,"column":30}},"701":{"start":{"line":2324,"column":16},"end":{"line":2324,"column":32}},"702":{"start":{"line":2325,"column":16},"end":{"line":2325,"column":43}},"703":{"start":{"line":2327,"column":16},"end":{"line":2329,"column":17}},"704":{"start":{"line":2328,"column":20},"end":{"line":2328,"column":34}},"705":{"start":{"line":2331,"column":16},"end":{"line":2331,"column":48}},"706":{"start":{"line":2332,"column":16},"end":{"line":2332,"column":34}},"707":{"start":{"line":2334,"column":12},"end":{"line":2334,"column":33}},"708":{"start":{"line":2337,"column":12},"end":{"line":2337,"column":35}},"709":{"start":{"line":2340,"column":12},"end":{"line":2340,"column":30}},"710":{"start":{"line":2343,"column":12},"end":{"line":2343,"column":31}},"711":{"start":{"line":2346,"column":12},"end":{"line":2346,"column":54}},"712":{"start":{"line":2349,"column":12},"end":{"line":2349,"column":28}},"713":{"start":{"line":2352,"column":12},"end":{"line":2354,"column":13}},"714":{"start":{"line":2353,"column":16},"end":{"line":2353,"column":23}},"715":{"start":{"line":2355,"column":12},"end":{"line":2355,"column":29}},"716":{"start":{"line":2356,"column":12},"end":{"line":2356,"column":38}},"717":{"start":{"line":2359,"column":4},"end":{"line":2359,"column":13}},"718":{"start":{"line":2439,"column":0},"end":{"line":2441,"column":1}},"719":{"start":{"line":2440,"column":2},"end":{"line":2440,"column":35}},"720":{"start":{"line":2460,"column":0},"end":{"line":2460,"column":43}},"721":{"start":{"line":2502,"column":0},"end":{"line":2513,"column":1}},"722":{"start":{"line":2503,"column":4},"end":{"line":2503,"column":38}},"723":{"start":{"line":2504,"column":4},"end":{"line":2504,"column":42}},"724":{"start":{"line":2505,"column":4},"end":{"line":2512,"column":7}},"725":{"start":{"line":2506,"column":8},"end":{"line":2509,"column":11}},"726":{"start":{"line":2507,"column":12},"end":{"line":2507,"column":21}},"727":{"start":{"line":2508,"column":12},"end":{"line":2508,"column":26}},"728":{"start":{"line":2511,"column":8},"end":{"line":2511,"column":28}},"729":{"start":{"line":2553,"column":0},"end":{"line":2573,"column":3}},"730":{"start":{"line":2554,"column":4},"end":{"line":2554,"column":54}},"731":{"start":{"line":2555,"column":4},"end":{"line":2572,"column":7}},"732":{"start":{"line":2556,"column":8},"end":{"line":2556,"column":24}},"733":{"start":{"line":2558,"column":8},"end":{"line":2558,"column":39}},"734":{"start":{"line":2559,"column":8},"end":{"line":2563,"column":9}},"735":{"start":{"line":2560,"column":12},"end":{"line":2560,"column":23}},"736":{"start":{"line":2562,"column":12},"end":{"line":2562,"column":22}},"737":{"start":{"line":2565,"column":8},"end":{"line":2571,"column":11}},"738":{"start":{"line":2566,"column":12},"end":{"line":2568,"column":17}},"739":{"start":{"line":2567,"column":16},"end":{"line":2567,"column":34}},"740":{"start":{"line":2570,"column":12},"end":{"line":2570,"column":50}},"741":{"start":{"line":2610,"column":0},"end":{"line":2612,"column":3}},"742":{"start":{"line":2611,"column":2},"end":{"line":2611,"column":43}},"743":{"start":{"line":2614,"column":0},"end":{"line":2624,"column":1}},"744":{"start":{"line":2615,"column":4},"end":{"line":2615,"column":20}},"745":{"start":{"line":2616,"column":4},"end":{"line":2623,"column":7}},"746":{"start":{"line":2617,"column":8},"end":{"line":2620,"column":11}},"747":{"start":{"line":2618,"column":12},"end":{"line":2618,"column":44}},"748":{"start":{"line":2619,"column":12},"end":{"line":2619,"column":20}},"749":{"start":{"line":2622,"column":8},"end":{"line":2622,"column":30}},"750":{"start":{"line":2651,"column":0},"end":{"line":2651,"column":34}},"751":{"start":{"line":2653,"column":0},"end":{"line":2657,"column":1}},"752":{"start":{"line":2654,"column":4},"end":{"line":2656,"column":6}},"753":{"start":{"line":2655,"column":8},"end":{"line":2655,"column":70}},"754":{"start":{"line":2677,"column":0},"end":{"line":2677,"column":38}},"755":{"start":{"line":2721,"column":0},"end":{"line":2726,"column":3}},"756":{"start":{"line":2722,"column":4},"end":{"line":2722,"column":37}},"757":{"start":{"line":2723,"column":4},"end":{"line":2725,"column":7}},"758":{"start":{"line":2724,"column":8},"end":{"line":2724,"column":42}},"759":{"start":{"line":2728,"column":0},"end":{"line":2753,"column":1}},"760":{"start":{"line":2729,"column":4},"end":{"line":2752,"column":6}},"761":{"start":{"line":2730,"column":8},"end":{"line":2730,"column":24}},"762":{"start":{"line":2731,"column":8},"end":{"line":2731,"column":31}},"763":{"start":{"line":2732,"column":8},"end":{"line":2732,"column":23}},"764":{"start":{"line":2733,"column":8},"end":{"line":2751,"column":11}},"765":{"start":{"line":2734,"column":12},"end":{"line":2744,"column":15}},"766":{"start":{"line":2735,"column":16},"end":{"line":2743,"column":17}},"767":{"start":{"line":2736,"column":20},"end":{"line":2736,"column":34}},"768":{"start":{"line":2737,"column":23},"end":{"line":2743,"column":17}},"769":{"start":{"line":2738,"column":20},"end":{"line":2738,"column":38}},"770":{"start":{"line":2739,"column":20},"end":{"line":2739,"column":56}},"771":{"start":{"line":2740,"column":20},"end":{"line":2740,"column":46}},"772":{"start":{"line":2742,"column":20},"end":{"line":2742,"column":31}},"773":{"start":{"line":2746,"column":12},"end":{"line":2750,"column":13}},"774":{"start":{"line":2747,"column":16},"end":{"line":2747,"column":24}},"775":{"start":{"line":2749,"column":16},"end":{"line":2749,"column":69}},"776":{"start":{"line":2755,"column":0},"end":{"line":2757,"column":1}},"777":{"start":{"line":2756,"column":4},"end":{"line":2756,"column":13}},"778":{"start":{"line":2794,"column":0},"end":{"line":2794,"column":65}},"779":{"start":{"line":2818,"column":0},"end":{"line":2818,"column":75}},"780":{"start":{"line":2840,"column":0},"end":{"line":2840,"column":43}},"781":{"start":{"line":2842,"column":0},"end":{"line":2858,"column":1}},"782":{"start":{"line":2843,"column":4},"end":{"line":2857,"column":7}},"783":{"start":{"line":2844,"column":8},"end":{"line":2856,"column":13}},"784":{"start":{"line":2845,"column":12},"end":{"line":2855,"column":13}},"785":{"start":{"line":2846,"column":16},"end":{"line":2854,"column":17}},"786":{"start":{"line":2847,"column":20},"end":{"line":2849,"column":21}},"787":{"start":{"line":2848,"column":24},"end":{"line":2848,"column":43}},"788":{"start":{"line":2850,"column":23},"end":{"line":2854,"column":17}},"789":{"start":{"line":2851,"column":20},"end":{"line":2853,"column":23}},"790":{"start":{"line":2852,"column":24},"end":{"line":2852,"column":41}},"791":{"start":{"line":2889,"column":0},"end":{"line":2889,"column":29}},"792":{"start":{"line":2911,"column":0},"end":{"line":2929,"column":1}},"793":{"start":{"line":2912,"column":4},"end":{"line":2912,"column":42}},"794":{"start":{"line":2913,"column":4},"end":{"line":2913,"column":30}},"795":{"start":{"line":2914,"column":4},"end":{"line":2914,"column":34}},"796":{"start":{"line":2916,"column":4},"end":{"line":2920,"column":7}},"797":{"start":{"line":2917,"column":8},"end":{"line":2917,"column":38}},"798":{"start":{"line":2917,"column":17},"end":{"line":2917,"column":38}},"799":{"start":{"line":2918,"column":8},"end":{"line":2918,"column":25}},"800":{"start":{"line":2919,"column":8},"end":{"line":2919,"column":32}},"801":{"start":{"line":2922,"column":4},"end":{"line":2926,"column":5}},"802":{"start":{"line":2923,"column":8},"end":{"line":2923,"column":38}},"803":{"start":{"line":2923,"column":17},"end":{"line":2923,"column":38}},"804":{"start":{"line":2924,"column":8},"end":{"line":2924,"column":42}},"805":{"start":{"line":2924,"column":20},"end":{"line":2924,"column":42}},"806":{"start":{"line":2925,"column":8},"end":{"line":2925,"column":18}},"807":{"start":{"line":2928,"column":4},"end":{"line":2928,"column":22}},"808":{"start":{"line":2953,"column":0},"end":{"line":2962,"column":1}},"809":{"start":{"line":2954,"column":4},"end":{"line":2954,"column":42}},"810":{"start":{"line":2955,"column":4},"end":{"line":2955,"column":42}},"811":{"start":{"line":2956,"column":4},"end":{"line":2960,"column":7}},"812":{"start":{"line":2957,"column":8},"end":{"line":2957,"column":38}},"813":{"start":{"line":2957,"column":17},"end":{"line":2957,"column":38}},"814":{"start":{"line":2958,"column":8},"end":{"line":2958,"column":59}},"815":{"start":{"line":2958,"column":36},"end":{"line":2958,"column":59}},"816":{"start":{"line":2959,"column":8},"end":{"line":2959,"column":50}},"817":{"start":{"line":2961,"column":4},"end":{"line":2961,"column":20}},"818":{"start":{"line":2984,"column":0},"end":{"line":2988,"column":1}},"819":{"start":{"line":2985,"column":4},"end":{"line":2987,"column":17}},"820":{"start":{"line":2986,"column":8},"end":{"line":2986,"column":44}},"821":{"start":{"line":3026,"column":0},"end":{"line":3043,"column":1}},"822":{"start":{"line":3027,"column":4},"end":{"line":3027,"column":42}},"823":{"start":{"line":3028,"column":4},"end":{"line":3028,"column":30}},"824":{"start":{"line":3029,"column":4},"end":{"line":3029,"column":34}},"825":{"start":{"line":3031,"column":4},"end":{"line":3034,"column":5}},"826":{"start":{"line":3032,"column":8},"end":{"line":3032,"column":38}},"827":{"start":{"line":3032,"column":17},"end":{"line":3032,"column":38}},"828":{"start":{"line":3033,"column":8},"end":{"line":3033,"column":21}},"829":{"start":{"line":3036,"column":4},"end":{"line":3040,"column":5}},"830":{"start":{"line":3037,"column":8},"end":{"line":3037,"column":38}},"831":{"start":{"line":3037,"column":17},"end":{"line":3037,"column":38}},"832":{"start":{"line":3038,"column":8},"end":{"line":3038,"column":42}},"833":{"start":{"line":3038,"column":20},"end":{"line":3038,"column":42}},"834":{"start":{"line":3039,"column":8},"end":{"line":3039,"column":18}},"835":{"start":{"line":3042,"column":4},"end":{"line":3042,"column":17}},"836":{"start":{"line":3045,"column":0},"end":{"line":3049,"column":1}},"837":{"start":{"line":3046,"column":4},"end":{"line":3048,"column":6}},"838":{"start":{"line":3047,"column":8},"end":{"line":3047,"column":41}},"839":{"start":{"line":3108,"column":0},"end":{"line":3110,"column":1}},"840":{"start":{"line":3109,"column":2},"end":{"line":3109,"column":63}},"841":{"start":{"line":3132,"column":0},"end":{"line":3134,"column":1}},"842":{"start":{"line":3133,"column":2},"end":{"line":3133,"column":76}},"843":{"start":{"line":3155,"column":0},"end":{"line":3155,"column":41}},"844":{"start":{"line":3192,"column":0},"end":{"line":3209,"column":1}},"845":{"start":{"line":3193,"column":4},"end":{"line":3193,"column":31}},"846":{"start":{"line":3193,"column":21},"end":{"line":3193,"column":31}},"847":{"start":{"line":3194,"column":4},"end":{"line":3208,"column":7}},"848":{"start":{"line":3195,"column":8},"end":{"line":3195,"column":24}},"849":{"start":{"line":3196,"column":8},"end":{"line":3205,"column":11}},"850":{"start":{"line":3197,"column":12},"end":{"line":3197,"column":38}},"851":{"start":{"line":3198,"column":12},"end":{"line":3204,"column":13}},"852":{"start":{"line":3199,"column":16},"end":{"line":3201,"column":19}},"853":{"start":{"line":3200,"column":20},"end":{"line":3200,"column":52}},"854":{"start":{"line":3203,"column":16},"end":{"line":3203,"column":48}},"855":{"start":{"line":3206,"column":8},"end":{"line":3206,"column":29}},"856":{"start":{"line":3207,"column":8},"end":{"line":3207,"column":21}},"857":{"start":{"line":3211,"column":0},"end":{"line":3213,"column":1}},"858":{"start":{"line":3212,"column":4},"end":{"line":3212,"column":14}},"859":{"start":{"line":3243,"column":0},"end":{"line":3243,"column":52}},"860":{"start":{"line":3265,"column":0},"end":{"line":3265,"column":62}},"861":{"start":{"line":3286,"column":0},"end":{"line":3286,"column":41}},"862":{"start":{"line":3295,"column":0},"end":{"line":3299,"column":1}},"863":{"start":{"line":3296,"column":2},"end":{"line":3298,"column":4}},"864":{"start":{"line":3297,"column":4},"end":{"line":3297,"column":52}},"865":{"start":{"line":3301,"column":0},"end":{"line":3316,"column":1}},"866":{"start":{"line":3302,"column":4},"end":{"line":3302,"column":44}},"867":{"start":{"line":3303,"column":4},"end":{"line":3315,"column":7}},"868":{"start":{"line":3304,"column":8},"end":{"line":3307,"column":11}},"869":{"start":{"line":3305,"column":12},"end":{"line":3305,"column":37}},"870":{"start":{"line":3306,"column":12},"end":{"line":3306,"column":26}},"871":{"start":{"line":3309,"column":8},"end":{"line":3309,"column":38}},"872":{"start":{"line":3309,"column":17},"end":{"line":3309,"column":38}},"873":{"start":{"line":3310,"column":8},"end":{"line":3310,"column":25}},"874":{"start":{"line":3311,"column":8},"end":{"line":3313,"column":9}},"875":{"start":{"line":3312,"column":12},"end":{"line":3312,"column":53}},"876":{"start":{"line":3312,"column":32},"end":{"line":3312,"column":53}},"877":{"start":{"line":3314,"column":8},"end":{"line":3314,"column":32}},"878":{"start":{"line":3318,"column":0},"end":{"line":3340,"column":1}},"879":{"start":{"line":3319,"column":4},"end":{"line":3319,"column":21}},"880":{"start":{"line":3320,"column":4},"end":{"line":3339,"column":7}},"881":{"start":{"line":3321,"column":8},"end":{"line":3330,"column":11}},"882":{"start":{"line":3322,"column":12},"end":{"line":3329,"column":13}},"883":{"start":{"line":3323,"column":16},"end":{"line":3323,"column":30}},"884":{"start":{"line":3325,"column":16},"end":{"line":3327,"column":17}},"885":{"start":{"line":3326,"column":20},"end":{"line":3326,"column":61}},"886":{"start":{"line":3328,"column":16},"end":{"line":3328,"column":27}},"887":{"start":{"line":3332,"column":8},"end":{"line":3338,"column":9}},"888":{"start":{"line":3333,"column":12},"end":{"line":3333,"column":26}},"889":{"start":{"line":3335,"column":12},"end":{"line":3337,"column":40}},"890":{"start":{"line":3336,"column":16},"end":{"line":3336,"column":41}},"891":{"start":{"line":3342,"column":0},"end":{"line":3345,"column":1}},"892":{"start":{"line":3343,"column":4},"end":{"line":3343,"column":65}},"893":{"start":{"line":3344,"column":4},"end":{"line":3344,"column":66}},"894":{"start":{"line":3374,"column":0},"end":{"line":3374,"column":33}},"895":{"start":{"line":3395,"column":0},"end":{"line":3395,"column":43}},"896":{"start":{"line":3414,"column":0},"end":{"line":3414,"column":43}},"897":{"start":{"line":3445,"column":0},"end":{"line":3454,"column":1}},"898":{"start":{"line":3446,"column":4},"end":{"line":3446,"column":41}},"899":{"start":{"line":3447,"column":4},"end":{"line":3447,"column":44}},"900":{"start":{"line":3449,"column":4},"end":{"line":3452,"column":5}},"901":{"start":{"line":3450,"column":8},"end":{"line":3450,"column":34}},"902":{"start":{"line":3450,"column":17},"end":{"line":3450,"column":34}},"903":{"start":{"line":3451,"column":8},"end":{"line":3451,"column":19}},"904":{"start":{"line":3453,"column":4},"end":{"line":3453,"column":11}},"905":{"start":{"line":3475,"column":0},"end":{"line":3503,"column":2}},"906":{"start":{"line":3476,"column":4},"end":{"line":3476,"column":32}},"907":{"start":{"line":3477,"column":4},"end":{"line":3477,"column":42}},"908":{"start":{"line":3478,"column":4},"end":{"line":3502,"column":7}},"909":{"start":{"line":3479,"column":8},"end":{"line":3482,"column":11}},"910":{"start":{"line":3480,"column":12},"end":{"line":3480,"column":42}},"911":{"start":{"line":3480,"column":21},"end":{"line":3480,"column":42}},"912":{"start":{"line":3481,"column":12},"end":{"line":3481,"column":58}},"913":{"start":{"line":3484,"column":8},"end":{"line":3484,"column":24}},"914":{"start":{"line":3486,"column":8},"end":{"line":3486,"column":61}},"915":{"start":{"line":3488,"column":8},"end":{"line":3499,"column":9}},"916":{"start":{"line":3489,"column":12},"end":{"line":3498,"column":13}},"917":{"start":{"line":3490,"column":16},"end":{"line":3490,"column":44}},"918":{"start":{"line":3491,"column":16},"end":{"line":3491,"column":44}},"919":{"start":{"line":3493,"column":16},"end":{"line":3497,"column":17}},"920":{"start":{"line":3494,"column":20},"end":{"line":3494,"column":42}},"921":{"start":{"line":3496,"column":20},"end":{"line":3496,"column":40}},"922":{"start":{"line":3501,"column":8},"end":{"line":3501,"column":37}},"923":{"start":{"line":3541,"column":0},"end":{"line":3541,"column":46}},"924":{"start":{"line":3562,"column":0},"end":{"line":3562,"column":45}},"925":{"start":{"line":3591,"column":0},"end":{"line":3591,"column":29}},"926":{"start":{"line":3614,"column":0},"end":{"line":3627,"column":1}},"927":{"start":{"line":3615,"column":4},"end":{"line":3615,"column":38}},"928":{"start":{"line":3616,"column":4},"end":{"line":3616,"column":20}},"929":{"start":{"line":3617,"column":4},"end":{"line":3617,"column":42}},"930":{"start":{"line":3618,"column":4},"end":{"line":3626,"column":7}},"931":{"start":{"line":3619,"column":8},"end":{"line":3623,"column":11}},"932":{"start":{"line":3620,"column":12},"end":{"line":3620,"column":38}},"933":{"start":{"line":3620,"column":21},"end":{"line":3620,"column":38}},"934":{"start":{"line":3621,"column":12},"end":{"line":3621,"column":33}},"935":{"start":{"line":3622,"column":12},"end":{"line":3622,"column":19}},"936":{"start":{"line":3625,"column":8},"end":{"line":3625,"column":30}},"937":{"start":{"line":3674,"column":0},"end":{"line":3674,"column":50}},"938":{"start":{"line":3695,"column":0},"end":{"line":3695,"column":49}},"939":{"start":{"line":3697,"column":0},"end":{"line":3699,"column":1}},"940":{"start":{"line":3698,"column":4},"end":{"line":3698,"column":22}},"941":{"start":{"line":3738,"column":0},"end":{"line":3766,"column":1}},"942":{"start":{"line":3739,"column":4},"end":{"line":3739,"column":35}},"943":{"start":{"line":3740,"column":4},"end":{"line":3740,"column":37}},"944":{"start":{"line":3741,"column":4},"end":{"line":3741,"column":32}},"945":{"start":{"line":3742,"column":4},"end":{"line":3742,"column":30}},"946":{"start":{"line":3743,"column":4},"end":{"line":3762,"column":7}},"947":{"start":{"line":3744,"column":8},"end":{"line":3744,"column":43}},"948":{"start":{"line":3745,"column":8},"end":{"line":3761,"column":9}},"949":{"start":{"line":3746,"column":12},"end":{"line":3748,"column":15}},"950":{"start":{"line":3747,"column":16},"end":{"line":3747,"column":48}},"951":{"start":{"line":3749,"column":15},"end":{"line":3761,"column":9}},"952":{"start":{"line":3750,"column":12},"end":{"line":3750,"column":39}},"953":{"start":{"line":3752,"column":12},"end":{"line":3752,"column":37}},"954":{"start":{"line":3753,"column":12},"end":{"line":3760,"column":17}},"955":{"start":{"line":3754,"column":16},"end":{"line":3754,"column":33}},"956":{"start":{"line":3755,"column":16},"end":{"line":3755,"column":36}},"957":{"start":{"line":3756,"column":16},"end":{"line":3756,"column":35}},"958":{"start":{"line":3757,"column":16},"end":{"line":3759,"column":17}},"959":{"start":{"line":3758,"column":20},"end":{"line":3758,"column":43}},"960":{"start":{"line":3763,"column":4},"end":{"line":3763,"column":25}},"961":{"start":{"line":3764,"column":4},"end":{"line":3764,"column":29}},"962":{"start":{"line":3765,"column":4},"end":{"line":3765,"column":20}},"963":{"start":{"line":3799,"column":0},"end":{"line":3799,"column":13}},"964":{"start":{"line":3801,"column":0},"end":{"line":3807,"column":1}},"965":{"start":{"line":3802,"column":4},"end":{"line":3802,"column":32}},"966":{"start":{"line":3803,"column":7},"end":{"line":3807,"column":1}},"967":{"start":{"line":3804,"column":4},"end":{"line":3804,"column":28}},"968":{"start":{"line":3806,"column":4},"end":{"line":3806,"column":24}},"969":{"start":{"line":3809,"column":0},"end":{"line":3809,"column":30}},"970":{"start":{"line":3811,"column":0},"end":{"line":3826,"column":1}},"971":{"start":{"line":3812,"column":4},"end":{"line":3812,"column":32}},"972":{"start":{"line":3813,"column":4},"end":{"line":3813,"column":47}},"973":{"start":{"line":3815,"column":4},"end":{"line":3825,"column":7}},"974":{"start":{"line":3816,"column":8},"end":{"line":3822,"column":12}},"975":{"start":{"line":3817,"column":12},"end":{"line":3819,"column":13}},"976":{"start":{"line":3818,"column":16},"end":{"line":3818,"column":31}},"977":{"start":{"line":3820,"column":12},"end":{"line":3820,"column":32}},"978":{"start":{"line":3821,"column":12},"end":{"line":3821,"column":26}},"979":{"start":{"line":3824,"column":8},"end":{"line":3824,"column":31}},"980":{"start":{"line":3897,"column":0},"end":{"line":3899,"column":1}},"981":{"start":{"line":3898,"column":2},"end":{"line":3898,"column":37}},"982":{"start":{"line":3920,"column":0},"end":{"line":3922,"column":1}},"983":{"start":{"line":3921,"column":2},"end":{"line":3921,"column":50}},"984":{"start":{"line":4022,"column":0},"end":{"line":4027,"column":2}},"985":{"start":{"line":4023,"column":2},"end":{"line":4023,"column":36}},"986":{"start":{"line":4024,"column":2},"end":{"line":4026,"column":21}},"987":{"start":{"line":4025,"column":4},"end":{"line":4025,"column":26}},"988":{"start":{"line":4052,"column":0},"end":{"line":4099,"column":2}},"989":{"start":{"line":4054,"column":4},"end":{"line":4054,"column":41}},"990":{"start":{"line":4057,"column":4},"end":{"line":4093,"column":6}},"991":{"start":{"line":4058,"column":8},"end":{"line":4058,"column":46}},"992":{"start":{"line":4058,"column":30},"end":{"line":4058,"column":46}},"993":{"start":{"line":4059,"column":8},"end":{"line":4061,"column":9}},"994":{"start":{"line":4060,"column":12},"end":{"line":4060,"column":64}},"995":{"start":{"line":4062,"column":8},"end":{"line":4062,"column":25}},"996":{"start":{"line":4063,"column":8},"end":{"line":4065,"column":9}},"997":{"start":{"line":4064,"column":12},"end":{"line":4064,"column":26}},"998":{"start":{"line":4066,"column":8},"end":{"line":4071,"column":9}},"999":{"start":{"line":4068,"column":12},"end":{"line":4070,"column":15}},"1000":{"start":{"line":4069,"column":16},"end":{"line":4069,"column":26}},"1001":{"start":{"line":4073,"column":8},"end":{"line":4073,"column":33}},"1002":{"start":{"line":4074,"column":8},"end":{"line":4074,"column":37}},"1003":{"start":{"line":4075,"column":8},"end":{"line":4077,"column":9}},"1004":{"start":{"line":4076,"column":12},"end":{"line":4076,"column":37}},"1005":{"start":{"line":4079,"column":8},"end":{"line":4091,"column":9}},"1006":{"start":{"line":4080,"column":12},"end":{"line":4084,"column":14}},"1007":{"start":{"line":4086,"column":12},"end":{"line":4090,"column":13}},"1008":{"start":{"line":4087,"column":16},"end":{"line":4087,"column":54}},"1009":{"start":{"line":4089,"column":16},"end":{"line":4089,"column":36}},"1010":{"start":{"line":4092,"column":8},"end":{"line":4092,"column":34}},"1011":{"start":{"line":4096,"column":4},"end":{"line":4096,"column":21}},"1012":{"start":{"line":4098,"column":4},"end":{"line":4098,"column":13}},"1013":{"start":{"line":4137,"column":0},"end":{"line":4144,"column":1}},"1014":{"start":{"line":4138,"column":4},"end":{"line":4138,"column":38}},"1015":{"start":{"line":4139,"column":4},"end":{"line":4139,"column":112}},"1016":{"start":{"line":4139,"column":25},"end":{"line":4139,"column":112}},"1017":{"start":{"line":4140,"column":4},"end":{"line":4140,"column":41}},"1018":{"start":{"line":4140,"column":23},"end":{"line":4140,"column":41}},"1019":{"start":{"line":4141,"column":4},"end":{"line":4143,"column":5}},"1020":{"start":{"line":4142,"column":8},"end":{"line":4142,"column":40}},"1021":{"start":{"line":4146,"column":0},"end":{"line":4146,"column":34}},"1022":{"start":{"line":4170,"column":0},"end":{"line":4173,"column":1}},"1023":{"start":{"line":4171,"column":2},"end":{"line":4171,"column":45}},"1024":{"start":{"line":4172,"column":2},"end":{"line":4172,"column":45}},"1025":{"start":{"line":4214,"column":0},"end":{"line":4237,"column":1}},"1026":{"start":{"line":4215,"column":4},"end":{"line":4215,"column":30}},"1027":{"start":{"line":4216,"column":4},"end":{"line":4236,"column":7}},"1028":{"start":{"line":4217,"column":8},"end":{"line":4233,"column":12}},"1029":{"start":{"line":4218,"column":12},"end":{"line":4232,"column":13}},"1030":{"start":{"line":4219,"column":16},"end":{"line":4221,"column":19}},"1031":{"start":{"line":4223,"column":16},"end":{"line":4223,"column":33}},"1032":{"start":{"line":4224,"column":16},"end":{"line":4228,"column":17}},"1033":{"start":{"line":4225,"column":20},"end":{"line":4225,"column":38}},"1034":{"start":{"line":4226,"column":23},"end":{"line":4228,"column":17}},"1035":{"start":{"line":4227,"column":20},"end":{"line":4227,"column":35}},"1036":{"start":{"line":4229,"column":16},"end":{"line":4231,"column":19}},"1037":{"start":{"line":4235,"column":8},"end":{"line":4235,"column":37}},"1038":{"start":{"line":4239,"column":0},"end":{"line":4245,"column":1}},"1039":{"start":{"line":4240,"column":4},"end":{"line":4244,"column":17}},"1040":{"start":{"line":4241,"column":8},"end":{"line":4243,"column":11}},"1041":{"start":{"line":4242,"column":12},"end":{"line":4242,"column":24}},"1042":{"start":{"line":4274,"column":0},"end":{"line":4274,"column":34}},"1043":{"start":{"line":4343,"column":0},"end":{"line":4354,"column":1}},"1044":{"start":{"line":4344,"column":4},"end":{"line":4344,"column":16}},"1045":{"start":{"line":4345,"column":4},"end":{"line":4352,"column":5}},"1046":{"start":{"line":4346,"column":8},"end":{"line":4346,"column":43}},"1047":{"start":{"line":4348,"column":8},"end":{"line":4348,"column":21}},"1048":{"start":{"line":4349,"column":8},"end":{"line":4351,"column":11}},"1049":{"start":{"line":4350,"column":12},"end":{"line":4350,"column":52}},"1050":{"start":{"line":4353,"column":4},"end":{"line":4353,"column":19}},"1051":{"start":{"line":4375,"column":0},"end":{"line":4375,"column":44}},"1052":{"start":{"line":4394,"column":0},"end":{"line":4394,"column":43}},"1053":{"start":{"line":4415,"column":0},"end":{"line":4419,"column":1}},"1054":{"start":{"line":4416,"column":2},"end":{"line":4418,"column":4}},"1055":{"start":{"line":4417,"column":4},"end":{"line":4417,"column":17}},"1056":{"start":{"line":4505,"column":0},"end":{"line":4554,"column":1}},"1057":{"start":{"line":4506,"column":4},"end":{"line":4506,"column":26}},"1058":{"start":{"line":4507,"column":4},"end":{"line":4507,"column":29}},"1059":{"start":{"line":4509,"column":4},"end":{"line":4512,"column":6}},"1060":{"start":{"line":4514,"column":4},"end":{"line":4526,"column":5}},"1061":{"start":{"line":4515,"column":8},"end":{"line":4525,"column":9}},"1062":{"start":{"line":4516,"column":12},"end":{"line":4516,"column":50}},"1063":{"start":{"line":4518,"column":12},"end":{"line":4518,"column":123}},"1064":{"start":{"line":4520,"column":12},"end":{"line":4520,"column":44}},"1065":{"start":{"line":4521,"column":15},"end":{"line":4525,"column":9}},"1066":{"start":{"line":4522,"column":12},"end":{"line":4522,"column":44}},"1067":{"start":{"line":4524,"column":12},"end":{"line":4524,"column":65}},"1068":{"start":{"line":4528,"column":4},"end":{"line":4534,"column":5}},"1069":{"start":{"line":4529,"column":8},"end":{"line":4529,"column":32}},"1070":{"start":{"line":4530,"column":8},"end":{"line":4530,"column":20}},"1071":{"start":{"line":4532,"column":8},"end":{"line":4532,"column":34}},"1072":{"start":{"line":4533,"column":8},"end":{"line":4533,"column":36}},"1073":{"start":{"line":4536,"column":4},"end":{"line":4538,"column":5}},"1074":{"start":{"line":4537,"column":8},"end":{"line":4537,"column":61}},"1075":{"start":{"line":4540,"column":4},"end":{"line":4540,"column":34}},"1076":{"start":{"line":4542,"column":4},"end":{"line":4542,"column":20}},"1077":{"start":{"line":4543,"column":4},"end":{"line":4551,"column":5}},"1078":{"start":{"line":4544,"column":8},"end":{"line":4550,"column":11}},"1079":{"start":{"line":4545,"column":12},"end":{"line":4549,"column":13}},"1080":{"start":{"line":4546,"column":16},"end":{"line":4546,"column":72}},"1081":{"start":{"line":4548,"column":16},"end":{"line":4548,"column":48}},"1082":{"start":{"line":4553,"column":4},"end":{"line":4553,"column":19}},"1083":{"start":{"line":4584,"column":0},"end":{"line":4597,"column":2}},"1084":{"start":{"line":4585,"column":4},"end":{"line":4588,"column":5}},"1085":{"start":{"line":4586,"column":8},"end":{"line":4586,"column":20}},"1086":{"start":{"line":4587,"column":8},"end":{"line":4587,"column":20}},"1087":{"start":{"line":4589,"column":4},"end":{"line":4589,"column":34}},"1088":{"start":{"line":4590,"column":4},"end":{"line":4596,"column":7}},"1089":{"start":{"line":4591,"column":8},"end":{"line":4593,"column":9}},"1090":{"start":{"line":4592,"column":12},"end":{"line":4592,"column":47}},"1091":{"start":{"line":4595,"column":8},"end":{"line":4595,"column":77}},"1092":{"start":{"line":4595,"column":18},"end":{"line":4595,"column":48}},"1093":{"start":{"line":4595,"column":53},"end":{"line":4595,"column":77}},"1094":{"start":{"line":4663,"column":0},"end":{"line":4665,"column":1}},"1095":{"start":{"line":4664,"column":2},"end":{"line":4664,"column":43}},"1096":{"start":{"line":4697,"column":0},"end":{"line":4697,"column":56}},"1097":{"start":{"line":4720,"column":0},"end":{"line":4720,"column":66}},"1098":{"start":{"line":4742,"column":0},"end":{"line":4742,"column":39}},"1099":{"start":{"line":4791,"column":0},"end":{"line":4808,"column":1}},"1100":{"start":{"line":4792,"column":4},"end":{"line":4792,"column":42}},"1101":{"start":{"line":4793,"column":4},"end":{"line":4801,"column":7}},"1102":{"start":{"line":4794,"column":8},"end":{"line":4797,"column":11}},"1103":{"start":{"line":4795,"column":12},"end":{"line":4795,"column":42}},"1104":{"start":{"line":4795,"column":21},"end":{"line":4795,"column":42}},"1105":{"start":{"line":4796,"column":12},"end":{"line":4796,"column":61}},"1106":{"start":{"line":4799,"column":8},"end":{"line":4799,"column":38}},"1107":{"start":{"line":4799,"column":17},"end":{"line":4799,"column":38}},"1108":{"start":{"line":4800,"column":8},"end":{"line":4800,"column":82}},"1109":{"start":{"line":4803,"column":4},"end":{"line":4807,"column":5}},"1110":{"start":{"line":4804,"column":8},"end":{"line":4805,"column":31}},"1111":{"start":{"line":4806,"column":8},"end":{"line":4806,"column":42}},"1112":{"start":{"line":4851,"column":0},"end":{"line":4881,"column":1}},"1113":{"start":{"line":4852,"column":4},"end":{"line":4852,"column":32}},"1114":{"start":{"line":4853,"column":4},"end":{"line":4853,"column":25}},"1115":{"start":{"line":4855,"column":4},"end":{"line":4860,"column":5}},"1116":{"start":{"line":4856,"column":8},"end":{"line":4859,"column":9}},"1117":{"start":{"line":4857,"column":12},"end":{"line":4857,"column":52}},"1118":{"start":{"line":4858,"column":12},"end":{"line":4858,"column":32}},"1119":{"start":{"line":4862,"column":4},"end":{"line":4871,"column":5}},"1120":{"start":{"line":4863,"column":8},"end":{"line":4863,"column":47}},"1121":{"start":{"line":4864,"column":8},"end":{"line":4864,"column":77}},"1122":{"start":{"line":4865,"column":8},"end":{"line":4865,"column":33}},"1123":{"start":{"line":4866,"column":8},"end":{"line":4868,"column":9}},"1124":{"start":{"line":4867,"column":12},"end":{"line":4867,"column":30}},"1125":{"start":{"line":4869,"column":8},"end":{"line":4869,"column":24}},"1126":{"start":{"line":4870,"column":8},"end":{"line":4870,"column":32}},"1127":{"start":{"line":4873,"column":4},"end":{"line":4873,"column":34}},"1128":{"start":{"line":4875,"column":4},"end":{"line":4880,"column":7}},"1129":{"start":{"line":4876,"column":8},"end":{"line":4876,"column":40}},"1130":{"start":{"line":4878,"column":8},"end":{"line":4878,"column":58}},"1131":{"start":{"line":4879,"column":8},"end":{"line":4879,"column":54}},"1132":{"start":{"line":4884,"column":0},"end":{"line":4884,"column":27}},"1133":{"start":{"line":4885,"column":0},"end":{"line":4885,"column":27}},"1134":{"start":{"line":4898,"column":0},"end":{"line":4908,"column":1}},"1135":{"start":{"line":4899,"column":2},"end":{"line":4901,"column":29}},"1136":{"start":{"line":4903,"column":2},"end":{"line":4906,"column":3}},"1137":{"start":{"line":4904,"column":4},"end":{"line":4904,"column":49}},"1138":{"start":{"line":4905,"column":4},"end":{"line":4905,"column":18}},"1139":{"start":{"line":4907,"column":2},"end":{"line":4907,"column":16}},"1140":{"start":{"line":4926,"column":0},"end":{"line":4929,"column":1}},"1141":{"start":{"line":4927,"column":2},"end":{"line":4927,"column":40}},"1142":{"start":{"line":4928,"column":2},"end":{"line":4928,"column":63}},"1143":{"start":{"line":4963,"column":0},"end":{"line":4963,"column":41}},"1144":{"start":{"line":4979,"column":0},"end":{"line":4979,"column":40}},"1145":{"start":{"line":5023,"column":0},"end":{"line":5037,"column":1}},"1146":{"start":{"line":5024,"column":4},"end":{"line":5028,"column":5}},"1147":{"start":{"line":5025,"column":8},"end":{"line":5025,"column":28}},"1148":{"start":{"line":5026,"column":8},"end":{"line":5026,"column":31}},"1149":{"start":{"line":5027,"column":8},"end":{"line":5027,"column":46}},"1150":{"start":{"line":5029,"column":4},"end":{"line":5029,"column":38}},"1151":{"start":{"line":5030,"column":4},"end":{"line":5030,"column":42}},"1152":{"start":{"line":5032,"column":4},"end":{"line":5036,"column":7}},"1153":{"start":{"line":5033,"column":8},"end":{"line":5033,"column":41}},"1154":{"start":{"line":5035,"column":8},"end":{"line":5035,"column":35}},"1155":{"start":{"line":5052,"column":0},"end":{"line":5056,"column":1}},"1156":{"start":{"line":5053,"column":4},"end":{"line":5055,"column":6}},"1157":{"start":{"line":5054,"column":8},"end":{"line":5054,"column":60}},"1158":{"start":{"line":5092,"column":0},"end":{"line":5102,"column":1}},"1159":{"start":{"line":5093,"column":4},"end":{"line":5093,"column":42}},"1160":{"start":{"line":5094,"column":4},"end":{"line":5094,"column":42}},"1161":{"start":{"line":5095,"column":4},"end":{"line":5095,"column":39}},"1162":{"start":{"line":5095,"column":17},"end":{"line":5095,"column":39}},"1163":{"start":{"line":5096,"column":4},"end":{"line":5100,"column":7}},"1164":{"start":{"line":5097,"column":8},"end":{"line":5097,"column":38}},"1165":{"start":{"line":5097,"column":17},"end":{"line":5097,"column":38}},"1166":{"start":{"line":5098,"column":8},"end":{"line":5098,"column":43}},"1167":{"start":{"line":5098,"column":20},"end":{"line":5098,"column":43}},"1168":{"start":{"line":5099,"column":8},"end":{"line":5099,"column":50}},"1169":{"start":{"line":5101,"column":4},"end":{"line":5101,"column":20}},"1170":{"start":{"line":5126,"column":0},"end":{"line":5130,"column":1}},"1171":{"start":{"line":5127,"column":4},"end":{"line":5129,"column":27}},"1172":{"start":{"line":5128,"column":8},"end":{"line":5128,"column":44}},"1173":{"start":{"line":5189,"column":0},"end":{"line":5214,"column":2}},"1174":{"start":{"line":5190,"column":4},"end":{"line":5190,"column":38}},"1175":{"start":{"line":5191,"column":4},"end":{"line":5191,"column":113}},"1176":{"start":{"line":5191,"column":25},"end":{"line":5191,"column":113}},"1177":{"start":{"line":5192,"column":4},"end":{"line":5192,"column":41}},"1178":{"start":{"line":5192,"column":23},"end":{"line":5192,"column":41}},"1179":{"start":{"line":5193,"column":4},"end":{"line":5193,"column":22}},"1180":{"start":{"line":5195,"column":4},"end":{"line":5211,"column":5}},"1181":{"start":{"line":5196,"column":8},"end":{"line":5198,"column":9}},"1182":{"start":{"line":5197,"column":12},"end":{"line":5197,"column":61}},"1183":{"start":{"line":5200,"column":8},"end":{"line":5205,"column":12}},"1184":{"start":{"line":5201,"column":12},"end":{"line":5203,"column":13}},"1185":{"start":{"line":5202,"column":16},"end":{"line":5202,"column":64}},"1186":{"start":{"line":5204,"column":12},"end":{"line":5204,"column":27}},"1187":{"start":{"line":5207,"column":8},"end":{"line":5207,"column":32}},"1188":{"start":{"line":5209,"column":8},"end":{"line":5209,"column":51}},"1189":{"start":{"line":5210,"column":8},"end":{"line":5210,"column":31}},"1190":{"start":{"line":5213,"column":4},"end":{"line":5213,"column":17}},"1191":{"start":{"line":5280,"column":0},"end":{"line":5373,"column":2}},"1192":{"start":{"line":5375,"column":0},"end":{"line":5375,"column":27}},"1193":{"start":{"line":5376,"column":0},"end":{"line":5376,"column":30}},"1194":{"start":{"line":5377,"column":0},"end":{"line":5377,"column":42}},"1195":{"start":{"line":5378,"column":0},"end":{"line":5378,"column":24}},"1196":{"start":{"line":5379,"column":0},"end":{"line":5379,"column":28}},"1197":{"start":{"line":5380,"column":0},"end":{"line":5380,"column":20}},"1198":{"start":{"line":5381,"column":0},"end":{"line":5381,"column":32}},"1199":{"start":{"line":5382,"column":0},"end":{"line":5382,"column":22}},"1200":{"start":{"line":5383,"column":0},"end":{"line":5383,"column":26}},"1201":{"start":{"line":5384,"column":0},"end":{"line":5384,"column":24}},"1202":{"start":{"line":5385,"column":0},"end":{"line":5385,"column":36}},"1203":{"start":{"line":5386,"column":0},"end":{"line":5386,"column":28}},"1204":{"start":{"line":5387,"column":0},"end":{"line":5387,"column":24}},"1205":{"start":{"line":5388,"column":0},"end":{"line":5388,"column":34}},"1206":{"start":{"line":5389,"column":0},"end":{"line":5389,"column":36}},"1207":{"start":{"line":5390,"column":0},"end":{"line":5390,"column":18}},"1208":{"start":{"line":5391,"column":0},"end":{"line":5391,"column":28}},"1209":{"start":{"line":5392,"column":0},"end":{"line":5392,"column":26}},"1210":{"start":{"line":5393,"column":0},"end":{"line":5393,"column":28}},"1211":{"start":{"line":5394,"column":0},"end":{"line":5394,"column":24}},"1212":{"start":{"line":5395,"column":0},"end":{"line":5395,"column":25}},"1213":{"start":{"line":5396,"column":0},"end":{"line":5396,"column":32}},"1214":{"start":{"line":5397,"column":0},"end":{"line":5397,"column":24}},"1215":{"start":{"line":5398,"column":0},"end":{"line":5398,"column":34}},"1216":{"start":{"line":5399,"column":0},"end":{"line":5399,"column":36}},"1217":{"start":{"line":5400,"column":0},"end":{"line":5400,"column":32}},"1218":{"start":{"line":5401,"column":0},"end":{"line":5401,"column":34}},"1219":{"start":{"line":5402,"column":0},"end":{"line":5402,"column":22}},"1220":{"start":{"line":5403,"column":0},"end":{"line":5403,"column":32}},"1221":{"start":{"line":5404,"column":0},"end":{"line":5404,"column":34}},"1222":{"start":{"line":5405,"column":0},"end":{"line":5405,"column":24}},"1223":{"start":{"line":5406,"column":0},"end":{"line":5406,"column":34}},"1224":{"start":{"line":5407,"column":0},"end":{"line":5407,"column":36}},"1225":{"start":{"line":5408,"column":0},"end":{"line":5408,"column":26}},"1226":{"start":{"line":5409,"column":0},"end":{"line":5409,"column":26}},"1227":{"start":{"line":5410,"column":0},"end":{"line":5410,"column":36}},"1228":{"start":{"line":5411,"column":0},"end":{"line":5411,"column":38}},"1229":{"start":{"line":5412,"column":0},"end":{"line":5412,"column":18}},"1230":{"start":{"line":5413,"column":0},"end":{"line":5413,"column":18}},"1231":{"start":{"line":5414,"column":0},"end":{"line":5414,"column":28}},"1232":{"start":{"line":5415,"column":0},"end":{"line":5415,"column":30}},"1233":{"start":{"line":5416,"column":0},"end":{"line":5416,"column":30}},"1234":{"start":{"line":5417,"column":0},"end":{"line":5417,"column":40}},"1235":{"start":{"line":5418,"column":0},"end":{"line":5418,"column":42}},"1236":{"start":{"line":5419,"column":0},"end":{"line":5419,"column":26}},"1237":{"start":{"line":5420,"column":0},"end":{"line":5420,"column":28}},"1238":{"start":{"line":5421,"column":0},"end":{"line":5421,"column":33}},"1239":{"start":{"line":5422,"column":0},"end":{"line":5422,"column":40}},"1240":{"start":{"line":5423,"column":0},"end":{"line":5423,"column":38}},"1241":{"start":{"line":5424,"column":0},"end":{"line":5424,"column":24}},"1242":{"start":{"line":5425,"column":0},"end":{"line":5425,"column":20}},"1243":{"start":{"line":5426,"column":0},"end":{"line":5426,"column":24}},"1244":{"start":{"line":5427,"column":0},"end":{"line":5427,"column":34}},"1245":{"start":{"line":5428,"column":0},"end":{"line":5428,"column":26}},"1246":{"start":{"line":5429,"column":0},"end":{"line":5429,"column":32}},"1247":{"start":{"line":5430,"column":0},"end":{"line":5430,"column":24}},"1248":{"start":{"line":5431,"column":0},"end":{"line":5431,"column":34}},"1249":{"start":{"line":5432,"column":0},"end":{"line":5432,"column":36}},"1250":{"start":{"line":5433,"column":0},"end":{"line":5433,"column":22}},"1251":{"start":{"line":5434,"column":0},"end":{"line":5434,"column":30}},"1252":{"start":{"line":5435,"column":0},"end":{"line":5435,"column":20}},"1253":{"start":{"line":5436,"column":0},"end":{"line":5436,"column":24}},"1254":{"start":{"line":5437,"column":0},"end":{"line":5437,"column":38}},"1255":{"start":{"line":5438,"column":0},"end":{"line":5438,"column":20}},"1256":{"start":{"line":5439,"column":0},"end":{"line":5439,"column":30}},"1257":{"start":{"line":5440,"column":0},"end":{"line":5440,"column":32}},"1258":{"start":{"line":5441,"column":0},"end":{"line":5441,"column":24}},"1259":{"start":{"line":5442,"column":0},"end":{"line":5442,"column":26}},"1260":{"start":{"line":5443,"column":0},"end":{"line":5443,"column":22}},"1261":{"start":{"line":5444,"column":0},"end":{"line":5444,"column":31}},"1262":{"start":{"line":5445,"column":0},"end":{"line":5445,"column":34}},"1263":{"start":{"line":5446,"column":0},"end":{"line":5446,"column":30}},"1264":{"start":{"line":5447,"column":0},"end":{"line":5447,"column":30}},"1265":{"start":{"line":5448,"column":0},"end":{"line":5448,"column":22}},"1266":{"start":{"line":5449,"column":0},"end":{"line":5449,"column":30}},"1267":{"start":{"line":5450,"column":0},"end":{"line":5450,"column":24}},"1268":{"start":{"line":5451,"column":0},"end":{"line":5451,"column":20}},"1269":{"start":{"line":5452,"column":0},"end":{"line":5452,"column":30}},"1270":{"start":{"line":5453,"column":0},"end":{"line":5453,"column":32}},"1271":{"start":{"line":5454,"column":0},"end":{"line":5454,"column":19}},"1272":{"start":{"line":5455,"column":0},"end":{"line":5455,"column":29}},"1273":{"start":{"line":5456,"column":0},"end":{"line":5456,"column":31}},"1274":{"start":{"line":5457,"column":0},"end":{"line":5457,"column":22}},"1275":{"start":{"line":5458,"column":0},"end":{"line":5458,"column":32}},"1276":{"start":{"line":5459,"column":0},"end":{"line":5459,"column":34}},"1277":{"start":{"line":5460,"column":0},"end":{"line":5460,"column":28}},"1278":{"start":{"line":5461,"column":0},"end":{"line":5461,"column":35}},"1279":{"start":{"line":5462,"column":0},"end":{"line":5462,"column":35}},"1280":{"start":{"line":5463,"column":0},"end":{"line":5463,"column":27}},"1281":{"start":{"line":5464,"column":0},"end":{"line":5464,"column":39}},"1282":{"start":{"line":5465,"column":0},"end":{"line":5465,"column":37}},"1283":{"start":{"line":5466,"column":0},"end":{"line":5466,"column":24}},"1284":{"start":{"line":5467,"column":0},"end":{"line":5467,"column":23}},"1285":{"start":{"line":5468,"column":0},"end":{"line":5468,"column":28}},"1286":{"start":{"line":5469,"column":0},"end":{"line":5469,"column":24}},"1287":{"start":{"line":5470,"column":0},"end":{"line":5470,"column":34}},"1288":{"start":{"line":5471,"column":0},"end":{"line":5471,"column":36}},"1289":{"start":{"line":5472,"column":0},"end":{"line":5472,"column":28}},"1290":{"start":{"line":5474,"column":0},"end":{"line":5474,"column":62}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":67},"end":{"line":2,"column":83}},{"start":{"line":3,"column":4},"end":{"line":4,"column":50}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":31}},{"start":{"line":2,"column":35},"end":{"line":2,"column":64}}]},"3":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":49},"end":{"line":3,"column":77}},{"start":{"line":4,"column":5},"end":{"line":4,"column":49}}]},"4":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":32}},{"start":{"line":3,"column":36},"end":{"line":3,"column":46}}]},"5":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":29},"end":{"line":4,"column":41}},{"start":{"line":4,"column":45},"end":{"line":4,"column":47}}]},"6":{"line":18,"type":"switch","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":38}},{"start":{"line":20,"column":4},"end":{"line":20,"column":47}},{"start":{"line":21,"column":4},"end":{"line":21,"column":56}},{"start":{"line":22,"column":4},"end":{"line":22,"column":65}}]},"7":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":43},"end":{"line":40,"column":58}},{"start":{"line":40,"column":62},"end":{"line":40,"column":67}}]},"8":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":9},"end":{"line":120,"column":22}},{"start":{"line":120,"column":27},"end":{"line":120,"column":43}},{"start":{"line":120,"column":47},"end":{"line":120,"column":65}}]},"9":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":8},"end":{"line":188,"column":8}},{"start":{"line":188,"column":8},"end":{"line":188,"column":8}}]},"10":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":12},"end":{"line":188,"column":28}},{"start":{"line":188,"column":32},"end":{"line":188,"column":65}}]},"11":{"line":192,"type":"cond-expr","locations":[{"start":{"line":192,"column":39},"end":{"line":192,"column":42}},{"start":{"line":192,"column":45},"end":{"line":192,"column":59}}]},"12":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":11},"end":{"line":214,"column":25}},{"start":{"line":214,"column":29},"end":{"line":214,"column":71}}]},"13":{"line":218,"type":"cond-expr","locations":[{"start":{"line":218,"column":30},"end":{"line":218,"column":47}},{"start":{"line":218,"column":50},"end":{"line":218,"column":57}}]},"14":{"line":221,"type":"cond-expr","locations":[{"start":{"line":221,"column":36},"end":{"line":221,"column":45}},{"start":{"line":221,"column":48},"end":{"line":221,"column":56}}]},"15":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":8},"end":{"line":231,"column":8}},{"start":{"line":231,"column":8},"end":{"line":231,"column":8}}]},"16":{"line":240,"type":"binary-expr","locations":[{"start":{"line":240,"column":17},"end":{"line":240,"column":42}},{"start":{"line":240,"column":46},"end":{"line":240,"column":52}},{"start":{"line":240,"column":56},"end":{"line":240,"column":80}},{"start":{"line":240,"column":84},"end":{"line":240,"column":90}}]},"17":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":15},"end":{"line":243,"column":38}},{"start":{"line":243,"column":42},"end":{"line":243,"column":46}},{"start":{"line":243,"column":50},"end":{"line":243,"column":72}},{"start":{"line":243,"column":76},"end":{"line":243,"column":80}}]},"18":{"line":246,"type":"binary-expr","locations":[{"start":{"line":246,"column":11},"end":{"line":246,"column":21}},{"start":{"line":246,"column":25},"end":{"line":246,"column":33}},{"start":{"line":246,"column":37},"end":{"line":246,"column":62}}]},"19":{"line":265,"type":"cond-expr","locations":[{"start":{"line":265,"column":34},"end":{"line":265,"column":54}},{"start":{"line":265,"column":57},"end":{"line":265,"column":66}}]},"20":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":2},"end":{"line":284,"column":2}},{"start":{"line":284,"column":2},"end":{"line":284,"column":2}}]},"21":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":4},"end":{"line":285,"column":4}},{"start":{"line":285,"column":4},"end":{"line":285,"column":4}}]},"22":{"line":320,"type":"cond-expr","locations":[{"start":{"line":320,"column":32},"end":{"line":320,"column":52}},{"start":{"line":320,"column":55},"end":{"line":320,"column":64}}]},"23":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":2},"end":{"line":330,"column":2}},{"start":{"line":330,"column":2},"end":{"line":330,"column":2}}]},"24":{"line":331,"type":"cond-expr","locations":[{"start":{"line":331,"column":33},"end":{"line":331,"column":45}},{"start":{"line":331,"column":48},"end":{"line":331,"column":55}}]},"25":{"line":334,"type":"cond-expr","locations":[{"start":{"line":335,"column":6},"end":{"line":335,"column":22}},{"start":{"line":336,"column":6},"end":{"line":336,"column":27}}]},"26":{"line":334,"type":"binary-expr","locations":[{"start":{"line":334,"column":10},"end":{"line":334,"column":24}},{"start":{"line":334,"column":28},"end":{"line":334,"column":51}}]},"27":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":2},"end":{"line":363,"column":2}},{"start":{"line":363,"column":2},"end":{"line":363,"column":2}}]},"28":{"line":369,"type":"binary-expr","locations":[{"start":{"line":369,"column":9},"end":{"line":369,"column":23}},{"start":{"line":369,"column":27},"end":{"line":369,"column":40}},{"start":{"line":369,"column":44},"end":{"line":369,"column":59}},{"start":{"line":369,"column":63},"end":{"line":369,"column":78}}]},"29":{"line":402,"type":"binary-expr","locations":[{"start":{"line":402,"column":9},"end":{"line":402,"column":33}},{"start":{"line":403,"column":4},"end":{"line":403,"column":14}},{"start":{"line":403,"column":18},"end":{"line":403,"column":32}},{"start":{"line":403,"column":36},"end":{"line":403,"column":61}}]},"30":{"line":432,"type":"binary-expr","locations":[{"start":{"line":432,"column":9},"end":{"line":432,"column":22}},{"start":{"line":432,"column":26},"end":{"line":432,"column":48}},{"start":{"line":432,"column":52},"end":{"line":432,"column":70}}]},"31":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":8},"end":{"line":457,"column":8}},{"start":{"line":457,"column":8},"end":{"line":457,"column":8}}]},"32":{"line":464,"type":"binary-expr","locations":[{"start":{"line":464,"column":21},"end":{"line":464,"column":49}},{"start":{"line":464,"column":53},"end":{"line":464,"column":68}}]},"33":{"line":467,"type":"binary-expr","locations":[{"start":{"line":467,"column":11},"end":{"line":467,"column":25}},{"start":{"line":467,"column":29},"end":{"line":467,"column":49}},{"start":{"line":467,"column":53},"end":{"line":467,"column":75}}]},"34":{"line":514,"type":"binary-expr","locations":[{"start":{"line":514,"column":9},"end":{"line":514,"column":22}},{"start":{"line":514,"column":26},"end":{"line":514,"column":50}}]},"35":{"line":528,"type":"binary-expr","locations":[{"start":{"line":528,"column":9},"end":{"line":528,"column":28}},{"start":{"line":528,"column":32},"end":{"line":528,"column":60}}]},"36":{"line":558,"type":"cond-expr","locations":[{"start":{"line":558,"column":72},"end":{"line":558,"column":87}},{"start":{"line":558,"column":90},"end":{"line":561,"column":1}}]},"37":{"line":559,"type":"binary-expr","locations":[{"start":{"line":559,"column":9},"end":{"line":559,"column":28}},{"start":{"line":559,"column":32},"end":{"line":559,"column":70}},{"start":{"line":560,"column":4},"end":{"line":560,"column":47}}]},"38":{"line":606,"type":"binary-expr","locations":[{"start":{"line":606,"column":18},"end":{"line":606,"column":44}},{"start":{"line":606,"column":48},"end":{"line":606,"column":55}},{"start":{"line":606,"column":59},"end":{"line":606,"column":76}},{"start":{"line":606,"column":80},"end":{"line":606,"column":87}}]},"39":{"line":609,"type":"binary-expr","locations":[{"start":{"line":609,"column":17},"end":{"line":609,"column":28}},{"start":{"line":609,"column":32},"end":{"line":609,"column":57}},{"start":{"line":609,"column":61},"end":{"line":609,"column":67}},{"start":{"line":609,"column":71},"end":{"line":609,"column":87}},{"start":{"line":609,"column":91},"end":{"line":609,"column":97}}]},"40":{"line":612,"type":"binary-expr","locations":[{"start":{"line":612,"column":20},"end":{"line":612,"column":30}},{"start":{"line":612,"column":34},"end":{"line":612,"column":68}}]},"41":{"line":615,"type":"cond-expr","locations":[{"start":{"line":615,"column":29},"end":{"line":615,"column":40}},{"start":{"line":615,"column":43},"end":{"line":615,"column":52}}]},"42":{"line":618,"type":"cond-expr","locations":[{"start":{"line":618,"column":30},"end":{"line":618,"column":45}},{"start":{"line":618,"column":48},"end":{"line":618,"column":57}}]},"43":{"line":637,"type":"binary-expr","locations":[{"start":{"line":637,"column":15},"end":{"line":637,"column":29}},{"start":{"line":637,"column":33},"end":{"line":637,"column":42}}]},"44":{"line":654,"type":"cond-expr","locations":[{"start":{"line":654,"column":28},"end":{"line":654,"column":46}},{"start":{"line":654,"column":49},"end":{"line":654,"column":55}}]},"45":{"line":655,"type":"binary-expr","locations":[{"start":{"line":655,"column":9},"end":{"line":655,"column":17}},{"start":{"line":656,"column":5},"end":{"line":656,"column":29}},{"start":{"line":656,"column":33},"end":{"line":656,"column":53}},{"start":{"line":657,"column":5},"end":{"line":657,"column":15}},{"start":{"line":657,"column":19},"end":{"line":657,"column":33}},{"start":{"line":657,"column":37},"end":{"line":657,"column":51}}]},"46":{"line":711,"type":"binary-expr","locations":[{"start":{"line":711,"column":9},"end":{"line":711,"column":28}},{"start":{"line":712,"column":4},"end":{"line":712,"column":26}},{"start":{"line":712,"column":30},"end":{"line":712,"column":65}}]},"47":{"line":729,"type":"binary-expr","locations":[{"start":{"line":729,"column":20},"end":{"line":729,"column":46}},{"start":{"line":729,"column":50},"end":{"line":729,"column":57}},{"start":{"line":729,"column":61},"end":{"line":729,"column":78}},{"start":{"line":729,"column":82},"end":{"line":729,"column":89}}]},"48":{"line":732,"type":"binary-expr","locations":[{"start":{"line":732,"column":19},"end":{"line":732,"column":32}},{"start":{"line":732,"column":36},"end":{"line":732,"column":61}},{"start":{"line":732,"column":65},"end":{"line":732,"column":71}},{"start":{"line":732,"column":75},"end":{"line":732,"column":91}},{"start":{"line":732,"column":95},"end":{"line":732,"column":101}}]},"49":{"line":735,"type":"binary-expr","locations":[{"start":{"line":735,"column":22},"end":{"line":735,"column":34}},{"start":{"line":735,"column":38},"end":{"line":735,"column":76}}]},"50":{"line":738,"type":"binary-expr","locations":[{"start":{"line":738,"column":18},"end":{"line":738,"column":33}},{"start":{"line":738,"column":37},"end":{"line":738,"column":55}}]},"51":{"line":743,"type":"binary-expr","locations":[{"start":{"line":743,"column":11},"end":{"line":743,"column":22}},{"start":{"line":743,"column":26},"end":{"line":743,"column":53}}]},"52":{"line":748,"type":"binary-expr","locations":[{"start":{"line":748,"column":23},"end":{"line":748,"column":31}},{"start":{"line":748,"column":35},"end":{"line":748,"column":56}}]},"53":{"line":767,"type":"cond-expr","locations":[{"start":{"line":767,"column":38},"end":{"line":767,"column":65}},{"start":{"line":767,"column":68},"end":{"line":767,"column":84}}]},"54":{"line":785,"type":"binary-expr","locations":[{"start":{"line":785,"column":14},"end":{"line":785,"column":20}},{"start":{"line":785,"column":24},"end":{"line":785,"column":42}}]},"55":{"line":786,"type":"binary-expr","locations":[{"start":{"line":786,"column":15},"end":{"line":786,"column":21}},{"start":{"line":786,"column":25},"end":{"line":786,"column":31}},{"start":{"line":786,"column":35},"end":{"line":786,"column":50}}]},"56":{"line":787,"type":"binary-expr","locations":[{"start":{"line":787,"column":15},"end":{"line":787,"column":21}},{"start":{"line":787,"column":25},"end":{"line":787,"column":31}},{"start":{"line":787,"column":35},"end":{"line":787,"column":42}},{"start":{"line":787,"column":46},"end":{"line":787,"column":65}}]},"57":{"line":788,"type":"binary-expr","locations":[{"start":{"line":788,"column":20},"end":{"line":788,"column":25}},{"start":{"line":788,"column":29},"end":{"line":788,"column":34}},{"start":{"line":788,"column":38},"end":{"line":788,"column":44}},{"start":{"line":788,"column":48},"end":{"line":788,"column":54}}]},"58":{"line":789,"type":"cond-expr","locations":[{"start":{"line":789,"column":29},"end":{"line":789,"column":60}},{"start":{"line":789,"column":63},"end":{"line":789,"column":65}}]},"59":{"line":793,"type":"if","locations":[{"start":{"line":793,"column":4},"end":{"line":793,"column":4}},{"start":{"line":793,"column":4},"end":{"line":793,"column":4}}]},"60":{"line":793,"type":"binary-expr","locations":[{"start":{"line":793,"column":9},"end":{"line":793,"column":18}},{"start":{"line":793,"column":22},"end":{"line":793,"column":55}},{"start":{"line":794,"column":8},"end":{"line":803,"column":10}}]},"61":{"line":794,"type":"binary-expr","locations":[{"start":{"line":794,"column":10},"end":{"line":794,"column":21}},{"start":{"line":796,"column":11},"end":{"line":796,"column":26}},{"start":{"line":798,"column":12},"end":{"line":798,"column":18}},{"start":{"line":798,"column":23},"end":{"line":798,"column":38}},{"start":{"line":798,"column":42},"end":{"line":798,"column":57}},{"start":{"line":800,"column":12},"end":{"line":800,"column":18}},{"start":{"line":800,"column":23},"end":{"line":800,"column":38}},{"start":{"line":800,"column":42},"end":{"line":800,"column":61}},{"start":{"line":800,"column":65},"end":{"line":800,"column":84}},{"start":{"line":802,"column":11},"end":{"line":802,"column":31}}]},"62":{"line":821,"type":"binary-expr","locations":[{"start":{"line":821,"column":13},"end":{"line":821,"column":18}},{"start":{"line":821,"column":22},"end":{"line":821,"column":39}}]},"63":{"line":822,"type":"binary-expr","locations":[{"start":{"line":822,"column":15},"end":{"line":822,"column":40}},{"start":{"line":822,"column":44},"end":{"line":822,"column":58}},{"start":{"line":822,"column":63},"end":{"line":822,"column":76}}]},"64":{"line":858,"type":"if","locations":[{"start":{"line":858,"column":2},"end":{"line":858,"column":2}},{"start":{"line":858,"column":2},"end":{"line":858,"column":2}}]},"65":{"line":863,"type":"if","locations":[{"start":{"line":863,"column":4},"end":{"line":863,"column":4}},{"start":{"line":863,"column":4},"end":{"line":863,"column":4}}]},"66":{"line":863,"type":"binary-expr","locations":[{"start":{"line":863,"column":8},"end":{"line":863,"column":42}},{"start":{"line":863,"column":46},"end":{"line":863,"column":66}}]},"67":{"line":899,"type":"cond-expr","locations":[{"start":{"line":899,"column":31},"end":{"line":899,"column":52}},{"start":{"line":899,"column":55},"end":{"line":899,"column":71}}]},"68":{"line":906,"type":"cond-expr","locations":[{"start":{"line":906,"column":27},"end":{"line":906,"column":53}},{"start":{"line":906,"column":56},"end":{"line":906,"column":60}}]},"69":{"line":914,"type":"if","locations":[{"start":{"line":914,"column":8},"end":{"line":914,"column":8}},{"start":{"line":914,"column":8},"end":{"line":914,"column":8}}]},"70":{"line":926,"type":"cond-expr","locations":[{"start":{"line":926,"column":25},"end":{"line":926,"column":54}},{"start":{"line":926,"column":57},"end":{"line":926,"column":61}}]},"71":{"line":931,"type":"if","locations":[{"start":{"line":931,"column":4},"end":{"line":931,"column":4}},{"start":{"line":931,"column":4},"end":{"line":931,"column":4}}]},"72":{"line":936,"type":"cond-expr","locations":[{"start":{"line":936,"column":22},"end":{"line":936,"column":52}},{"start":{"line":936,"column":55},"end":{"line":936,"column":81}}]},"73":{"line":941,"type":"if","locations":[{"start":{"line":941,"column":8},"end":{"line":941,"column":8}},{"start":{"line":941,"column":8},"end":{"line":941,"column":8}}]},"74":{"line":950,"type":"binary-expr","locations":[{"start":{"line":950,"column":24},"end":{"line":950,"column":32}},{"start":{"line":950,"column":36},"end":{"line":950,"column":40}}]},"75":{"line":951,"type":"if","locations":[{"start":{"line":951,"column":8},"end":{"line":951,"column":8}},{"start":{"line":951,"column":8},"end":{"line":951,"column":8}}]},"76":{"line":951,"type":"binary-expr","locations":[{"start":{"line":951,"column":12},"end":{"line":951,"column":22}},{"start":{"line":951,"column":26},"end":{"line":951,"column":30}}]},"77":{"line":960,"type":"if","locations":[{"start":{"line":960,"column":12},"end":{"line":960,"column":12}},{"start":{"line":960,"column":12},"end":{"line":960,"column":12}}]},"78":{"line":963,"type":"if","locations":[{"start":{"line":963,"column":19},"end":{"line":963,"column":19}},{"start":{"line":963,"column":19},"end":{"line":963,"column":19}}]},"79":{"line":963,"type":"binary-expr","locations":[{"start":{"line":963,"column":23},"end":{"line":963,"column":42}},{"start":{"line":963,"column":46},"end":{"line":963,"column":50}},{"start":{"line":963,"column":54},"end":{"line":963,"column":66}}]},"80":{"line":972,"type":"binary-expr","locations":[{"start":{"line":972,"column":19},"end":{"line":972,"column":34}},{"start":{"line":972,"column":38},"end":{"line":972,"column":43}}]},"81":{"line":974,"type":"if","locations":[{"start":{"line":974,"column":16},"end":{"line":974,"column":16}},{"start":{"line":974,"column":16},"end":{"line":974,"column":16}}]},"82":{"line":976,"type":"if","locations":[{"start":{"line":976,"column":20},"end":{"line":976,"column":20}},{"start":{"line":976,"column":20},"end":{"line":976,"column":20}}]},"83":{"line":1022,"type":"binary-expr","locations":[{"start":{"line":1022,"column":20},"end":{"line":1022,"column":28}},{"start":{"line":1022,"column":32},"end":{"line":1022,"column":36}}]},"84":{"line":1026,"type":"if","locations":[{"start":{"line":1026,"column":4},"end":{"line":1026,"column":4}},{"start":{"line":1026,"column":4},"end":{"line":1026,"column":4}}]},"85":{"line":1031,"type":"if","locations":[{"start":{"line":1031,"column":8},"end":{"line":1031,"column":8}},{"start":{"line":1031,"column":8},"end":{"line":1031,"column":8}}]},"86":{"line":1033,"type":"if","locations":[{"start":{"line":1033,"column":15},"end":{"line":1033,"column":15}},{"start":{"line":1033,"column":15},"end":{"line":1033,"column":15}}]},"87":{"line":1033,"type":"binary-expr","locations":[{"start":{"line":1033,"column":19},"end":{"line":1033,"column":41}},{"start":{"line":1033,"column":45},"end":{"line":1033,"column":64}}]},"88":{"line":1086,"type":"cond-expr","locations":[{"start":{"line":1086,"column":51},"end":{"line":1086,"column":66}},{"start":{"line":1086,"column":69},"end":{"line":1086,"column":82}}]},"89":{"line":1097,"type":"binary-expr","locations":[{"start":{"line":1097,"column":15},"end":{"line":1097,"column":23}},{"start":{"line":1097,"column":27},"end":{"line":1097,"column":31}}]},"90":{"line":1098,"type":"binary-expr","locations":[{"start":{"line":1098,"column":10},"end":{"line":1098,"column":13}},{"start":{"line":1098,"column":17},"end":{"line":1098,"column":19}}]},"91":{"line":1316,"type":"cond-expr","locations":[{"start":{"line":1316,"column":31},"end":{"line":1316,"column":32}},{"start":{"line":1316,"column":35},"end":{"line":1316,"column":47}}]},"92":{"line":1319,"type":"if","locations":[{"start":{"line":1319,"column":4},"end":{"line":1319,"column":4}},{"start":{"line":1319,"column":4},"end":{"line":1319,"column":4}}]},"93":{"line":1341,"type":"cond-expr","locations":[{"start":{"line":1341,"column":34},"end":{"line":1341,"column":40}},{"start":{"line":1341,"column":43},"end":{"line":1341,"column":50}}]},"94":{"line":1342,"type":"if","locations":[{"start":{"line":1342,"column":6},"end":{"line":1342,"column":6}},{"start":{"line":1342,"column":6},"end":{"line":1342,"column":6}}]},"95":{"line":1372,"type":"binary-expr","locations":[{"start":{"line":1372,"column":9},"end":{"line":1372,"column":15}},{"start":{"line":1372,"column":19},"end":{"line":1372,"column":50}}]},"96":{"line":1388,"type":"cond-expr","locations":[{"start":{"line":1388,"column":39},"end":{"line":1388,"column":40}},{"start":{"line":1388,"column":43},"end":{"line":1388,"column":45}}]},"97":{"line":1390,"type":"cond-expr","locations":[{"start":{"line":1390,"column":22},"end":{"line":1390,"column":29}},{"start":{"line":1390,"column":32},"end":{"line":1390,"column":48}}]},"98":{"line":1391,"type":"if","locations":[{"start":{"line":1391,"column":4},"end":{"line":1391,"column":4}},{"start":{"line":1391,"column":4},"end":{"line":1391,"column":4}}]},"99":{"line":1424,"type":"if","locations":[{"start":{"line":1424,"column":4},"end":{"line":1424,"column":4}},{"start":{"line":1424,"column":4},"end":{"line":1424,"column":4}}]},"100":{"line":1441,"type":"cond-expr","locations":[{"start":{"line":1442,"column":6},"end":{"line":1442,"column":44}},{"start":{"line":1443,"column":6},"end":{"line":1443,"column":48}}]},"101":{"line":1526,"type":"if","locations":[{"start":{"line":1526,"column":4},"end":{"line":1526,"column":4}},{"start":{"line":1526,"column":4},"end":{"line":1526,"column":4}}]},"102":{"line":1531,"type":"binary-expr","locations":[{"start":{"line":1531,"column":20},"end":{"line":1531,"column":28}},{"start":{"line":1531,"column":32},"end":{"line":1531,"column":36}}]},"103":{"line":1534,"type":"if","locations":[{"start":{"line":1534,"column":4},"end":{"line":1534,"column":4}},{"start":{"line":1534,"column":4},"end":{"line":1534,"column":4}}]},"104":{"line":1537,"type":"if","locations":[{"start":{"line":1537,"column":4},"end":{"line":1537,"column":4}},{"start":{"line":1537,"column":4},"end":{"line":1537,"column":4}}]},"105":{"line":1555,"type":"if","locations":[{"start":{"line":1555,"column":8},"end":{"line":1555,"column":8}},{"start":{"line":1555,"column":8},"end":{"line":1555,"column":8}}]},"106":{"line":1564,"type":"if","locations":[{"start":{"line":1564,"column":8},"end":{"line":1564,"column":8}},{"start":{"line":1564,"column":8},"end":{"line":1564,"column":8}}]},"107":{"line":1572,"type":"if","locations":[{"start":{"line":1572,"column":12},"end":{"line":1572,"column":12}},{"start":{"line":1572,"column":12},"end":{"line":1572,"column":12}}]},"108":{"line":1577,"type":"if","locations":[{"start":{"line":1577,"column":16},"end":{"line":1577,"column":16}},{"start":{"line":1577,"column":16},"end":{"line":1577,"column":16}}]},"109":{"line":1594,"type":"if","locations":[{"start":{"line":1594,"column":8},"end":{"line":1594,"column":8}},{"start":{"line":1594,"column":8},"end":{"line":1594,"column":8}}]},"110":{"line":1594,"type":"binary-expr","locations":[{"start":{"line":1594,"column":12},"end":{"line":1594,"column":35}},{"start":{"line":1594,"column":39},"end":{"line":1594,"column":57}}]},"111":{"line":1597,"type":"binary-expr","locations":[{"start":{"line":1597,"column":15},"end":{"line":1597,"column":32}},{"start":{"line":1597,"column":36},"end":{"line":1597,"column":62}}]},"112":{"line":1605,"type":"if","locations":[{"start":{"line":1605,"column":8},"end":{"line":1605,"column":8}},{"start":{"line":1605,"column":8},"end":{"line":1605,"column":8}}]},"113":{"line":1613,"type":"binary-expr","locations":[{"start":{"line":1613,"column":28},"end":{"line":1613,"column":47}},{"start":{"line":1613,"column":51},"end":{"line":1613,"column":53}}]},"114":{"line":1621,"type":"if","locations":[{"start":{"line":1621,"column":8},"end":{"line":1621,"column":8}},{"start":{"line":1621,"column":8},"end":{"line":1621,"column":8}}]},"115":{"line":1625,"type":"if","locations":[{"start":{"line":1625,"column":12},"end":{"line":1625,"column":12}},{"start":{"line":1625,"column":12},"end":{"line":1625,"column":12}}]},"116":{"line":1628,"type":"if","locations":[{"start":{"line":1628,"column":12},"end":{"line":1628,"column":12}},{"start":{"line":1628,"column":12},"end":{"line":1628,"column":12}}]},"117":{"line":1646,"type":"if","locations":[{"start":{"line":1646,"column":8},"end":{"line":1646,"column":8}},{"start":{"line":1646,"column":8},"end":{"line":1646,"column":8}}]},"118":{"line":1663,"type":"if","locations":[{"start":{"line":1663,"column":16},"end":{"line":1663,"column":16}},{"start":{"line":1663,"column":16},"end":{"line":1663,"column":16}}]},"119":{"line":1669,"type":"if","locations":[{"start":{"line":1669,"column":8},"end":{"line":1669,"column":8}},{"start":{"line":1669,"column":8},"end":{"line":1669,"column":8}}]},"120":{"line":1677,"type":"if","locations":[{"start":{"line":1677,"column":12},"end":{"line":1677,"column":12}},{"start":{"line":1677,"column":12},"end":{"line":1677,"column":12}}]},"121":{"line":1677,"type":"binary-expr","locations":[{"start":{"line":1677,"column":16},"end":{"line":1677,"column":29}},{"start":{"line":1677,"column":33},"end":{"line":1677,"column":68}}]},"122":{"line":1696,"type":"cond-expr","locations":[{"start":{"line":1696,"column":31},"end":{"line":1696,"column":32}},{"start":{"line":1696,"column":35},"end":{"line":1696,"column":47}}]},"123":{"line":1726,"type":"binary-expr","locations":[{"start":{"line":1726,"column":9},"end":{"line":1726,"column":33}},{"start":{"line":1727,"column":5},"end":{"line":1727,"column":24}},{"start":{"line":1727,"column":28},"end":{"line":1727,"column":58}}]},"124":{"line":1734,"type":"cond-expr","locations":[{"start":{"line":1734,"column":29},"end":{"line":1734,"column":47}},{"start":{"line":1734,"column":50},"end":{"line":1734,"column":59}}]},"125":{"line":1735,"type":"cond-expr","locations":[{"start":{"line":1735,"column":35},"end":{"line":1735,"column":55}},{"start":{"line":1735,"column":58},"end":{"line":1735,"column":67}}]},"126":{"line":1747,"type":"if","locations":[{"start":{"line":1747,"column":2},"end":{"line":1747,"column":2}},{"start":{"line":1747,"column":2},"end":{"line":1747,"column":2}}]},"127":{"line":1750,"type":"if","locations":[{"start":{"line":1750,"column":2},"end":{"line":1750,"column":2}},{"start":{"line":1750,"column":2},"end":{"line":1750,"column":2}}]},"128":{"line":1754,"type":"if","locations":[{"start":{"line":1754,"column":2},"end":{"line":1754,"column":2}},{"start":{"line":1754,"column":2},"end":{"line":1754,"column":2}}]},"129":{"line":1755,"type":"cond-expr","locations":[{"start":{"line":1755,"column":28},"end":{"line":1755,"column":54}},{"start":{"line":1755,"column":57},"end":{"line":1755,"column":59}}]},"130":{"line":1758,"type":"cond-expr","locations":[{"start":{"line":1758,"column":55},"end":{"line":1758,"column":59}},{"start":{"line":1758,"column":62},"end":{"line":1758,"column":68}}]},"131":{"line":1758,"type":"binary-expr","locations":[{"start":{"line":1758,"column":10},"end":{"line":1758,"column":23}},{"start":{"line":1758,"column":27},"end":{"line":1758,"column":51}}]},"132":{"line":1774,"type":"if","locations":[{"start":{"line":1774,"column":2},"end":{"line":1774,"column":2}},{"start":{"line":1774,"column":2},"end":{"line":1774,"column":2}}]},"133":{"line":1775,"type":"cond-expr","locations":[{"start":{"line":1775,"column":30},"end":{"line":1775,"column":31}},{"start":{"line":1775,"column":35},"end":{"line":1775,"column":49}}]},"134":{"line":1777,"type":"cond-expr","locations":[{"start":{"line":1777,"column":23},"end":{"line":1777,"column":29}},{"start":{"line":1777,"column":32},"end":{"line":1777,"column":35}}]},"135":{"line":1778,"type":"if","locations":[{"start":{"line":1778,"column":2},"end":{"line":1778,"column":2}},{"start":{"line":1778,"column":2},"end":{"line":1778,"column":2}}]},"136":{"line":1781,"type":"cond-expr","locations":[{"start":{"line":1781,"column":25},"end":{"line":1781,"column":26}},{"start":{"line":1781,"column":30},"end":{"line":1781,"column":49}}]},"137":{"line":1802,"type":"cond-expr","locations":[{"start":{"line":1802,"column":28},"end":{"line":1802,"column":34}},{"start":{"line":1802,"column":37},"end":{"line":1802,"column":40}}]},"138":{"line":1803,"type":"cond-expr","locations":[{"start":{"line":1803,"column":37},"end":{"line":1803,"column":42}},{"start":{"line":1803,"column":45},"end":{"line":1803,"column":73}}]},"139":{"line":1803,"type":"binary-expr","locations":[{"start":{"line":1803,"column":10},"end":{"line":1803,"column":16}},{"start":{"line":1803,"column":20},"end":{"line":1803,"column":33}}]},"140":{"line":1818,"type":"binary-expr","locations":[{"start":{"line":1818,"column":9},"end":{"line":1818,"column":16}},{"start":{"line":1818,"column":20},"end":{"line":1818,"column":70}}]},"141":{"line":1835,"type":"binary-expr","locations":[{"start":{"line":1835,"column":9},"end":{"line":1835,"column":25}},{"start":{"line":1835,"column":29},"end":{"line":1835,"column":79}}]},"142":{"line":1907,"type":"binary-expr","locations":[{"start":{"line":1907,"column":9},"end":{"line":1907,"column":32}},{"start":{"line":1907,"column":36},"end":{"line":1907,"column":38}}]},"143":{"line":1918,"type":"cond-expr","locations":[{"start":{"line":1919,"column":6},"end":{"line":1919,"column":28}},{"start":{"line":1920,"column":6},"end":{"line":1920,"column":26}}]},"144":{"line":1945,"type":"cond-expr","locations":[{"start":{"line":1945,"column":25},"end":{"line":1945,"column":27}},{"start":{"line":1945,"column":30},"end":{"line":1945,"column":49}}]},"145":{"line":1975,"type":"if","locations":[{"start":{"line":1975,"column":2},"end":{"line":1975,"column":2}},{"start":{"line":1975,"column":2},"end":{"line":1975,"column":2}}]},"146":{"line":1975,"type":"binary-expr","locations":[{"start":{"line":1975,"column":6},"end":{"line":1975,"column":12}},{"start":{"line":1975,"column":17},"end":{"line":1975,"column":22}},{"start":{"line":1975,"column":26},"end":{"line":1975,"column":45}}]},"147":{"line":1978,"type":"if","locations":[{"start":{"line":1978,"column":2},"end":{"line":1978,"column":2}},{"start":{"line":1978,"column":2},"end":{"line":1978,"column":2}}]},"148":{"line":1978,"type":"binary-expr","locations":[{"start":{"line":1978,"column":6},"end":{"line":1978,"column":13}},{"start":{"line":1978,"column":17},"end":{"line":1978,"column":47}}]},"149":{"line":1997,"type":"cond-expr","locations":[{"start":{"line":1997,"column":18},"end":{"line":1997,"column":42}},{"start":{"line":1997,"column":45},"end":{"line":1997,"column":47}}]},"150":{"line":2092,"type":"binary-expr","locations":[{"start":{"line":2092,"column":24},"end":{"line":2092,"column":34}},{"start":{"line":2092,"column":38},"end":{"line":2092,"column":57}},{"start":{"line":2092,"column":61},"end":{"line":2092,"column":70}},{"start":{"line":2092,"column":74},"end":{"line":2092,"column":93}}]},"151":{"line":2094,"type":"if","locations":[{"start":{"line":2094,"column":8},"end":{"line":2094,"column":8}},{"start":{"line":2094,"column":8},"end":{"line":2094,"column":8}}]},"152":{"line":2098,"type":"cond-expr","locations":[{"start":{"line":2098,"column":62},"end":{"line":2098,"column":69}},{"start":{"line":2098,"column":72},"end":{"line":2098,"column":78}}]},"153":{"line":2099,"type":"if","locations":[{"start":{"line":2099,"column":15},"end":{"line":2099,"column":15}},{"start":{"line":2099,"column":15},"end":{"line":2099,"column":15}}]},"154":{"line":2104,"type":"if","locations":[{"start":{"line":2104,"column":12},"end":{"line":2104,"column":12}},{"start":{"line":2104,"column":12},"end":{"line":2104,"column":12}}]},"155":{"line":2104,"type":"binary-expr","locations":[{"start":{"line":2104,"column":16},"end":{"line":2104,"column":35}},{"start":{"line":2104,"column":39},"end":{"line":2104,"column":49}},{"start":{"line":2104,"column":53},"end":{"line":2104,"column":72}}]},"156":{"line":2109,"type":"if","locations":[{"start":{"line":2109,"column":12},"end":{"line":2109,"column":12}},{"start":{"line":2109,"column":12},"end":{"line":2109,"column":12}}]},"157":{"line":2126,"type":"binary-expr","locations":[{"start":{"line":2126,"column":22},"end":{"line":2126,"column":56}},{"start":{"line":2126,"column":60},"end":{"line":2126,"column":72}}]},"158":{"line":2127,"type":"binary-expr","locations":[{"start":{"line":2127,"column":18},"end":{"line":2127,"column":45}},{"start":{"line":2127,"column":49},"end":{"line":2127,"column":87}}]},"159":{"line":2143,"type":"if","locations":[{"start":{"line":2143,"column":0},"end":{"line":2143,"column":0}},{"start":{"line":2143,"column":0},"end":{"line":2143,"column":0}}]},"160":{"line":2145,"type":"if","locations":[{"start":{"line":2145,"column":7},"end":{"line":2145,"column":7}},{"start":{"line":2145,"column":7},"end":{"line":2145,"column":7}}]},"161":{"line":2168,"type":"if","locations":[{"start":{"line":2168,"column":4},"end":{"line":2168,"column":4}},{"start":{"line":2168,"column":4},"end":{"line":2168,"column":4}}]},"162":{"line":2169,"type":"if","locations":[{"start":{"line":2169,"column":4},"end":{"line":2169,"column":4}},{"start":{"line":2169,"column":4},"end":{"line":2169,"column":4}}]},"163":{"line":2181,"type":"if","locations":[{"start":{"line":2181,"column":4},"end":{"line":2181,"column":4}},{"start":{"line":2181,"column":4},"end":{"line":2181,"column":4}}]},"164":{"line":2189,"type":"if","locations":[{"start":{"line":2189,"column":4},"end":{"line":2189,"column":4}},{"start":{"line":2189,"column":4},"end":{"line":2189,"column":4}}]},"165":{"line":2195,"type":"if","locations":[{"start":{"line":2195,"column":4},"end":{"line":2195,"column":4}},{"start":{"line":2195,"column":4},"end":{"line":2195,"column":4}}]},"166":{"line":2199,"type":"if","locations":[{"start":{"line":2199,"column":4},"end":{"line":2199,"column":4}},{"start":{"line":2199,"column":4},"end":{"line":2199,"column":4}}]},"167":{"line":2203,"type":"binary-expr","locations":[{"start":{"line":2203,"column":11},"end":{"line":2203,"column":20}},{"start":{"line":2203,"column":24},"end":{"line":2203,"column":50}}]},"168":{"line":2207,"type":"binary-expr","locations":[{"start":{"line":2207,"column":11},"end":{"line":2207,"column":20}},{"start":{"line":2207,"column":24},"end":{"line":2207,"column":50}}]},"169":{"line":2211,"type":"if","locations":[{"start":{"line":2211,"column":4},"end":{"line":2211,"column":4}},{"start":{"line":2211,"column":4},"end":{"line":2211,"column":4}}]},"170":{"line":2213,"type":"if","locations":[{"start":{"line":2213,"column":11},"end":{"line":2213,"column":11}},{"start":{"line":2213,"column":11},"end":{"line":2213,"column":11}}]},"171":{"line":2222,"type":"if","locations":[{"start":{"line":2222,"column":8},"end":{"line":2222,"column":8}},{"start":{"line":2222,"column":8},"end":{"line":2222,"column":8}}]},"172":{"line":2222,"type":"binary-expr","locations":[{"start":{"line":2222,"column":12},"end":{"line":2222,"column":28}},{"start":{"line":2222,"column":32},"end":{"line":2222,"column":62}}]},"173":{"line":2226,"type":"if","locations":[{"start":{"line":2226,"column":8},"end":{"line":2226,"column":8}},{"start":{"line":2226,"column":8},"end":{"line":2226,"column":8}}]},"174":{"line":2229,"type":"if","locations":[{"start":{"line":2229,"column":8},"end":{"line":2229,"column":8}},{"start":{"line":2229,"column":8},"end":{"line":2229,"column":8}}]},"175":{"line":2229,"type":"binary-expr","locations":[{"start":{"line":2229,"column":12},"end":{"line":2229,"column":29}},{"start":{"line":2229,"column":33},"end":{"line":2229,"column":41}}]},"176":{"line":2239,"type":"binary-expr","locations":[{"start":{"line":2239,"column":26},"end":{"line":2239,"column":34}},{"start":{"line":2239,"column":38},"end":{"line":2239,"column":42}}]},"177":{"line":2242,"type":"if","locations":[{"start":{"line":2242,"column":12},"end":{"line":2242,"column":12}},{"start":{"line":2242,"column":12},"end":{"line":2242,"column":12}}]},"178":{"line":2258,"type":"if","locations":[{"start":{"line":2258,"column":16},"end":{"line":2258,"column":16}},{"start":{"line":2258,"column":16},"end":{"line":2258,"column":16}}]},"179":{"line":2264,"type":"if","locations":[{"start":{"line":2264,"column":16},"end":{"line":2264,"column":16}},{"start":{"line":2264,"column":16},"end":{"line":2264,"column":16}}]},"180":{"line":2269,"type":"if","locations":[{"start":{"line":2269,"column":12},"end":{"line":2269,"column":12}},{"start":{"line":2269,"column":12},"end":{"line":2269,"column":12}}]},"181":{"line":2273,"type":"if","locations":[{"start":{"line":2273,"column":12},"end":{"line":2273,"column":12}},{"start":{"line":2273,"column":12},"end":{"line":2273,"column":12}}]},"182":{"line":2306,"type":"if","locations":[{"start":{"line":2306,"column":12},"end":{"line":2306,"column":12}},{"start":{"line":2306,"column":12},"end":{"line":2306,"column":12}}]},"183":{"line":2310,"type":"binary-expr","locations":[{"start":{"line":2310,"column":19},"end":{"line":2310,"column":28}},{"start":{"line":2310,"column":32},"end":{"line":2310,"column":58}},{"start":{"line":2310,"column":62},"end":{"line":2310,"column":77}}]},"184":{"line":2314,"type":"if","locations":[{"start":{"line":2314,"column":16},"end":{"line":2314,"column":16}},{"start":{"line":2314,"column":16},"end":{"line":2314,"column":16}}]},"185":{"line":2321,"type":"if","locations":[{"start":{"line":2321,"column":16},"end":{"line":2321,"column":16}},{"start":{"line":2321,"column":16},"end":{"line":2321,"column":16}}]},"186":{"line":2327,"type":"if","locations":[{"start":{"line":2327,"column":16},"end":{"line":2327,"column":16}},{"start":{"line":2327,"column":16},"end":{"line":2327,"column":16}}]},"187":{"line":2352,"type":"if","locations":[{"start":{"line":2352,"column":12},"end":{"line":2352,"column":12}},{"start":{"line":2352,"column":12},"end":{"line":2352,"column":12}}]},"188":{"line":2503,"type":"binary-expr","locations":[{"start":{"line":2503,"column":20},"end":{"line":2503,"column":28}},{"start":{"line":2503,"column":32},"end":{"line":2503,"column":36}}]},"189":{"line":2559,"type":"if","locations":[{"start":{"line":2559,"column":8},"end":{"line":2559,"column":8}},{"start":{"line":2559,"column":8},"end":{"line":2559,"column":8}}]},"190":{"line":2618,"type":"binary-expr","locations":[{"start":{"line":2618,"column":35},"end":{"line":2618,"column":36}},{"start":{"line":2618,"column":40},"end":{"line":2618,"column":42}}]},"191":{"line":2730,"type":"binary-expr","locations":[{"start":{"line":2730,"column":13},"end":{"line":2730,"column":15}},{"start":{"line":2730,"column":19},"end":{"line":2730,"column":23}}]},"192":{"line":2735,"type":"if","locations":[{"start":{"line":2735,"column":16},"end":{"line":2735,"column":16}},{"start":{"line":2735,"column":16},"end":{"line":2735,"column":16}}]},"193":{"line":2737,"type":"if","locations":[{"start":{"line":2737,"column":23},"end":{"line":2737,"column":23}},{"start":{"line":2737,"column":23},"end":{"line":2737,"column":23}}]},"194":{"line":2737,"type":"binary-expr","locations":[{"start":{"line":2737,"column":27},"end":{"line":2737,"column":40}},{"start":{"line":2737,"column":44},"end":{"line":2737,"column":55}}]},"195":{"line":2746,"type":"if","locations":[{"start":{"line":2746,"column":12},"end":{"line":2746,"column":12}},{"start":{"line":2746,"column":12},"end":{"line":2746,"column":12}}]},"196":{"line":2749,"type":"cond-expr","locations":[{"start":{"line":2749,"column":38},"end":{"line":2749,"column":48}},{"start":{"line":2749,"column":51},"end":{"line":2749,"column":67}}]},"197":{"line":2845,"type":"if","locations":[{"start":{"line":2845,"column":12},"end":{"line":2845,"column":12}},{"start":{"line":2845,"column":12},"end":{"line":2845,"column":12}}]},"198":{"line":2846,"type":"if","locations":[{"start":{"line":2846,"column":16},"end":{"line":2846,"column":16}},{"start":{"line":2846,"column":16},"end":{"line":2846,"column":16}}]},"199":{"line":2847,"type":"if","locations":[{"start":{"line":2847,"column":20},"end":{"line":2847,"column":20}},{"start":{"line":2847,"column":20},"end":{"line":2847,"column":20}}]},"200":{"line":2850,"type":"if","locations":[{"start":{"line":2850,"column":23},"end":{"line":2850,"column":23}},{"start":{"line":2850,"column":23},"end":{"line":2850,"column":23}}]},"201":{"line":2912,"type":"binary-expr","locations":[{"start":{"line":2912,"column":24},"end":{"line":2912,"column":32}},{"start":{"line":2912,"column":36},"end":{"line":2912,"column":40}}]},"202":{"line":2917,"type":"if","locations":[{"start":{"line":2917,"column":8},"end":{"line":2917,"column":8}},{"start":{"line":2917,"column":8},"end":{"line":2917,"column":8}}]},"203":{"line":2923,"type":"if","locations":[{"start":{"line":2923,"column":8},"end":{"line":2923,"column":8}},{"start":{"line":2923,"column":8},"end":{"line":2923,"column":8}}]},"204":{"line":2924,"type":"if","locations":[{"start":{"line":2924,"column":8},"end":{"line":2924,"column":8}},{"start":{"line":2924,"column":8},"end":{"line":2924,"column":8}}]},"205":{"line":2954,"type":"binary-expr","locations":[{"start":{"line":2954,"column":24},"end":{"line":2954,"column":32}},{"start":{"line":2954,"column":36},"end":{"line":2954,"column":40}}]},"206":{"line":2957,"type":"if","locations":[{"start":{"line":2957,"column":8},"end":{"line":2957,"column":8}},{"start":{"line":2957,"column":8},"end":{"line":2957,"column":8}}]},"207":{"line":2958,"type":"if","locations":[{"start":{"line":2958,"column":8},"end":{"line":2958,"column":8}},{"start":{"line":2958,"column":8},"end":{"line":2958,"column":8}}]},"208":{"line":3027,"type":"binary-expr","locations":[{"start":{"line":3027,"column":24},"end":{"line":3027,"column":32}},{"start":{"line":3027,"column":36},"end":{"line":3027,"column":40}}]},"209":{"line":3032,"type":"if","locations":[{"start":{"line":3032,"column":8},"end":{"line":3032,"column":8}},{"start":{"line":3032,"column":8},"end":{"line":3032,"column":8}}]},"210":{"line":3037,"type":"if","locations":[{"start":{"line":3037,"column":8},"end":{"line":3037,"column":8}},{"start":{"line":3037,"column":8},"end":{"line":3037,"column":8}}]},"211":{"line":3038,"type":"if","locations":[{"start":{"line":3038,"column":8},"end":{"line":3038,"column":8}},{"start":{"line":3038,"column":8},"end":{"line":3038,"column":8}}]},"212":{"line":3193,"type":"if","locations":[{"start":{"line":3193,"column":4},"end":{"line":3193,"column":4}},{"start":{"line":3193,"column":4},"end":{"line":3193,"column":4}}]},"213":{"line":3198,"type":"if","locations":[{"start":{"line":3198,"column":12},"end":{"line":3198,"column":12}},{"start":{"line":3198,"column":12},"end":{"line":3198,"column":12}}]},"214":{"line":3297,"type":"cond-expr","locations":[{"start":{"line":3297,"column":28},"end":{"line":3297,"column":37}},{"start":{"line":3297,"column":40},"end":{"line":3297,"column":51}}]},"215":{"line":3309,"type":"if","locations":[{"start":{"line":3309,"column":8},"end":{"line":3309,"column":8}},{"start":{"line":3309,"column":8},"end":{"line":3309,"column":8}}]},"216":{"line":3312,"type":"if","locations":[{"start":{"line":3312,"column":12},"end":{"line":3312,"column":12}},{"start":{"line":3312,"column":12},"end":{"line":3312,"column":12}}]},"217":{"line":3322,"type":"if","locations":[{"start":{"line":3322,"column":12},"end":{"line":3322,"column":12}},{"start":{"line":3322,"column":12},"end":{"line":3322,"column":12}}]},"218":{"line":3325,"type":"if","locations":[{"start":{"line":3325,"column":16},"end":{"line":3325,"column":16}},{"start":{"line":3325,"column":16},"end":{"line":3325,"column":16}}]},"219":{"line":3332,"type":"if","locations":[{"start":{"line":3332,"column":8},"end":{"line":3332,"column":8}},{"start":{"line":3332,"column":8},"end":{"line":3332,"column":8}}]},"220":{"line":3343,"type":"cond-expr","locations":[{"start":{"line":3343,"column":37},"end":{"line":3343,"column":48}},{"start":{"line":3343,"column":51},"end":{"line":3343,"column":64}}]},"221":{"line":3344,"type":"binary-expr","locations":[{"start":{"line":3344,"column":48},"end":{"line":3344,"column":56}},{"start":{"line":3344,"column":60},"end":{"line":3344,"column":64}}]},"222":{"line":3446,"type":"binary-expr","locations":[{"start":{"line":3446,"column":24},"end":{"line":3446,"column":31}},{"start":{"line":3446,"column":35},"end":{"line":3446,"column":39}}]},"223":{"line":3450,"type":"if","locations":[{"start":{"line":3450,"column":8},"end":{"line":3450,"column":8}},{"start":{"line":3450,"column":8},"end":{"line":3450,"column":8}}]},"224":{"line":3476,"type":"binary-expr","locations":[{"start":{"line":3476,"column":15},"end":{"line":3476,"column":23}},{"start":{"line":3476,"column":27},"end":{"line":3476,"column":31}}]},"225":{"line":3480,"type":"if","locations":[{"start":{"line":3480,"column":12},"end":{"line":3480,"column":12}},{"start":{"line":3480,"column":12},"end":{"line":3480,"column":12}}]},"226":{"line":3489,"type":"if","locations":[{"start":{"line":3489,"column":12},"end":{"line":3489,"column":12}},{"start":{"line":3489,"column":12},"end":{"line":3489,"column":12}}]},"227":{"line":3493,"type":"if","locations":[{"start":{"line":3493,"column":16},"end":{"line":3493,"column":16}},{"start":{"line":3493,"column":16},"end":{"line":3493,"column":16}}]},"228":{"line":3615,"type":"binary-expr","locations":[{"start":{"line":3615,"column":20},"end":{"line":3615,"column":28}},{"start":{"line":3615,"column":32},"end":{"line":3615,"column":36}}]},"229":{"line":3620,"type":"if","locations":[{"start":{"line":3620,"column":12},"end":{"line":3620,"column":12}},{"start":{"line":3620,"column":12},"end":{"line":3620,"column":12}}]},"230":{"line":3741,"type":"binary-expr","locations":[{"start":{"line":3741,"column":13},"end":{"line":3741,"column":19}},{"start":{"line":3741,"column":23},"end":{"line":3741,"column":31}}]},"231":{"line":3745,"type":"if","locations":[{"start":{"line":3745,"column":8},"end":{"line":3745,"column":8}},{"start":{"line":3745,"column":8},"end":{"line":3745,"column":8}}]},"232":{"line":3749,"type":"if","locations":[{"start":{"line":3749,"column":15},"end":{"line":3749,"column":15}},{"start":{"line":3749,"column":15},"end":{"line":3749,"column":15}}]},"233":{"line":3801,"type":"if","locations":[{"start":{"line":3801,"column":0},"end":{"line":3801,"column":0}},{"start":{"line":3801,"column":0},"end":{"line":3801,"column":0}}]},"234":{"line":3803,"type":"if","locations":[{"start":{"line":3803,"column":7},"end":{"line":3803,"column":7}},{"start":{"line":3803,"column":7},"end":{"line":3803,"column":7}}]},"235":{"line":3812,"type":"binary-expr","locations":[{"start":{"line":3812,"column":15},"end":{"line":3812,"column":23}},{"start":{"line":3812,"column":27},"end":{"line":3812,"column":31}}]},"236":{"line":3813,"type":"cond-expr","locations":[{"start":{"line":3813,"column":39},"end":{"line":3813,"column":41}},{"start":{"line":3813,"column":44},"end":{"line":3813,"column":46}}]},"237":{"line":3817,"type":"if","locations":[{"start":{"line":3817,"column":12},"end":{"line":3817,"column":12}},{"start":{"line":3817,"column":12},"end":{"line":3817,"column":12}}]},"238":{"line":4058,"type":"if","locations":[{"start":{"line":4058,"column":8},"end":{"line":4058,"column":8}},{"start":{"line":4058,"column":8},"end":{"line":4058,"column":8}}]},"239":{"line":4059,"type":"if","locations":[{"start":{"line":4059,"column":8},"end":{"line":4059,"column":8}},{"start":{"line":4059,"column":8},"end":{"line":4059,"column":8}}]},"240":{"line":4063,"type":"if","locations":[{"start":{"line":4063,"column":8},"end":{"line":4063,"column":8}},{"start":{"line":4063,"column":8},"end":{"line":4063,"column":8}}]},"241":{"line":4066,"type":"if","locations":[{"start":{"line":4066,"column":8},"end":{"line":4066,"column":8}},{"start":{"line":4066,"column":8},"end":{"line":4066,"column":8}}]},"242":{"line":4073,"type":"binary-expr","locations":[{"start":{"line":4073,"column":19},"end":{"line":4073,"column":27}},{"start":{"line":4073,"column":31},"end":{"line":4073,"column":32}}]},"243":{"line":4075,"type":"binary-expr","locations":[{"start":{"line":4075,"column":15},"end":{"line":4075,"column":23}},{"start":{"line":4075,"column":27},"end":{"line":4075,"column":56}}]},"244":{"line":4086,"type":"if","locations":[{"start":{"line":4086,"column":12},"end":{"line":4086,"column":12}},{"start":{"line":4086,"column":12},"end":{"line":4086,"column":12}}]},"245":{"line":4138,"type":"binary-expr","locations":[{"start":{"line":4138,"column":20},"end":{"line":4138,"column":28}},{"start":{"line":4138,"column":32},"end":{"line":4138,"column":36}}]},"246":{"line":4139,"type":"if","locations":[{"start":{"line":4139,"column":4},"end":{"line":4139,"column":4}},{"start":{"line":4139,"column":4},"end":{"line":4139,"column":4}}]},"247":{"line":4140,"type":"if","locations":[{"start":{"line":4140,"column":4},"end":{"line":4140,"column":4}},{"start":{"line":4140,"column":4},"end":{"line":4140,"column":4}}]},"248":{"line":4218,"type":"if","locations":[{"start":{"line":4218,"column":12},"end":{"line":4218,"column":12}},{"start":{"line":4218,"column":12},"end":{"line":4218,"column":12}}]},"249":{"line":4224,"type":"if","locations":[{"start":{"line":4224,"column":16},"end":{"line":4224,"column":16}},{"start":{"line":4224,"column":16},"end":{"line":4224,"column":16}}]},"250":{"line":4226,"type":"if","locations":[{"start":{"line":4226,"column":23},"end":{"line":4226,"column":23}},{"start":{"line":4226,"column":23},"end":{"line":4226,"column":23}}]},"251":{"line":4345,"type":"if","locations":[{"start":{"line":4345,"column":4},"end":{"line":4345,"column":4}},{"start":{"line":4345,"column":4},"end":{"line":4345,"column":4}}]},"252":{"line":4515,"type":"if","locations":[{"start":{"line":4515,"column":8},"end":{"line":4515,"column":8}},{"start":{"line":4515,"column":8},"end":{"line":4515,"column":8}}]},"253":{"line":4516,"type":"binary-expr","locations":[{"start":{"line":4516,"column":24},"end":{"line":4516,"column":32}},{"start":{"line":4516,"column":36},"end":{"line":4516,"column":49}}]},"254":{"line":4518,"type":"cond-expr","locations":[{"start":{"line":4518,"column":66},"end":{"line":4518,"column":76}},{"start":{"line":4518,"column":79},"end":{"line":4518,"column":122}}]},"255":{"line":4518,"type":"binary-expr","locations":[{"start":{"line":4518,"column":90},"end":{"line":4518,"column":101}},{"start":{"line":4518,"column":105},"end":{"line":4518,"column":121}}]},"256":{"line":4521,"type":"if","locations":[{"start":{"line":4521,"column":15},"end":{"line":4521,"column":15}},{"start":{"line":4521,"column":15},"end":{"line":4521,"column":15}}]},"257":{"line":4521,"type":"binary-expr","locations":[{"start":{"line":4521,"column":19},"end":{"line":4521,"column":40}},{"start":{"line":4521,"column":44},"end":{"line":4521,"column":65}}]},"258":{"line":4522,"type":"binary-expr","locations":[{"start":{"line":4522,"column":24},"end":{"line":4522,"column":26}},{"start":{"line":4522,"column":30},"end":{"line":4522,"column":43}}]},"259":{"line":4528,"type":"if","locations":[{"start":{"line":4528,"column":4},"end":{"line":4528,"column":4}},{"start":{"line":4528,"column":4},"end":{"line":4528,"column":4}}]},"260":{"line":4528,"type":"binary-expr","locations":[{"start":{"line":4528,"column":8},"end":{"line":4528,"column":28}},{"start":{"line":4528,"column":32},"end":{"line":4528,"column":58}}]},"261":{"line":4529,"type":"binary-expr","locations":[{"start":{"line":4529,"column":19},"end":{"line":4529,"column":23}},{"start":{"line":4529,"column":27},"end":{"line":4529,"column":31}}]},"262":{"line":4533,"type":"binary-expr","locations":[{"start":{"line":4533,"column":19},"end":{"line":4533,"column":27}},{"start":{"line":4533,"column":31},"end":{"line":4533,"column":35}}]},"263":{"line":4536,"type":"if","locations":[{"start":{"line":4536,"column":4},"end":{"line":4536,"column":4}},{"start":{"line":4536,"column":4},"end":{"line":4536,"column":4}}]},"264":{"line":4545,"type":"if","locations":[{"start":{"line":4545,"column":12},"end":{"line":4545,"column":12}},{"start":{"line":4545,"column":12},"end":{"line":4545,"column":12}}]},"265":{"line":4545,"type":"binary-expr","locations":[{"start":{"line":4545,"column":16},"end":{"line":4545,"column":19}},{"start":{"line":4545,"column":23},"end":{"line":4545,"column":48}},{"start":{"line":4545,"column":53},"end":{"line":4545,"column":93}},{"start":{"line":4545,"column":97},"end":{"line":4545,"column":121}}]},"266":{"line":4585,"type":"if","locations":[{"start":{"line":4585,"column":4},"end":{"line":4585,"column":4}},{"start":{"line":4585,"column":4},"end":{"line":4585,"column":4}}]},"267":{"line":4595,"type":"if","locations":[{"start":{"line":4595,"column":8},"end":{"line":4595,"column":8}},{"start":{"line":4595,"column":8},"end":{"line":4595,"column":8}}]},"268":{"line":4795,"type":"if","locations":[{"start":{"line":4795,"column":12},"end":{"line":4795,"column":12}},{"start":{"line":4795,"column":12},"end":{"line":4795,"column":12}}]},"269":{"line":4799,"type":"if","locations":[{"start":{"line":4799,"column":8},"end":{"line":4799,"column":8}},{"start":{"line":4799,"column":8},"end":{"line":4799,"column":8}}]},"270":{"line":4806,"type":"cond-expr","locations":[{"start":{"line":4806,"column":23},"end":{"line":4806,"column":25}},{"start":{"line":4806,"column":28},"end":{"line":4806,"column":41}}]},"271":{"line":4806,"type":"cond-expr","locations":[{"start":{"line":4806,"column":36},"end":{"line":4806,"column":37}},{"start":{"line":4806,"column":40},"end":{"line":4806,"column":41}}]},"272":{"line":4856,"type":"if","locations":[{"start":{"line":4856,"column":8},"end":{"line":4856,"column":8}},{"start":{"line":4856,"column":8},"end":{"line":4856,"column":8}}]},"273":{"line":4863,"type":"binary-expr","locations":[{"start":{"line":4863,"column":19},"end":{"line":4863,"column":31}},{"start":{"line":4863,"column":35},"end":{"line":4863,"column":46}}]},"274":{"line":4866,"type":"if","locations":[{"start":{"line":4866,"column":8},"end":{"line":4866,"column":8}},{"start":{"line":4866,"column":8},"end":{"line":4866,"column":8}}]},"275":{"line":4900,"type":"binary-expr","locations":[{"start":{"line":4900,"column":55},"end":{"line":4900,"column":59}},{"start":{"line":4900,"column":63},"end":{"line":4900,"column":64}}]},"276":{"line":4904,"type":"cond-expr","locations":[{"start":{"line":4904,"column":23},"end":{"line":4904,"column":29}},{"start":{"line":4904,"column":32},"end":{"line":4904,"column":39}}]},"277":{"line":5024,"type":"if","locations":[{"start":{"line":5024,"column":4},"end":{"line":5024,"column":4}},{"start":{"line":5024,"column":4},"end":{"line":5024,"column":4}}]},"278":{"line":5027,"type":"cond-expr","locations":[{"start":{"line":5027,"column":38},"end":{"line":5027,"column":40}},{"start":{"line":5027,"column":43},"end":{"line":5027,"column":45}}]},"279":{"line":5029,"type":"binary-expr","locations":[{"start":{"line":5029,"column":20},"end":{"line":5029,"column":28}},{"start":{"line":5029,"column":32},"end":{"line":5029,"column":36}}]},"280":{"line":5054,"type":"binary-expr","locations":[{"start":{"line":5054,"column":16},"end":{"line":5054,"column":29}},{"start":{"line":5054,"column":33},"end":{"line":5054,"column":35}}]},"281":{"line":5093,"type":"binary-expr","locations":[{"start":{"line":5093,"column":24},"end":{"line":5093,"column":32}},{"start":{"line":5093,"column":36},"end":{"line":5093,"column":40}}]},"282":{"line":5095,"type":"if","locations":[{"start":{"line":5095,"column":4},"end":{"line":5095,"column":4}},{"start":{"line":5095,"column":4},"end":{"line":5095,"column":4}}]},"283":{"line":5097,"type":"if","locations":[{"start":{"line":5097,"column":8},"end":{"line":5097,"column":8}},{"start":{"line":5097,"column":8},"end":{"line":5097,"column":8}}]},"284":{"line":5098,"type":"if","locations":[{"start":{"line":5098,"column":8},"end":{"line":5098,"column":8}},{"start":{"line":5098,"column":8},"end":{"line":5098,"column":8}}]},"285":{"line":5190,"type":"binary-expr","locations":[{"start":{"line":5190,"column":20},"end":{"line":5190,"column":28}},{"start":{"line":5190,"column":32},"end":{"line":5190,"column":36}}]},"286":{"line":5191,"type":"if","locations":[{"start":{"line":5191,"column":4},"end":{"line":5191,"column":4}},{"start":{"line":5191,"column":4},"end":{"line":5191,"column":4}}]},"287":{"line":5192,"type":"if","locations":[{"start":{"line":5192,"column":4},"end":{"line":5192,"column":4}},{"start":{"line":5192,"column":4},"end":{"line":5192,"column":4}}]},"288":{"line":5196,"type":"if","locations":[{"start":{"line":5196,"column":8},"end":{"line":5196,"column":8}},{"start":{"line":5196,"column":8},"end":{"line":5196,"column":8}}]},"289":{"line":5201,"type":"if","locations":[{"start":{"line":5201,"column":12},"end":{"line":5201,"column":12}},{"start":{"line":5201,"column":12},"end":{"line":5201,"column":12}}]}},"code":["(function (global, factory) {","    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :","    typeof define === 'function' && define.amd ? define(['exports'], factory) :","    (factory((global.async = global.async || {})));","}(this, (function (exports) { 'use strict';","","/**"," * A faster alternative to `Function#apply`, this function invokes `func`"," * with the `this` binding of `thisArg` and the arguments of `args`."," *"," * @private"," * @param {Function} func The function to invoke."," * @param {*} thisArg The `this` binding of `func`."," * @param {Array} args The arguments to invoke `func` with."," * @returns {*} Returns the result of `func`."," */","function apply(func, thisArg, args) {","  switch (args.length) {","    case 0: return func.call(thisArg);","    case 1: return func.call(thisArg, args[0]);","    case 2: return func.call(thisArg, args[0], args[1]);","    case 3: return func.call(thisArg, args[0], args[1], args[2]);","  }","  return func.apply(thisArg, args);","}","","/* Built-in method references for those with the same name as other `lodash` methods. */","var nativeMax = Math.max;","","/**"," * A specialized version of `baseRest` which transforms the rest array."," *"," * @private"," * @param {Function} func The function to apply a rest parameter to."," * @param {number} [start=func.length-1] The start position of the rest parameter."," * @param {Function} transform The rest array transform."," * @returns {Function} Returns the new function."," */","function overRest$1(func, start, transform) {","  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);","  return function() {","    var args = arguments,","        index = -1,","        length = nativeMax(args.length - start, 0),","        array = Array(length);","","    while (++index < length) {","      array[index] = args[start + index];","    }","    index = -1;","    var otherArgs = Array(start + 1);","    while (++index < start) {","      otherArgs[index] = args[index];","    }","    otherArgs[start] = transform(array);","    return apply(func, this, otherArgs);","  };","}","","/**"," * This method returns the first argument it receives."," *"," * @static"," * @since 0.1.0"," * @memberOf _"," * @category Util"," * @param {*} value Any value."," * @returns {*} Returns `value`."," * @example"," *"," * var object = { 'a': 1 };"," *"," * console.log(_.identity(object) === object);"," * // => true"," */","function identity(value) {","  return value;","}","","// Lodash rest function without function.toString()","// remappings","function rest(func, start) {","    return overRest$1(func, start, identity);","}","","var initialParams = function (fn) {","    return rest(function (args /*..., callback*/) {","        var callback = args.pop();","        fn.call(this, args, callback);","    });","};","","/**"," * Checks if `value` is the"," * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)"," * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)"," *"," * @static"," * @memberOf _"," * @since 0.1.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is an object, else `false`."," * @example"," *"," * _.isObject({});"," * // => true"," *"," * _.isObject([1, 2, 3]);"," * // => true"," *"," * _.isObject(_.noop);"," * // => true"," *"," * _.isObject(null);"," * // => false"," */","function isObject(value) {","  var type = typeof value;","  return value != null && (type == 'object' || type == 'function');","}","","/**"," * Take a sync function and make it async, passing its return value to a"," * callback. This is useful for plugging sync functions into a waterfall,"," * series, or other async functions. Any arguments passed to the generated"," * function will be passed to the wrapped function (except for the final"," * callback argument). Errors thrown will be passed to the callback."," *"," * If the function passed to `asyncify` returns a Promise, that promises's"," * resolved/rejected state will be used to call the callback, rather than simply"," * the synchronous return value."," *"," * This also means you can asyncify ES2017 `async` functions."," *"," * @name asyncify"," * @static"," * @memberOf module:Utils"," * @method"," * @alias wrapSync"," * @category Util"," * @param {Function} func - The synchronous funuction, or Promise-returning"," * function to convert to an {@link AsyncFunction}."," * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be"," * invoked with `(args..., callback)`."," * @example"," *"," * // passing a regular synchronous function"," * async.waterfall(["," *     async.apply(fs.readFile, filename, \"utf8\"),"," *     async.asyncify(JSON.parse),"," *     function (data, next) {"," *         // data is the result of parsing the text."," *         // If there was a parsing error, it would have been caught."," *     }"," * ], callback);"," *"," * // passing a function returning a promise"," * async.waterfall(["," *     async.apply(fs.readFile, filename, \"utf8\"),"," *     async.asyncify(function (contents) {"," *         return db.model.create(contents);"," *     }),"," *     function (model, next) {"," *         // `model` is the instantiated model object."," *         // If there was an error, this function would be skipped."," *     }"," * ], callback);"," *"," * // es2017 example, though `asyncify` is not needed if your JS environment"," * // supports async functions out of the box"," * var q = async.queue(async.asyncify(async function(file) {"," *     var intermediateStep = await processFile(file);"," *     return await somePromise(intermediateStep)"," * }));"," *"," * q.push(files);"," */","function asyncify(func) {","    return initialParams(function (args, callback) {","        var result;","        try {","            result = func.apply(this, args);","        } catch (e) {","            return callback(e);","        }","        // if result is Promise object","        if (isObject(result) && typeof result.then === 'function') {","            result.then(function (value) {","                callback(null, value);","            }, function (err) {","                callback(err.message ? err : new Error(err));","            });","        } else {","            callback(null, result);","        }","    });","}","","var supportsSymbol = typeof Symbol === 'function';","","function supportsAsync() {","    var supported;","    try {","        /* eslint no-eval: 0 */","        supported = isAsync(eval('(async function () {})'));","    } catch (e) {","        supported = false;","    }","    return supported;","}","","function isAsync(fn) {","    return supportsSymbol && fn[Symbol.toStringTag] === 'AsyncFunction';","}","","function wrapAsync(asyncFn) {","    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;","}","","var wrapAsync$1 = supportsAsync() ? wrapAsync : identity;","","function applyEach$1(eachfn) {","    return rest(function (fns, args) {","        var go = initialParams(function (args, callback) {","            var that = this;","            return eachfn(fns, function (fn, cb) {","                wrapAsync$1(fn).apply(that, args.concat(cb));","            }, callback);","        });","        if (args.length) {","            return go.apply(this, args);","        } else {","            return go;","        }","    });","}","","/** Detect free variable `global` from Node.js. */","var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;","","/** Detect free variable `self`. */","var freeSelf = typeof self == 'object' && self && self.Object === Object && self;","","/** Used as a reference to the global object. */","var root = freeGlobal || freeSelf || Function('return this')();","","/** Built-in value references. */","var Symbol$1 = root.Symbol;","","/** Used for built-in method references. */","var objectProto = Object.prototype;","","/** Used to check objects for own properties. */","var hasOwnProperty = objectProto.hasOwnProperty;","","/**"," * Used to resolve the"," * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)"," * of values."," */","var nativeObjectToString = objectProto.toString;","","/** Built-in value references. */","var symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;","","/**"," * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values."," *"," * @private"," * @param {*} value The value to query."," * @returns {string} Returns the raw `toStringTag`."," */","function getRawTag(value) {","  var isOwn = hasOwnProperty.call(value, symToStringTag$1),","      tag = value[symToStringTag$1];","","  try {","    value[symToStringTag$1] = undefined;","    var unmasked = true;","  } catch (e) {}","","  var result = nativeObjectToString.call(value);","  if (unmasked) {","    if (isOwn) {","      value[symToStringTag$1] = tag;","    } else {","      delete value[symToStringTag$1];","    }","  }","  return result;","}","","/** Used for built-in method references. */","var objectProto$1 = Object.prototype;","","/**"," * Used to resolve the"," * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)"," * of values."," */","var nativeObjectToString$1 = objectProto$1.toString;","","/**"," * Converts `value` to a string using `Object.prototype.toString`."," *"," * @private"," * @param {*} value The value to convert."," * @returns {string} Returns the converted string."," */","function objectToString(value) {","  return nativeObjectToString$1.call(value);","}","","/** `Object#toString` result references. */","var nullTag = '[object Null]';","var undefinedTag = '[object Undefined]';","","/** Built-in value references. */","var symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;","","/**"," * The base implementation of `getTag` without fallbacks for buggy environments."," *"," * @private"," * @param {*} value The value to query."," * @returns {string} Returns the `toStringTag`."," */","function baseGetTag(value) {","  if (value == null) {","    return value === undefined ? undefinedTag : nullTag;","  }","  value = Object(value);","  return (symToStringTag && symToStringTag in value)","    ? getRawTag(value)","    : objectToString(value);","}","","/** `Object#toString` result references. */","var asyncTag = '[object AsyncFunction]';","var funcTag = '[object Function]';","var genTag = '[object GeneratorFunction]';","var proxyTag = '[object Proxy]';","","/**"," * Checks if `value` is classified as a `Function` object."," *"," * @static"," * @memberOf _"," * @since 0.1.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a function, else `false`."," * @example"," *"," * _.isFunction(_);"," * // => true"," *"," * _.isFunction(/abc/);"," * // => false"," */","function isFunction(value) {","  if (!isObject(value)) {","    return false;","  }","  // The use of `Object#toString` avoids issues with the `typeof` operator","  // in Safari 9 which returns 'object' for typed arrays and other constructors.","  var tag = baseGetTag(value);","  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;","}","","/** Used as references for various `Number` constants. */","var MAX_SAFE_INTEGER = 9007199254740991;","","/**"," * Checks if `value` is a valid array-like length."," *"," * **Note:** This method is loosely based on"," * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength)."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a valid length, else `false`."," * @example"," *"," * _.isLength(3);"," * // => true"," *"," * _.isLength(Number.MIN_VALUE);"," * // => false"," *"," * _.isLength(Infinity);"," * // => false"," *"," * _.isLength('3');"," * // => false"," */","function isLength(value) {","  return typeof value == 'number' &&","    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;","}","","/**"," * Checks if `value` is array-like. A value is considered array-like if it's"," * not a function and has a `value.length` that's an integer greater than or"," * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is array-like, else `false`."," * @example"," *"," * _.isArrayLike([1, 2, 3]);"," * // => true"," *"," * _.isArrayLike(document.body.children);"," * // => true"," *"," * _.isArrayLike('abc');"," * // => true"," *"," * _.isArrayLike(_.noop);"," * // => false"," */","function isArrayLike(value) {","  return value != null && isLength(value.length) && !isFunction(value);","}","","// A temporary value used to identify if the loop should be broken.","// See #1064, #1293","var breakLoop = {};","","/**"," * This method returns `undefined`."," *"," * @static"," * @memberOf _"," * @since 2.3.0"," * @category Util"," * @example"," *"," * _.times(2, _.noop);"," * // => [undefined, undefined]"," */","function noop() {","  // No operation performed.","}","","function once(fn) {","    return function () {","        if (fn === null) return;","        var callFn = fn;","        fn = null;","        callFn.apply(this, arguments);","    };","}","","var iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;","","var getIterator = function (coll) {","    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();","};","","/**"," * The base implementation of `_.times` without support for iteratee shorthands"," * or max array length checks."," *"," * @private"," * @param {number} n The number of times to invoke `iteratee`."," * @param {Function} iteratee The function invoked per iteration."," * @returns {Array} Returns the array of results."," */","function baseTimes(n, iteratee) {","  var index = -1,","      result = Array(n);","","  while (++index < n) {","    result[index] = iteratee(index);","  }","  return result;","}","","/**"," * Checks if `value` is object-like. A value is object-like if it's not `null`"," * and has a `typeof` result of \"object\"."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is object-like, else `false`."," * @example"," *"," * _.isObjectLike({});"," * // => true"," *"," * _.isObjectLike([1, 2, 3]);"," * // => true"," *"," * _.isObjectLike(_.noop);"," * // => false"," *"," * _.isObjectLike(null);"," * // => false"," */","function isObjectLike(value) {","  return value != null && typeof value == 'object';","}","","/** `Object#toString` result references. */","var argsTag = '[object Arguments]';","","/**"," * The base implementation of `_.isArguments`."," *"," * @private"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is an `arguments` object,"," */","function baseIsArguments(value) {","  return isObjectLike(value) && baseGetTag(value) == argsTag;","}","","/** Used for built-in method references. */","var objectProto$3 = Object.prototype;","","/** Used to check objects for own properties. */","var hasOwnProperty$2 = objectProto$3.hasOwnProperty;","","/** Built-in value references. */","var propertyIsEnumerable = objectProto$3.propertyIsEnumerable;","","/**"," * Checks if `value` is likely an `arguments` object."," *"," * @static"," * @memberOf _"," * @since 0.1.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is an `arguments` object,"," *  else `false`."," * @example"," *"," * _.isArguments(function() { return arguments; }());"," * // => true"," *"," * _.isArguments([1, 2, 3]);"," * // => false"," */","var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {","  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&","    !propertyIsEnumerable.call(value, 'callee');","};","","/**"," * Checks if `value` is classified as an `Array` object."," *"," * @static"," * @memberOf _"," * @since 0.1.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is an array, else `false`."," * @example"," *"," * _.isArray([1, 2, 3]);"," * // => true"," *"," * _.isArray(document.body.children);"," * // => false"," *"," * _.isArray('abc');"," * // => false"," *"," * _.isArray(_.noop);"," * // => false"," */","var isArray = Array.isArray;","","/**"," * This method returns `false`."," *"," * @static"," * @memberOf _"," * @since 4.13.0"," * @category Util"," * @returns {boolean} Returns `false`."," * @example"," *"," * _.times(2, _.stubFalse);"," * // => [false, false]"," */","function stubFalse() {","  return false;","}","","/** Detect free variable `exports`. */","var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;","","/** Detect free variable `module`. */","var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;","","/** Detect the popular CommonJS extension `module.exports`. */","var moduleExports = freeModule && freeModule.exports === freeExports;","","/** Built-in value references. */","var Buffer = moduleExports ? root.Buffer : undefined;","","/* Built-in method references for those with the same name as other `lodash` methods. */","var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;","","/**"," * Checks if `value` is a buffer."," *"," * @static"," * @memberOf _"," * @since 4.3.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a buffer, else `false`."," * @example"," *"," * _.isBuffer(new Buffer(2));"," * // => true"," *"," * _.isBuffer(new Uint8Array(2));"," * // => false"," */","var isBuffer = nativeIsBuffer || stubFalse;","","/** Used as references for various `Number` constants. */","var MAX_SAFE_INTEGER$1 = 9007199254740991;","","/** Used to detect unsigned integer values. */","var reIsUint = /^(?:0|[1-9]\\d*)$/;","","/**"," * Checks if `value` is a valid array-like index."," *"," * @private"," * @param {*} value The value to check."," * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index."," * @returns {boolean} Returns `true` if `value` is a valid index, else `false`."," */","function isIndex(value, length) {","  length = length == null ? MAX_SAFE_INTEGER$1 : length;","  return !!length &&","    (typeof value == 'number' || reIsUint.test(value)) &&","    (value > -1 && value % 1 == 0 && value < length);","}","","/** `Object#toString` result references. */","var argsTag$1 = '[object Arguments]';","var arrayTag = '[object Array]';","var boolTag = '[object Boolean]';","var dateTag = '[object Date]';","var errorTag = '[object Error]';","var funcTag$1 = '[object Function]';","var mapTag = '[object Map]';","var numberTag = '[object Number]';","var objectTag = '[object Object]';","var regexpTag = '[object RegExp]';","var setTag = '[object Set]';","var stringTag = '[object String]';","var weakMapTag = '[object WeakMap]';","","var arrayBufferTag = '[object ArrayBuffer]';","var dataViewTag = '[object DataView]';","var float32Tag = '[object Float32Array]';","var float64Tag = '[object Float64Array]';","var int8Tag = '[object Int8Array]';","var int16Tag = '[object Int16Array]';","var int32Tag = '[object Int32Array]';","var uint8Tag = '[object Uint8Array]';","var uint8ClampedTag = '[object Uint8ClampedArray]';","var uint16Tag = '[object Uint16Array]';","var uint32Tag = '[object Uint32Array]';","","/** Used to identify `toStringTag` values of typed arrays. */","var typedArrayTags = {};","typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =","typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =","typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =","typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =","typedArrayTags[uint32Tag] = true;","typedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =","typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =","typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =","typedArrayTags[errorTag] = typedArrayTags[funcTag$1] =","typedArrayTags[mapTag] = typedArrayTags[numberTag] =","typedArrayTags[objectTag] = typedArrayTags[regexpTag] =","typedArrayTags[setTag] = typedArrayTags[stringTag] =","typedArrayTags[weakMapTag] = false;","","/**"," * The base implementation of `_.isTypedArray` without Node.js optimizations."," *"," * @private"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a typed array, else `false`."," */","function baseIsTypedArray(value) {","  return isObjectLike(value) &&","    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];","}","","/**"," * The base implementation of `_.unary` without support for storing metadata."," *"," * @private"," * @param {Function} func The function to cap arguments for."," * @returns {Function} Returns the new capped function."," */","function baseUnary(func) {","  return function(value) {","    return func(value);","  };","}","","/** Detect free variable `exports`. */","var freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;","","/** Detect free variable `module`. */","var freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;","","/** Detect the popular CommonJS extension `module.exports`. */","var moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;","","/** Detect free variable `process` from Node.js. */","var freeProcess = moduleExports$1 && freeGlobal.process;","","/** Used to access faster Node.js helpers. */","var nodeUtil = (function() {","  try {","    return freeProcess && freeProcess.binding('util');","  } catch (e) {}","}());","","/* Node.js helper references. */","var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;","","/**"," * Checks if `value` is classified as a typed array."," *"," * @static"," * @memberOf _"," * @since 3.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a typed array, else `false`."," * @example"," *"," * _.isTypedArray(new Uint8Array);"," * // => true"," *"," * _.isTypedArray([]);"," * // => false"," */","var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;","","/** Used for built-in method references. */","var objectProto$2 = Object.prototype;","","/** Used to check objects for own properties. */","var hasOwnProperty$1 = objectProto$2.hasOwnProperty;","","/**"," * Creates an array of the enumerable property names of the array-like `value`."," *"," * @private"," * @param {*} value The value to query."," * @param {boolean} inherited Specify returning inherited property names."," * @returns {Array} Returns the array of property names."," */","function arrayLikeKeys(value, inherited) {","  var isArr = isArray(value),","      isArg = !isArr && isArguments(value),","      isBuff = !isArr && !isArg && isBuffer(value),","      isType = !isArr && !isArg && !isBuff && isTypedArray(value),","      skipIndexes = isArr || isArg || isBuff || isType,","      result = skipIndexes ? baseTimes(value.length, String) : [],","      length = result.length;","","  for (var key in value) {","    if ((inherited || hasOwnProperty$1.call(value, key)) &&","        !(skipIndexes && (","           // Safari 9 has enumerable `arguments.length` in strict mode.","           key == 'length' ||","           // Node.js 0.10 has enumerable non-index properties on buffers.","           (isBuff && (key == 'offset' || key == 'parent')) ||","           // PhantomJS 2 has enumerable non-index properties on typed arrays.","           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||","           // Skip index properties.","           isIndex(key, length)","        ))) {","      result.push(key);","    }","  }","  return result;","}","","/** Used for built-in method references. */","var objectProto$5 = Object.prototype;","","/**"," * Checks if `value` is likely a prototype object."," *"," * @private"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a prototype, else `false`."," */","function isPrototype(value) {","  var Ctor = value && value.constructor,","      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;","","  return value === proto;","}","","/**"," * Creates a unary function that invokes `func` with its argument transformed."," *"," * @private"," * @param {Function} func The function to wrap."," * @param {Function} transform The argument transform."," * @returns {Function} Returns the new function."," */","function overArg(func, transform) {","  return function(arg) {","    return func(transform(arg));","  };","}","","/* Built-in method references for those with the same name as other `lodash` methods. */","var nativeKeys = overArg(Object.keys, Object);","","/** Used for built-in method references. */","var objectProto$4 = Object.prototype;","","/** Used to check objects for own properties. */","var hasOwnProperty$3 = objectProto$4.hasOwnProperty;","","/**"," * The base implementation of `_.keys` which doesn't treat sparse arrays as dense."," *"," * @private"," * @param {Object} object The object to query."," * @returns {Array} Returns the array of property names."," */","function baseKeys(object) {","  if (!isPrototype(object)) {","    return nativeKeys(object);","  }","  var result = [];","  for (var key in Object(object)) {","    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {","      result.push(key);","    }","  }","  return result;","}","","/**"," * Creates an array of the own enumerable property names of `object`."," *"," * **Note:** Non-object values are coerced to objects. See the"," * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)"," * for more details."," *"," * @static"," * @since 0.1.0"," * @memberOf _"," * @category Object"," * @param {Object} object The object to query."," * @returns {Array} Returns the array of property names."," * @example"," *"," * function Foo() {"," *   this.a = 1;"," *   this.b = 2;"," * }"," *"," * Foo.prototype.c = 3;"," *"," * _.keys(new Foo);"," * // => ['a', 'b'] (iteration order is not guaranteed)"," *"," * _.keys('hi');"," * // => ['0', '1']"," */","function keys(object) {","  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);","}","","function createArrayIterator(coll) {","    var i = -1;","    var len = coll.length;","    return function next() {","        return ++i < len ? { value: coll[i], key: i } : null;","    };","}","","function createES2015Iterator(iterator) {","    var i = -1;","    return function next() {","        var item = iterator.next();","        if (item.done) return null;","        i++;","        return { value: item.value, key: i };","    };","}","","function createObjectIterator(obj) {","    var okeys = keys(obj);","    var i = -1;","    var len = okeys.length;","    return function next() {","        var key = okeys[++i];","        return i < len ? { value: obj[key], key: key } : null;","    };","}","","function iterator(coll) {","    if (isArrayLike(coll)) {","        return createArrayIterator(coll);","    }","","    var iterator = getIterator(coll);","    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);","}","","function onlyOnce(fn) {","    return function () {","        if (fn === null) throw new Error(\"Callback was already called.\");","        var callFn = fn;","        fn = null;","        callFn.apply(this, arguments);","    };","}","","function _eachOfLimit(limit) {","    return function (obj, iteratee, callback) {","        callback = once(callback || noop);","        if (limit <= 0 || !obj) {","            return callback(null);","        }","        var nextElem = iterator(obj);","        var done = false;","        var running = 0;","","        function iterateeCallback(err, value) {","            running -= 1;","            if (err) {","                done = true;","                callback(err);","            } else if (value === breakLoop || done && running <= 0) {","                done = true;","                return callback(null);","            } else {","                replenish();","            }","        }","","        function replenish() {","            while (running < limit && !done) {","                var elem = nextElem();","                if (elem === null) {","                    done = true;","                    if (running <= 0) {","                        callback(null);","                    }","                    return;","                }","                running += 1;","                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));","            }","        }","","        replenish();","    };","}","","/**"," * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name eachOfLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.eachOf]{@link module:Collections.eachOf}"," * @alias forEachOfLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each"," * item in `coll`. The `key` is the item's key, or index in the case of an"," * array."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","function eachOfLimit(coll, limit, iteratee, callback) {","  _eachOfLimit(limit)(coll, wrapAsync$1(iteratee), callback);","}","","function doLimit(fn, limit) {","    return function (iterable, iteratee, callback) {","        return fn(iterable, limit, iteratee, callback);","    };","}","","// eachOf implementation optimized for array-likes","function eachOfArrayLike(coll, iteratee, callback) {","    callback = once(callback || noop);","    var index = 0,","        completed = 0,","        length = coll.length;","    if (length === 0) {","        callback(null);","    }","","    function iteratorCallback(err, value) {","        if (err) {","            callback(err);","        } else if (++completed === length || value === breakLoop) {","            callback(null);","        }","    }","","    for (; index < length; index++) {","        iteratee(coll[index], index, onlyOnce(iteratorCallback));","    }","}","","// a generic version of eachOf which can handle array, object, and iterator cases.","var eachOfGeneric = doLimit(eachOfLimit, Infinity);","","/**"," * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument"," * to the iteratee."," *"," * @name eachOf"," * @static"," * @memberOf module:Collections"," * @method"," * @alias forEachOf"," * @category Collection"," * @see [async.each]{@link module:Collections.each}"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each"," * item in `coll`."," * The `key` is the item's key, or index in the case of an array."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," * @example"," *"," * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};"," * var configs = {};"," *"," * async.forEachOf(obj, function (value, key, callback) {"," *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {"," *         if (err) return callback(err);"," *         try {"," *             configs[key] = JSON.parse(data);"," *         } catch (e) {"," *             return callback(e);"," *         }"," *         callback();"," *     });"," * }, function (err) {"," *     if (err) console.error(err.message);"," *     // configs is now a map of JSON data"," *     doSomethingWith(configs);"," * });"," */","var eachOf = function (coll, iteratee, callback) {","    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;","    eachOfImplementation(coll, wrapAsync$1(iteratee), callback);","};","","function doParallel(fn) {","    return function (obj, iteratee, callback) {","        return fn(eachOf, obj, wrapAsync$1(iteratee), callback);","    };","}","","function _asyncMap(eachfn, arr, iteratee, callback) {","    callback = callback || noop;","    arr = arr || [];","    var results = [];","    var counter = 0;","    var _iteratee = wrapAsync$1(iteratee);","","    eachfn(arr, function (value, _, callback) {","        var index = counter++;","        _iteratee(value, function (err, v) {","            results[index] = v;","            callback(err);","        });","    }, function (err) {","        callback(err, results);","    });","}","","/**"," * Produces a new collection of values by mapping each value in `coll` through"," * the `iteratee` function. The `iteratee` is called with an item from `coll`"," * and a callback for when it has finished processing. Each of these callback"," * takes 2 arguments: an `error`, and the transformed item from `coll`. If"," * `iteratee` passes an error to its callback, the main `callback` (for the"," * `map` function) is immediately called with the error."," *"," * Note, that since this function applies the `iteratee` to each item in"," * parallel, there is no guarantee that the `iteratee` functions will complete"," * in order. However, the results array will be in the same order as the"," * original `coll`."," *"," * If `map` is passed an Object, the results will be an Array.  The results"," * will roughly be in the order of the original Objects' keys (but this can"," * vary across JavaScript engines)."," *"," * @name map"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with the transformed item."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an Array of the"," * transformed items from the `coll`. Invoked with (err, results)."," * @example"," *"," * async.map(['file1','file2','file3'], fs.stat, function(err, results) {"," *     // results is now an array of stats for each file"," * });"," */","var map = doParallel(_asyncMap);","","/**"," * Applies the provided arguments to each function in the array, calling"," * `callback` after all functions have completed. If you only provide the first"," * argument, `fns`, then it will return a function which lets you pass in the"," * arguments as if it were a single function call. If more arguments are"," * provided, `callback` is required while `args` is still optional."," *"," * @name applyEach"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s"," * to all call with the same arguments"," * @param {...*} [args] - any number of separate arguments to pass to the"," * function."," * @param {Function} [callback] - the final argument should be the callback,"," * called when all functions have completed processing."," * @returns {Function} - If only the first argument, `fns`, is provided, it will"," * return a function which lets you pass in the arguments as if it were a single"," * function call. The signature is `(..args, callback)`. If invoked with any"," * arguments, `callback` is required."," * @example"," *"," * async.applyEach([enableSearch, updateSchema], 'bucket', callback);"," *"," * // partial application example:"," * async.each("," *     buckets,"," *     async.applyEach([enableSearch, updateSchema]),"," *     callback"," * );"," */","var applyEach = applyEach$1(map);","","function doParallelLimit(fn) {","    return function (obj, limit, iteratee, callback) {","        return fn(_eachOfLimit(limit), obj, wrapAsync$1(iteratee), callback);","    };","}","","/**"," * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time."," *"," * @name mapLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with the transformed item."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an array of the"," * transformed items from the `coll`. Invoked with (err, results)."," */","var mapLimit = doParallelLimit(_asyncMap);","","/**"," * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time."," *"," * @name mapSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with the transformed item."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an array of the"," * transformed items from the `coll`. Invoked with (err, results)."," */","var mapSeries = doLimit(mapLimit, 1);","","/**"," * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time."," *"," * @name applyEachSeries"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.applyEach]{@link module:ControlFlow.applyEach}"," * @category Control Flow"," * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s to all"," * call with the same arguments"," * @param {...*} [args] - any number of separate arguments to pass to the"," * function."," * @param {Function} [callback] - the final argument should be the callback,"," * called when all functions have completed processing."," * @returns {Function} - If only the first argument is provided, it will return"," * a function which lets you pass in the arguments as if it were a single"," * function call."," */","var applyEachSeries = applyEach$1(mapSeries);","","/**"," * Creates a continuation function with some arguments already applied."," *"," * Useful as a shorthand when combined with other control flow functions. Any"," * arguments passed to the returned function are added to the arguments"," * originally passed to apply."," *"," * @name apply"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {Function} function - The function you want to eventually apply all"," * arguments to. Invokes with (arguments...)."," * @param {...*} arguments... - Any number of arguments to automatically apply"," * when the continuation is called."," * @example"," *"," * // using apply"," * async.parallel(["," *     async.apply(fs.writeFile, 'testfile1', 'test1'),"," *     async.apply(fs.writeFile, 'testfile2', 'test2')"," * ]);"," *"," *"," * // the same process without using apply"," * async.parallel(["," *     function(callback) {"," *         fs.writeFile('testfile1', 'test1', callback);"," *     },"," *     function(callback) {"," *         fs.writeFile('testfile2', 'test2', callback);"," *     }"," * ]);"," *"," * // It's possible to pass any number of additional arguments when calling the"," * // continuation:"," *"," * node> var fn = async.apply(sys.puts, 'one');"," * node> fn('two', 'three');"," * one"," * two"," * three"," */","var apply$2 = rest(function (fn, args) {","    return rest(function (callArgs) {","        return fn.apply(null, args.concat(callArgs));","    });","});","","/**"," * A specialized version of `_.forEach` for arrays without support for"," * iteratee shorthands."," *"," * @private"," * @param {Array} [array] The array to iterate over."," * @param {Function} iteratee The function invoked per iteration."," * @returns {Array} Returns `array`."," */","function arrayEach(array, iteratee) {","  var index = -1,","      length = array == null ? 0 : array.length;","","  while (++index < length) {","    if (iteratee(array[index], index, array) === false) {","      break;","    }","  }","  return array;","}","","/**"," * Creates a base function for methods like `_.forIn` and `_.forOwn`."," *"," * @private"," * @param {boolean} [fromRight] Specify iterating from right to left."," * @returns {Function} Returns the new base function."," */","function createBaseFor(fromRight) {","  return function(object, iteratee, keysFunc) {","    var index = -1,","        iterable = Object(object),","        props = keysFunc(object),","        length = props.length;","","    while (length--) {","      var key = props[fromRight ? length : ++index];","      if (iteratee(iterable[key], key, iterable) === false) {","        break;","      }","    }","    return object;","  };","}","","/**"," * The base implementation of `baseForOwn` which iterates over `object`"," * properties returned by `keysFunc` and invokes `iteratee` for each property."," * Iteratee functions may exit iteration early by explicitly returning `false`."," *"," * @private"," * @param {Object} object The object to iterate over."," * @param {Function} iteratee The function invoked per iteration."," * @param {Function} keysFunc The function to get the keys of `object`."," * @returns {Object} Returns `object`."," */","var baseFor = createBaseFor();","","/**"," * The base implementation of `_.forOwn` without support for iteratee shorthands."," *"," * @private"," * @param {Object} object The object to iterate over."," * @param {Function} iteratee The function invoked per iteration."," * @returns {Object} Returns `object`."," */","function baseForOwn(object, iteratee) {","  return object && baseFor(object, iteratee, keys);","}","","/**"," * The base implementation of `_.findIndex` and `_.findLastIndex` without"," * support for iteratee shorthands."," *"," * @private"," * @param {Array} array The array to inspect."," * @param {Function} predicate The function invoked per iteration."," * @param {number} fromIndex The index to search from."," * @param {boolean} [fromRight] Specify iterating from right to left."," * @returns {number} Returns the index of the matched value, else `-1`."," */","function baseFindIndex(array, predicate, fromIndex, fromRight) {","  var length = array.length,","      index = fromIndex + (fromRight ? 1 : -1);","","  while ((fromRight ? index-- : ++index < length)) {","    if (predicate(array[index], index, array)) {","      return index;","    }","  }","  return -1;","}","","/**"," * The base implementation of `_.isNaN` without support for number objects."," *"," * @private"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`."," */","function baseIsNaN(value) {","  return value !== value;","}","","/**"," * A specialized version of `_.indexOf` which performs strict equality"," * comparisons of values, i.e. `===`."," *"," * @private"," * @param {Array} array The array to inspect."," * @param {*} value The value to search for."," * @param {number} fromIndex The index to search from."," * @returns {number} Returns the index of the matched value, else `-1`."," */","function strictIndexOf(array, value, fromIndex) {","  var index = fromIndex - 1,","      length = array.length;","","  while (++index < length) {","    if (array[index] === value) {","      return index;","    }","  }","  return -1;","}","","/**"," * The base implementation of `_.indexOf` without `fromIndex` bounds checks."," *"," * @private"," * @param {Array} array The array to inspect."," * @param {*} value The value to search for."," * @param {number} fromIndex The index to search from."," * @returns {number} Returns the index of the matched value, else `-1`."," */","function baseIndexOf(array, value, fromIndex) {","  return value === value","    ? strictIndexOf(array, value, fromIndex)","    : baseFindIndex(array, baseIsNaN, fromIndex);","}","","/**"," * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on"," * their requirements. Each function can optionally depend on other functions"," * being completed first, and each function is run as soon as its requirements"," * are satisfied."," *"," * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence"," * will stop. Further tasks will not execute (so any other functions depending"," * on it will not run), and the main `callback` is immediately called with the"," * error."," *"," * {@link AsyncFunction}s also receive an object containing the results of functions which"," * have completed so far as the first argument, if they have dependencies. If a"," * task function has no dependencies, it will only be passed a callback."," *"," * @name auto"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Object} tasks - An object. Each of its properties is either a"," * function or an array of requirements, with the {@link AsyncFunction} itself the last item"," * in the array. The object's key of a property serves as the name of the task"," * defined by that property, i.e. can be used when specifying requirements for"," * other tasks. The function receives one or two arguments:"," * * a `results` object, containing the results of the previously executed"," *   functions, only passed if the task has any dependencies,"," * * a `callback(err, result)` function, which must be called when finished,"," *   passing an `error` (which can be `null`) and the result of the function's"," *   execution."," * @param {number} [concurrency=Infinity] - An optional `integer` for"," * determining the maximum number of tasks that can be run in parallel. By"," * default, as many as possible."," * @param {Function} [callback] - An optional callback which is called when all"," * the tasks have been completed. It receives the `err` argument if any `tasks`"," * pass an error to their callback. Results are always returned; however, if an"," * error occurs, no further `tasks` will be performed, and the results object"," * will only contain partial results. Invoked with (err, results)."," * @returns undefined"," * @example"," *"," * async.auto({"," *     // this function will just be passed a callback"," *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),"," *     showData: ['readData', function(results, cb) {"," *         // results.readData is the file's contents"," *         // ..."," *     }]"," * }, callback);"," *"," * async.auto({"," *     get_data: function(callback) {"," *         console.log('in get_data');"," *         // async code to get some data"," *         callback(null, 'data', 'converted to array');"," *     },"," *     make_folder: function(callback) {"," *         console.log('in make_folder');"," *         // async code to create a directory to store a file in"," *         // this is run at the same time as getting the data"," *         callback(null, 'folder');"," *     },"," *     write_file: ['get_data', 'make_folder', function(results, callback) {"," *         console.log('in write_file', JSON.stringify(results));"," *         // once there is some data and the directory exists,"," *         // write the data to a file in the directory"," *         callback(null, 'filename');"," *     }],"," *     email_link: ['write_file', function(results, callback) {"," *         console.log('in email_link', JSON.stringify(results));"," *         // once the file is written let's email a link to it..."," *         // results.write_file contains the filename returned by write_file."," *         callback(null, {'file':results.write_file, 'email':'user@example.com'});"," *     }]"," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('results = ', results);"," * });"," */","var auto = function (tasks, concurrency, callback) {","    if (typeof concurrency === 'function') {","        // concurrency is optional, shift the args.","        callback = concurrency;","        concurrency = null;","    }","    callback = once(callback || noop);","    var keys$$1 = keys(tasks);","    var numTasks = keys$$1.length;","    if (!numTasks) {","        return callback(null);","    }","    if (!concurrency) {","        concurrency = numTasks;","    }","","    var results = {};","    var runningTasks = 0;","    var hasError = false;","","    var listeners = Object.create(null);","","    var readyTasks = [];","","    // for cycle detection:","    var readyToCheck = []; // tasks that have been identified as reachable","    // without the possibility of returning to an ancestor task","    var uncheckedDependencies = {};","","    baseForOwn(tasks, function (task, key) {","        if (!isArray(task)) {","            // no dependencies","            enqueueTask(key, [task]);","            readyToCheck.push(key);","            return;","        }","","        var dependencies = task.slice(0, task.length - 1);","        var remainingDependencies = dependencies.length;","        if (remainingDependencies === 0) {","            enqueueTask(key, task);","            readyToCheck.push(key);","            return;","        }","        uncheckedDependencies[key] = remainingDependencies;","","        arrayEach(dependencies, function (dependencyName) {","            if (!tasks[dependencyName]) {","                throw new Error('async.auto task `' + key + '` has a non-existent dependency `' + dependencyName + '` in ' + dependencies.join(', '));","            }","            addListener(dependencyName, function () {","                remainingDependencies--;","                if (remainingDependencies === 0) {","                    enqueueTask(key, task);","                }","            });","        });","    });","","    checkForDeadlocks();","    processQueue();","","    function enqueueTask(key, task) {","        readyTasks.push(function () {","            runTask(key, task);","        });","    }","","    function processQueue() {","        if (readyTasks.length === 0 && runningTasks === 0) {","            return callback(null, results);","        }","        while (readyTasks.length && runningTasks < concurrency) {","            var run = readyTasks.shift();","            run();","        }","    }","","    function addListener(taskName, fn) {","        var taskListeners = listeners[taskName];","        if (!taskListeners) {","            taskListeners = listeners[taskName] = [];","        }","","        taskListeners.push(fn);","    }","","    function taskComplete(taskName) {","        var taskListeners = listeners[taskName] || [];","        arrayEach(taskListeners, function (fn) {","            fn();","        });","        processQueue();","    }","","    function runTask(key, task) {","        if (hasError) return;","","        var taskCallback = onlyOnce(rest(function (err, args) {","            runningTasks--;","            if (args.length <= 1) {","                args = args[0];","            }","            if (err) {","                var safeResults = {};","                baseForOwn(results, function (val, rkey) {","                    safeResults[rkey] = val;","                });","                safeResults[key] = args;","                hasError = true;","                listeners = Object.create(null);","","                callback(err, safeResults);","            } else {","                results[key] = args;","                taskComplete(key);","            }","        }));","","        runningTasks++;","        var taskFn = wrapAsync$1(task[task.length - 1]);","        if (task.length > 1) {","            taskFn(results, taskCallback);","        } else {","            taskFn(taskCallback);","        }","    }","","    function checkForDeadlocks() {","        // Kahn's algorithm","        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm","        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html","        var currentTask;","        var counter = 0;","        while (readyToCheck.length) {","            currentTask = readyToCheck.pop();","            counter++;","            arrayEach(getDependents(currentTask), function (dependent) {","                if (--uncheckedDependencies[dependent] === 0) {","                    readyToCheck.push(dependent);","                }","            });","        }","","        if (counter !== numTasks) {","            throw new Error('async.auto cannot execute tasks due to a recursive dependency');","        }","    }","","    function getDependents(taskName) {","        var result = [];","        baseForOwn(tasks, function (task, key) {","            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {","                result.push(key);","            }","        });","        return result;","    }","};","","/**"," * A specialized version of `_.map` for arrays without support for iteratee"," * shorthands."," *"," * @private"," * @param {Array} [array] The array to iterate over."," * @param {Function} iteratee The function invoked per iteration."," * @returns {Array} Returns the new mapped array."," */","function arrayMap(array, iteratee) {","  var index = -1,","      length = array == null ? 0 : array.length,","      result = Array(length);","","  while (++index < length) {","    result[index] = iteratee(array[index], index, array);","  }","  return result;","}","","/** `Object#toString` result references. */","var symbolTag = '[object Symbol]';","","/**"," * Checks if `value` is classified as a `Symbol` primitive or object."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to check."," * @returns {boolean} Returns `true` if `value` is a symbol, else `false`."," * @example"," *"," * _.isSymbol(Symbol.iterator);"," * // => true"," *"," * _.isSymbol('abc');"," * // => false"," */","function isSymbol(value) {","  return typeof value == 'symbol' ||","    (isObjectLike(value) && baseGetTag(value) == symbolTag);","}","","/** Used as references for various `Number` constants. */","var INFINITY = 1 / 0;","","/** Used to convert symbols to primitives and strings. */","var symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;","var symbolToString = symbolProto ? symbolProto.toString : undefined;","","/**"," * The base implementation of `_.toString` which doesn't convert nullish"," * values to empty strings."," *"," * @private"," * @param {*} value The value to process."," * @returns {string} Returns the string."," */","function baseToString(value) {","  // Exit early for strings to avoid a performance hit in some environments.","  if (typeof value == 'string') {","    return value;","  }","  if (isArray(value)) {","    // Recursively convert values (susceptible to call stack limits).","    return arrayMap(value, baseToString) + '';","  }","  if (isSymbol(value)) {","    return symbolToString ? symbolToString.call(value) : '';","  }","  var result = (value + '');","  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;","}","","/**"," * The base implementation of `_.slice` without an iteratee call guard."," *"," * @private"," * @param {Array} array The array to slice."," * @param {number} [start=0] The start position."," * @param {number} [end=array.length] The end position."," * @returns {Array} Returns the slice of `array`."," */","function baseSlice(array, start, end) {","  var index = -1,","      length = array.length;","","  if (start < 0) {","    start = -start > length ? 0 : (length + start);","  }","  end = end > length ? length : end;","  if (end < 0) {","    end += length;","  }","  length = start > end ? 0 : ((end - start) >>> 0);","  start >>>= 0;","","  var result = Array(length);","  while (++index < length) {","    result[index] = array[index + start];","  }","  return result;","}","","/**"," * Casts `array` to a slice if it's needed."," *"," * @private"," * @param {Array} array The array to inspect."," * @param {number} start The start position."," * @param {number} [end=array.length] The end position."," * @returns {Array} Returns the cast slice."," */","function castSlice(array, start, end) {","  var length = array.length;","  end = end === undefined ? length : end;","  return (!start && end >= length) ? array : baseSlice(array, start, end);","}","","/**"," * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol"," * that is not found in the character symbols."," *"," * @private"," * @param {Array} strSymbols The string symbols to inspect."," * @param {Array} chrSymbols The character symbols to find."," * @returns {number} Returns the index of the last unmatched string symbol."," */","function charsEndIndex(strSymbols, chrSymbols) {","  var index = strSymbols.length;","","  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}","  return index;","}","","/**"," * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol"," * that is not found in the character symbols."," *"," * @private"," * @param {Array} strSymbols The string symbols to inspect."," * @param {Array} chrSymbols The character symbols to find."," * @returns {number} Returns the index of the first unmatched string symbol."," */","function charsStartIndex(strSymbols, chrSymbols) {","  var index = -1,","      length = strSymbols.length;","","  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}","  return index;","}","","/**"," * Converts an ASCII `string` to an array."," *"," * @private"," * @param {string} string The string to convert."," * @returns {Array} Returns the converted array."," */","function asciiToArray(string) {","  return string.split('');","}","","/** Used to compose unicode character classes. */","var rsAstralRange = '\\\\ud800-\\\\udfff';","var rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';","var rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';","var rsVarRange = '\\\\ufe0e\\\\ufe0f';","","/** Used to compose unicode capture groups. */","var rsZWJ = '\\\\u200d';","","/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */","var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');","","/**"," * Checks if `string` contains Unicode symbols."," *"," * @private"," * @param {string} string The string to inspect."," * @returns {boolean} Returns `true` if a symbol is found, else `false`."," */","function hasUnicode(string) {","  return reHasUnicode.test(string);","}","","/** Used to compose unicode character classes. */","var rsAstralRange$1 = '\\\\ud800-\\\\udfff';","var rsComboMarksRange$1 = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';","var rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20f0';","var rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';","","/** Used to compose unicode capture groups. */","var rsAstral = '[' + rsAstralRange$1 + ']';","var rsCombo = '[' + rsComboMarksRange$1 + rsComboSymbolsRange$1 + ']';","var rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';","var rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';","var rsNonAstral = '[^' + rsAstralRange$1 + ']';","var rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';","var rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';","var rsZWJ$1 = '\\\\u200d';","","/** Used to compose unicode regexes. */","var reOptMod = rsModifier + '?';","var rsOptVar = '[' + rsVarRange$1 + ']?';","var rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';","var rsSeq = rsOptVar + reOptMod + rsOptJoin;","var rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';","","/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */","var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');","","/**"," * Converts a Unicode `string` to an array."," *"," * @private"," * @param {string} string The string to convert."," * @returns {Array} Returns the converted array."," */","function unicodeToArray(string) {","  return string.match(reUnicode) || [];","}","","/**"," * Converts `string` to an array."," *"," * @private"," * @param {string} string The string to convert."," * @returns {Array} Returns the converted array."," */","function stringToArray(string) {","  return hasUnicode(string)","    ? unicodeToArray(string)","    : asciiToArray(string);","}","","/**"," * Converts `value` to a string. An empty string is returned for `null`"," * and `undefined` values. The sign of `-0` is preserved."," *"," * @static"," * @memberOf _"," * @since 4.0.0"," * @category Lang"," * @param {*} value The value to convert."," * @returns {string} Returns the converted string."," * @example"," *"," * _.toString(null);"," * // => ''"," *"," * _.toString(-0);"," * // => '-0'"," *"," * _.toString([1, 2, 3]);"," * // => '1,2,3'"," */","function toString(value) {","  return value == null ? '' : baseToString(value);","}","","/** Used to match leading and trailing whitespace. */","var reTrim = /^\\s+|\\s+$/g;","","/**"," * Removes leading and trailing whitespace or specified characters from `string`."," *"," * @static"," * @memberOf _"," * @since 3.0.0"," * @category String"," * @param {string} [string=''] The string to trim."," * @param {string} [chars=whitespace] The characters to trim."," * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`."," * @returns {string} Returns the trimmed string."," * @example"," *"," * _.trim('  abc  ');"," * // => 'abc'"," *"," * _.trim('-_-abc-_-', '_-');"," * // => 'abc'"," *"," * _.map(['  foo  ', '  bar  '], _.trim);"," * // => ['foo', 'bar']"," */","function trim(string, chars, guard) {","  string = toString(string);","  if (string && (guard || chars === undefined)) {","    return string.replace(reTrim, '');","  }","  if (!string || !(chars = baseToString(chars))) {","    return string;","  }","  var strSymbols = stringToArray(string),","      chrSymbols = stringToArray(chars),","      start = charsStartIndex(strSymbols, chrSymbols),","      end = charsEndIndex(strSymbols, chrSymbols) + 1;","","  return castSlice(strSymbols, start, end).join('');","}","","var FN_ARGS = /^(?:async\\s+)?(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;","var FN_ARG_SPLIT = /,/;","var FN_ARG = /(=.+)?(\\s*)$/;","var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;","","function parseParams(func) {","    func = func.toString().replace(STRIP_COMMENTS, '');","    func = func.match(FN_ARGS)[2].replace(' ', '');","    func = func ? func.split(FN_ARG_SPLIT) : [];","    func = func.map(function (arg) {","        return trim(arg.replace(FN_ARG, ''));","    });","    return func;","}","","/**"," * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent"," * tasks are specified as parameters to the function, after the usual callback"," * parameter, with the parameter names matching the names of the tasks it"," * depends on. This can provide even more readable task graphs which can be"," * easier to maintain."," *"," * If a final callback is specified, the task results are similarly injected,"," * specified as named parameters after the initial error parameter."," *"," * The autoInject function is purely syntactic sugar and its semantics are"," * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}."," *"," * @name autoInject"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.auto]{@link module:ControlFlow.auto}"," * @category Control Flow"," * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of"," * the form 'func([dependencies...], callback). The object's key of a property"," * serves as the name of the task defined by that property, i.e. can be used"," * when specifying requirements for other tasks."," * * The `callback` parameter is a `callback(err, result)` which must be called"," *   when finished, passing an `error` (which can be `null`) and the result of"," *   the function's execution. The remaining parameters name other tasks on"," *   which the task is dependent, and the results from those tasks are the"," *   arguments of those parameters."," * @param {Function} [callback] - An optional callback which is called when all"," * the tasks have been completed. It receives the `err` argument if any `tasks`"," * pass an error to their callback, and a `results` object with any completed"," * task results, similar to `auto`."," * @example"," *"," * //  The example from `auto` can be rewritten as follows:"," * async.autoInject({"," *     get_data: function(callback) {"," *         // async code to get some data"," *         callback(null, 'data', 'converted to array');"," *     },"," *     make_folder: function(callback) {"," *         // async code to create a directory to store a file in"," *         // this is run at the same time as getting the data"," *         callback(null, 'folder');"," *     },"," *     write_file: function(get_data, make_folder, callback) {"," *         // once there is some data and the directory exists,"," *         // write the data to a file in the directory"," *         callback(null, 'filename');"," *     },"," *     email_link: function(write_file, callback) {"," *         // once the file is written let's email a link to it..."," *         // write_file contains the filename returned by write_file."," *         callback(null, {'file':write_file, 'email':'user@example.com'});"," *     }"," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('email_link = ', results.email_link);"," * });"," *"," * // If you are using a JS minifier that mangles parameter names, `autoInject`"," * // will not work with plain functions, since the parameter names will be"," * // collapsed to a single letter identifier.  To work around this, you can"," * // explicitly specify the names of the parameters your task function needs"," * // in an array, similar to Angular.js dependency injection."," *"," * // This still has an advantage over plain `auto`, since the results a task"," * // depends on are still spread into arguments."," * async.autoInject({"," *     //..."," *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {"," *         callback(null, 'filename');"," *     }],"," *     email_link: ['write_file', function(write_file, callback) {"," *         callback(null, {'file':write_file, 'email':'user@example.com'});"," *     }]"," *     //..."," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('email_link = ', results.email_link);"," * });"," */","function autoInject(tasks, callback) {","    var newTasks = {};","","    baseForOwn(tasks, function (taskFn, key) {","        var params;","        var fnIsAsync = isAsync(taskFn);","        var hasNoDeps = !fnIsAsync && taskFn.length === 1 || fnIsAsync && taskFn.length === 0;","","        if (isArray(taskFn)) {","            params = taskFn.slice(0, -1);","            taskFn = taskFn[taskFn.length - 1];","","            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);","        } else if (hasNoDeps) {","            // no dependencies, use the function as-is","            newTasks[key] = taskFn;","        } else {","            params = parseParams(taskFn);","            if (taskFn.length === 0 && !fnIsAsync && params.length === 0) {","                throw new Error(\"autoInject task functions require explicit parameters.\");","            }","","            // remove callback param","            if (!fnIsAsync) params.pop();","","            newTasks[key] = params.concat(newTask);","        }","","        function newTask(results, taskCb) {","            var newArgs = arrayMap(params, function (name) {","                return results[name];","            });","            newArgs.push(taskCb);","            wrapAsync$1(taskFn).apply(null, newArgs);","        }","    });","","    auto(newTasks, callback);","}","","var hasSetImmediate = typeof setImmediate === 'function' && setImmediate;","var hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';","","function fallback(fn) {","    setTimeout(fn, 0);","}","","function wrap(defer) {","    return rest(function (fn, args) {","        defer(function () {","            fn.apply(null, args);","        });","    });","}","","var _defer;","","if (hasSetImmediate) {","    _defer = setImmediate;","} else if (hasNextTick) {","    _defer = process.nextTick;","} else {","    _defer = fallback;","}","","var setImmediate$1 = wrap(_defer);","","// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation","// used for queues. This implementation assumes that the node provided by the user can be modified","// to adjust the next and last properties. We implement only the minimal functionality","// for queue support.","function DLL() {","    this.head = this.tail = null;","    this.length = 0;","}","","function setInitial(dll, node) {","    dll.length = 1;","    dll.head = dll.tail = node;","}","","DLL.prototype.removeLink = function (node) {","    if (node.prev) node.prev.next = node.next;else this.head = node.next;","    if (node.next) node.next.prev = node.prev;else this.tail = node.prev;","","    node.prev = node.next = null;","    this.length -= 1;","    return node;","};","","DLL.prototype.empty = DLL;","","DLL.prototype.insertAfter = function (node, newNode) {","    newNode.prev = node;","    newNode.next = node.next;","    if (node.next) node.next.prev = newNode;else this.tail = newNode;","    node.next = newNode;","    this.length += 1;","};","","DLL.prototype.insertBefore = function (node, newNode) {","    newNode.prev = node.prev;","    newNode.next = node;","    if (node.prev) node.prev.next = newNode;else this.head = newNode;","    node.prev = newNode;","    this.length += 1;","};","","DLL.prototype.unshift = function (node) {","    if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);","};","","DLL.prototype.push = function (node) {","    if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);","};","","DLL.prototype.shift = function () {","    return this.head && this.removeLink(this.head);","};","","DLL.prototype.pop = function () {","    return this.tail && this.removeLink(this.tail);","};","","function queue(worker, concurrency, payload) {","    if (concurrency == null) {","        concurrency = 1;","    } else if (concurrency === 0) {","        throw new Error('Concurrency must not be zero');","    }","","    var _worker = wrapAsync$1(worker);","    var numRunning = 0;","    var workersList = [];","","    function _insert(data, insertAtFront, callback) {","        if (callback != null && typeof callback !== 'function') {","            throw new Error('task callback must be a function');","        }","        q.started = true;","        if (!isArray(data)) {","            data = [data];","        }","        if (data.length === 0 && q.idle()) {","            // call drain immediately if there are no tasks","            return setImmediate$1(function () {","                q.drain();","            });","        }","","        for (var i = 0, l = data.length; i < l; i++) {","            var item = {","                data: data[i],","                callback: callback || noop","            };","","            if (insertAtFront) {","                q._tasks.unshift(item);","            } else {","                q._tasks.push(item);","            }","        }","        setImmediate$1(q.process);","    }","","    function _next(tasks) {","        return rest(function (args) {","            numRunning -= 1;","","            for (var i = 0, l = tasks.length; i < l; i++) {","                var task = tasks[i];","                var index = baseIndexOf(workersList, task, 0);","                if (index >= 0) {","                    workersList.splice(index);","                }","","                task.callback.apply(task, args);","","                if (args[0] != null) {","                    q.error(args[0], task.data);","                }","            }","","            if (numRunning <= q.concurrency - q.buffer) {","                q.unsaturated();","            }","","            if (q.idle()) {","                q.drain();","            }","            q.process();","        });","    }","","    var isProcessing = false;","    var q = {","        _tasks: new DLL(),","        concurrency: concurrency,","        payload: payload,","        saturated: noop,","        unsaturated: noop,","        buffer: concurrency / 4,","        empty: noop,","        drain: noop,","        error: noop,","        started: false,","        paused: false,","        push: function (data, callback) {","            _insert(data, false, callback);","        },","        kill: function () {","            q.drain = noop;","            q._tasks.empty();","        },","        unshift: function (data, callback) {","            _insert(data, true, callback);","        },","        process: function () {","            // Avoid trying to start too many processing operations. This can occur","            // when callbacks resolve synchronously (#1267).","            if (isProcessing) {","                return;","            }","            isProcessing = true;","            while (!q.paused && numRunning < q.concurrency && q._tasks.length) {","                var tasks = [],","                    data = [];","                var l = q._tasks.length;","                if (q.payload) l = Math.min(l, q.payload);","                for (var i = 0; i < l; i++) {","                    var node = q._tasks.shift();","                    tasks.push(node);","                    data.push(node.data);","                }","","                if (q._tasks.length === 0) {","                    q.empty();","                }","                numRunning += 1;","                workersList.push(tasks[0]);","","                if (numRunning === q.concurrency) {","                    q.saturated();","                }","","                var cb = onlyOnce(_next(tasks));","                _worker(data, cb);","            }","            isProcessing = false;","        },","        length: function () {","            return q._tasks.length;","        },","        running: function () {","            return numRunning;","        },","        workersList: function () {","            return workersList;","        },","        idle: function () {","            return q._tasks.length + numRunning === 0;","        },","        pause: function () {","            q.paused = true;","        },","        resume: function () {","            if (q.paused === false) {","                return;","            }","            q.paused = false;","            setImmediate$1(q.process);","        }","    };","    return q;","}","","/**"," * A cargo of tasks for the worker function to complete. Cargo inherits all of"," * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}."," * @typedef {Object} CargoObject"," * @memberOf module:ControlFlow"," * @property {Function} length - A function returning the number of items"," * waiting to be processed. Invoke like `cargo.length()`."," * @property {number} payload - An `integer` for determining how many tasks"," * should be process per round. This property can be changed after a `cargo` is"," * created to alter the payload on-the-fly."," * @property {Function} push - Adds `task` to the `queue`. The callback is"," * called once the `worker` has finished processing the task. Instead of a"," * single task, an array of `tasks` can be submitted. The respective callback is"," * used for every task in the list. Invoke like `cargo.push(task, [callback])`."," * @property {Function} saturated - A callback that is called when the"," * `queue.length()` hits the concurrency and further tasks will be queued."," * @property {Function} empty - A callback that is called when the last item"," * from the `queue` is given to a `worker`."," * @property {Function} drain - A callback that is called when the last item"," * from the `queue` has returned from the `worker`."," * @property {Function} idle - a function returning false if there are items"," * waiting or being processed, or true if not. Invoke like `cargo.idle()`."," * @property {Function} pause - a function that pauses the processing of tasks"," * until `resume()` is called. Invoke like `cargo.pause()`."," * @property {Function} resume - a function that resumes the processing of"," * queued tasks when the queue is paused. Invoke like `cargo.resume()`."," * @property {Function} kill - a function that removes the `drain` callback and"," * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`."," */","","/**"," * Creates a `cargo` object with the specified payload. Tasks added to the"," * cargo will be processed altogether (up to the `payload` limit). If the"," * `worker` is in progress, the task is queued until it becomes available. Once"," * the `worker` has completed some tasks, each callback of those tasks is"," * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)"," * for how `cargo` and `queue` work."," *"," * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers"," * at a time, cargo passes an array of tasks to a single worker, repeating"," * when the worker is finished."," *"," * @name cargo"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.queue]{@link module:ControlFlow.queue}"," * @category Control Flow"," * @param {AsyncFunction} worker - An asynchronous function for processing an array"," * of queued tasks. Invoked with `(tasks, callback)`."," * @param {number} [payload=Infinity] - An optional `integer` for determining"," * how many tasks should be processed per round; if omitted, the default is"," * unlimited."," * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can"," * attached as certain properties to listen for specific events during the"," * lifecycle of the cargo and inner queue."," * @example"," *"," * // create a cargo object with payload 2"," * var cargo = async.cargo(function(tasks, callback) {"," *     for (var i=0; i<tasks.length; i++) {"," *         console.log('hello ' + tasks[i].name);"," *     }"," *     callback();"," * }, 2);"," *"," * // add some items"," * cargo.push({name: 'foo'}, function(err) {"," *     console.log('finished processing foo');"," * });"," * cargo.push({name: 'bar'}, function(err) {"," *     console.log('finished processing bar');"," * });"," * cargo.push({name: 'baz'}, function(err) {"," *     console.log('finished processing baz');"," * });"," */","function cargo(worker, payload) {","  return queue(worker, 1, payload);","}","","/**"," * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time."," *"," * @name eachOfSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.eachOf]{@link module:Collections.eachOf}"," * @alias forEachOfSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Invoked with (err)."," */","var eachOfSeries = doLimit(eachOfLimit, 1);","","/**"," * Reduces `coll` into a single value using an async `iteratee` to return each"," * successive step. `memo` is the initial state of the reduction. This function"," * only operates in series."," *"," * For performance reasons, it may make sense to split a call to this function"," * into a parallel map, and then use the normal `Array.prototype.reduce` on the"," * results. This function is for situations where each step in the reduction"," * needs to be async; if you can get the data before reducing it, then it's"," * probably a good idea to do so."," *"," * @name reduce"," * @static"," * @memberOf module:Collections"," * @method"," * @alias inject"," * @alias foldl"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {*} memo - The initial state of the reduction."," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * array to produce the next step in the reduction."," * The `iteratee` should complete with the next state of the reduction."," * If the iteratee complete with an error, the reduction is stopped and the"," * main `callback` is immediately called with the error."," * Invoked with (memo, item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the reduced value. Invoked with"," * (err, result)."," * @example"," *"," * async.reduce([1,2,3], 0, function(memo, item, callback) {"," *     // pointless async:"," *     process.nextTick(function() {"," *         callback(null, memo + item)"," *     });"," * }, function(err, result) {"," *     // result is now equal to the last value of memo, which is 6"," * });"," */","function reduce(coll, memo, iteratee, callback) {","    callback = once(callback || noop);","    var _iteratee = wrapAsync$1(iteratee);","    eachOfSeries(coll, function (x, i, callback) {","        _iteratee(memo, x, function (err, v) {","            memo = v;","            callback(err);","        });","    }, function (err) {","        callback(err, memo);","    });","}","","/**"," * Version of the compose function that is more natural to read. Each function"," * consumes the return value of the previous function. It is the equivalent of"," * [compose]{@link module:ControlFlow.compose} with the arguments reversed."," *"," * Each function is executed with the `this` binding of the composed function."," *"," * @name seq"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.compose]{@link module:ControlFlow.compose}"," * @category Control Flow"," * @param {...AsyncFunction} functions - the asynchronous functions to compose"," * @returns {Function} a function that composes the `functions` in order"," * @example"," *"," * // Requires lodash (or underscore), express3 and dresende's orm2."," * // Part of an app, that fetches cats of the logged user."," * // This example uses `seq` function to avoid overnesting and error"," * // handling clutter."," * app.get('/cats', function(request, response) {"," *     var User = request.models.User;"," *     async.seq("," *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))"," *         function(user, fn) {"," *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))"," *         }"," *     )(req.session.user_id, function (err, cats) {"," *         if (err) {"," *             console.error(err);"," *             response.json({ status: 'error', message: err.message });"," *         } else {"," *             response.json({ status: 'ok', message: 'Cats found', data: cats });"," *         }"," *     });"," * });"," */","var seq$1 = rest(function seq(functions) {","    var _functions = arrayMap(functions, wrapAsync$1);","    return rest(function (args) {","        var that = this;","","        var cb = args[args.length - 1];","        if (typeof cb == 'function') {","            args.pop();","        } else {","            cb = noop;","        }","","        reduce(_functions, args, function (newargs, fn, cb) {","            fn.apply(that, newargs.concat(rest(function (err, nextargs) {","                cb(err, nextargs);","            })));","        }, function (err, results) {","            cb.apply(that, [err].concat(results));","        });","    });","});","","/**"," * Creates a function which is a composition of the passed asynchronous"," * functions. Each function consumes the return value of the function that"," * follows. Composing functions `f()`, `g()`, and `h()` would produce the result"," * of `f(g(h()))`, only this version uses callbacks to obtain the return values."," *"," * Each function is executed with the `this` binding of the composed function."," *"," * @name compose"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {...AsyncFunction} functions - the asynchronous functions to compose"," * @returns {Function} an asynchronous function that is the composed"," * asynchronous `functions`"," * @example"," *"," * function add1(n, callback) {"," *     setTimeout(function () {"," *         callback(null, n + 1);"," *     }, 10);"," * }"," *"," * function mul3(n, callback) {"," *     setTimeout(function () {"," *         callback(null, n * 3);"," *     }, 10);"," * }"," *"," * var add1mul3 = async.compose(mul3, add1);"," * add1mul3(4, function (err, result) {"," *     // result now equals 15"," * });"," */","var compose = rest(function (args) {","  return seq$1.apply(null, args.reverse());","});","","function concat$1(eachfn, arr, fn, callback) {","    var result = [];","    eachfn(arr, function (x, index, cb) {","        fn(x, function (err, y) {","            result = result.concat(y || []);","            cb(err);","        });","    }, function (err) {","        callback(err, result);","    });","}","","/**"," * Applies `iteratee` to each item in `coll`, concatenating the results. Returns"," * the concatenated list. The `iteratee`s are called in parallel, and the"," * results are concatenated as they return. There is no guarantee that the"," * results array will be returned in the original order of `coll` passed to the"," * `iteratee` function."," *"," * @name concat"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,"," * which should use an array as its result. Invoked with (item, callback)."," * @param {Function} [callback(err)] - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is an array"," * containing the concatenated results of the `iteratee` function. Invoked with"," * (err, results)."," * @example"," *"," * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {"," *     // files is now a list of filenames that exist in the 3 directories"," * });"," */","var concat = doParallel(concat$1);","","function doSeries(fn) {","    return function (obj, iteratee, callback) {","        return fn(eachOfSeries, obj, wrapAsync$1(iteratee), callback);","    };","}","","/**"," * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time."," *"," * @name concatSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.concat]{@link module:Collections.concat}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`."," * The iteratee should complete with an array an array of results."," * Invoked with (item, callback)."," * @param {Function} [callback(err)] - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is an array"," * containing the concatenated results of the `iteratee` function. Invoked with"," * (err, results)."," */","var concatSeries = doSeries(concat$1);","","/**"," * Returns a function that when called, calls-back with the values provided."," * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to"," * [`auto`]{@link module:ControlFlow.auto}."," *"," * @name constant"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {...*} arguments... - Any number of arguments to automatically invoke"," * callback with."," * @returns {AsyncFunction} Returns a function that when invoked, automatically"," * invokes the callback with the previous given arguments."," * @example"," *"," * async.waterfall(["," *     async.constant(42),"," *     function (value, next) {"," *         // value === 42"," *     },"," *     //..."," * ], callback);"," *"," * async.waterfall(["," *     async.constant(filename, \"utf8\"),"," *     fs.readFile,"," *     function (fileData, next) {"," *         //..."," *     }"," *     //..."," * ], callback);"," *"," * async.auto({"," *     hostname: async.constant(\"https://server.net/\"),"," *     port: findFreePort,"," *     launchServer: [\"hostname\", \"port\", function (options, cb) {"," *         startServer(options, cb);"," *     }],"," *     //..."," * }, callback);"," */","var constant = rest(function (values) {","    var args = [null].concat(values);","    return initialParams(function (ignoredArgs, callback) {","        return callback.apply(this, args);","    });","});","","function _createTester(check, getResult) {","    return function (eachfn, arr, iteratee, cb) {","        cb = cb || noop;","        var testPassed = false;","        var testResult;","        eachfn(arr, function (value, _, callback) {","            iteratee(value, function (err, result) {","                if (err) {","                    callback(err);","                } else if (check(result) && !testResult) {","                    testPassed = true;","                    testResult = getResult(true, value);","                    callback(null, breakLoop);","                } else {","                    callback();","                }","            });","        }, function (err) {","            if (err) {","                cb(err);","            } else {","                cb(null, testPassed ? testResult : getResult(false));","            }","        });","    };","}","","function _findGetResult(v, x) {","    return x;","}","","/**"," * Returns the first value in `coll` that passes an async truth test. The"," * `iteratee` is applied in parallel, meaning the first iteratee to return"," * `true` will fire the detect `callback` with that result. That means the"," * result might not be the first item in the original `coll` (in terms of order)"," * that passes the test.",""," * If order within the original `coll` is important, then look at"," * [`detectSeries`]{@link module:Collections.detectSeries}."," *"," * @name detect"," * @static"," * @memberOf module:Collections"," * @method"," * @alias find"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," * @example"," *"," * async.detect(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // result now equals the first file in the list that exists"," * });"," */","var detect = doParallel(_createTester(identity, _findGetResult));","","/**"," * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name detectLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.detect]{@link module:Collections.detect}"," * @alias findLimit"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," */","var detectLimit = doParallelLimit(_createTester(identity, _findGetResult));","","/**"," * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time."," *"," * @name detectSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.detect]{@link module:Collections.detect}"," * @alias findSeries"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," */","var detectSeries = doLimit(detectLimit, 1);","","function consoleFunc(name) {","    return rest(function (fn, args) {","        wrapAsync$1(fn).apply(null, args.concat(rest(function (err, args) {","            if (typeof console === 'object') {","                if (err) {","                    if (console.error) {","                        console.error(err);","                    }","                } else if (console[name]) {","                    arrayEach(args, function (x) {","                        console[name](x);","                    });","                }","            }","        })));","    });","}","","/**"," * Logs the result of an [`async` function]{@link AsyncFunction} to the"," * `console` using `console.dir` to display the properties of the resulting object."," * Only works in Node.js or in browsers that support `console.dir` and"," * `console.error` (such as FF and Chrome)."," * If multiple arguments are returned from the async function,"," * `console.dir` is called on each argument in order."," *"," * @name dir"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} function - The function you want to eventually apply"," * all arguments to."," * @param {...*} arguments... - Any number of arguments to apply to the function."," * @example"," *"," * // in a module"," * var hello = function(name, callback) {"," *     setTimeout(function() {"," *         callback(null, {hello: name});"," *     }, 1000);"," * };"," *"," * // in the node repl"," * node> async.dir(hello, 'world');"," * {hello: 'world'}"," */","var dir = consoleFunc('dir');","","/**"," * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in"," * the order of operations, the arguments `test` and `fn` are switched."," *"," * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function."," * @name doDuring"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.during]{@link module:ControlFlow.during}"," * @category Control Flow"," * @param {AsyncFunction} fn - An async function which is called each time"," * `test` passes. Invoked with (callback)."," * @param {AsyncFunction} test - asynchronous truth test to perform before each"," * execution of `fn`. Invoked with (...args, callback), where `...args` are the"," * non-error args from the previous callback of `fn`."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `fn` has stopped. `callback`"," * will be passed an error if one occurred, otherwise `null`."," */","function doDuring(fn, test, callback) {","    callback = onlyOnce(callback || noop);","    var _fn = wrapAsync$1(fn);","    var _test = wrapAsync$1(test);","","    var next = rest(function (err, args) {","        if (err) return callback(err);","        args.push(check);","        _test.apply(this, args);","    });","","    function check(err, truth) {","        if (err) return callback(err);","        if (!truth) return callback(null);","        _fn(next);","    }","","    check(null, true);","}","","/**"," * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in"," * the order of operations, the arguments `test` and `iteratee` are switched."," *"," * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript."," *"," * @name doWhilst"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {AsyncFunction} iteratee - A function which is called each time `test`"," * passes. Invoked with (callback)."," * @param {Function} test - synchronous truth test to perform after each"," * execution of `iteratee`. Invoked with any non-error callback results of"," * `iteratee`."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `iteratee` has stopped."," * `callback` will be passed an error and any arguments passed to the final"," * `iteratee`'s callback. Invoked with (err, [results]);"," */","function doWhilst(iteratee, test, callback) {","    callback = onlyOnce(callback || noop);","    var _iteratee = wrapAsync$1(iteratee);","    var next = rest(function (err, args) {","        if (err) return callback(err);","        if (test.apply(this, args)) return _iteratee(next);","        callback.apply(null, [null].concat(args));","    });","    _iteratee(next);","}","","/**"," * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the"," * argument ordering differs from `until`."," *"," * @name doUntil"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}"," * @category Control Flow"," * @param {AsyncFunction} iteratee - An async function which is called each time"," * `test` fails. Invoked with (callback)."," * @param {Function} test - synchronous truth test to perform after each"," * execution of `iteratee`. Invoked with any non-error callback results of"," * `iteratee`."," * @param {Function} [callback] - A callback which is called after the test"," * function has passed and repeated execution of `iteratee` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `iteratee`'s"," * callback. Invoked with (err, [results]);"," */","function doUntil(iteratee, test, callback) {","    doWhilst(iteratee, function () {","        return !test.apply(this, arguments);","    }, callback);","}","","/**"," * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that"," * is passed a callback in the form of `function (err, truth)`. If error is"," * passed to `test` or `fn`, the main callback is immediately called with the"," * value of the error."," *"," * @name during"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {AsyncFunction} test - asynchronous truth test to perform before each"," * execution of `fn`. Invoked with (callback)."," * @param {AsyncFunction} fn - An async function which is called each time"," * `test` passes. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `fn` has stopped. `callback`"," * will be passed an error, if one occurred, otherwise `null`."," * @example"," *"," * var count = 0;"," *"," * async.during("," *     function (callback) {"," *         return callback(null, count < 5);"," *     },"," *     function (callback) {"," *         count++;"," *         setTimeout(callback, 1000);"," *     },"," *     function (err) {"," *         // 5 seconds have passed"," *     }"," * );"," */","function during(test, fn, callback) {","    callback = onlyOnce(callback || noop);","    var _fn = wrapAsync$1(fn);","    var _test = wrapAsync$1(test);","","    function next(err) {","        if (err) return callback(err);","        _test(check);","    }","","    function check(err, truth) {","        if (err) return callback(err);","        if (!truth) return callback(null);","        _fn(next);","    }","","    _test(check);","}","","function _withoutIndex(iteratee) {","    return function (value, index, callback) {","        return iteratee(value, callback);","    };","}","","/**"," * Applies the function `iteratee` to each item in `coll`, in parallel."," * The `iteratee` is called with an item from the list, and a callback for when"," * it has finished. If the `iteratee` passes an error to its `callback`, the"," * main `callback` (for the `each` function) is immediately called with the"," * error."," *"," * Note, that since this function applies `iteratee` to each item in parallel,"," * there is no guarantee that the iteratee functions will complete in order."," *"," * @name each"," * @static"," * @memberOf module:Collections"," * @method"," * @alias forEach"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to"," * each item in `coll`. Invoked with (item, callback)."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOf`."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," * @example"," *"," * // assuming openFiles is an array of file names and saveFile is a function"," * // to save the modified contents of that file:"," *"," * async.each(openFiles, saveFile, function(err){"," *   // if any of the saves produced an error, err would equal that error"," * });"," *"," * // assuming openFiles is an array of file names"," * async.each(openFiles, function(file, callback) {"," *"," *     // Perform operation on file here."," *     console.log('Processing file ' + file);"," *"," *     if( file.length > 32 ) {"," *       console.log('This file name is too long');"," *       callback('File name too long');"," *     } else {"," *       // Do work to process file here"," *       console.log('File processed');"," *       callback();"," *     }"," * }, function(err) {"," *     // if any of the file processing produced an error, err would equal that error"," *     if( err ) {"," *       // One of the iterations produced an error."," *       // All processing will now stop."," *       console.log('A file failed to process');"," *     } else {"," *       console.log('All files have been processed successfully');"," *     }"," * });"," */","function eachLimit(coll, iteratee, callback) {","  eachOf(coll, _withoutIndex(wrapAsync$1(iteratee)), callback);","}","","/**"," * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time."," *"," * @name eachLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.each]{@link module:Collections.each}"," * @alias forEachLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOfLimit`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","function eachLimit$1(coll, limit, iteratee, callback) {","  _eachOfLimit(limit)(coll, _withoutIndex(wrapAsync$1(iteratee)), callback);","}","","/**"," * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time."," *"," * @name eachSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.each]{@link module:Collections.each}"," * @alias forEachSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each"," * item in `coll`."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOfSeries`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","var eachSeries = doLimit(eachLimit$1, 1);","","/**"," * Wrap an async function and ensure it calls its callback on a later tick of"," * the event loop.  If the function already calls its callback on a next tick,"," * no extra deferral is added. This is useful for preventing stack overflows"," * (`RangeError: Maximum call stack size exceeded`) and generally keeping"," * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)"," * contained. ES2017 `async` functions are returned as-is -- they are immune"," * to Zalgo's corrupting influences, as they always resolve on a later tick."," *"," * @name ensureAsync"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} fn - an async function, one that expects a node-style"," * callback as its last argument."," * @returns {AsyncFunction} Returns a wrapped function with the exact same call"," * signature as the function passed in."," * @example"," *"," * function sometimesAsync(arg, callback) {"," *     if (cache[arg]) {"," *         return callback(null, cache[arg]); // this would be synchronous!!"," *     } else {"," *         doSomeIO(arg, callback); // this IO would be asynchronous"," *     }"," * }"," *"," * // this has a risk of stack overflows if many results are cached in a row"," * async.mapSeries(args, sometimesAsync, done);"," *"," * // this will defer sometimesAsync's callback if necessary,"," * // preventing stack overflows"," * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);"," */","function ensureAsync(fn) {","    if (isAsync(fn)) return fn;","    return initialParams(function (args, callback) {","        var sync = true;","        args.push(function () {","            var innerArgs = arguments;","            if (sync) {","                setImmediate$1(function () {","                    callback.apply(null, innerArgs);","                });","            } else {","                callback.apply(null, innerArgs);","            }","        });","        fn.apply(this, args);","        sync = false;","    });","}","","function notId(v) {","    return !v;","}","","/**"," * Returns `true` if every element in `coll` satisfies an async test. If any"," * iteratee call returns `false`, the main `callback` is immediately called."," *"," * @name every"," * @static"," * @memberOf module:Collections"," * @method"," * @alias all"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in parallel."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," * @example"," *"," * async.every(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // if result is true then every file exists"," * });"," */","var every = doParallel(_createTester(notId, notId));","","/**"," * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time."," *"," * @name everyLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.every]{@link module:Collections.every}"," * @alias allLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in parallel."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," */","var everyLimit = doParallelLimit(_createTester(notId, notId));","","/**"," * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time."," *"," * @name everySeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.every]{@link module:Collections.every}"," * @alias allSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in series."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," */","var everySeries = doLimit(everyLimit, 1);","","/**"," * The base implementation of `_.property` without support for deep paths."," *"," * @private"," * @param {string} key The key of the property to get."," * @returns {Function} Returns the new accessor function."," */","function baseProperty(key) {","  return function(object) {","    return object == null ? undefined : object[key];","  };","}","","function filterArray(eachfn, arr, iteratee, callback) {","    var truthValues = new Array(arr.length);","    eachfn(arr, function (x, index, callback) {","        iteratee(x, function (err, v) {","            truthValues[index] = !!v;","            callback(err);","        });","    }, function (err) {","        if (err) return callback(err);","        var results = [];","        for (var i = 0; i < arr.length; i++) {","            if (truthValues[i]) results.push(arr[i]);","        }","        callback(null, results);","    });","}","","function filterGeneric(eachfn, coll, iteratee, callback) {","    var results = [];","    eachfn(coll, function (x, index, callback) {","        iteratee(x, function (err, v) {","            if (err) {","                callback(err);","            } else {","                if (v) {","                    results.push({ index: index, value: x });","                }","                callback();","            }","        });","    }, function (err) {","        if (err) {","            callback(err);","        } else {","            callback(null, arrayMap(results.sort(function (a, b) {","                return a.index - b.index;","            }), baseProperty('value')));","        }","    });","}","","function _filter(eachfn, coll, iteratee, callback) {","    var filter = isArrayLike(coll) ? filterArray : filterGeneric;","    filter(eachfn, coll, wrapAsync$1(iteratee), callback || noop);","}","","/**"," * Returns a new array of all the values in `coll` which pass an async truth"," * test. This operation is performed in parallel, but the results array will be"," * in the same order as the original."," *"," * @name filter"," * @static"," * @memberOf module:Collections"," * @method"," * @alias select"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," * @example"," *"," * async.filter(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, results) {"," *     // results now equals an array of the existing files"," * });"," */","var filter = doParallel(_filter);","","/**"," * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name filterLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @alias selectLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","var filterLimit = doParallelLimit(_filter);","","/**"," * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time."," *"," * @name filterSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @alias selectSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)"," */","var filterSeries = doLimit(filterLimit, 1);","","/**"," * Calls the asynchronous function `fn` with a callback parameter that allows it"," * to call itself again, in series, indefinitely.",""," * If an error is passed to the callback then `errback` is called with the"," * error, and execution stops, otherwise it will never be called."," *"," * @name forever"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {AsyncFunction} fn - an async function to call repeatedly."," * Invoked with (next)."," * @param {Function} [errback] - when `fn` passes an error to it's callback,"," * this function will be called, and execution stops. Invoked with (err)."," * @example"," *"," * async.forever("," *     function(next) {"," *         // next is suitable for passing to things that need a callback(err [, whatever]);"," *         // it will result in this function being called again."," *     },"," *     function(err) {"," *         // if next is called with a value in its first parameter, it will appear"," *         // in here as 'err', and execution will stop."," *     }"," * );"," */","function forever(fn, errback) {","    var done = onlyOnce(errback || noop);","    var task = wrapAsync$1(ensureAsync(fn));","","    function next(err) {","        if (err) return done(err);","        task(next);","    }","    next();","}","","/**"," * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time."," *"," * @name groupByLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.groupBy]{@link module:Collections.groupBy}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a `key` to group the value under."," * Invoked with (value, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Result is an `Object` whoses"," * properties are arrays of values which returned the corresponding key."," */","var groupByLimit = function (coll, limit, iteratee, callback) {","    callback = callback || noop;","    var _iteratee = wrapAsync$1(iteratee);","    mapLimit(coll, limit, function (val, callback) {","        _iteratee(val, function (err, key) {","            if (err) return callback(err);","            return callback(null, { key: key, val: val });","        });","    }, function (err, mapResults) {","        var result = {};","        // from MDN, handle object having an `hasOwnProperty` prop","        var hasOwnProperty = Object.prototype.hasOwnProperty;","","        for (var i = 0; i < mapResults.length; i++) {","            if (mapResults[i]) {","                var key = mapResults[i].key;","                var val = mapResults[i].val;","","                if (hasOwnProperty.call(result, key)) {","                    result[key].push(val);","                } else {","                    result[key] = [val];","                }","            }","        }","","        return callback(err, result);","    });","};","","/**"," * Returns a new object, where each value corresponds to an array of items, from"," * `coll`, that returned the corresponding key. That is, the keys of the object"," * correspond to the values passed to the `iteratee` callback."," *"," * Note: Since this function applies the `iteratee` to each item in parallel,"," * there is no guarantee that the `iteratee` functions will complete in order."," * However, the values for each key in the `result` will be in the same order as"," * the original `coll`. For Objects, the values will roughly be in the order of"," * the original Objects' keys (but this can vary across JavaScript engines)."," *"," * @name groupBy"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a `key` to group the value under."," * Invoked with (value, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Result is an `Object` whoses"," * properties are arrays of values which returned the corresponding key."," * @example"," *"," * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {"," *     db.findById(userId, function(err, user) {"," *         if (err) return callback(err);"," *         return callback(null, user.age);"," *     });"," * }, function(err, result) {"," *     // result is object containing the userIds grouped by age"," *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};"," * });"," */","var groupBy = doLimit(groupByLimit, Infinity);","","/**"," * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time."," *"," * @name groupBySeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.groupBy]{@link module:Collections.groupBy}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a `key` to group the value under."," * Invoked with (value, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Result is an `Object` whoses"," * properties are arrays of values which returned the corresponding key."," */","var groupBySeries = doLimit(groupByLimit, 1);","","/**"," * Logs the result of an `async` function to the `console`. Only works in"," * Node.js or in browsers that support `console.log` and `console.error` (such"," * as FF and Chrome). If multiple arguments are returned from the async"," * function, `console.log` is called on each argument in order."," *"," * @name log"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} function - The function you want to eventually apply"," * all arguments to."," * @param {...*} arguments... - Any number of arguments to apply to the function."," * @example"," *"," * // in a module"," * var hello = function(name, callback) {"," *     setTimeout(function() {"," *         callback(null, 'hello ' + name);"," *     }, 1000);"," * };"," *"," * // in the node repl"," * node> async.log(hello, 'world');"," * 'hello world'"," */","var log = consoleFunc('log');","","/**"," * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name mapValuesLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.mapValues]{@link module:Collections.mapValues}"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - A function to apply to each value and key"," * in `coll`."," * The iteratee should complete with the transformed value as its result."," * Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," */","function mapValuesLimit(obj, limit, iteratee, callback) {","    callback = once(callback || noop);","    var newObj = {};","    var _iteratee = wrapAsync$1(iteratee);","    eachOfLimit(obj, limit, function (val, key, next) {","        _iteratee(val, key, function (err, result) {","            if (err) return next(err);","            newObj[key] = result;","            next();","        });","    }, function (err) {","        callback(err, newObj);","    });","}","","/**"," * A relative of [`map`]{@link module:Collections.map}, designed for use with objects."," *"," * Produces a new Object by mapping each value of `obj` through the `iteratee`"," * function. The `iteratee` is called each `value` and `key` from `obj` and a"," * callback for when it has finished processing. Each of these callbacks takes"," * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`"," * passes an error to its callback, the main `callback` (for the `mapValues`"," * function) is immediately called with the error."," *"," * Note, the order of the keys in the result is not guaranteed.  The keys will"," * be roughly in the order they complete, (but this is very engine-specific)"," *"," * @name mapValues"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each value and key"," * in `coll`."," * The iteratee should complete with the transformed value as its result."," * Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," * @example"," *"," * async.mapValues({"," *     f1: 'file1',"," *     f2: 'file2',"," *     f3: 'file3'"," * }, function (file, key, callback) {"," *   fs.stat(file, callback);"," * }, function(err, result) {"," *     // result is now a map of stats for each file, e.g."," *     // {"," *     //     f1: [stats for file1],"," *     //     f2: [stats for file2],"," *     //     f3: [stats for file3]"," *     // }"," * });"," */","","var mapValues = doLimit(mapValuesLimit, Infinity);","","/**"," * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time."," *"," * @name mapValuesSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.mapValues]{@link module:Collections.mapValues}"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each value and key"," * in `coll`."," * The iteratee should complete with the transformed value as its result."," * Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," */","var mapValuesSeries = doLimit(mapValuesLimit, 1);","","function has(obj, key) {","    return key in obj;","}","","/**"," * Caches the results of an async function. When creating a hash to store"," * function results against, the callback is omitted from the hash and an"," * optional hash function can be used."," *"," * If no hash function is specified, the first argument is used as a hash key,"," * which may work reasonably if it is a string or a data type that converts to a"," * distinct string. Note that objects and arrays will not behave reasonably."," * Neither will cases where the other arguments are significant. In such cases,"," * specify your own hash function."," *"," * The cache of results is exposed as the `memo` property of the function"," * returned by `memoize`."," *"," * @name memoize"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} fn - The async function to proxy and cache results from."," * @param {Function} hasher - An optional function for generating a custom hash"," * for storing results. It has all the arguments applied to it apart from the"," * callback, and must be synchronous."," * @returns {AsyncFunction} a memoized version of `fn`"," * @example"," *"," * var slow_fn = function(name, callback) {"," *     // do something"," *     callback(null, result);"," * };"," * var fn = async.memoize(slow_fn);"," *"," * // fn can now be used as if it were slow_fn"," * fn('some name', function() {"," *     // callback"," * });"," */","function memoize(fn, hasher) {","    var memo = Object.create(null);","    var queues = Object.create(null);","    hasher = hasher || identity;","    var _fn = wrapAsync$1(fn);","    var memoized = initialParams(function memoized(args, callback) {","        var key = hasher.apply(null, args);","        if (has(memo, key)) {","            setImmediate$1(function () {","                callback.apply(null, memo[key]);","            });","        } else if (has(queues, key)) {","            queues[key].push(callback);","        } else {","            queues[key] = [callback];","            _fn.apply(null, args.concat(rest(function (args) {","                memo[key] = args;","                var q = queues[key];","                delete queues[key];","                for (var i = 0, l = q.length; i < l; i++) {","                    q[i].apply(null, args);","                }","            })));","        }","    });","    memoized.memo = memo;","    memoized.unmemoized = fn;","    return memoized;","}","","/**"," * Calls `callback` on a later loop around the event loop. In Node.js this just"," * calls `setImmediate`.  In the browser it will use `setImmediate` if"," * available, otherwise `setTimeout(callback, 0)`, which means other higher"," * priority events may precede the execution of `callback`."," *"," * This is used internally for browser-compatibility purposes."," *"," * @name nextTick"," * @static"," * @memberOf module:Utils"," * @method"," * @alias setImmediate"," * @category Util"," * @param {Function} callback - The function to call on a later loop around"," * the event loop. Invoked with (args...)."," * @param {...*} args... - any number of additional arguments to pass to the"," * callback on the next tick."," * @example"," *"," * var call_order = [];"," * async.nextTick(function() {"," *     call_order.push('two');"," *     // call_order now equals ['one','two']"," * });"," * call_order.push('one');"," *"," * async.setImmediate(function (a, b, c) {"," *     // a, b, and c equal 1, 2, and 3"," * }, 1, 2, 3);"," */","var _defer$1;","","if (hasNextTick) {","    _defer$1 = process.nextTick;","} else if (hasSetImmediate) {","    _defer$1 = setImmediate;","} else {","    _defer$1 = fallback;","}","","var nextTick = wrap(_defer$1);","","function _parallel(eachfn, tasks, callback) {","    callback = callback || noop;","    var results = isArrayLike(tasks) ? [] : {};","","    eachfn(tasks, function (task, key, callback) {","        wrapAsync$1(task)(rest(function (err, args) {","            if (args.length <= 1) {","                args = args[0];","            }","            results[key] = args;","            callback(err);","        }));","    }, function (err) {","        callback(err, results);","    });","}","","/**"," * Run the `tasks` collection of functions in parallel, without waiting until"," * the previous function has completed. If any of the functions pass an error to"," * its callback, the main `callback` is immediately called with the value of the"," * error. Once the `tasks` have completed, the results are passed to the final"," * `callback` as an array."," *"," * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about"," * parallel execution of code.  If your tasks do not use any timers or perform"," * any I/O, they will actually be executed in series.  Any synchronous setup"," * sections for each task will happen one after the other.  JavaScript remains"," * single-threaded."," *"," * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the"," * execution of other tasks when a task fails."," *"," * It is also possible to use an object instead of an array. Each property will"," * be run as a function and the results will be passed to the final `callback`"," * as an object instead of an array. This can be a more readable way of handling"," * results from {@link async.parallel}."," *"," * @name parallel"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection of"," * [async functions]{@link AsyncFunction} to run."," * Each async function can complete with any number of optional `result` values."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed successfully. This function gets a results array"," * (or object) containing all the result arguments passed to the task callbacks."," * Invoked with (err, results)."," *"," * @example"," * async.parallel(["," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'two');"," *         }, 100);"," *     }"," * ],"," * // optional callback"," * function(err, results) {"," *     // the results array will equal ['one','two'] even though"," *     // the second function had a shorter timeout."," * });"," *"," * // an example using an object instead of an array"," * async.parallel({"," *     one: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 1);"," *         }, 200);"," *     },"," *     two: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 2);"," *         }, 100);"," *     }"," * }, function(err, results) {"," *     // results is now equals to: {one: 1, two: 2}"," * });"," */","function parallelLimit(tasks, callback) {","  _parallel(eachOf, tasks, callback);","}","","/**"," * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name parallelLimit"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.parallel]{@link module:ControlFlow.parallel}"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection of"," * [async functions]{@link AsyncFunction} to run."," * Each async function can complete with any number of optional `result` values."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed successfully. This function gets a results array"," * (or object) containing all the result arguments passed to the task callbacks."," * Invoked with (err, results)."," */","function parallelLimit$1(tasks, limit, callback) {","  _parallel(_eachOfLimit(limit), tasks, callback);","}","","/**"," * A queue of tasks for the worker function to complete."," * @typedef {Object} QueueObject"," * @memberOf module:ControlFlow"," * @property {Function} length - a function returning the number of items"," * waiting to be processed. Invoke with `queue.length()`."," * @property {boolean} started - a boolean indicating whether or not any"," * items have been pushed and processed by the queue."," * @property {Function} running - a function returning the number of items"," * currently being processed. Invoke with `queue.running()`."," * @property {Function} workersList - a function returning the array of items"," * currently being processed. Invoke with `queue.workersList()`."," * @property {Function} idle - a function returning false if there are items"," * waiting or being processed, or true if not. Invoke with `queue.idle()`."," * @property {number} concurrency - an integer for determining how many `worker`"," * functions should be run in parallel. This property can be changed after a"," * `queue` is created to alter the concurrency on-the-fly."," * @property {Function} push - add a new task to the `queue`. Calls `callback`"," * once the `worker` has finished processing the task. Instead of a single task,"," * a `tasks` array can be submitted. The respective callback is used for every"," * task in the list. Invoke with `queue.push(task, [callback])`,"," * @property {Function} unshift - add a new task to the front of the `queue`."," * Invoke with `queue.unshift(task, [callback])`."," * @property {Function} saturated - a callback that is called when the number of"," * running workers hits the `concurrency` limit, and further tasks will be"," * queued."," * @property {Function} unsaturated - a callback that is called when the number"," * of running workers is less than the `concurrency` & `buffer` limits, and"," * further tasks will not be queued."," * @property {number} buffer - A minimum threshold buffer in order to say that"," * the `queue` is `unsaturated`."," * @property {Function} empty - a callback that is called when the last item"," * from the `queue` is given to a `worker`."," * @property {Function} drain - a callback that is called when the last item"," * from the `queue` has returned from the `worker`."," * @property {Function} error - a callback that is called when a task errors."," * Has the signature `function(error, task)`."," * @property {boolean} paused - a boolean for determining whether the queue is"," * in a paused state."," * @property {Function} pause - a function that pauses the processing of tasks"," * until `resume()` is called. Invoke with `queue.pause()`."," * @property {Function} resume - a function that resumes the processing of"," * queued tasks when the queue is paused. Invoke with `queue.resume()`."," * @property {Function} kill - a function that removes the `drain` callback and"," * empties remaining tasks from the queue forcing it to go idle. Invoke with `queue.kill()`."," */","","/**"," * Creates a `queue` object with the specified `concurrency`. Tasks added to the"," * `queue` are processed in parallel (up to the `concurrency` limit). If all"," * `worker`s are in progress, the task is queued until one becomes available."," * Once a `worker` completes a `task`, that `task`'s callback is called."," *"," * @name queue"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {AsyncFunction} worker - An async function for processing a queued task."," * If you want to handle errors from an individual task, pass a callback to"," * `q.push()`. Invoked with (task, callback)."," * @param {number} [concurrency=1] - An `integer` for determining how many"," * `worker` functions should be run in parallel.  If omitted, the concurrency"," * defaults to `1`.  If the concurrency is `0`, an error is thrown."," * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can"," * attached as certain properties to listen for specific events during the"," * lifecycle of the queue."," * @example"," *"," * // create a queue object with concurrency 2"," * var q = async.queue(function(task, callback) {"," *     console.log('hello ' + task.name);"," *     callback();"," * }, 2);"," *"," * // assign a callback"," * q.drain = function() {"," *     console.log('all items have been processed');"," * };"," *"," * // add some items to the queue"," * q.push({name: 'foo'}, function(err) {"," *     console.log('finished processing foo');"," * });"," * q.push({name: 'bar'}, function (err) {"," *     console.log('finished processing bar');"," * });"," *"," * // add some items to the queue (batch-wise)"," * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {"," *     console.log('finished processing item');"," * });"," *"," * // add some items to the front of the queue"," * q.unshift({name: 'bar'}, function (err) {"," *     console.log('finished processing bar');"," * });"," */","var queue$1 = function (worker, concurrency) {","  var _worker = wrapAsync$1(worker);","  return queue(function (items, cb) {","    _worker(items[0], cb);","  }, concurrency, 1);","};","","/**"," * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and"," * completed in ascending priority order."," *"," * @name priorityQueue"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.queue]{@link module:ControlFlow.queue}"," * @category Control Flow"," * @param {AsyncFunction} worker - An async function for processing a queued task."," * If you want to handle errors from an individual task, pass a callback to"," * `q.push()`."," * Invoked with (task, callback)."," * @param {number} concurrency - An `integer` for determining how many `worker`"," * functions should be run in parallel.  If omitted, the concurrency defaults to"," * `1`.  If the concurrency is `0`, an error is thrown."," * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two"," * differences between `queue` and `priorityQueue` objects:"," * * `push(task, priority, [callback])` - `priority` should be a number. If an"," *   array of `tasks` is given, all tasks will be assigned the same priority."," * * The `unshift` method was removed."," */","var priorityQueue = function (worker, concurrency) {","    // Start with a normal queue","    var q = queue$1(worker, concurrency);","","    // Override push to accept second parameter representing priority","    q.push = function (data, priority, callback) {","        if (callback == null) callback = noop;","        if (typeof callback !== 'function') {","            throw new Error('task callback must be a function');","        }","        q.started = true;","        if (!isArray(data)) {","            data = [data];","        }","        if (data.length === 0) {","            // call drain immediately if there are no tasks","            return setImmediate$1(function () {","                q.drain();","            });","        }","","        priority = priority || 0;","        var nextNode = q._tasks.head;","        while (nextNode && priority >= nextNode.priority) {","            nextNode = nextNode.next;","        }","","        for (var i = 0, l = data.length; i < l; i++) {","            var item = {","                data: data[i],","                priority: priority,","                callback: callback","            };","","            if (nextNode) {","                q._tasks.insertBefore(nextNode, item);","            } else {","                q._tasks.push(item);","            }","        }","        setImmediate$1(q.process);","    };","","    // Remove unshift function","    delete q.unshift;","","    return q;","};","","/**"," * Runs the `tasks` array of functions in parallel, without waiting until the"," * previous function has completed. Once any of the `tasks` complete or pass an"," * error to its callback, the main `callback` is immediately called. It's"," * equivalent to `Promise.race()`."," *"," * @name race"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}"," * to run. Each function can complete with an optional `result` value."," * @param {Function} callback - A callback to run once any of the functions have"," * completed. This function gets an error or result from the first function that"," * completed. Invoked with (err, result)."," * @returns undefined"," * @example"," *"," * async.race(["," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'two');"," *         }, 100);"," *     }"," * ],"," * // main callback"," * function(err, result) {"," *     // the result will be equal to 'two' as it finishes earlier"," * });"," */","function race(tasks, callback) {","    callback = once(callback || noop);","    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));","    if (!tasks.length) return callback();","    for (var i = 0, l = tasks.length; i < l; i++) {","        wrapAsync$1(tasks[i])(callback);","    }","}","","var slice = Array.prototype.slice;","","/**"," * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order."," *"," * @name reduceRight"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reduce]{@link module:Collections.reduce}"," * @alias foldr"," * @category Collection"," * @param {Array} array - A collection to iterate over."," * @param {*} memo - The initial state of the reduction."," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * array to produce the next step in the reduction."," * The `iteratee` should complete with the next state of the reduction."," * If the iteratee complete with an error, the reduction is stopped and the"," * main `callback` is immediately called with the error."," * Invoked with (memo, item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the reduced value. Invoked with"," * (err, result)."," */","function reduceRight(array, memo, iteratee, callback) {","  var reversed = slice.call(array).reverse();","  reduce(reversed, memo, iteratee, callback);","}","","/**"," * Wraps the async function in another function that always completes with a"," * result object, even when it errors."," *"," * The result object has either the property `error` or `value`."," *"," * @name reflect"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} fn - The async function you want to wrap"," * @returns {Function} - A function that always passes null to it's callback as"," * the error. The second argument to the callback will be an `object` with"," * either an `error` or a `value` property."," * @example"," *"," * async.parallel(["," *     async.reflect(function(callback) {"," *         // do some stuff ..."," *         callback(null, 'one');"," *     }),"," *     async.reflect(function(callback) {"," *         // do some more stuff but error ..."," *         callback('bad stuff happened');"," *     }),"," *     async.reflect(function(callback) {"," *         // do some more stuff ..."," *         callback(null, 'two');"," *     })"," * ],"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results[0].value = 'one'"," *     // results[1].error = 'bad stuff happened'"," *     // results[2].value = 'two'"," * });"," */","function reflect(fn) {","    var _fn = wrapAsync$1(fn);","    return initialParams(function reflectOn(args, reflectCallback) {","        args.push(rest(function callback(err, cbArgs) {","            if (err) {","                reflectCallback(null, {","                    error: err","                });","            } else {","                var value = null;","                if (cbArgs.length === 1) {","                    value = cbArgs[0];","                } else if (cbArgs.length > 1) {","                    value = cbArgs;","                }","                reflectCallback(null, {","                    value: value","                });","            }","        }));","","        return _fn.apply(this, args);","    });","}","","function reject$1(eachfn, arr, iteratee, callback) {","    _filter(eachfn, arr, function (value, cb) {","        iteratee(value, function (err, v) {","            cb(err, !v);","        });","    }, callback);","}","","/**"," * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test."," *"," * @name reject"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - An async truth test to apply to each item in"," * `coll`."," * The should complete with a boolean value as its `result`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," * @example"," *"," * async.reject(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, results) {"," *     // results now equals an array of missing files"," *     createFiles(results);"," * });"," */","var reject = doParallel(reject$1);","","/**"," * A helper function that wraps an array or an object of functions with `reflect`."," *"," * @name reflectAll"," * @static"," * @memberOf module:Utils"," * @method"," * @see [async.reflect]{@link module:Utils.reflect}"," * @category Util"," * @param {Array|Object|Iterable} tasks - The collection of"," * [async functions]{@link AsyncFunction} to wrap in `async.reflect`."," * @returns {Array} Returns an array of async functions, each wrapped in"," * `async.reflect`"," * @example"," *"," * let tasks = ["," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     function(callback) {"," *         // do some more stuff but error ..."," *         callback(new Error('bad stuff happened'));"," *     },"," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'two');"," *         }, 100);"," *     }"," * ];"," *"," * async.parallel(async.reflectAll(tasks),"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results[0].value = 'one'"," *     // results[1].error = Error('bad stuff happened')"," *     // results[2].value = 'two'"," * });"," *"," * // an example using an object instead of an array"," * let tasks = {"," *     one: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     two: function(callback) {"," *         callback('two');"," *     },"," *     three: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'three');"," *         }, 100);"," *     }"," * };"," *"," * async.parallel(async.reflectAll(tasks),"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results.one.value = 'one'"," *     // results.two.error = 'two'"," *     // results.three.value = 'three'"," * });"," */","function reflectAll(tasks) {","    var results;","    if (isArray(tasks)) {","        results = arrayMap(tasks, reflect);","    } else {","        results = {};","        baseForOwn(tasks, function (task, key) {","            results[key] = reflect.call(this, task);","        });","    }","    return results;","}","","/**"," * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name rejectLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reject]{@link module:Collections.reject}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - An async truth test to apply to each item in"," * `coll`."," * The should complete with a boolean value as its `result`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","var rejectLimit = doParallelLimit(reject$1);","","/**"," * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time."," *"," * @name rejectSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reject]{@link module:Collections.reject}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - An async truth test to apply to each item in"," * `coll`."," * The should complete with a boolean value as its `result`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","var rejectSeries = doLimit(rejectLimit, 1);","","/**"," * Creates a function that returns `value`."," *"," * @static"," * @memberOf _"," * @since 2.4.0"," * @category Util"," * @param {*} value The value to return from the new function."," * @returns {Function} Returns the new constant function."," * @example"," *"," * var objects = _.times(2, _.constant({ 'a': 1 }));"," *"," * console.log(objects);"," * // => [{ 'a': 1 }, { 'a': 1 }]"," *"," * console.log(objects[0] === objects[1]);"," * // => true"," */","function constant$1(value) {","  return function() {","    return value;","  };","}","","/**"," * Attempts to get a successful response from `task` no more than `times` times"," * before returning an error. If the task is successful, the `callback` will be"," * passed the result of the successful task. If all attempts fail, the callback"," * will be passed the error and result (if any) of the final attempt."," *"," * @name retry"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @see [async.retryable]{@link module:ControlFlow.retryable}"," * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an"," * object with `times` and `interval` or a number."," * * `times` - The number of attempts to make before giving up.  The default"," *   is `5`."," * * `interval` - The time to wait between retries, in milliseconds.  The"," *   default is `0`. The interval may also be specified as a function of the"," *   retry count (see example)."," * * `errorFilter` - An optional synchronous function that is invoked on"," *   erroneous result. If it returns `true` the retry attempts will continue;"," *   if the function returns `false` the retry flow is aborted with the current"," *   attempt's error and result being returned to the final callback."," *   Invoked with (err)."," * * If `opts` is a number, the number specifies the number of times to retry,"," *   with the default interval of `0`."," * @param {AsyncFunction} task - An async function to retry."," * Invoked with (callback)."," * @param {Function} [callback] - An optional callback which is called when the"," * task has succeeded, or after the final failed attempt. It receives the `err`"," * and `result` arguments of the last attempt at completing the `task`. Invoked"," * with (err, results)."," *"," * @example"," *"," * // The `retry` function can be used as a stand-alone control flow by passing"," * // a callback, as shown below:"," *"," * // try calling apiMethod 3 times"," * async.retry(3, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod 3 times, waiting 200 ms between each retry"," * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod 10 times with exponential backoff"," * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)"," * async.retry({"," *   times: 10,"," *   interval: function(retryCount) {"," *     return 50 * Math.pow(2, retryCount);"," *   }"," * }, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod the default 5 times no delay between each retry"," * async.retry(apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod only when error condition satisfies, all other"," * // errors will abort the retry control flow and return to final callback"," * async.retry({"," *   errorFilter: function(err) {"," *     return err.message === 'Temporary error'; // only retry on a specific error"," *   }"," * }, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // It can also be embedded within other control flow functions to retry"," * // individual methods that are not as reliable, like this:"," * async.auto({"," *     users: api.getUsers.bind(api),"," *     payments: async.retryable(3, api.getPayments.bind(api))"," * }, function(err, results) {"," *     // do something with the results"," * });"," *"," */","function retry(opts, task, callback) {","    var DEFAULT_TIMES = 5;","    var DEFAULT_INTERVAL = 0;","","    var options = {","        times: DEFAULT_TIMES,","        intervalFunc: constant$1(DEFAULT_INTERVAL)","    };","","    function parseTimes(acc, t) {","        if (typeof t === 'object') {","            acc.times = +t.times || DEFAULT_TIMES;","","            acc.intervalFunc = typeof t.interval === 'function' ? t.interval : constant$1(+t.interval || DEFAULT_INTERVAL);","","            acc.errorFilter = t.errorFilter;","        } else if (typeof t === 'number' || typeof t === 'string') {","            acc.times = +t || DEFAULT_TIMES;","        } else {","            throw new Error(\"Invalid arguments for async.retry\");","        }","    }","","    if (arguments.length < 3 && typeof opts === 'function') {","        callback = task || noop;","        task = opts;","    } else {","        parseTimes(options, opts);","        callback = callback || noop;","    }","","    if (typeof task !== 'function') {","        throw new Error(\"Invalid arguments for async.retry\");","    }","","    var _task = wrapAsync$1(task);","","    var attempt = 1;","    function retryAttempt() {","        _task(function (err) {","            if (err && attempt++ < options.times && (typeof options.errorFilter != 'function' || options.errorFilter(err))) {","                setTimeout(retryAttempt, options.intervalFunc(attempt));","            } else {","                callback.apply(null, arguments);","            }","        });","    }","","    retryAttempt();","}","","/**"," * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method"," * wraps a task and makes it retryable, rather than immediately calling it"," * with retries."," *"," * @name retryable"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.retry]{@link module:ControlFlow.retry}"," * @category Control Flow"," * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional"," * options, exactly the same as from `retry`"," * @param {AsyncFunction} task - the asynchronous function to wrap."," * This function will be passed any arguments passed to the returned wrapper."," * Invoked with (...args, callback)."," * @returns {AsyncFunction} The wrapped function, which when invoked, will"," * retry on an error, based on the parameters specified in `opts`."," * This function will accept the same parameters as `task`."," * @example"," *"," * async.auto({"," *     dep1: async.retryable(3, getFromFlakyService),"," *     process: [\"dep1\", async.retryable(3, function (results, cb) {"," *         maybeProcessData(results.dep1, cb);"," *     })]"," * }, callback);"," */","var retryable = function (opts, task) {","    if (!task) {","        task = opts;","        opts = null;","    }","    var _task = wrapAsync$1(task);","    return initialParams(function (args, callback) {","        function taskFn(cb) {","            _task.apply(null, args.concat(cb));","        }","","        if (opts) retry(opts, taskFn, callback);else retry(taskFn, callback);","    });","};","","/**"," * Run the functions in the `tasks` collection in series, each one running once"," * the previous function has completed. If any functions in the series pass an"," * error to its callback, no more functions are run, and `callback` is"," * immediately called with the value of the error. Otherwise, `callback`"," * receives an array of results when `tasks` have completed."," *"," * It is also possible to use an object instead of an array. Each property will"," * be run as a function, and the results will be passed to the final `callback`"," * as an object instead of an array. This can be a more readable way of handling"," *  results from {@link async.series}."," *"," * **Note** that while many implementations preserve the order of object"," * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)"," * explicitly states that"," *"," * > The mechanics and order of enumerating the properties is not specified."," *"," * So if you rely on the order in which your series of functions are executed,"," * and want this to work on all platforms, consider using an array."," *"," * @name series"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection containing"," * [async functions]{@link AsyncFunction} to run in series."," * Each function can complete with any number of optional `result` values."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed. This function gets a results array (or object)"," * containing all the result arguments passed to the `task` callbacks. Invoked"," * with (err, result)."," * @example"," * async.series(["," *     function(callback) {"," *         // do some stuff ..."," *         callback(null, 'one');"," *     },"," *     function(callback) {"," *         // do some more stuff ..."," *         callback(null, 'two');"," *     }"," * ],"," * // optional callback"," * function(err, results) {"," *     // results is now equal to ['one', 'two']"," * });"," *"," * async.series({"," *     one: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 1);"," *         }, 200);"," *     },"," *     two: function(callback){"," *         setTimeout(function() {"," *             callback(null, 2);"," *         }, 100);"," *     }"," * }, function(err, results) {"," *     // results is now equal to: {one: 1, two: 2}"," * });"," */","function series(tasks, callback) {","  _parallel(eachOfSeries, tasks, callback);","}","","/**"," * Returns `true` if at least one element in the `coll` satisfies an async test."," * If any iteratee call returns `true`, the main `callback` is immediately"," * called."," *"," * @name some"," * @static"," * @memberOf module:Collections"," * @method"," * @alias any"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in parallel."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," * @example"," *"," * async.some(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // if result is true then at least one of the files exists"," * });"," */","var some = doParallel(_createTester(Boolean, identity));","","/**"," * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time."," *"," * @name someLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.some]{@link module:Collections.some}"," * @alias anyLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in parallel."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," */","var someLimit = doParallelLimit(_createTester(Boolean, identity));","","/**"," * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time."," *"," * @name someSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.some]{@link module:Collections.some}"," * @alias anySeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in series."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," */","var someSeries = doLimit(someLimit, 1);","","/**"," * Sorts a list by the results of running each `coll` value through an async"," * `iteratee`."," *"," * @name sortBy"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a value to use as the sort criteria as"," * its `result`."," * Invoked with (item, callback)."," * @param {Function} callback - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is the items"," * from the original `coll` sorted by the values returned by the `iteratee`"," * calls. Invoked with (err, results)."," * @example"," *"," * async.sortBy(['file1','file2','file3'], function(file, callback) {"," *     fs.stat(file, function(err, stats) {"," *         callback(err, stats.mtime);"," *     });"," * }, function(err, results) {"," *     // results is now the original array of files sorted by"," *     // modified date"," * });"," *"," * // By modifying the callback parameter the"," * // sorting order can be influenced:"," *"," * // ascending order"," * async.sortBy([1,9,3,5], function(x, callback) {"," *     callback(null, x);"," * }, function(err,result) {"," *     // result callback"," * });"," *"," * // descending order"," * async.sortBy([1,9,3,5], function(x, callback) {"," *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around"," * }, function(err,result) {"," *     // result callback"," * });"," */","function sortBy(coll, iteratee, callback) {","    var _iteratee = wrapAsync$1(iteratee);","    map(coll, function (x, callback) {","        _iteratee(x, function (err, criteria) {","            if (err) return callback(err);","            callback(null, { value: x, criteria: criteria });","        });","    }, function (err, results) {","        if (err) return callback(err);","        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));","    });","","    function comparator(left, right) {","        var a = left.criteria,","            b = right.criteria;","        return a < b ? -1 : a > b ? 1 : 0;","    }","}","","/**"," * Sets a time limit on an asynchronous function. If the function does not call"," * its callback within the specified milliseconds, it will be called with a"," * timeout error. The code property for the error object will be `'ETIMEDOUT'`."," *"," * @name timeout"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} asyncFn - The async function to limit in time."," * @param {number} milliseconds - The specified time limit."," * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)"," * to timeout Error for more information.."," * @returns {AsyncFunction} Returns a wrapped function that can be used with any"," * of the control flow functions."," * Invoke this function with the same parameters as you would `asyncFunc`."," * @example"," *"," * function myFunction(foo, callback) {"," *     doAsyncTask(foo, function(err, data) {"," *         // handle errors"," *         if (err) return callback(err);"," *"," *         // do some stuff ..."," *"," *         // return processed data"," *         return callback(null, data);"," *     });"," * }"," *"," * var wrapped = async.timeout(myFunction, 1000);"," *"," * // call `wrapped` as you would `myFunction`"," * wrapped({ bar: 'bar' }, function(err, data) {"," *     // if `myFunction` takes < 1000 ms to execute, `err`"," *     // and `data` will have their expected values"," *"," *     // else `err` will be an Error with the code 'ETIMEDOUT'"," * });"," */","function timeout(asyncFn, milliseconds, info) {","    var originalCallback, timer;","    var timedOut = false;","","    function injectedCallback() {","        if (!timedOut) {","            originalCallback.apply(null, arguments);","            clearTimeout(timer);","        }","    }","","    function timeoutCallback() {","        var name = asyncFn.name || 'anonymous';","        var error = new Error('Callback function \"' + name + '\" timed out.');","        error.code = 'ETIMEDOUT';","        if (info) {","            error.info = info;","        }","        timedOut = true;","        originalCallback(error);","    }","","    var fn = wrapAsync$1(asyncFn);","","    return initialParams(function (args, origCallback) {","        originalCallback = origCallback;","        // setup timer and call original function","        timer = setTimeout(timeoutCallback, milliseconds);","        fn.apply(null, args.concat(injectedCallback));","    });","}","","/* Built-in method references for those with the same name as other `lodash` methods. */","var nativeCeil = Math.ceil;","var nativeMax$1 = Math.max;","","/**"," * The base implementation of `_.range` and `_.rangeRight` which doesn't"," * coerce arguments."," *"," * @private"," * @param {number} start The start of the range."," * @param {number} end The end of the range."," * @param {number} step The value to increment or decrement by."," * @param {boolean} [fromRight] Specify iterating from right to left."," * @returns {Array} Returns the range of numbers."," */","function baseRange(start, end, step, fromRight) {","  var index = -1,","      length = nativeMax$1(nativeCeil((end - start) / (step || 1)), 0),","      result = Array(length);","","  while (length--) {","    result[fromRight ? length : ++index] = start;","    start += step;","  }","  return result;","}","","/**"," * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name timesLimit"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.times]{@link module:ControlFlow.times}"," * @category Control Flow"," * @param {number} count - The number of times to run the function."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - The async function to call `n` times."," * Invoked with the iteration index and a callback: (n, next)."," * @param {Function} callback - see [async.map]{@link module:Collections.map}."," */","function timeLimit(count, limit, iteratee, callback) {","  var _iteratee = wrapAsync$1(iteratee);","  mapLimit(baseRange(0, count, 1), limit, _iteratee, callback);","}","","/**"," * Calls the `iteratee` function `n` times, and accumulates results in the same"," * manner you would use with [map]{@link module:Collections.map}."," *"," * @name times"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Control Flow"," * @param {number} n - The number of times to run the function."," * @param {AsyncFunction} iteratee - The async function to call `n` times."," * Invoked with the iteration index and a callback: (n, next)."," * @param {Function} callback - see {@link module:Collections.map}."," * @example"," *"," * // Pretend this is some complicated async factory"," * var createUser = function(id, callback) {"," *     callback(null, {"," *         id: 'user' + id"," *     });"," * };"," *"," * // generate 5 users"," * async.times(5, function(n, next) {"," *     createUser(n, function(err, user) {"," *         next(err, user);"," *     });"," * }, function(err, users) {"," *     // we should now have 5 users"," * });"," */","var times = doLimit(timeLimit, Infinity);","","/**"," * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time."," *"," * @name timesSeries"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.times]{@link module:ControlFlow.times}"," * @category Control Flow"," * @param {number} n - The number of times to run the function."," * @param {AsyncFunction} iteratee - The async function to call `n` times."," * Invoked with the iteration index and a callback: (n, next)."," * @param {Function} callback - see {@link module:Collections.map}."," */","var timesSeries = doLimit(timeLimit, 1);","","/**"," * A relative of `reduce`.  Takes an Object or Array, and iterates over each"," * element in series, each step potentially mutating an `accumulator` value."," * The type of the accumulator defaults to the type of collection passed in."," *"," * @name transform"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {*} [accumulator] - The initial state of the transform.  If omitted,"," * it will default to an empty Object or Array, depending on the type of `coll`"," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * collection that potentially modifies the accumulator."," * Invoked with (accumulator, item, key, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the transformed accumulator."," * Invoked with (err, result)."," * @example"," *"," * async.transform([1,2,3], function(acc, item, index, callback) {"," *     // pointless async:"," *     process.nextTick(function() {"," *         acc.push(item * 2)"," *         callback(null)"," *     });"," * }, function(err, result) {"," *     // result is now equal to [2, 4, 6]"," * });"," *"," * @example"," *"," * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {"," *     setImmediate(function () {"," *         obj[key] = val * 2;"," *         callback();"," *     })"," * }, function (err, result) {"," *     // result is equal to {a: 2, b: 4, c: 6}"," * })"," */","function transform(coll, accumulator, iteratee, callback) {","    if (arguments.length <= 3) {","        callback = iteratee;","        iteratee = accumulator;","        accumulator = isArray(coll) ? [] : {};","    }","    callback = once(callback || noop);","    var _iteratee = wrapAsync$1(iteratee);","","    eachOf(coll, function (v, k, cb) {","        _iteratee(accumulator, v, k, cb);","    }, function (err) {","        callback(err, accumulator);","    });","}","","/**"," * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,"," * unmemoized form. Handy for testing."," *"," * @name unmemoize"," * @static"," * @memberOf module:Utils"," * @method"," * @see [async.memoize]{@link module:Utils.memoize}"," * @category Util"," * @param {AsyncFunction} fn - the memoized function"," * @returns {AsyncFunction} a function that calls the original unmemoized function"," */","function unmemoize(fn) {","    return function () {","        return (fn.unmemoized || fn).apply(null, arguments);","    };","}","","/**"," * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when"," * stopped, or an error occurs."," *"," * @name whilst"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Function} test - synchronous truth test to perform before each"," * execution of `iteratee`. Invoked with ()."," * @param {AsyncFunction} iteratee - An async function which is called each time"," * `test` passes. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `iteratee` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `iteratee`'s"," * callback. Invoked with (err, [results]);"," * @returns undefined"," * @example"," *"," * var count = 0;"," * async.whilst("," *     function() { return count < 5; },"," *     function(callback) {"," *         count++;"," *         setTimeout(function() {"," *             callback(null, count);"," *         }, 1000);"," *     },"," *     function (err, n) {"," *         // 5 seconds have passed, n = 5"," *     }"," * );"," */","function whilst(test, iteratee, callback) {","    callback = onlyOnce(callback || noop);","    var _iteratee = wrapAsync$1(iteratee);","    if (!test()) return callback(null);","    var next = rest(function (err, args) {","        if (err) return callback(err);","        if (test()) return _iteratee(next);","        callback.apply(null, [null].concat(args));","    });","    _iteratee(next);","}","","/**"," * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when"," * stopped, or an error occurs. `callback` will be passed an error and any"," * arguments passed to the final `iteratee`'s callback."," *"," * The inverse of [whilst]{@link module:ControlFlow.whilst}."," *"," * @name until"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {Function} test - synchronous truth test to perform before each"," * execution of `iteratee`. Invoked with ()."," * @param {AsyncFunction} iteratee - An async function which is called each time"," * `test` fails. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has passed and repeated execution of `iteratee` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `iteratee`'s"," * callback. Invoked with (err, [results]);"," */","function until(test, iteratee, callback) {","    whilst(function () {","        return !test.apply(this, arguments);","    }, iteratee, callback);","}","","/**"," * Runs the `tasks` array of functions in series, each passing their results to"," * the next in the array. However, if any of the `tasks` pass an error to their"," * own callback, the next function is not executed, and the main `callback` is"," * immediately called with the error."," *"," * @name waterfall"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}"," * to run."," * Each function should complete with any number of `result` values."," * The `result` values will be passed as arguments, in order, to the next task."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed. This will be passed the results of the last task's"," * callback. Invoked with (err, [results])."," * @returns undefined"," * @example"," *"," * async.waterfall(["," *     function(callback) {"," *         callback(null, 'one', 'two');"," *     },"," *     function(arg1, arg2, callback) {"," *         // arg1 now equals 'one' and arg2 now equals 'two'"," *         callback(null, 'three');"," *     },"," *     function(arg1, callback) {"," *         // arg1 now equals 'three'"," *         callback(null, 'done');"," *     }"," * ], function (err, result) {"," *     // result now equals 'done'"," * });"," *"," * // Or, with named functions:"," * async.waterfall(["," *     myFirstFunction,"," *     mySecondFunction,"," *     myLastFunction,"," * ], function (err, result) {"," *     // result now equals 'done'"," * });"," * function myFirstFunction(callback) {"," *     callback(null, 'one', 'two');"," * }"," * function mySecondFunction(arg1, arg2, callback) {"," *     // arg1 now equals 'one' and arg2 now equals 'two'"," *     callback(null, 'three');"," * }"," * function myLastFunction(arg1, callback) {"," *     // arg1 now equals 'three'"," *     callback(null, 'done');"," * }"," */","var waterfall = function (tasks, callback) {","    callback = once(callback || noop);","    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));","    if (!tasks.length) return callback();","    var taskIndex = 0;","","    function nextTask(args) {","        if (taskIndex === tasks.length) {","            return callback.apply(null, [null].concat(args));","        }","","        var taskCallback = onlyOnce(rest(function (err, args) {","            if (err) {","                return callback.apply(null, [err].concat(args));","            }","            nextTask(args);","        }));","","        args.push(taskCallback);","","        var task = wrapAsync$1(tasks[taskIndex++]);","        task.apply(null, args);","    }","","    nextTask([]);","};","","/**"," * An \"async function\" in the context of Async is an asynchronous function with"," * a variable number of parameters, with the final parameter being a callback."," * (`function (arg1, arg2, ..., callback) {}`)"," * The final callback is of the form `callback(err, results...)`, which must be"," * called once the function is completed.  The callback should be called with a"," * Error as its first argument to signal that an error occurred."," * Otherwise, if no error occurred, it should be called with `null` as the first"," * argument, and any additional `result` arguments that may apply, to signal"," * successful completion."," * The callback must be called exactly once, ideally on a later tick of the"," * JavaScript event loop."," *"," * This type of function is also referred to as a \"Node-style async function\","," * or a \"continuation passing-style function\" (CPS). Most of the methods of this"," * library are themselves CPS/Node-style async functions, or functions that"," * return CPS/Node-style async functions."," *"," * Wherever we accept a Node-style async function, we also directly accept an"," * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}."," * In this case, the `async` function will not be passed a final callback"," * argument, and any thrown error will be used as the `err` argument of the"," * implicit callback, and the return value will be used as the `result` value."," * (i.e. a `rejected` of the returned Promise becomes the `err` callback"," * argument, and a `resolved` value becomes the `result`.)"," *"," * Note, due to JavaScript limitations, we can only detect native `async`"," * functions and not transpilied implementations."," * Your environment must have `async`/`await` support for this to work."," * (e.g. Node > v7.6, or a recent version of a modern browser)."," * If you are using `async` functions through a transpiler (e.g. Babel), you"," * must still wrap the function with [asyncify]{@link module:Utils.asyncify},"," * because the `async function` will be compiled to an ordinary function that"," * returns a promise."," *"," * @typedef {Function} AsyncFunction"," * @static"," */","","/**"," * Async is a utility module which provides straight-forward, powerful functions"," * for working with asynchronous JavaScript. Although originally designed for"," * use with [Node.js](http://nodejs.org) and installable via"," * `npm install --save async`, it can also be used directly in the browser."," * @module async"," * @see AsyncFunction"," */","","/**"," * A collection of `async` functions for manipulating collections, such as"," * arrays and objects."," * @module Collections"," */","","/**"," * A collection of `async` functions for controlling the flow through a script."," * @module ControlFlow"," */","","/**"," * A collection of `async` utility functions."," * @module Utils"," */","","var index = {","  applyEach: applyEach,","  applyEachSeries: applyEachSeries,","  apply: apply$2,","  asyncify: asyncify,","  auto: auto,","  autoInject: autoInject,","  cargo: cargo,","  compose: compose,","  concat: concat,","  concatSeries: concatSeries,","  constant: constant,","  detect: detect,","  detectLimit: detectLimit,","  detectSeries: detectSeries,","  dir: dir,","  doDuring: doDuring,","  doUntil: doUntil,","  doWhilst: doWhilst,","  during: during,","  each: eachLimit,","  eachLimit: eachLimit$1,","  eachOf: eachOf,","  eachOfLimit: eachOfLimit,","  eachOfSeries: eachOfSeries,","  eachSeries: eachSeries,","  ensureAsync: ensureAsync,","  every: every,","  everyLimit: everyLimit,","  everySeries: everySeries,","  filter: filter,","  filterLimit: filterLimit,","  filterSeries: filterSeries,","  forever: forever,","  groupBy: groupBy,","  groupByLimit: groupByLimit,","  groupBySeries: groupBySeries,","  log: log,","  map: map,","  mapLimit: mapLimit,","  mapSeries: mapSeries,","  mapValues: mapValues,","  mapValuesLimit: mapValuesLimit,","  mapValuesSeries: mapValuesSeries,","  memoize: memoize,","  nextTick: nextTick,","  parallel: parallelLimit,","  parallelLimit: parallelLimit$1,","  priorityQueue: priorityQueue,","  queue: queue$1,","  race: race,","  reduce: reduce,","  reduceRight: reduceRight,","  reflect: reflect,","  reflectAll: reflectAll,","  reject: reject,","  rejectLimit: rejectLimit,","  rejectSeries: rejectSeries,","  retry: retry,","  retryable: retryable,","  seq: seq$1,","  series: series,","  setImmediate: setImmediate$1,","  some: some,","  someLimit: someLimit,","  someSeries: someSeries,","  sortBy: sortBy,","  timeout: timeout,","  times: times,","  timesLimit: timeLimit,","  timesSeries: timesSeries,","  transform: transform,","  unmemoize: unmemoize,","  until: until,","  waterfall: waterfall,","  whilst: whilst,","","  // aliases","  all: every,","  any: some,","  forEach: eachLimit,","  forEachSeries: eachSeries,","  forEachLimit: eachLimit$1,","  forEachOf: eachOf,","  forEachOfSeries: eachOfSeries,","  forEachOfLimit: eachOfLimit,","  inject: reduce,","  foldl: reduce,","  foldr: reduceRight,","  select: filter,","  selectLimit: filterLimit,","  selectSeries: filterSeries,","  wrapSync: asyncify","};","","exports['default'] = index;","exports.applyEach = applyEach;","exports.applyEachSeries = applyEachSeries;","exports.apply = apply$2;","exports.asyncify = asyncify;","exports.auto = auto;","exports.autoInject = autoInject;","exports.cargo = cargo;","exports.compose = compose;","exports.concat = concat;","exports.concatSeries = concatSeries;","exports.constant = constant;","exports.detect = detect;","exports.detectLimit = detectLimit;","exports.detectSeries = detectSeries;","exports.dir = dir;","exports.doDuring = doDuring;","exports.doUntil = doUntil;","exports.doWhilst = doWhilst;","exports.during = during;","exports.each = eachLimit;","exports.eachLimit = eachLimit$1;","exports.eachOf = eachOf;","exports.eachOfLimit = eachOfLimit;","exports.eachOfSeries = eachOfSeries;","exports.eachSeries = eachSeries;","exports.ensureAsync = ensureAsync;","exports.every = every;","exports.everyLimit = everyLimit;","exports.everySeries = everySeries;","exports.filter = filter;","exports.filterLimit = filterLimit;","exports.filterSeries = filterSeries;","exports.forever = forever;","exports.groupBy = groupBy;","exports.groupByLimit = groupByLimit;","exports.groupBySeries = groupBySeries;","exports.log = log;","exports.map = map;","exports.mapLimit = mapLimit;","exports.mapSeries = mapSeries;","exports.mapValues = mapValues;","exports.mapValuesLimit = mapValuesLimit;","exports.mapValuesSeries = mapValuesSeries;","exports.memoize = memoize;","exports.nextTick = nextTick;","exports.parallel = parallelLimit;","exports.parallelLimit = parallelLimit$1;","exports.priorityQueue = priorityQueue;","exports.queue = queue$1;","exports.race = race;","exports.reduce = reduce;","exports.reduceRight = reduceRight;","exports.reflect = reflect;","exports.reflectAll = reflectAll;","exports.reject = reject;","exports.rejectLimit = rejectLimit;","exports.rejectSeries = rejectSeries;","exports.retry = retry;","exports.retryable = retryable;","exports.seq = seq$1;","exports.series = series;","exports.setImmediate = setImmediate$1;","exports.some = some;","exports.someLimit = someLimit;","exports.someSeries = someSeries;","exports.sortBy = sortBy;","exports.timeout = timeout;","exports.times = times;","exports.timesLimit = timeLimit;","exports.timesSeries = timesSeries;","exports.transform = transform;","exports.unmemoize = unmemoize;","exports.until = until;","exports.waterfall = waterfall;","exports.whilst = whilst;","exports.all = every;","exports.allLimit = everyLimit;","exports.allSeries = everySeries;","exports.any = some;","exports.anyLimit = someLimit;","exports.anySeries = someSeries;","exports.find = detect;","exports.findLimit = detectLimit;","exports.findSeries = detectSeries;","exports.forEach = eachLimit;","exports.forEachSeries = eachSeries;","exports.forEachLimit = eachLimit$1;","exports.forEachOf = eachOf;","exports.forEachOfSeries = eachOfSeries;","exports.forEachOfLimit = eachOfLimit;","exports.inject = reduce;","exports.foldl = reduce;","exports.foldr = reduceRight;","exports.select = filter;","exports.selectLimit = filterLimit;","exports.selectSeries = filterSeries;","exports.wrapSync = asyncify;","","Object.defineProperty(exports, '__esModule', { value: true });","","})));",""],"l":{"1":1,"2":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"24":0,"28":1,"39":1,"40":10,"41":10,"42":0,"47":0,"48":0,"50":0,"51":0,"52":0,"53":0,"55":0,"56":0,"76":1,"77":0,"82":1,"83":10,"86":1,"87":0,"88":0,"89":0,"118":1,"119":0,"120":0,"179":1,"180":0,"181":0,"182":0,"183":0,"185":0,"188":0,"189":0,"190":0,"192":0,"195":0,"200":1,"202":1,"203":1,"204":1,"206":1,"208":1,"210":1,"213":1,"214":0,"217":1,"218":0,"221":1,"223":1,"224":2,"225":0,"226":0,"227":0,"228":0,"231":0,"232":0,"234":0,"240":1,"243":1,"246":1,"249":1,"252":1,"255":1,"262":1,"265":1,"274":1,"275":0,"278":0,"279":0,"280":0,"283":0,"284":0,"285":0,"286":0,"288":0,"291":0,"295":1,"302":1,"311":1,"312":1,"316":1,"317":1,"320":1,"329":1,"330":1,"331":0,"333":1,"334":1,"340":1,"341":1,"342":1,"343":1,"362":1,"363":0,"364":0,"368":0,"369":0,"373":1,"401":1,"402":0,"431":1,"432":0,"437":1,"451":1,"455":1,"456":0,"457":0,"458":0,"459":0,"460":0,"464":1,"466":1,"467":0,"479":1,"480":0,"483":0,"484":0,"486":0,"513":1,"514":1,"518":1,"527":1,"528":1,"532":1,"535":1,"538":1,"558":1,"559":0,"586":1,"601":1,"602":0,"606":1,"609":1,"612":1,"615":1,"618":1,"637":1,"640":1,"643":1,"653":1,"654":0,"655":0,"661":1,"662":1,"663":1,"664":1,"665":1,"666":1,"667":1,"668":1,"669":1,"670":1,"671":1,"672":1,"673":1,"675":1,"676":1,"677":1,"678":1,"679":1,"680":1,"681":1,"682":1,"683":1,"684":1,"685":1,"688":1,"689":1,"694":1,"710":1,"711":0,"722":1,"723":1,"724":0,"729":1,"732":1,"735":1,"738":1,"741":1,"742":1,"743":1,"748":1,"767":1,"770":1,"773":1,"783":1,"784":0,"792":0,"793":0,"804":0,"807":0,"811":1,"820":1,"821":0,"824":0,"835":1,"836":1,"837":0,"842":1,"845":1,"848":1,"857":1,"858":0,"859":0,"861":0,"862":0,"863":0,"864":0,"867":0,"898":1,"899":0,"902":1,"903":0,"904":0,"905":0,"906":0,"910":1,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"920":1,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"930":1,"931":0,"932":0,"935":0,"936":0,"939":1,"940":0,"941":0,"942":0,"943":0,"944":0,"948":1,"949":0,"950":0,"951":0,"952":0,"954":0,"955":0,"956":0,"958":1,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"967":0,"971":1,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"979":0,"981":0,"982":0,"986":0,"1010":1,"1011":0,"1014":1,"1015":15,"1016":0,"1021":1,"1022":0,"1023":0,"1026":0,"1027":0,"1030":1,"1031":0,"1032":0,"1033":0,"1034":0,"1038":0,"1039":0,"1044":1,"1085":1,"1086":0,"1087":0,"1090":1,"1091":7,"1092":0,"1096":1,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1110":0,"1150":1,"1185":1,"1187":1,"1188":6,"1189":0,"1212":1,"1232":1,"1253":1,"1299":1,"1300":0,"1301":0,"1314":1,"1315":0,"1318":0,"1319":0,"1320":0,"1323":0,"1333":1,"1334":1,"1335":0,"1340":0,"1341":0,"1342":0,"1343":0,"1346":0,"1361":1,"1371":1,"1372":0,"1386":1,"1387":0,"1390":0,"1391":0,"1392":0,"1395":0,"1405":1,"1406":0,"1419":1,"1420":0,"1423":0,"1424":0,"1425":0,"1428":0,"1440":1,"1441":0,"1525":1,"1526":0,"1528":0,"1529":0,"1531":0,"1532":0,"1533":0,"1534":0,"1535":0,"1537":0,"1538":0,"1541":0,"1542":0,"1543":0,"1545":0,"1547":0,"1550":0,"1552":0,"1554":0,"1555":0,"1557":0,"1558":0,"1559":0,"1562":0,"1563":0,"1564":0,"1565":0,"1566":0,"1567":0,"1569":0,"1571":0,"1572":0,"1573":0,"1575":0,"1576":0,"1577":0,"1578":0,"1584":0,"1585":0,"1587":1,"1588":0,"1589":0,"1593":1,"1594":0,"1595":0,"1597":0,"1598":0,"1599":0,"1603":1,"1604":0,"1605":0,"1606":0,"1609":0,"1612":1,"1613":0,"1614":0,"1615":0,"1617":0,"1620":1,"1621":0,"1623":0,"1624":0,"1625":0,"1626":0,"1628":0,"1629":0,"1630":0,"1631":0,"1633":0,"1634":0,"1635":0,"1637":0,"1639":0,"1640":0,"1644":0,"1645":0,"1646":0,"1647":0,"1649":0,"1653":1,"1657":0,"1658":0,"1659":0,"1660":0,"1661":0,"1662":0,"1663":0,"1664":0,"1669":0,"1670":0,"1674":1,"1675":0,"1676":0,"1677":0,"1678":0,"1681":0,"1694":1,"1695":0,"1699":0,"1700":0,"1702":0,"1706":1,"1725":1,"1726":0,"1731":1,"1734":1,"1735":1,"1745":1,"1747":0,"1748":0,"1750":0,"1752":0,"1754":0,"1755":0,"1757":0,"1758":0,"1770":1,"1771":0,"1774":0,"1775":0,"1777":0,"1778":0,"1779":0,"1781":0,"1782":0,"1784":0,"1785":0,"1786":0,"1788":0,"1800":1,"1801":0,"1802":0,"1803":0,"1815":1,"1816":0,"1818":0,"1819":0,"1831":1,"1832":0,"1835":0,"1836":0,"1846":1,"1847":0,"1851":1,"1852":1,"1853":1,"1854":1,"1857":1,"1860":1,"1869":1,"1870":0,"1874":1,"1875":1,"1876":1,"1877":1,"1880":1,"1881":1,"1882":1,"1883":1,"1884":1,"1885":1,"1886":1,"1887":1,"1890":1,"1891":1,"1892":1,"1893":1,"1894":1,"1897":1,"1906":1,"1907":0,"1917":1,"1918":0,"1944":1,"1945":0,"1949":1,"1973":1,"1974":0,"1975":0,"1976":0,"1978":0,"1979":0,"1981":0,"1986":0,"1989":1,"1990":1,"1991":1,"1992":1,"1994":1,"1995":0,"1996":0,"1997":0,"1998":0,"1999":0,"2001":0,"2086":1,"2087":0,"2089":0,"2090":0,"2091":0,"2092":0,"2094":0,"2095":0,"2096":0,"2098":0,"2099":0,"2101":0,"2103":0,"2104":0,"2105":0,"2109":0,"2111":0,"2114":1,"2115":0,"2116":0,"2118":0,"2119":0,"2123":0,"2126":1,"2127":1,"2129":1,"2130":0,"2133":1,"2134":2,"2135":0,"2136":0,"2141":1,"2143":1,"2144":1,"2145":0,"2146":0,"2148":0,"2151":1,"2157":1,"2158":0,"2159":0,"2162":1,"2163":0,"2164":0,"2167":1,"2168":0,"2169":0,"2171":0,"2172":0,"2173":0,"2176":1,"2178":1,"2179":0,"2180":0,"2181":0,"2182":0,"2183":0,"2186":1,"2187":0,"2188":0,"2189":0,"2190":0,"2191":0,"2194":1,"2195":0,"2198":1,"2199":0,"2202":1,"2203":0,"2206":1,"2207":0,"2210":1,"2211":0,"2212":0,"2213":0,"2214":0,"2217":0,"2218":0,"2219":0,"2221":1,"2222":0,"2223":0,"2225":0,"2226":0,"2227":0,"2229":0,"2231":0,"2232":0,"2236":0,"2237":0,"2242":0,"2243":0,"2245":0,"2248":0,"2251":1,"2252":0,"2253":0,"2255":0,"2256":0,"2257":0,"2258":0,"2259":0,"2262":0,"2264":0,"2265":0,"2269":0,"2270":0,"2273":0,"2274":0,"2276":0,"2280":0,"2281":0,"2294":0,"2297":0,"2298":0,"2301":0,"2306":0,"2307":0,"2309":0,"2310":0,"2311":0,"2313":0,"2314":0,"2315":0,"2316":0,"2317":0,"2318":0,"2321":0,"2322":0,"2324":0,"2325":0,"2327":0,"2328":0,"2331":0,"2332":0,"2334":0,"2337":0,"2340":0,"2343":0,"2346":0,"2349":0,"2352":0,"2353":0,"2355":0,"2356":0,"2359":0,"2439":1,"2440":0,"2460":1,"2502":1,"2503":0,"2504":0,"2505":0,"2506":0,"2507":0,"2508":0,"2511":0,"2553":1,"2554":0,"2555":0,"2556":0,"2558":0,"2559":0,"2560":0,"2562":0,"2565":0,"2566":0,"2567":0,"2570":0,"2610":1,"2611":0,"2614":1,"2615":0,"2616":0,"2617":0,"2618":0,"2619":0,"2622":0,"2651":1,"2653":1,"2654":1,"2655":0,"2677":1,"2721":1,"2722":0,"2723":0,"2724":0,"2728":1,"2729":6,"2730":0,"2731":0,"2732":0,"2733":0,"2734":0,"2735":0,"2736":0,"2737":0,"2738":0,"2739":0,"2740":0,"2742":0,"2746":0,"2747":0,"2749":0,"2755":1,"2756":0,"2794":1,"2818":1,"2840":1,"2842":1,"2843":2,"2844":0,"2845":0,"2846":0,"2847":0,"2848":0,"2850":0,"2851":0,"2852":0,"2889":1,"2911":1,"2912":0,"2913":0,"2914":0,"2916":0,"2917":0,"2918":0,"2919":0,"2922":1,"2923":0,"2924":0,"2925":0,"2928":0,"2953":1,"2954":0,"2955":0,"2956":0,"2957":0,"2958":0,"2959":0,"2961":0,"2984":1,"2985":0,"2986":0,"3026":1,"3027":0,"3028":0,"3029":0,"3031":1,"3032":0,"3033":0,"3036":1,"3037":0,"3038":0,"3039":0,"3042":0,"3045":1,"3046":0,"3047":0,"3108":1,"3109":0,"3132":1,"3133":0,"3155":1,"3192":1,"3193":0,"3194":0,"3195":0,"3196":0,"3197":0,"3198":0,"3199":0,"3200":0,"3203":0,"3206":0,"3207":0,"3211":1,"3212":0,"3243":1,"3265":1,"3286":1,"3295":1,"3296":0,"3297":0,"3301":1,"3302":0,"3303":0,"3304":0,"3305":0,"3306":0,"3309":0,"3310":0,"3311":0,"3312":0,"3314":0,"3318":1,"3319":0,"3320":0,"3321":0,"3322":0,"3323":0,"3325":0,"3326":0,"3328":0,"3332":0,"3333":0,"3335":0,"3336":0,"3342":1,"3343":0,"3344":0,"3374":1,"3395":1,"3414":1,"3445":1,"3446":0,"3447":0,"3449":1,"3450":0,"3451":0,"3453":0,"3475":1,"3476":0,"3477":0,"3478":0,"3479":0,"3480":0,"3481":0,"3484":0,"3486":0,"3488":0,"3489":0,"3490":0,"3491":0,"3493":0,"3494":0,"3496":0,"3501":0,"3541":1,"3562":1,"3591":1,"3614":1,"3615":0,"3616":0,"3617":0,"3618":0,"3619":0,"3620":0,"3621":0,"3622":0,"3625":0,"3674":1,"3695":1,"3697":1,"3698":0,"3738":1,"3739":0,"3740":0,"3741":0,"3742":0,"3743":0,"3744":0,"3745":0,"3746":0,"3747":0,"3749":0,"3750":0,"3752":0,"3753":0,"3754":0,"3755":0,"3756":0,"3757":0,"3758":0,"3763":0,"3764":0,"3765":0,"3799":1,"3801":1,"3802":1,"3803":0,"3804":0,"3806":0,"3809":1,"3811":1,"3812":0,"3813":0,"3815":0,"3816":0,"3817":0,"3818":0,"3820":0,"3821":0,"3824":0,"3897":1,"3898":0,"3920":1,"3921":0,"4022":1,"4023":0,"4024":0,"4025":0,"4052":1,"4054":0,"4057":0,"4058":0,"4059":0,"4060":0,"4062":0,"4063":0,"4064":0,"4066":0,"4068":0,"4069":0,"4073":0,"4074":0,"4075":0,"4076":0,"4079":0,"4080":0,"4086":0,"4087":0,"4089":0,"4092":0,"4096":0,"4098":0,"4137":1,"4138":0,"4139":0,"4140":0,"4141":0,"4142":0,"4146":1,"4170":1,"4171":0,"4172":0,"4214":1,"4215":0,"4216":0,"4217":0,"4218":0,"4219":0,"4223":0,"4224":0,"4225":0,"4226":0,"4227":0,"4229":0,"4235":0,"4239":1,"4240":0,"4241":0,"4242":0,"4274":1,"4343":1,"4344":0,"4345":0,"4346":0,"4348":0,"4349":0,"4350":0,"4353":0,"4375":1,"4394":1,"4415":1,"4416":0,"4417":0,"4505":1,"4506":0,"4507":0,"4509":0,"4514":1,"4515":0,"4516":0,"4518":0,"4520":0,"4521":0,"4522":0,"4524":0,"4528":0,"4529":0,"4530":0,"4532":0,"4533":0,"4536":0,"4537":0,"4540":0,"4542":0,"4543":1,"4544":0,"4545":0,"4546":0,"4548":0,"4553":0,"4584":1,"4585":0,"4586":0,"4587":0,"4589":0,"4590":0,"4591":1,"4592":0,"4595":0,"4663":1,"4664":0,"4697":1,"4720":1,"4742":1,"4791":1,"4792":0,"4793":0,"4794":0,"4795":0,"4796":0,"4799":0,"4800":0,"4803":1,"4804":0,"4806":0,"4851":1,"4852":0,"4853":0,"4855":1,"4856":0,"4857":0,"4858":0,"4862":1,"4863":0,"4864":0,"4865":0,"4866":0,"4867":0,"4869":0,"4870":0,"4873":0,"4875":0,"4876":0,"4878":0,"4879":0,"4884":1,"4885":1,"4898":1,"4899":0,"4903":0,"4904":0,"4905":0,"4907":0,"4926":1,"4927":0,"4928":0,"4963":1,"4979":1,"5023":1,"5024":0,"5025":0,"5026":0,"5027":0,"5029":0,"5030":0,"5032":0,"5033":0,"5035":0,"5052":1,"5053":0,"5054":0,"5092":1,"5093":0,"5094":0,"5095":0,"5096":0,"5097":0,"5098":0,"5099":0,"5101":0,"5126":1,"5127":0,"5128":0,"5189":1,"5190":0,"5191":0,"5192":0,"5193":0,"5195":1,"5196":0,"5197":0,"5200":0,"5201":0,"5202":0,"5204":0,"5207":0,"5209":0,"5210":0,"5213":0,"5280":1,"5375":1,"5376":1,"5377":1,"5378":1,"5379":1,"5380":1,"5381":1,"5382":1,"5383":1,"5384":1,"5385":1,"5386":1,"5387":1,"5388":1,"5389":1,"5390":1,"5391":1,"5392":1,"5393":1,"5394":1,"5395":1,"5396":1,"5397":1,"5398":1,"5399":1,"5400":1,"5401":1,"5402":1,"5403":1,"5404":1,"5405":1,"5406":1,"5407":1,"5408":1,"5409":1,"5410":1,"5411":1,"5412":1,"5413":1,"5414":1,"5415":1,"5416":1,"5417":1,"5418":1,"5419":1,"5420":1,"5421":1,"5422":1,"5423":1,"5424":1,"5425":1,"5426":1,"5427":1,"5428":1,"5429":1,"5430":1,"5431":1,"5432":1,"5433":1,"5434":1,"5435":1,"5436":1,"5437":1,"5438":1,"5439":1,"5440":1,"5441":1,"5442":1,"5443":1,"5444":1,"5445":1,"5446":1,"5447":1,"5448":1,"5449":1,"5450":1,"5451":1,"5452":1,"5453":1,"5454":1,"5455":1,"5456":1,"5457":1,"5458":1,"5459":1,"5460":1,"5461":1,"5462":1,"5463":1,"5464":1,"5465":1,"5466":1,"5467":1,"5468":1,"5469":1,"5470":1,"5471":1,"5472":1,"5474":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/apply.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/apply.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}}},"2":{"name":"(anonymous_2)","line":57,"loc":{"start":{"line":57,"column":38},"end":{"line":57,"column":58}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":31},"end":{"line":58,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":95}},"5":{"start":{"line":11,"column":39},"end":{"line":11,"column":93}},"6":{"start":{"line":57,"column":0},"end":{"line":61,"column":3}},"7":{"start":{"line":58,"column":4},"end":{"line":60,"column":7}},"8":{"start":{"line":59,"column":8},"end":{"line":59,"column":53}},"9":{"start":{"line":62,"column":0},"end":{"line":62,"column":36}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":70},"end":{"line":11,"column":73}},{"start":{"line":11,"column":76},"end":{"line":11,"column":92}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","var _rest = require('./internal/rest');","","var _rest2 = _interopRequireDefault(_rest);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Creates a continuation function with some arguments already applied."," *"," * Useful as a shorthand when combined with other control flow functions. Any"," * arguments passed to the returned function are added to the arguments"," * originally passed to apply."," *"," * @name apply"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {Function} function - The function you want to eventually apply all"," * arguments to. Invokes with (arguments...)."," * @param {...*} arguments... - Any number of arguments to automatically apply"," * when the continuation is called."," * @example"," *"," * // using apply"," * async.parallel(["," *     async.apply(fs.writeFile, 'testfile1', 'test1'),"," *     async.apply(fs.writeFile, 'testfile2', 'test2')"," * ]);"," *"," *"," * // the same process without using apply"," * async.parallel(["," *     function(callback) {"," *         fs.writeFile('testfile1', 'test1', callback);"," *     },"," *     function(callback) {"," *         fs.writeFile('testfile2', 'test2', callback);"," *     }"," * ]);"," *"," * // It's possible to pass any number of additional arguments when calling the"," * // continuation:"," *"," * node> var fn = async.apply(sys.puts, 'one');"," * node> fn('two', 'three');"," * one"," * two"," * three"," */","exports.default = (0, _rest2.default)(function (fn, args) {","    return (0, _rest2.default)(function (callArgs) {","        return fn.apply(null, args.concat(callArgs));","    });","});","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"57":1,"58":0,"59":0,"62":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/rest.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/rest.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":9,"11":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2,"2":9},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"rest","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":45}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":52}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":68}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = rest;","","var _overRest2 = require('lodash/_overRest');","","var _overRest3 = _interopRequireDefault(_overRest2);","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// Lodash rest function without function.toString()","// remappings","function rest(func, start) {","    return (0, _overRest3.default)(func, start, _identity2.default);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"20":1,"21":9,"23":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/applyEach.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/applyEach.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":49}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":41}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":50,"column":0},"end":{"line":50,"column":58}},"9":{"start":{"line":51,"column":0},"end":{"line":51,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _applyEach = require('./internal/applyEach');","","var _applyEach2 = _interopRequireDefault(_applyEach);","","var _map = require('./map');","","var _map2 = _interopRequireDefault(_map);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Applies the provided arguments to each function in the array, calling"," * `callback` after all functions have completed. If you only provide the first"," * argument, `fns`, then it will return a function which lets you pass in the"," * arguments as if it were a single function call. If more arguments are"," * provided, `callback` is required while `args` is still optional."," *"," * @name applyEach"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s"," * to all call with the same arguments"," * @param {...*} [args] - any number of separate arguments to pass to the"," * function."," * @param {Function} [callback] - the final argument should be the callback,"," * called when all functions have completed processing."," * @returns {Function} - If only the first argument, `fns`, is provided, it will"," * return a function which lets you pass in the arguments as if it were a single"," * function call. The signature is `(..args, callback)`. If invoked with any"," * arguments, `callback` is required."," * @example"," *"," * async.applyEach([enableSearch, updateSchema], 'bucket', callback);"," *"," * // partial application example:"," * async.each("," *     buckets,"," *     async.applyEach([enableSearch, updateSchema]),"," *     callback"," * );"," */","exports.default = (0, _applyEach2.default)(_map2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"50":1,"51":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/applyEach.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/applyEach.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":2,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[1,2],"2":[3,3],"3":[0,0]},"f":{"1":3,"2":2,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"applyEach","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":27}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":31},"end":{"line":23,"column":52}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":46},"end":{"line":24,"column":72}}},"5":{"name":"(anonymous_5)","line":26,"loc":{"start":{"line":26,"column":31},"end":{"line":26,"column":49}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":48}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":61}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":40}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":22,"column":0},"end":{"line":36,"column":1}},"12":{"start":{"line":23,"column":4},"end":{"line":35,"column":7}},"13":{"start":{"line":24,"column":8},"end":{"line":29,"column":11}},"14":{"start":{"line":25,"column":12},"end":{"line":25,"column":28}},"15":{"start":{"line":26,"column":12},"end":{"line":28,"column":25}},"16":{"start":{"line":27,"column":16},"end":{"line":27,"column":74}},"17":{"start":{"line":30,"column":8},"end":{"line":34,"column":9}},"18":{"start":{"line":31,"column":12},"end":{"line":31,"column":40}},"19":{"start":{"line":33,"column":12},"end":{"line":33,"column":22}},"20":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":8}},{"start":{"line":30,"column":8},"end":{"line":30,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = applyEach;","","var _rest = require('./rest');","","var _rest2 = _interopRequireDefault(_rest);","","var _initialParams = require('./initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function applyEach(eachfn) {","    return (0, _rest2.default)(function (fns, args) {","        var go = (0, _initialParams2.default)(function (args, callback) {","            var that = this;","            return eachfn(fns, function (fn, cb) {","                (0, _wrapAsync2.default)(fn).apply(that, args.concat(cb));","            }, callback);","        });","        if (args.length) {","            return go.apply(this, args);","        } else {","            return go;","        }","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"22":1,"23":2,"24":0,"25":0,"26":0,"27":0,"30":0,"31":0,"33":0,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/initialParams.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/initialParams.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":1,"9":1,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":0,"2":0,"3":1},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":32}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":31},"end":{"line":8,"column":65}}},"3":{"name":"_interopRequireDefault","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":11,"column":7}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":34}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":38}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":43}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":95}},"9":{"start":{"line":18,"column":39},"end":{"line":18,"column":93}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":70},"end":{"line":18,"column":73}},{"start":{"line":18,"column":76},"end":{"line":18,"column":92}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":46},"end":{"line":18,"column":49}},{"start":{"line":18,"column":53},"end":{"line":18,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (fn) {","    return (0, _rest2.default)(function (args /*..., callback*/) {","        var callback = args.pop();","        fn.call(this, args, callback);","    });","};","","var _rest = require('./rest');","","var _rest2 = _interopRequireDefault(_rest);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","module.exports = exports['default'];"],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"14":1,"16":1,"18":1,"20":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/wrapAsync.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/wrapAsync.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":1,"19":0,"20":1,"21":1,"22":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,1]},"f":{"1":2,"2":1,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"supportsAsync","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":25}}},"3":{"name":"isAsync","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":21}}},"4":{"name":"wrapAsync","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":18,"column":0},"end":{"line":18,"column":50}},"10":{"start":{"line":20,"column":0},"end":{"line":29,"column":1}},"11":{"start":{"line":21,"column":4},"end":{"line":21,"column":18}},"12":{"start":{"line":22,"column":4},"end":{"line":27,"column":5}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":60}},"14":{"start":{"line":26,"column":8},"end":{"line":26,"column":26}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":21}},"16":{"start":{"line":31,"column":0},"end":{"line":33,"column":1}},"17":{"start":{"line":32,"column":4},"end":{"line":32,"column":72}},"18":{"start":{"line":35,"column":0},"end":{"line":37,"column":1}},"19":{"start":{"line":36,"column":4},"end":{"line":36,"column":73}},"20":{"start":{"line":39,"column":0},"end":{"line":39,"column":67}},"21":{"start":{"line":40,"column":0},"end":{"line":40,"column":38}},"22":{"start":{"line":41,"column":0},"end":{"line":41,"column":26}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":11},"end":{"line":32,"column":25}},{"start":{"line":32,"column":29},"end":{"line":32,"column":71}}]},"4":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":30},"end":{"line":36,"column":62}},{"start":{"line":36,"column":65},"end":{"line":36,"column":72}}]},"5":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":36},"end":{"line":39,"column":45}},{"start":{"line":39,"column":48},"end":{"line":39,"column":66}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.isAsync = exports.supportsAsync = undefined;","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","var _asyncify = require('../asyncify');","","var _asyncify2 = _interopRequireDefault(_asyncify);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var supportsSymbol = typeof Symbol === 'function';","","function supportsAsync() {","    var supported;","    try {","        /* eslint no-eval: 0 */","        supported = isAsync(eval('(async function () {})'));","    } catch (e) {","        supported = false;","    }","    return supported;","}","","function isAsync(fn) {","    return supportsSymbol && fn[Symbol.toStringTag] === 'AsyncFunction';","}","","function wrapAsync(asyncFn) {","    return isAsync(asyncFn) ? (0, _asyncify2.default)(asyncFn) : asyncFn;","}","","exports.default = supportsAsync() ? wrapAsync : _identity2.default;","exports.supportsAsync = supportsAsync;","exports.isAsync = isAsync;"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"18":1,"20":1,"21":1,"22":1,"24":1,"26":1,"28":1,"31":1,"32":0,"35":1,"36":0,"39":1,"40":1,"41":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/asyncify.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/asyncify.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"asyncify","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":24}}},"3":{"name":"(anonymous_3)","line":75,"loc":{"start":{"line":75,"column":40},"end":{"line":75,"column":66}}},"4":{"name":"(anonymous_4)","line":84,"loc":{"start":{"line":84,"column":24},"end":{"line":84,"column":41}}},"5":{"name":"(anonymous_5)","line":86,"loc":{"start":{"line":86,"column":15},"end":{"line":86,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":61}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":74,"column":0},"end":{"line":93,"column":1}},"10":{"start":{"line":75,"column":4},"end":{"line":92,"column":7}},"11":{"start":{"line":76,"column":8},"end":{"line":76,"column":19}},"12":{"start":{"line":77,"column":8},"end":{"line":81,"column":9}},"13":{"start":{"line":78,"column":12},"end":{"line":78,"column":44}},"14":{"start":{"line":80,"column":12},"end":{"line":80,"column":31}},"15":{"start":{"line":83,"column":8},"end":{"line":91,"column":9}},"16":{"start":{"line":84,"column":12},"end":{"line":88,"column":15}},"17":{"start":{"line":85,"column":16},"end":{"line":85,"column":38}},"18":{"start":{"line":87,"column":16},"end":{"line":87,"column":61}},"19":{"start":{"line":90,"column":12},"end":{"line":90,"column":35}},"20":{"start":{"line":94,"column":0},"end":{"line":94,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":8}},{"start":{"line":83,"column":8},"end":{"line":83,"column":8}}]},"4":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":12},"end":{"line":83,"column":43}},{"start":{"line":83,"column":47},"end":{"line":83,"column":80}}]},"5":{"line":87,"type":"cond-expr","locations":[{"start":{"line":87,"column":39},"end":{"line":87,"column":42}},{"start":{"line":87,"column":45},"end":{"line":87,"column":59}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = asyncify;","","var _isObject = require('lodash/isObject');","","var _isObject2 = _interopRequireDefault(_isObject);","","var _initialParams = require('./internal/initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Take a sync function and make it async, passing its return value to a"," * callback. This is useful for plugging sync functions into a waterfall,"," * series, or other async functions. Any arguments passed to the generated"," * function will be passed to the wrapped function (except for the final"," * callback argument). Errors thrown will be passed to the callback."," *"," * If the function passed to `asyncify` returns a Promise, that promises's"," * resolved/rejected state will be used to call the callback, rather than simply"," * the synchronous return value."," *"," * This also means you can asyncify ES2017 `async` functions."," *"," * @name asyncify"," * @static"," * @memberOf module:Utils"," * @method"," * @alias wrapSync"," * @category Util"," * @param {Function} func - The synchronous funuction, or Promise-returning"," * function to convert to an {@link AsyncFunction}."," * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be"," * invoked with `(args..., callback)`."," * @example"," *"," * // passing a regular synchronous function"," * async.waterfall(["," *     async.apply(fs.readFile, filename, \"utf8\"),"," *     async.asyncify(JSON.parse),"," *     function (data, next) {"," *         // data is the result of parsing the text."," *         // If there was a parsing error, it would have been caught."," *     }"," * ], callback);"," *"," * // passing a function returning a promise"," * async.waterfall(["," *     async.apply(fs.readFile, filename, \"utf8\"),"," *     async.asyncify(function (contents) {"," *         return db.model.create(contents);"," *     }),"," *     function (model, next) {"," *         // `model` is the instantiated model object."," *         // If there was an error, this function would be skipped."," *     }"," * ], callback);"," *"," * // es2017 example, though `asyncify` is not needed if your JS environment"," * // supports async functions out of the box"," * var q = async.queue(async.asyncify(async function(file) {"," *     var intermediateStep = await processFile(file);"," *     return await somePromise(intermediateStep)"," * }));"," *"," * q.push(files);"," */","function asyncify(func) {","    return (0, _initialParams2.default)(function (args, callback) {","        var result;","        try {","            result = func.apply(this, args);","        } catch (e) {","            return callback(e);","        }","        // if result is Promise object","        if ((0, _isObject2.default)(result) && typeof result.then === 'function') {","            result.then(function (value) {","                callback(null, value);","            }, function (err) {","                callback(err.message ? err : new Error(err));","            });","        } else {","            callback(null, result);","        }","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"74":1,"75":0,"76":0,"77":0,"78":0,"80":0,"83":0,"84":0,"85":0,"87":0,"90":0,"94":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/map.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/map.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":51}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":55}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":41}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":53,"column":0},"end":{"line":53,"column":59}},"9":{"start":{"line":54,"column":0},"end":{"line":54,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","var _map = require('./internal/map');","","var _map2 = _interopRequireDefault(_map);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Produces a new collection of values by mapping each value in `coll` through"," * the `iteratee` function. The `iteratee` is called with an item from `coll`"," * and a callback for when it has finished processing. Each of these callback"," * takes 2 arguments: an `error`, and the transformed item from `coll`. If"," * `iteratee` passes an error to its callback, the main `callback` (for the"," * `map` function) is immediately called with the error."," *"," * Note, that since this function applies the `iteratee` to each item in"," * parallel, there is no guarantee that the `iteratee` functions will complete"," * in order. However, the results array will be in the same order as the"," * original `coll`."," *"," * If `map` is passed an Object, the results will be an Array.  The results"," * will roughly be in the order of the original Objects' keys (but this can"," * vary across JavaScript engines)."," *"," * @name map"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with the transformed item."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an Array of the"," * transformed items from the `coll`. Invoked with (err, results)."," * @example"," *"," * async.map(['file1','file2','file3'], fs.stat, function(err, results) {"," *     // results is now an array of stats for each file"," * });"," */","exports.default = (0, _doParallel2.default)(_map2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"53":1,"54":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/doParallel.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/doParallel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":6,"11":0,"12":1},"b":{"1":[1,1],"2":[2,2]},"f":{"1":2,"2":6,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"doParallel","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":24}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":11},"end":{"line":19,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":18,"column":0},"end":{"line":22,"column":1}},"10":{"start":{"line":19,"column":4},"end":{"line":21,"column":6}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":87}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = doParallel;","","var _eachOf = require('../eachOf');","","var _eachOf2 = _interopRequireDefault(_eachOf);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function doParallel(fn) {","    return function (obj, iteratee, callback) {","        return fn(_eachOf2.default, obj, (0, _wrapAsync2.default)(iteratee), callback);","    };","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"18":1,"19":6,"20":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachOf.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachOf.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":8,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1},"b":{"1":[0,0],"2":[1,7],"3":[8,8],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":8,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":54}}},"2":{"name":"_interopRequireDefault","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":37}}},"3":{"name":"eachOfArrayLike","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":51}}},"4":{"name":"iteratorCallback","line":56,"loc":{"start":{"line":56,"column":4},"end":{"line":56,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":10,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":98}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":77}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":44}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":57}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":45}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":49}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":35}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":43}},"15":{"start":{"line":32,"column":0},"end":{"line":32,"column":39}},"16":{"start":{"line":34,"column":0},"end":{"line":34,"column":43}},"17":{"start":{"line":36,"column":0},"end":{"line":36,"column":47}},"18":{"start":{"line":38,"column":0},"end":{"line":38,"column":51}},"19":{"start":{"line":40,"column":0},"end":{"line":40,"column":49}},"20":{"start":{"line":42,"column":0},"end":{"line":42,"column":53}},"21":{"start":{"line":44,"column":0},"end":{"line":44,"column":95}},"22":{"start":{"line":44,"column":39},"end":{"line":44,"column":93}},"23":{"start":{"line":47,"column":0},"end":{"line":67,"column":1}},"24":{"start":{"line":48,"column":4},"end":{"line":48,"column":63}},"25":{"start":{"line":49,"column":4},"end":{"line":51,"column":29}},"26":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"27":{"start":{"line":53,"column":8},"end":{"line":53,"column":23}},"28":{"start":{"line":56,"column":4},"end":{"line":62,"column":5}},"29":{"start":{"line":57,"column":8},"end":{"line":61,"column":9}},"30":{"start":{"line":58,"column":12},"end":{"line":58,"column":26}},"31":{"start":{"line":59,"column":15},"end":{"line":61,"column":9}},"32":{"start":{"line":60,"column":12},"end":{"line":60,"column":27}},"33":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"34":{"start":{"line":65,"column":8},"end":{"line":65,"column":80}},"35":{"start":{"line":70,"column":0},"end":{"line":70,"column":76}},"36":{"start":{"line":111,"column":0},"end":{"line":111,"column":36}}},"branchMap":{"1":{"line":8,"type":"cond-expr","locations":[{"start":{"line":8,"column":66},"end":{"line":8,"column":81}},{"start":{"line":8,"column":84},"end":{"line":8,"column":97}}]},"2":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":70},"end":{"line":44,"column":73}},{"start":{"line":44,"column":76},"end":{"line":44,"column":92}}]},"3":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":46},"end":{"line":44,"column":49}},{"start":{"line":44,"column":53},"end":{"line":44,"column":67}}]},"4":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":35},"end":{"line":48,"column":43}},{"start":{"line":48,"column":47},"end":{"line":48,"column":61}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"6":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"7":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":15},"end":{"line":59,"column":15}},{"start":{"line":59,"column":15},"end":{"line":59,"column":15}}]},"8":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":19},"end":{"line":59,"column":41}},{"start":{"line":59,"column":45},"end":{"line":59,"column":74}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (coll, iteratee, callback) {","    var eachOfImplementation = (0, _isArrayLike2.default)(coll) ? eachOfArrayLike : eachOfGeneric;","    eachOfImplementation(coll, (0, _wrapAsync2.default)(iteratee), callback);","};","","var _isArrayLike = require('lodash/isArrayLike');","","var _isArrayLike2 = _interopRequireDefault(_isArrayLike);","","var _breakLoop = require('./internal/breakLoop');","","var _breakLoop2 = _interopRequireDefault(_breakLoop);","","var _eachOfLimit = require('./eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// eachOf implementation optimized for array-likes","function eachOfArrayLike(coll, iteratee, callback) {","    callback = (0, _once2.default)(callback || _noop2.default);","    var index = 0,","        completed = 0,","        length = coll.length;","    if (length === 0) {","        callback(null);","    }","","    function iteratorCallback(err, value) {","        if (err) {","            callback(err);","        } else if (++completed === length || value === _breakLoop2.default) {","            callback(null);","        }","    }","","    for (; index < length; index++) {","        iteratee(coll[index], index, (0, _onlyOnce2.default)(iteratorCallback));","    }","}","","// a generic version of eachOf which can handle array, object, and iterator cases.","var eachOfGeneric = (0, _doLimit2.default)(_eachOfLimit2.default, Infinity);","","/**"," * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument"," * to the iteratee."," *"," * @name eachOf"," * @static"," * @memberOf module:Collections"," * @method"," * @alias forEachOf"," * @category Collection"," * @see [async.each]{@link module:Collections.each}"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each"," * item in `coll`."," * The `key` is the item's key, or index in the case of an array."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," * @example"," *"," * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};"," * var configs = {};"," *"," * async.forEachOf(obj, function (value, key, callback) {"," *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {"," *         if (err) return callback(err);"," *         try {"," *             configs[key] = JSON.parse(data);"," *         } catch (e) {"," *             return callback(e);"," *         }"," *         callback();"," *     });"," * }, function (err) {"," *     if (err) console.error(err.message);"," *     // configs is now a map of JSON data"," *     doSomethingWith(configs);"," * });"," */","module.exports = exports['default'];"],"l":{"3":1,"7":1,"8":0,"9":0,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":1,"30":1,"32":1,"34":1,"36":1,"38":1,"40":1,"42":1,"44":8,"47":1,"48":0,"49":0,"52":0,"53":0,"56":1,"57":0,"58":0,"59":0,"60":0,"64":0,"65":0,"70":1,"111":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/breakLoop.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/breakLoop.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":21}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":36}}},"branchMap":{},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","// A temporary value used to identify if the loop should be broken.","// See #1064, #1293","exports.default = {};","module.exports = exports[\"default\"];"],"l":{"3":1,"8":1,"9":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachOfLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachOfLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":1},"b":{"1":[1,1],"2":[2,2]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"eachOfLimit","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":54}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":54}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":58}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":38,"column":0},"end":{"line":40,"column":1}},"10":{"start":{"line":39,"column":2},"end":{"line":39,"column":88}},"11":{"start":{"line":41,"column":0},"end":{"line":41,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = eachOfLimit;","","var _eachOfLimit2 = require('./internal/eachOfLimit');","","var _eachOfLimit3 = _interopRequireDefault(_eachOfLimit2);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name eachOfLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.eachOf]{@link module:Collections.eachOf}"," * @alias forEachOfLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each"," * item in `coll`. The `key` is the item's key, or index in the case of an"," * array."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","function eachOfLimit(coll, limit, iteratee, callback) {","  (0, _eachOfLimit3.default)(limit)(coll, (0, _wrapAsync2.default)(iteratee), callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"38":1,"39":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/eachOfLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/eachOfLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"b":{"1":[0,5],"2":[5,5],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":5,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"2":{"name":"_eachOfLimit","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":29}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":11},"end":{"line":31,"column":46}}},"4":{"name":"iterateeCallback","line":40,"loc":{"start":{"line":40,"column":8},"end":{"line":40,"column":46}}},"5":{"name":"replenish","line":53,"loc":{"start":{"line":53,"column":8},"end":{"line":53,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":38}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":51}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":53}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":95}},"14":{"start":{"line":28,"column":39},"end":{"line":28,"column":93}},"15":{"start":{"line":30,"column":0},"end":{"line":70,"column":1}},"16":{"start":{"line":31,"column":4},"end":{"line":69,"column":6}},"17":{"start":{"line":32,"column":8},"end":{"line":32,"column":67}},"18":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"19":{"start":{"line":34,"column":12},"end":{"line":34,"column":34}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":52}},"21":{"start":{"line":37,"column":8},"end":{"line":37,"column":25}},"22":{"start":{"line":38,"column":8},"end":{"line":38,"column":24}},"23":{"start":{"line":40,"column":8},"end":{"line":51,"column":9}},"24":{"start":{"line":41,"column":12},"end":{"line":41,"column":25}},"25":{"start":{"line":42,"column":12},"end":{"line":50,"column":13}},"26":{"start":{"line":43,"column":16},"end":{"line":43,"column":28}},"27":{"start":{"line":44,"column":16},"end":{"line":44,"column":30}},"28":{"start":{"line":45,"column":19},"end":{"line":50,"column":13}},"29":{"start":{"line":46,"column":16},"end":{"line":46,"column":28}},"30":{"start":{"line":47,"column":16},"end":{"line":47,"column":38}},"31":{"start":{"line":49,"column":16},"end":{"line":49,"column":28}},"32":{"start":{"line":53,"column":8},"end":{"line":66,"column":9}},"33":{"start":{"line":54,"column":12},"end":{"line":65,"column":13}},"34":{"start":{"line":55,"column":16},"end":{"line":55,"column":38}},"35":{"start":{"line":56,"column":16},"end":{"line":62,"column":17}},"36":{"start":{"line":57,"column":20},"end":{"line":57,"column":32}},"37":{"start":{"line":58,"column":20},"end":{"line":60,"column":21}},"38":{"start":{"line":59,"column":24},"end":{"line":59,"column":39}},"39":{"start":{"line":61,"column":20},"end":{"line":61,"column":27}},"40":{"start":{"line":63,"column":16},"end":{"line":63,"column":29}},"41":{"start":{"line":64,"column":16},"end":{"line":64,"column":90}},"42":{"start":{"line":68,"column":8},"end":{"line":68,"column":20}},"43":{"start":{"line":71,"column":0},"end":{"line":71,"column":36}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":70},"end":{"line":28,"column":73}},{"start":{"line":28,"column":76},"end":{"line":28,"column":92}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}]},"3":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":39},"end":{"line":32,"column":47}},{"start":{"line":32,"column":51},"end":{"line":32,"column":65}}]},"4":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":8}},{"start":{"line":33,"column":8},"end":{"line":33,"column":8}}]},"5":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":12},"end":{"line":33,"column":22}},{"start":{"line":33,"column":26},"end":{"line":33,"column":30}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":12}},{"start":{"line":42,"column":12},"end":{"line":42,"column":12}}]},"7":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":19},"end":{"line":45,"column":19}},{"start":{"line":45,"column":19},"end":{"line":45,"column":19}}]},"8":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":23},"end":{"line":45,"column":52}},{"start":{"line":45,"column":56},"end":{"line":45,"column":60}},{"start":{"line":45,"column":64},"end":{"line":45,"column":76}}]},"9":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":19},"end":{"line":54,"column":34}},{"start":{"line":54,"column":38},"end":{"line":54,"column":43}}]},"10":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":16},"end":{"line":56,"column":16}},{"start":{"line":56,"column":16},"end":{"line":56,"column":16}}]},"11":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":20},"end":{"line":58,"column":20}},{"start":{"line":58,"column":20},"end":{"line":58,"column":20}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = _eachOfLimit;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./once');","","var _once2 = _interopRequireDefault(_once);","","var _iterator = require('./iterator');","","var _iterator2 = _interopRequireDefault(_iterator);","","var _onlyOnce = require('./onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _breakLoop = require('./breakLoop');","","var _breakLoop2 = _interopRequireDefault(_breakLoop);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _eachOfLimit(limit) {","    return function (obj, iteratee, callback) {","        callback = (0, _once2.default)(callback || _noop2.default);","        if (limit <= 0 || !obj) {","            return callback(null);","        }","        var nextElem = (0, _iterator2.default)(obj);","        var done = false;","        var running = 0;","","        function iterateeCallback(err, value) {","            running -= 1;","            if (err) {","                done = true;","                callback(err);","            } else if (value === _breakLoop2.default || done && running <= 0) {","                done = true;","                return callback(null);","            } else {","                replenish();","            }","        }","","        function replenish() {","            while (running < limit && !done) {","                var elem = nextElem();","                if (elem === null) {","                    done = true;","                    if (running <= 0) {","                        callback(null);","                    }","                    return;","                }","                running += 1;","                iteratee(elem.value, elem.key, (0, _onlyOnce2.default)(iterateeCallback));","            }","        }","","        replenish();","    };","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":5,"30":1,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"49":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"61":0,"63":0,"64":0,"68":0,"71":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/once.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/once.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"once","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":11},"end":{"line":8,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"3":{"start":{"line":7,"column":0},"end":{"line":14,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":13,"column":6}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":32}},"6":{"start":{"line":9,"column":25},"end":{"line":9,"column":32}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":24}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":18}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":38}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":8}},{"start":{"line":9,"column":8},"end":{"line":9,"column":8}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = once;","function once(fn) {","    return function () {","        if (fn === null) return;","        var callFn = fn;","        fn = null;","        callFn.apply(this, arguments);","    };","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"15":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/iterator.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/iterator.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":1},"b":{"1":[0,3],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"createArrayIterator","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":35}}},"3":{"name":"next","line":25,"loc":{"start":{"line":25,"column":11},"end":{"line":25,"column":27}}},"4":{"name":"createES2015Iterator","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":40}}},"5":{"name":"next","line":32,"loc":{"start":{"line":32,"column":11},"end":{"line":32,"column":27}}},"6":{"name":"createObjectIterator","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":35}}},"7":{"name":"next","line":44,"loc":{"start":{"line":44,"column":11},"end":{"line":44,"column":27}}},"8":{"name":"iterator","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":49}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":44}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":35}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":22,"column":0},"end":{"line":28,"column":1}},"12":{"start":{"line":23,"column":4},"end":{"line":23,"column":15}},"13":{"start":{"line":24,"column":4},"end":{"line":24,"column":26}},"14":{"start":{"line":25,"column":4},"end":{"line":27,"column":6}},"15":{"start":{"line":26,"column":8},"end":{"line":26,"column":61}},"16":{"start":{"line":30,"column":0},"end":{"line":38,"column":1}},"17":{"start":{"line":31,"column":4},"end":{"line":31,"column":15}},"18":{"start":{"line":32,"column":4},"end":{"line":37,"column":6}},"19":{"start":{"line":33,"column":8},"end":{"line":33,"column":35}},"20":{"start":{"line":34,"column":8},"end":{"line":34,"column":35}},"21":{"start":{"line":34,"column":23},"end":{"line":34,"column":35}},"22":{"start":{"line":35,"column":8},"end":{"line":35,"column":12}},"23":{"start":{"line":36,"column":8},"end":{"line":36,"column":45}},"24":{"start":{"line":40,"column":0},"end":{"line":48,"column":1}},"25":{"start":{"line":41,"column":4},"end":{"line":41,"column":41}},"26":{"start":{"line":42,"column":4},"end":{"line":42,"column":15}},"27":{"start":{"line":43,"column":4},"end":{"line":43,"column":27}},"28":{"start":{"line":44,"column":4},"end":{"line":47,"column":6}},"29":{"start":{"line":45,"column":8},"end":{"line":45,"column":29}},"30":{"start":{"line":46,"column":8},"end":{"line":46,"column":62}},"31":{"start":{"line":50,"column":0},"end":{"line":57,"column":1}},"32":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"33":{"start":{"line":52,"column":8},"end":{"line":52,"column":41}},"34":{"start":{"line":55,"column":4},"end":{"line":55,"column":52}},"35":{"start":{"line":56,"column":4},"end":{"line":56,"column":82}},"36":{"start":{"line":58,"column":0},"end":{"line":58,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":27},"end":{"line":26,"column":53}},{"start":{"line":26,"column":56},"end":{"line":26,"column":60}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":8}},{"start":{"line":34,"column":8},"end":{"line":34,"column":8}}]},"5":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":25},"end":{"line":46,"column":54}},{"start":{"line":46,"column":57},"end":{"line":46,"column":61}}]},"6":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"7":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":22},"end":{"line":56,"column":52}},{"start":{"line":56,"column":55},"end":{"line":56,"column":81}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = iterator;","","var _isArrayLike = require('lodash/isArrayLike');","","var _isArrayLike2 = _interopRequireDefault(_isArrayLike);","","var _getIterator = require('./getIterator');","","var _getIterator2 = _interopRequireDefault(_getIterator);","","var _keys = require('lodash/keys');","","var _keys2 = _interopRequireDefault(_keys);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function createArrayIterator(coll) {","    var i = -1;","    var len = coll.length;","    return function next() {","        return ++i < len ? { value: coll[i], key: i } : null;","    };","}","","function createES2015Iterator(iterator) {","    var i = -1;","    return function next() {","        var item = iterator.next();","        if (item.done) return null;","        i++;","        return { value: item.value, key: i };","    };","}","","function createObjectIterator(obj) {","    var okeys = (0, _keys2.default)(obj);","    var i = -1;","    var len = okeys.length;","    return function next() {","        var key = okeys[++i];","        return i < len ? { value: obj[key], key: key } : null;","    };","}","","function iterator(coll) {","    if ((0, _isArrayLike2.default)(coll)) {","        return createArrayIterator(coll);","    }","","    var iterator = (0, _getIterator2.default)(coll);","    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"22":1,"23":0,"24":0,"25":0,"26":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"50":1,"51":0,"52":0,"55":0,"56":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/getIterator.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/getIterator.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1},"b":{"1":[0,0,0],"2":[1,1]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":9,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":76}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":69}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":11},"end":{"line":8,"column":25}},{"start":{"line":8,"column":29},"end":{"line":8,"column":49}},{"start":{"line":8,"column":53},"end":{"line":8,"column":75}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":21},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":68}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (coll) {","    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();","};","","var iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;","","module.exports = exports['default'];"],"l":{"3":1,"7":1,"8":0,"11":1,"13":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/onlyOnce.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/onlyOnce.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"onlyOnce","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":22}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":11},"end":{"line":8,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":7,"column":0},"end":{"line":14,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":13,"column":6}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":73}},"6":{"start":{"line":9,"column":25},"end":{"line":9,"column":73}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":24}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":18}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":38}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":8}},{"start":{"line":9,"column":8},"end":{"line":9,"column":8}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = onlyOnce;","function onlyOnce(fn) {","    return function () {","        if (fn === null) throw new Error(\"Callback was already called.\");","        var callFn = fn;","        fn = null;","        callFn.apply(this, arguments);","    };","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"15":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/doLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/doLimit.js","s":{"1":1,"2":1,"3":1,"4":15,"5":0,"6":1},"b":{},"f":{"1":15,"2":0},"fnMap":{"1":{"name":"doLimit","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":11},"end":{"line":8,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":10,"column":6}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":55}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}}},"branchMap":{},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = doLimit;","function doLimit(fn, limit) {","    return function (iterable, iteratee, callback) {","        return fn(iterable, limit, iteratee, callback);","    };","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"7":1,"8":15,"9":0,"12":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/map.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/map.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[1,1],"2":[2,2],"3":[0,0],"4":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"_asyncMap","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":52}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":16},"end":{"line":25,"column":46}}},"4":{"name":"(anonymous_4)","line":27,"loc":{"start":{"line":27,"column":25},"end":{"line":27,"column":43}}},"5":{"name":"(anonymous_5)","line":31,"loc":{"start":{"line":31,"column":7},"end":{"line":31,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":18,"column":0},"end":{"line":34,"column":1}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":20}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":21}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":20}},"14":{"start":{"line":23,"column":4},"end":{"line":23,"column":55}},"15":{"start":{"line":25,"column":4},"end":{"line":33,"column":7}},"16":{"start":{"line":26,"column":8},"end":{"line":26,"column":30}},"17":{"start":{"line":27,"column":8},"end":{"line":30,"column":11}},"18":{"start":{"line":28,"column":12},"end":{"line":28,"column":31}},"19":{"start":{"line":29,"column":12},"end":{"line":29,"column":26}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":31}},"21":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":15},"end":{"line":19,"column":23}},{"start":{"line":19,"column":27},"end":{"line":19,"column":41}}]},"4":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":10},"end":{"line":20,"column":13}},{"start":{"line":20,"column":17},"end":{"line":20,"column":19}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = _asyncMap;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _asyncMap(eachfn, arr, iteratee, callback) {","    callback = callback || _noop2.default;","    arr = arr || [];","    var results = [];","    var counter = 0;","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","","    eachfn(arr, function (value, _, callback) {","        var index = counter++;","        _iteratee(value, function (err, v) {","            results[index] = v;","            callback(err);","        });","    }, function (err) {","        callback(err, results);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"27":0,"28":0,"29":0,"32":0,"35":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/applyEachSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/applyEachSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":49}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":53}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":64}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _applyEach = require('./internal/applyEach');","","var _applyEach2 = _interopRequireDefault(_applyEach);","","var _mapSeries = require('./mapSeries');","","var _mapSeries2 = _interopRequireDefault(_mapSeries);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time."," *"," * @name applyEachSeries"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.applyEach]{@link module:ControlFlow.applyEach}"," * @category Control Flow"," * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s to all"," * call with the same arguments"," * @param {...*} [args] - any number of separate arguments to pass to the"," * function."," * @param {Function} [callback] - the final argument should be the callback,"," * called when all functions have completed processing."," * @returns {Function} - If only the first argument is provided, it will return"," * a function which lets you pass in the arguments as if it were a single"," * function call."," */","exports.default = (0, _applyEach2.default)(_mapSeries2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":35,"column":0},"end":{"line":35,"column":64}},"9":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _mapLimit = require('./mapLimit');","","var _mapLimit2 = _interopRequireDefault(_mapLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time."," *"," * @name mapSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with the transformed item."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an array of the"," * transformed items from the `coll`. Invoked with (err, results)."," */","exports.default = (0, _doLimit2.default)(_mapLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"35":1,"36":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":61}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":65}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":41}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":64}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","var _map = require('./internal/map');","","var _map2 = _interopRequireDefault(_map);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time."," *"," * @name mapLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with the transformed item."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Results is an array of the"," * transformed items from the `coll`. Invoked with (err, results)."," */","exports.default = (0, _doParallelLimit2.default)(_map2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/doParallelLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/doParallelLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":6,"11":0,"12":1},"b":{"1":[1,1],"2":[2,2]},"f":{"1":2,"2":6,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"doParallelLimit","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":29}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":11},"end":{"line":19,"column":53}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":18,"column":0},"end":{"line":22,"column":1}},"10":{"start":{"line":19,"column":4},"end":{"line":21,"column":6}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":104}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = doParallelLimit;","","var _eachOfLimit = require('./eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function doParallelLimit(fn) {","    return function (obj, limit, iteratee, callback) {","        return fn((0, _eachOfLimit2.default)(limit), obj, (0, _wrapAsync2.default)(iteratee), callback);","    };","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"18":1,"19":6,"20":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/auto.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/auto.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":10,"121":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[1,9],"23":[10,10]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":10},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":58}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":37},"end":{"line":36,"column":58}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":47},"end":{"line":53,"column":73}}},"4":{"name":"(anonymous_4)","line":57,"loc":{"start":{"line":57,"column":40},"end":{"line":57,"column":52}}},"5":{"name":"enqueueTask","line":69,"loc":{"start":{"line":69,"column":4},"end":{"line":69,"column":36}}},"6":{"name":"(anonymous_6)","line":70,"loc":{"start":{"line":70,"column":24},"end":{"line":70,"column":36}}},"7":{"name":"processQueue","line":75,"loc":{"start":{"line":75,"column":4},"end":{"line":75,"column":28}}},"8":{"name":"addListener","line":85,"loc":{"start":{"line":85,"column":4},"end":{"line":85,"column":39}}},"9":{"name":"taskComplete","line":94,"loc":{"start":{"line":94,"column":4},"end":{"line":94,"column":36}}},"10":{"name":"(anonymous_10)","line":96,"loc":{"start":{"line":96,"column":48},"end":{"line":96,"column":62}}},"11":{"name":"runTask","line":102,"loc":{"start":{"line":102,"column":4},"end":{"line":102,"column":32}}},"12":{"name":"(anonymous_12)","line":105,"loc":{"start":{"line":105,"column":71},"end":{"line":105,"column":92}}},"13":{"name":"(anonymous_13)","line":112,"loc":{"start":{"line":112,"column":51},"end":{"line":112,"column":72}}},"14":{"name":"checkForDeadlocks","line":135,"loc":{"start":{"line":135,"column":4},"end":{"line":135,"column":33}}},"15":{"name":"(anonymous_15)","line":144,"loc":{"start":{"line":144,"column":65},"end":{"line":144,"column":86}}},"16":{"name":"getDependents","line":156,"loc":{"start":{"line":156,"column":4},"end":{"line":156,"column":37}}},"17":{"name":"(anonymous_17)","line":158,"loc":{"start":{"line":158,"column":41},"end":{"line":158,"column":62}}},"18":{"name":"_interopRequireDefault","line":207,"loc":{"start":{"line":207,"column":0},"end":{"line":207,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":165,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":12,"column":5}},"4":{"start":{"line":10,"column":8},"end":{"line":10,"column":31}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":27}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":63}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":42}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":31}},"9":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"10":{"start":{"line":17,"column":8},"end":{"line":17,"column":30}},"11":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":31}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":21}},"14":{"start":{"line":24,"column":4},"end":{"line":24,"column":25}},"15":{"start":{"line":25,"column":4},"end":{"line":25,"column":25}},"16":{"start":{"line":27,"column":4},"end":{"line":27,"column":40}},"17":{"start":{"line":29,"column":4},"end":{"line":29,"column":24}},"18":{"start":{"line":32,"column":4},"end":{"line":32,"column":26}},"19":{"start":{"line":34,"column":4},"end":{"line":34,"column":35}},"20":{"start":{"line":36,"column":4},"end":{"line":64,"column":7}},"21":{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},"22":{"start":{"line":39,"column":12},"end":{"line":39,"column":37}},"23":{"start":{"line":40,"column":12},"end":{"line":40,"column":35}},"24":{"start":{"line":41,"column":12},"end":{"line":41,"column":19}},"25":{"start":{"line":44,"column":8},"end":{"line":44,"column":58}},"26":{"start":{"line":45,"column":8},"end":{"line":45,"column":56}},"27":{"start":{"line":46,"column":8},"end":{"line":50,"column":9}},"28":{"start":{"line":47,"column":12},"end":{"line":47,"column":35}},"29":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"30":{"start":{"line":49,"column":12},"end":{"line":49,"column":19}},"31":{"start":{"line":51,"column":8},"end":{"line":51,"column":59}},"32":{"start":{"line":53,"column":8},"end":{"line":63,"column":11}},"33":{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},"34":{"start":{"line":55,"column":16},"end":{"line":55,"column":150}},"35":{"start":{"line":57,"column":12},"end":{"line":62,"column":15}},"36":{"start":{"line":58,"column":16},"end":{"line":58,"column":40}},"37":{"start":{"line":59,"column":16},"end":{"line":61,"column":17}},"38":{"start":{"line":60,"column":20},"end":{"line":60,"column":43}},"39":{"start":{"line":66,"column":4},"end":{"line":66,"column":24}},"40":{"start":{"line":67,"column":4},"end":{"line":67,"column":19}},"41":{"start":{"line":69,"column":4},"end":{"line":73,"column":5}},"42":{"start":{"line":70,"column":8},"end":{"line":72,"column":11}},"43":{"start":{"line":71,"column":12},"end":{"line":71,"column":31}},"44":{"start":{"line":75,"column":4},"end":{"line":83,"column":5}},"45":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"46":{"start":{"line":77,"column":12},"end":{"line":77,"column":43}},"47":{"start":{"line":79,"column":8},"end":{"line":82,"column":9}},"48":{"start":{"line":80,"column":12},"end":{"line":80,"column":41}},"49":{"start":{"line":81,"column":12},"end":{"line":81,"column":18}},"50":{"start":{"line":85,"column":4},"end":{"line":92,"column":5}},"51":{"start":{"line":86,"column":8},"end":{"line":86,"column":48}},"52":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"53":{"start":{"line":88,"column":12},"end":{"line":88,"column":53}},"54":{"start":{"line":91,"column":8},"end":{"line":91,"column":31}},"55":{"start":{"line":94,"column":4},"end":{"line":100,"column":5}},"56":{"start":{"line":95,"column":8},"end":{"line":95,"column":54}},"57":{"start":{"line":96,"column":8},"end":{"line":98,"column":11}},"58":{"start":{"line":97,"column":12},"end":{"line":97,"column":17}},"59":{"start":{"line":99,"column":8},"end":{"line":99,"column":23}},"60":{"start":{"line":102,"column":4},"end":{"line":133,"column":5}},"61":{"start":{"line":103,"column":8},"end":{"line":103,"column":29}},"62":{"start":{"line":103,"column":22},"end":{"line":103,"column":29}},"63":{"start":{"line":105,"column":8},"end":{"line":124,"column":12}},"64":{"start":{"line":106,"column":12},"end":{"line":106,"column":27}},"65":{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},"66":{"start":{"line":108,"column":16},"end":{"line":108,"column":31}},"67":{"start":{"line":110,"column":12},"end":{"line":123,"column":13}},"68":{"start":{"line":111,"column":16},"end":{"line":111,"column":37}},"69":{"start":{"line":112,"column":16},"end":{"line":114,"column":19}},"70":{"start":{"line":113,"column":20},"end":{"line":113,"column":44}},"71":{"start":{"line":115,"column":16},"end":{"line":115,"column":40}},"72":{"start":{"line":116,"column":16},"end":{"line":116,"column":32}},"73":{"start":{"line":117,"column":16},"end":{"line":117,"column":48}},"74":{"start":{"line":119,"column":16},"end":{"line":119,"column":43}},"75":{"start":{"line":121,"column":16},"end":{"line":121,"column":36}},"76":{"start":{"line":122,"column":16},"end":{"line":122,"column":34}},"77":{"start":{"line":126,"column":8},"end":{"line":126,"column":23}},"78":{"start":{"line":127,"column":8},"end":{"line":127,"column":69}},"79":{"start":{"line":128,"column":8},"end":{"line":132,"column":9}},"80":{"start":{"line":129,"column":12},"end":{"line":129,"column":42}},"81":{"start":{"line":131,"column":12},"end":{"line":131,"column":33}},"82":{"start":{"line":135,"column":4},"end":{"line":154,"column":5}},"83":{"start":{"line":139,"column":8},"end":{"line":139,"column":24}},"84":{"start":{"line":140,"column":8},"end":{"line":140,"column":24}},"85":{"start":{"line":141,"column":8},"end":{"line":149,"column":9}},"86":{"start":{"line":142,"column":12},"end":{"line":142,"column":45}},"87":{"start":{"line":143,"column":12},"end":{"line":143,"column":22}},"88":{"start":{"line":144,"column":12},"end":{"line":148,"column":15}},"89":{"start":{"line":145,"column":16},"end":{"line":147,"column":17}},"90":{"start":{"line":146,"column":20},"end":{"line":146,"column":49}},"91":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"92":{"start":{"line":152,"column":12},"end":{"line":152,"column":93}},"93":{"start":{"line":156,"column":4},"end":{"line":164,"column":5}},"94":{"start":{"line":157,"column":8},"end":{"line":157,"column":24}},"95":{"start":{"line":158,"column":8},"end":{"line":162,"column":11}},"96":{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},"97":{"start":{"line":160,"column":16},"end":{"line":160,"column":33}},"98":{"start":{"line":163,"column":8},"end":{"line":163,"column":22}},"99":{"start":{"line":167,"column":0},"end":{"line":167,"column":46}},"100":{"start":{"line":169,"column":0},"end":{"line":169,"column":53}},"101":{"start":{"line":171,"column":0},"end":{"line":171,"column":48}},"102":{"start":{"line":173,"column":0},"end":{"line":173,"column":55}},"103":{"start":{"line":175,"column":0},"end":{"line":175,"column":50}},"104":{"start":{"line":177,"column":0},"end":{"line":177,"column":57}},"105":{"start":{"line":179,"column":0},"end":{"line":179,"column":41}},"106":{"start":{"line":181,"column":0},"end":{"line":181,"column":49}},"107":{"start":{"line":183,"column":0},"end":{"line":183,"column":35}},"108":{"start":{"line":185,"column":0},"end":{"line":185,"column":43}},"109":{"start":{"line":187,"column":0},"end":{"line":187,"column":35}},"110":{"start":{"line":189,"column":0},"end":{"line":189,"column":43}},"111":{"start":{"line":191,"column":0},"end":{"line":191,"column":39}},"112":{"start":{"line":193,"column":0},"end":{"line":193,"column":43}},"113":{"start":{"line":195,"column":0},"end":{"line":195,"column":39}},"114":{"start":{"line":197,"column":0},"end":{"line":197,"column":43}},"115":{"start":{"line":199,"column":0},"end":{"line":199,"column":47}},"116":{"start":{"line":201,"column":0},"end":{"line":201,"column":51}},"117":{"start":{"line":203,"column":0},"end":{"line":203,"column":49}},"118":{"start":{"line":205,"column":0},"end":{"line":205,"column":53}},"119":{"start":{"line":207,"column":0},"end":{"line":207,"column":95}},"120":{"start":{"line":207,"column":39},"end":{"line":207,"column":93}},"121":{"start":{"line":209,"column":0},"end":{"line":209,"column":36}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":35},"end":{"line":13,"column":43}},{"start":{"line":13,"column":47},"end":{"line":13,"column":61}}]},"3":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"4":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":8}},{"start":{"line":37,"column":8},"end":{"line":37,"column":8}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"7":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":12}},{"start":{"line":54,"column":12},"end":{"line":54,"column":12}}]},"8":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":16},"end":{"line":59,"column":16}},{"start":{"line":59,"column":16},"end":{"line":59,"column":16}}]},"9":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]},"10":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":12},"end":{"line":76,"column":35}},{"start":{"line":76,"column":39},"end":{"line":76,"column":57}}]},"11":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":15},"end":{"line":79,"column":32}},{"start":{"line":79,"column":36},"end":{"line":79,"column":62}}]},"12":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":8}},{"start":{"line":87,"column":8},"end":{"line":87,"column":8}}]},"13":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":28},"end":{"line":95,"column":47}},{"start":{"line":95,"column":51},"end":{"line":95,"column":53}}]},"14":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":103,"column":8}},{"start":{"line":103,"column":8},"end":{"line":103,"column":8}}]},"15":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":12}},{"start":{"line":107,"column":12},"end":{"line":107,"column":12}}]},"16":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":12}},{"start":{"line":110,"column":12},"end":{"line":110,"column":12}}]},"17":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":128,"column":8}},{"start":{"line":128,"column":8},"end":{"line":128,"column":8}}]},"18":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":16},"end":{"line":145,"column":16}},{"start":{"line":145,"column":16},"end":{"line":145,"column":16}}]},"19":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":151,"column":8}},{"start":{"line":151,"column":8},"end":{"line":151,"column":8}}]},"20":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":12},"end":{"line":159,"column":12}},{"start":{"line":159,"column":12},"end":{"line":159,"column":12}}]},"21":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":16},"end":{"line":159,"column":44}},{"start":{"line":159,"column":48},"end":{"line":159,"column":98}}]},"22":{"line":207,"type":"cond-expr","locations":[{"start":{"line":207,"column":70},"end":{"line":207,"column":73}},{"start":{"line":207,"column":76},"end":{"line":207,"column":92}}]},"23":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":46},"end":{"line":207,"column":49}},{"start":{"line":207,"column":53},"end":{"line":207,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (tasks, concurrency, callback) {","    if (typeof concurrency === 'function') {","        // concurrency is optional, shift the args.","        callback = concurrency;","        concurrency = null;","    }","    callback = (0, _once2.default)(callback || _noop2.default);","    var keys = (0, _keys2.default)(tasks);","    var numTasks = keys.length;","    if (!numTasks) {","        return callback(null);","    }","    if (!concurrency) {","        concurrency = numTasks;","    }","","    var results = {};","    var runningTasks = 0;","    var hasError = false;","","    var listeners = Object.create(null);","","    var readyTasks = [];","","    // for cycle detection:","    var readyToCheck = []; // tasks that have been identified as reachable","    // without the possibility of returning to an ancestor task","    var uncheckedDependencies = {};","","    (0, _baseForOwn2.default)(tasks, function (task, key) {","        if (!(0, _isArray2.default)(task)) {","            // no dependencies","            enqueueTask(key, [task]);","            readyToCheck.push(key);","            return;","        }","","        var dependencies = task.slice(0, task.length - 1);","        var remainingDependencies = dependencies.length;","        if (remainingDependencies === 0) {","            enqueueTask(key, task);","            readyToCheck.push(key);","            return;","        }","        uncheckedDependencies[key] = remainingDependencies;","","        (0, _arrayEach2.default)(dependencies, function (dependencyName) {","            if (!tasks[dependencyName]) {","                throw new Error('async.auto task `' + key + '` has a non-existent dependency `' + dependencyName + '` in ' + dependencies.join(', '));","            }","            addListener(dependencyName, function () {","                remainingDependencies--;","                if (remainingDependencies === 0) {","                    enqueueTask(key, task);","                }","            });","        });","    });","","    checkForDeadlocks();","    processQueue();","","    function enqueueTask(key, task) {","        readyTasks.push(function () {","            runTask(key, task);","        });","    }","","    function processQueue() {","        if (readyTasks.length === 0 && runningTasks === 0) {","            return callback(null, results);","        }","        while (readyTasks.length && runningTasks < concurrency) {","            var run = readyTasks.shift();","            run();","        }","    }","","    function addListener(taskName, fn) {","        var taskListeners = listeners[taskName];","        if (!taskListeners) {","            taskListeners = listeners[taskName] = [];","        }","","        taskListeners.push(fn);","    }","","    function taskComplete(taskName) {","        var taskListeners = listeners[taskName] || [];","        (0, _arrayEach2.default)(taskListeners, function (fn) {","            fn();","        });","        processQueue();","    }","","    function runTask(key, task) {","        if (hasError) return;","","        var taskCallback = (0, _onlyOnce2.default)((0, _rest2.default)(function (err, args) {","            runningTasks--;","            if (args.length <= 1) {","                args = args[0];","            }","            if (err) {","                var safeResults = {};","                (0, _baseForOwn2.default)(results, function (val, rkey) {","                    safeResults[rkey] = val;","                });","                safeResults[key] = args;","                hasError = true;","                listeners = Object.create(null);","","                callback(err, safeResults);","            } else {","                results[key] = args;","                taskComplete(key);","            }","        }));","","        runningTasks++;","        var taskFn = (0, _wrapAsync2.default)(task[task.length - 1]);","        if (task.length > 1) {","            taskFn(results, taskCallback);","        } else {","            taskFn(taskCallback);","        }","    }","","    function checkForDeadlocks() {","        // Kahn's algorithm","        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm","        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html","        var currentTask;","        var counter = 0;","        while (readyToCheck.length) {","            currentTask = readyToCheck.pop();","            counter++;","            (0, _arrayEach2.default)(getDependents(currentTask), function (dependent) {","                if (--uncheckedDependencies[dependent] === 0) {","                    readyToCheck.push(dependent);","                }","            });","        }","","        if (counter !== numTasks) {","            throw new Error('async.auto cannot execute tasks due to a recursive dependency');","        }","    }","","    function getDependents(taskName) {","        var result = [];","        (0, _baseForOwn2.default)(tasks, function (task, key) {","            if ((0, _isArray2.default)(task) && (0, _baseIndexOf2.default)(task, taskName, 0) >= 0) {","                result.push(key);","            }","        });","        return result;","    }","};","","var _arrayEach = require('lodash/_arrayEach');","","var _arrayEach2 = _interopRequireDefault(_arrayEach);","","var _baseForOwn = require('lodash/_baseForOwn');","","var _baseForOwn2 = _interopRequireDefault(_baseForOwn);","","var _baseIndexOf = require('lodash/_baseIndexOf');","","var _baseIndexOf2 = _interopRequireDefault(_baseIndexOf);","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _keys = require('lodash/keys');","","var _keys2 = _interopRequireDefault(_keys);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _rest = require('./internal/rest');","","var _rest2 = _interopRequireDefault(_rest);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","module.exports = exports['default'];","","/**"," * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on"," * their requirements. Each function can optionally depend on other functions"," * being completed first, and each function is run as soon as its requirements"," * are satisfied."," *"," * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence"," * will stop. Further tasks will not execute (so any other functions depending"," * on it will not run), and the main `callback` is immediately called with the"," * error."," *"," * {@link AsyncFunction}s also receive an object containing the results of functions which"," * have completed so far as the first argument, if they have dependencies. If a"," * task function has no dependencies, it will only be passed a callback."," *"," * @name auto"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Object} tasks - An object. Each of its properties is either a"," * function or an array of requirements, with the {@link AsyncFunction} itself the last item"," * in the array. The object's key of a property serves as the name of the task"," * defined by that property, i.e. can be used when specifying requirements for"," * other tasks. The function receives one or two arguments:"," * * a `results` object, containing the results of the previously executed"," *   functions, only passed if the task has any dependencies,"," * * a `callback(err, result)` function, which must be called when finished,"," *   passing an `error` (which can be `null`) and the result of the function's"," *   execution."," * @param {number} [concurrency=Infinity] - An optional `integer` for"," * determining the maximum number of tasks that can be run in parallel. By"," * default, as many as possible."," * @param {Function} [callback] - An optional callback which is called when all"," * the tasks have been completed. It receives the `err` argument if any `tasks`"," * pass an error to their callback. Results are always returned; however, if an"," * error occurs, no further `tasks` will be performed, and the results object"," * will only contain partial results. Invoked with (err, results)."," * @returns undefined"," * @example"," *"," * async.auto({"," *     // this function will just be passed a callback"," *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),"," *     showData: ['readData', function(results, cb) {"," *         // results.readData is the file's contents"," *         // ..."," *     }]"," * }, callback);"," *"," * async.auto({"," *     get_data: function(callback) {"," *         console.log('in get_data');"," *         // async code to get some data"," *         callback(null, 'data', 'converted to array');"," *     },"," *     make_folder: function(callback) {"," *         console.log('in make_folder');"," *         // async code to create a directory to store a file in"," *         // this is run at the same time as getting the data"," *         callback(null, 'folder');"," *     },"," *     write_file: ['get_data', 'make_folder', function(results, callback) {"," *         console.log('in write_file', JSON.stringify(results));"," *         // once there is some data and the directory exists,"," *         // write the data to a file in the directory"," *         callback(null, 'filename');"," *     }],"," *     email_link: ['write_file', function(results, callback) {"," *         console.log('in email_link', JSON.stringify(results));"," *         // once the file is written let's email a link to it..."," *         // results.write_file contains the filename returned by write_file."," *         callback(null, {'file':results.write_file, 'email':'user@example.com'});"," *     }]"," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('results = ', results);"," * });"," */"],"l":{"3":1,"7":1,"8":0,"10":0,"11":0,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"20":0,"23":0,"24":0,"25":0,"27":0,"29":0,"32":0,"34":0,"36":0,"37":0,"39":0,"40":0,"41":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"53":0,"54":0,"55":0,"57":0,"58":0,"59":0,"60":0,"66":0,"67":0,"69":1,"70":0,"71":0,"75":1,"76":0,"77":0,"79":0,"80":0,"81":0,"85":1,"86":0,"87":0,"88":0,"91":0,"94":1,"95":0,"96":0,"97":0,"99":0,"102":1,"103":0,"105":0,"106":0,"107":0,"108":0,"110":0,"111":0,"112":0,"113":0,"115":0,"116":0,"117":0,"119":0,"121":0,"122":0,"126":0,"127":0,"128":0,"129":0,"131":0,"135":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"151":0,"152":0,"156":1,"157":0,"158":0,"159":0,"160":0,"163":0,"167":1,"169":1,"171":1,"173":1,"175":1,"177":1,"179":1,"181":1,"183":1,"185":1,"187":1,"189":1,"191":1,"193":1,"195":1,"197":1,"199":1,"201":1,"203":1,"205":1,"207":10,"209":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/autoInject.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/autoInject.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":6,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1},"b":{"1":[1,5],"2":[6,6],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0]},"f":{"1":6,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":37}}},"2":{"name":"parseParams","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":27}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":20},"end":{"line":43,"column":35}}},"4":{"name":"autoInject","line":131,"loc":{"start":{"line":131,"column":0},"end":{"line":131,"column":37}}},"5":{"name":"(anonymous_5)","line":134,"loc":{"start":{"line":134,"column":37},"end":{"line":134,"column":60}}},"6":{"name":"newTask","line":159,"loc":{"start":{"line":159,"column":8},"end":{"line":159,"column":42}}},"7":{"name":"(anonymous_7)","line":160,"loc":{"start":{"line":160,"column":58},"end":{"line":160,"column":74}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":48}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":41}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":49}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":35}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":43}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":49}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":53}},"15":{"start":{"line":32,"column":0},"end":{"line":32,"column":95}},"16":{"start":{"line":32,"column":39},"end":{"line":32,"column":93}},"17":{"start":{"line":34,"column":0},"end":{"line":34,"column":67}},"18":{"start":{"line":35,"column":0},"end":{"line":35,"column":23}},"19":{"start":{"line":36,"column":0},"end":{"line":36,"column":28}},"20":{"start":{"line":37,"column":0},"end":{"line":37,"column":56}},"21":{"start":{"line":39,"column":0},"end":{"line":47,"column":1}},"22":{"start":{"line":40,"column":4},"end":{"line":40,"column":55}},"23":{"start":{"line":41,"column":4},"end":{"line":41,"column":51}},"24":{"start":{"line":42,"column":4},"end":{"line":42,"column":48}},"25":{"start":{"line":43,"column":4},"end":{"line":45,"column":7}},"26":{"start":{"line":44,"column":8},"end":{"line":44,"column":60}},"27":{"start":{"line":46,"column":4},"end":{"line":46,"column":16}},"28":{"start":{"line":131,"column":0},"end":{"line":169,"column":1}},"29":{"start":{"line":132,"column":4},"end":{"line":132,"column":22}},"30":{"start":{"line":134,"column":4},"end":{"line":166,"column":7}},"31":{"start":{"line":135,"column":8},"end":{"line":135,"column":19}},"32":{"start":{"line":136,"column":8},"end":{"line":136,"column":56}},"33":{"start":{"line":137,"column":8},"end":{"line":137,"column":94}},"34":{"start":{"line":139,"column":8},"end":{"line":157,"column":9}},"35":{"start":{"line":140,"column":12},"end":{"line":140,"column":41}},"36":{"start":{"line":141,"column":12},"end":{"line":141,"column":47}},"37":{"start":{"line":143,"column":12},"end":{"line":143,"column":80}},"38":{"start":{"line":144,"column":15},"end":{"line":157,"column":9}},"39":{"start":{"line":146,"column":12},"end":{"line":146,"column":35}},"40":{"start":{"line":148,"column":12},"end":{"line":148,"column":41}},"41":{"start":{"line":149,"column":12},"end":{"line":151,"column":13}},"42":{"start":{"line":150,"column":16},"end":{"line":150,"column":90}},"43":{"start":{"line":154,"column":12},"end":{"line":154,"column":41}},"44":{"start":{"line":154,"column":28},"end":{"line":154,"column":41}},"45":{"start":{"line":156,"column":12},"end":{"line":156,"column":51}},"46":{"start":{"line":159,"column":8},"end":{"line":165,"column":9}},"47":{"start":{"line":160,"column":12},"end":{"line":162,"column":15}},"48":{"start":{"line":161,"column":16},"end":{"line":161,"column":37}},"49":{"start":{"line":163,"column":12},"end":{"line":163,"column":33}},"50":{"start":{"line":164,"column":12},"end":{"line":164,"column":66}},"51":{"start":{"line":168,"column":4},"end":{"line":168,"column":44}},"52":{"start":{"line":170,"column":0},"end":{"line":170,"column":36}}},"branchMap":{"1":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":70},"end":{"line":32,"column":73}},{"start":{"line":32,"column":76},"end":{"line":32,"column":92}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":46},"end":{"line":32,"column":49}},{"start":{"line":32,"column":53},"end":{"line":32,"column":67}}]},"3":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":18},"end":{"line":42,"column":42}},{"start":{"line":42,"column":45},"end":{"line":42,"column":47}}]},"4":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":24},"end":{"line":137,"column":34}},{"start":{"line":137,"column":38},"end":{"line":137,"column":57}},{"start":{"line":137,"column":61},"end":{"line":137,"column":70}},{"start":{"line":137,"column":74},"end":{"line":137,"column":93}}]},"5":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":139,"column":8}},{"start":{"line":139,"column":8},"end":{"line":139,"column":8}}]},"6":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":62},"end":{"line":143,"column":69}},{"start":{"line":143,"column":72},"end":{"line":143,"column":78}}]},"7":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":15},"end":{"line":144,"column":15}},{"start":{"line":144,"column":15},"end":{"line":144,"column":15}}]},"8":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":149,"column":12}},{"start":{"line":149,"column":12},"end":{"line":149,"column":12}}]},"9":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":16},"end":{"line":149,"column":35}},{"start":{"line":149,"column":39},"end":{"line":149,"column":49}},{"start":{"line":149,"column":53},"end":{"line":149,"column":72}}]},"10":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":12},"end":{"line":154,"column":12}},{"start":{"line":154,"column":12},"end":{"line":154,"column":12}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = autoInject;","","var _auto = require('./auto');","","var _auto2 = _interopRequireDefault(_auto);","","var _baseForOwn = require('lodash/_baseForOwn');","","var _baseForOwn2 = _interopRequireDefault(_baseForOwn);","","var _arrayMap = require('lodash/_arrayMap');","","var _arrayMap2 = _interopRequireDefault(_arrayMap);","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _trim = require('lodash/trim');","","var _trim2 = _interopRequireDefault(_trim);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var FN_ARGS = /^(?:async\\s+)?(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;","var FN_ARG_SPLIT = /,/;","var FN_ARG = /(=.+)?(\\s*)$/;","var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;","","function parseParams(func) {","    func = func.toString().replace(STRIP_COMMENTS, '');","    func = func.match(FN_ARGS)[2].replace(' ', '');","    func = func ? func.split(FN_ARG_SPLIT) : [];","    func = func.map(function (arg) {","        return (0, _trim2.default)(arg.replace(FN_ARG, ''));","    });","    return func;","}","","/**"," * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent"," * tasks are specified as parameters to the function, after the usual callback"," * parameter, with the parameter names matching the names of the tasks it"," * depends on. This can provide even more readable task graphs which can be"," * easier to maintain."," *"," * If a final callback is specified, the task results are similarly injected,"," * specified as named parameters after the initial error parameter."," *"," * The autoInject function is purely syntactic sugar and its semantics are"," * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}."," *"," * @name autoInject"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.auto]{@link module:ControlFlow.auto}"," * @category Control Flow"," * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of"," * the form 'func([dependencies...], callback). The object's key of a property"," * serves as the name of the task defined by that property, i.e. can be used"," * when specifying requirements for other tasks."," * * The `callback` parameter is a `callback(err, result)` which must be called"," *   when finished, passing an `error` (which can be `null`) and the result of"," *   the function's execution. The remaining parameters name other tasks on"," *   which the task is dependent, and the results from those tasks are the"," *   arguments of those parameters."," * @param {Function} [callback] - An optional callback which is called when all"," * the tasks have been completed. It receives the `err` argument if any `tasks`"," * pass an error to their callback, and a `results` object with any completed"," * task results, similar to `auto`."," * @example"," *"," * //  The example from `auto` can be rewritten as follows:"," * async.autoInject({"," *     get_data: function(callback) {"," *         // async code to get some data"," *         callback(null, 'data', 'converted to array');"," *     },"," *     make_folder: function(callback) {"," *         // async code to create a directory to store a file in"," *         // this is run at the same time as getting the data"," *         callback(null, 'folder');"," *     },"," *     write_file: function(get_data, make_folder, callback) {"," *         // once there is some data and the directory exists,"," *         // write the data to a file in the directory"," *         callback(null, 'filename');"," *     },"," *     email_link: function(write_file, callback) {"," *         // once the file is written let's email a link to it..."," *         // write_file contains the filename returned by write_file."," *         callback(null, {'file':write_file, 'email':'user@example.com'});"," *     }"," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('email_link = ', results.email_link);"," * });"," *"," * // If you are using a JS minifier that mangles parameter names, `autoInject`"," * // will not work with plain functions, since the parameter names will be"," * // collapsed to a single letter identifier.  To work around this, you can"," * // explicitly specify the names of the parameters your task function needs"," * // in an array, similar to Angular.js dependency injection."," *"," * // This still has an advantage over plain `auto`, since the results a task"," * // depends on are still spread into arguments."," * async.autoInject({"," *     //..."," *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {"," *         callback(null, 'filename');"," *     }],"," *     email_link: ['write_file', function(write_file, callback) {"," *         callback(null, {'file':write_file, 'email':'user@example.com'});"," *     }]"," *     //..."," * }, function(err, results) {"," *     console.log('err = ', err);"," *     console.log('email_link = ', results.email_link);"," * });"," */","function autoInject(tasks, callback) {","    var newTasks = {};","","    (0, _baseForOwn2.default)(tasks, function (taskFn, key) {","        var params;","        var fnIsAsync = (0, _wrapAsync.isAsync)(taskFn);","        var hasNoDeps = !fnIsAsync && taskFn.length === 1 || fnIsAsync && taskFn.length === 0;","","        if ((0, _isArray2.default)(taskFn)) {","            params = taskFn.slice(0, -1);","            taskFn = taskFn[taskFn.length - 1];","","            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);","        } else if (hasNoDeps) {","            // no dependencies, use the function as-is","            newTasks[key] = taskFn;","        } else {","            params = parseParams(taskFn);","            if (taskFn.length === 0 && !fnIsAsync && params.length === 0) {","                throw new Error(\"autoInject task functions require explicit parameters.\");","            }","","            // remove callback param","            if (!fnIsAsync) params.pop();","","            newTasks[key] = params.concat(newTask);","        }","","        function newTask(results, taskCb) {","            var newArgs = (0, _arrayMap2.default)(params, function (name) {","                return results[name];","            });","            newArgs.push(taskCb);","            (0, _wrapAsync2.default)(taskFn).apply(null, newArgs);","        }","    });","","    (0, _auto2.default)(newTasks, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":1,"30":1,"32":6,"34":1,"35":1,"36":1,"37":1,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"46":0,"131":1,"132":0,"134":0,"135":0,"136":0,"137":0,"139":0,"140":0,"141":0,"143":0,"144":0,"146":0,"148":0,"149":0,"150":0,"154":0,"156":0,"159":1,"160":0,"161":0,"163":0,"164":0,"168":0,"170":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/cargo.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/cargo.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"cargo","line":91,"loc":{"start":{"line":91,"column":0},"end":{"line":91,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":91,"column":0},"end":{"line":93,"column":1}},"8":{"start":{"line":92,"column":2},"end":{"line":92,"column":50}},"9":{"start":{"line":94,"column":0},"end":{"line":94,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = cargo;","","var _queue = require('./internal/queue');","","var _queue2 = _interopRequireDefault(_queue);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * A cargo of tasks for the worker function to complete. Cargo inherits all of"," * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}."," * @typedef {Object} CargoObject"," * @memberOf module:ControlFlow"," * @property {Function} length - A function returning the number of items"," * waiting to be processed. Invoke like `cargo.length()`."," * @property {number} payload - An `integer` for determining how many tasks"," * should be process per round. This property can be changed after a `cargo` is"," * created to alter the payload on-the-fly."," * @property {Function} push - Adds `task` to the `queue`. The callback is"," * called once the `worker` has finished processing the task. Instead of a"," * single task, an array of `tasks` can be submitted. The respective callback is"," * used for every task in the list. Invoke like `cargo.push(task, [callback])`."," * @property {Function} saturated - A callback that is called when the"," * `queue.length()` hits the concurrency and further tasks will be queued."," * @property {Function} empty - A callback that is called when the last item"," * from the `queue` is given to a `worker`."," * @property {Function} drain - A callback that is called when the last item"," * from the `queue` has returned from the `worker`."," * @property {Function} idle - a function returning false if there are items"," * waiting or being processed, or true if not. Invoke like `cargo.idle()`."," * @property {Function} pause - a function that pauses the processing of tasks"," * until `resume()` is called. Invoke like `cargo.pause()`."," * @property {Function} resume - a function that resumes the processing of"," * queued tasks when the queue is paused. Invoke like `cargo.resume()`."," * @property {Function} kill - a function that removes the `drain` callback and"," * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`."," */","","/**"," * Creates a `cargo` object with the specified payload. Tasks added to the"," * cargo will be processed altogether (up to the `payload` limit). If the"," * `worker` is in progress, the task is queued until it becomes available. Once"," * the `worker` has completed some tasks, each callback of those tasks is"," * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)"," * for how `cargo` and `queue` work."," *"," * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers"," * at a time, cargo passes an array of tasks to a single worker, repeating"," * when the worker is finished."," *"," * @name cargo"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.queue]{@link module:ControlFlow.queue}"," * @category Control Flow"," * @param {AsyncFunction} worker - An asynchronous function for processing an array"," * of queued tasks. Invoked with `(tasks, callback)`."," * @param {number} [payload=Infinity] - An optional `integer` for determining"," * how many tasks should be processed per round; if omitted, the default is"," * unlimited."," * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can"," * attached as certain properties to listen for specific events during the"," * lifecycle of the cargo and inner queue."," * @example"," *"," * // create a cargo object with payload 2"," * var cargo = async.cargo(function(tasks, callback) {"," *     for (var i=0; i<tasks.length; i++) {"," *         console.log('hello ' + tasks[i].name);"," *     }"," *     callback();"," * }, 2);"," *"," * // add some items"," * cargo.push({name: 'foo'}, function(err) {"," *     console.log('finished processing foo');"," * });"," * cargo.push({name: 'bar'}, function(err) {"," *     console.log('finished processing bar');"," * });"," * cargo.push({name: 'baz'}, function(err) {"," *     console.log('finished processing baz');"," * });"," */","function cargo(worker, payload) {","  return (0, _queue2.default)(worker, 1, payload);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"91":1,"92":0,"94":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/queue.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/queue.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":8,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1},"b":{"1":[2,6],"2":[8,8],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":8,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":37}}},"2":{"name":"queue","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":45}}},"3":{"name":"_insert","line":53,"loc":{"start":{"line":53,"column":4},"end":{"line":53,"column":52}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":47},"end":{"line":63,"column":59}}},"5":{"name":"_next","line":83,"loc":{"start":{"line":83,"column":4},"end":{"line":83,"column":26}}},"6":{"name":"(anonymous_6)","line":84,"loc":{"start":{"line":84,"column":35},"end":{"line":84,"column":51}}},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":14},"end":{"line":125,"column":40}}},"8":{"name":"(anonymous_8)","line":128,"loc":{"start":{"line":128,"column":14},"end":{"line":128,"column":26}}},"9":{"name":"(anonymous_9)","line":132,"loc":{"start":{"line":132,"column":17},"end":{"line":132,"column":43}}},"10":{"name":"(anonymous_10)","line":135,"loc":{"start":{"line":135,"column":17},"end":{"line":135,"column":29}}},"11":{"name":"(anonymous_11)","line":168,"loc":{"start":{"line":168,"column":16},"end":{"line":168,"column":28}}},"12":{"name":"(anonymous_12)","line":171,"loc":{"start":{"line":171,"column":17},"end":{"line":171,"column":29}}},"13":{"name":"(anonymous_13)","line":174,"loc":{"start":{"line":174,"column":21},"end":{"line":174,"column":33}}},"14":{"name":"(anonymous_14)","line":177,"loc":{"start":{"line":177,"column":14},"end":{"line":177,"column":26}}},"15":{"name":"(anonymous_15)","line":180,"loc":{"start":{"line":180,"column":15},"end":{"line":180,"column":27}}},"16":{"name":"(anonymous_16)","line":183,"loc":{"start":{"line":183,"column":16},"end":{"line":183,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":50}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":49}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":35}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":30}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":43}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":38}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":51}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":46}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":59}},"15":{"start":{"line":32,"column":0},"end":{"line":32,"column":54}},"16":{"start":{"line":34,"column":0},"end":{"line":34,"column":67}},"17":{"start":{"line":36,"column":0},"end":{"line":36,"column":40}},"18":{"start":{"line":38,"column":0},"end":{"line":38,"column":53}},"19":{"start":{"line":40,"column":0},"end":{"line":40,"column":95}},"20":{"start":{"line":40,"column":39},"end":{"line":40,"column":93}},"21":{"start":{"line":42,"column":0},"end":{"line":192,"column":1}},"22":{"start":{"line":43,"column":4},"end":{"line":47,"column":5}},"23":{"start":{"line":44,"column":8},"end":{"line":44,"column":24}},"24":{"start":{"line":45,"column":11},"end":{"line":47,"column":5}},"25":{"start":{"line":46,"column":8},"end":{"line":46,"column":56}},"26":{"start":{"line":49,"column":4},"end":{"line":49,"column":51}},"27":{"start":{"line":50,"column":4},"end":{"line":50,"column":23}},"28":{"start":{"line":51,"column":4},"end":{"line":51,"column":25}},"29":{"start":{"line":53,"column":4},"end":{"line":81,"column":5}},"30":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"31":{"start":{"line":55,"column":12},"end":{"line":55,"column":64}},"32":{"start":{"line":57,"column":8},"end":{"line":57,"column":25}},"33":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"34":{"start":{"line":59,"column":12},"end":{"line":59,"column":26}},"35":{"start":{"line":61,"column":8},"end":{"line":66,"column":9}},"36":{"start":{"line":63,"column":12},"end":{"line":65,"column":15}},"37":{"start":{"line":64,"column":16},"end":{"line":64,"column":26}},"38":{"start":{"line":68,"column":8},"end":{"line":79,"column":9}},"39":{"start":{"line":69,"column":12},"end":{"line":72,"column":14}},"40":{"start":{"line":74,"column":12},"end":{"line":78,"column":13}},"41":{"start":{"line":75,"column":16},"end":{"line":75,"column":39}},"42":{"start":{"line":77,"column":16},"end":{"line":77,"column":36}},"43":{"start":{"line":80,"column":8},"end":{"line":80,"column":47}},"44":{"start":{"line":83,"column":4},"end":{"line":110,"column":5}},"45":{"start":{"line":84,"column":8},"end":{"line":109,"column":11}},"46":{"start":{"line":85,"column":12},"end":{"line":85,"column":28}},"47":{"start":{"line":87,"column":12},"end":{"line":99,"column":13}},"48":{"start":{"line":88,"column":16},"end":{"line":88,"column":36}},"49":{"start":{"line":89,"column":16},"end":{"line":89,"column":77}},"50":{"start":{"line":90,"column":16},"end":{"line":92,"column":17}},"51":{"start":{"line":91,"column":20},"end":{"line":91,"column":46}},"52":{"start":{"line":94,"column":16},"end":{"line":94,"column":48}},"53":{"start":{"line":96,"column":16},"end":{"line":98,"column":17}},"54":{"start":{"line":97,"column":20},"end":{"line":97,"column":48}},"55":{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},"56":{"start":{"line":102,"column":16},"end":{"line":102,"column":32}},"57":{"start":{"line":105,"column":12},"end":{"line":107,"column":13}},"58":{"start":{"line":106,"column":16},"end":{"line":106,"column":26}},"59":{"start":{"line":108,"column":12},"end":{"line":108,"column":24}},"60":{"start":{"line":112,"column":4},"end":{"line":112,"column":29}},"61":{"start":{"line":113,"column":4},"end":{"line":190,"column":6}},"62":{"start":{"line":126,"column":12},"end":{"line":126,"column":43}},"63":{"start":{"line":129,"column":12},"end":{"line":129,"column":37}},"64":{"start":{"line":130,"column":12},"end":{"line":130,"column":29}},"65":{"start":{"line":133,"column":12},"end":{"line":133,"column":42}},"66":{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},"67":{"start":{"line":139,"column":16},"end":{"line":139,"column":23}},"68":{"start":{"line":141,"column":12},"end":{"line":141,"column":32}},"69":{"start":{"line":142,"column":12},"end":{"line":165,"column":13}},"70":{"start":{"line":143,"column":16},"end":{"line":144,"column":30}},"71":{"start":{"line":145,"column":16},"end":{"line":145,"column":40}},"72":{"start":{"line":146,"column":16},"end":{"line":146,"column":58}},"73":{"start":{"line":146,"column":31},"end":{"line":146,"column":58}},"74":{"start":{"line":147,"column":16},"end":{"line":151,"column":17}},"75":{"start":{"line":148,"column":20},"end":{"line":148,"column":48}},"76":{"start":{"line":149,"column":20},"end":{"line":149,"column":37}},"77":{"start":{"line":150,"column":20},"end":{"line":150,"column":41}},"78":{"start":{"line":153,"column":16},"end":{"line":155,"column":17}},"79":{"start":{"line":154,"column":20},"end":{"line":154,"column":30}},"80":{"start":{"line":156,"column":16},"end":{"line":156,"column":32}},"81":{"start":{"line":157,"column":16},"end":{"line":157,"column":43}},"82":{"start":{"line":159,"column":16},"end":{"line":161,"column":17}},"83":{"start":{"line":160,"column":20},"end":{"line":160,"column":34}},"84":{"start":{"line":163,"column":16},"end":{"line":163,"column":63}},"85":{"start":{"line":164,"column":16},"end":{"line":164,"column":34}},"86":{"start":{"line":166,"column":12},"end":{"line":166,"column":33}},"87":{"start":{"line":169,"column":12},"end":{"line":169,"column":35}},"88":{"start":{"line":172,"column":12},"end":{"line":172,"column":30}},"89":{"start":{"line":175,"column":12},"end":{"line":175,"column":31}},"90":{"start":{"line":178,"column":12},"end":{"line":178,"column":54}},"91":{"start":{"line":181,"column":12},"end":{"line":181,"column":28}},"92":{"start":{"line":184,"column":12},"end":{"line":186,"column":13}},"93":{"start":{"line":185,"column":16},"end":{"line":185,"column":23}},"94":{"start":{"line":187,"column":12},"end":{"line":187,"column":29}},"95":{"start":{"line":188,"column":12},"end":{"line":188,"column":51}},"96":{"start":{"line":191,"column":4},"end":{"line":191,"column":13}},"97":{"start":{"line":193,"column":0},"end":{"line":193,"column":36}}},"branchMap":{"1":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":70},"end":{"line":40,"column":73}},{"start":{"line":40,"column":76},"end":{"line":40,"column":92}}]},"2":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":46},"end":{"line":40,"column":49}},{"start":{"line":40,"column":53},"end":{"line":40,"column":67}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":11},"end":{"line":45,"column":11}},{"start":{"line":45,"column":11},"end":{"line":45,"column":11}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]},"6":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":28}},{"start":{"line":54,"column":32},"end":{"line":54,"column":62}}]},"7":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":8}},{"start":{"line":58,"column":8},"end":{"line":58,"column":8}}]},"8":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":8}},{"start":{"line":61,"column":8},"end":{"line":61,"column":8}}]},"9":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":29}},{"start":{"line":61,"column":33},"end":{"line":61,"column":41}}]},"10":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":26},"end":{"line":71,"column":34}},{"start":{"line":71,"column":38},"end":{"line":71,"column":52}}]},"11":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":12}},{"start":{"line":74,"column":12},"end":{"line":74,"column":12}}]},"12":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":16},"end":{"line":90,"column":16}},{"start":{"line":90,"column":16},"end":{"line":90,"column":16}}]},"13":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":16},"end":{"line":96,"column":16}},{"start":{"line":96,"column":16},"end":{"line":96,"column":16}}]},"14":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":12},"end":{"line":101,"column":12}},{"start":{"line":101,"column":12},"end":{"line":101,"column":12}}]},"15":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":12}},{"start":{"line":105,"column":12},"end":{"line":105,"column":12}}]},"16":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":12},"end":{"line":138,"column":12}},{"start":{"line":138,"column":12},"end":{"line":138,"column":12}}]},"17":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":19},"end":{"line":142,"column":28}},{"start":{"line":142,"column":32},"end":{"line":142,"column":58}},{"start":{"line":142,"column":62},"end":{"line":142,"column":77}}]},"18":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":16},"end":{"line":146,"column":16}},{"start":{"line":146,"column":16},"end":{"line":146,"column":16}}]},"19":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":16},"end":{"line":153,"column":16}},{"start":{"line":153,"column":16},"end":{"line":153,"column":16}}]},"20":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":16},"end":{"line":159,"column":16}},{"start":{"line":159,"column":16},"end":{"line":159,"column":16}}]},"21":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":12},"end":{"line":184,"column":12}},{"start":{"line":184,"column":12},"end":{"line":184,"column":12}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = queue;","","var _baseIndexOf = require('lodash/_baseIndexOf');","","var _baseIndexOf2 = _interopRequireDefault(_baseIndexOf);","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _rest = require('./rest');","","var _rest2 = _interopRequireDefault(_rest);","","var _onlyOnce = require('./onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _setImmediate = require('./setImmediate');","","var _setImmediate2 = _interopRequireDefault(_setImmediate);","","var _DoublyLinkedList = require('./DoublyLinkedList');","","var _DoublyLinkedList2 = _interopRequireDefault(_DoublyLinkedList);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function queue(worker, concurrency, payload) {","    if (concurrency == null) {","        concurrency = 1;","    } else if (concurrency === 0) {","        throw new Error('Concurrency must not be zero');","    }","","    var _worker = (0, _wrapAsync2.default)(worker);","    var numRunning = 0;","    var workersList = [];","","    function _insert(data, insertAtFront, callback) {","        if (callback != null && typeof callback !== 'function') {","            throw new Error('task callback must be a function');","        }","        q.started = true;","        if (!(0, _isArray2.default)(data)) {","            data = [data];","        }","        if (data.length === 0 && q.idle()) {","            // call drain immediately if there are no tasks","            return (0, _setImmediate2.default)(function () {","                q.drain();","            });","        }","","        for (var i = 0, l = data.length; i < l; i++) {","            var item = {","                data: data[i],","                callback: callback || _noop2.default","            };","","            if (insertAtFront) {","                q._tasks.unshift(item);","            } else {","                q._tasks.push(item);","            }","        }","        (0, _setImmediate2.default)(q.process);","    }","","    function _next(tasks) {","        return (0, _rest2.default)(function (args) {","            numRunning -= 1;","","            for (var i = 0, l = tasks.length; i < l; i++) {","                var task = tasks[i];","                var index = (0, _baseIndexOf2.default)(workersList, task, 0);","                if (index >= 0) {","                    workersList.splice(index);","                }","","                task.callback.apply(task, args);","","                if (args[0] != null) {","                    q.error(args[0], task.data);","                }","            }","","            if (numRunning <= q.concurrency - q.buffer) {","                q.unsaturated();","            }","","            if (q.idle()) {","                q.drain();","            }","            q.process();","        });","    }","","    var isProcessing = false;","    var q = {","        _tasks: new _DoublyLinkedList2.default(),","        concurrency: concurrency,","        payload: payload,","        saturated: _noop2.default,","        unsaturated: _noop2.default,","        buffer: concurrency / 4,","        empty: _noop2.default,","        drain: _noop2.default,","        error: _noop2.default,","        started: false,","        paused: false,","        push: function (data, callback) {","            _insert(data, false, callback);","        },","        kill: function () {","            q.drain = _noop2.default;","            q._tasks.empty();","        },","        unshift: function (data, callback) {","            _insert(data, true, callback);","        },","        process: function () {","            // Avoid trying to start too many processing operations. This can occur","            // when callbacks resolve synchronously (#1267).","            if (isProcessing) {","                return;","            }","            isProcessing = true;","            while (!q.paused && numRunning < q.concurrency && q._tasks.length) {","                var tasks = [],","                    data = [];","                var l = q._tasks.length;","                if (q.payload) l = Math.min(l, q.payload);","                for (var i = 0; i < l; i++) {","                    var node = q._tasks.shift();","                    tasks.push(node);","                    data.push(node.data);","                }","","                if (q._tasks.length === 0) {","                    q.empty();","                }","                numRunning += 1;","                workersList.push(tasks[0]);","","                if (numRunning === q.concurrency) {","                    q.saturated();","                }","","                var cb = (0, _onlyOnce2.default)(_next(tasks));","                _worker(data, cb);","            }","            isProcessing = false;","        },","        length: function () {","            return q._tasks.length;","        },","        running: function () {","            return numRunning;","        },","        workersList: function () {","            return workersList;","        },","        idle: function () {","            return q._tasks.length + numRunning === 0;","        },","        pause: function () {","            q.paused = true;","        },","        resume: function () {","            if (q.paused === false) {","                return;","            }","            q.paused = false;","            (0, _setImmediate2.default)(q.process);","        }","    };","    return q;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":1,"30":1,"32":1,"34":1,"36":1,"38":1,"40":8,"42":1,"43":0,"44":0,"45":0,"46":0,"49":0,"50":0,"51":0,"53":1,"54":0,"55":0,"57":0,"58":0,"59":0,"61":0,"63":0,"64":0,"68":0,"69":0,"74":0,"75":0,"77":0,"80":0,"83":1,"84":0,"85":0,"87":0,"88":0,"89":0,"90":0,"91":0,"94":0,"96":0,"97":0,"101":0,"102":0,"105":0,"106":0,"108":0,"112":0,"113":0,"126":0,"129":0,"130":0,"133":0,"138":0,"139":0,"141":0,"142":0,"143":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"153":0,"154":0,"156":0,"157":0,"159":0,"160":0,"163":0,"164":0,"166":0,"169":0,"172":0,"175":0,"178":0,"181":0,"184":0,"185":0,"187":0,"188":0,"191":0,"193":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/setImmediate.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/setImmediate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":1,"14":2,"15":0,"16":0,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,1],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,0],"6":[0,0]},"f":{"1":1,"2":0,"3":2,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"fallback","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":22}}},"3":{"name":"wrap","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":21}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":31},"end":{"line":24,"column":51}}},"5":{"name":"(anonymous_5)","line":25,"loc":{"start":{"line":25,"column":14},"end":{"line":25,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":20}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"8":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":99}},"10":{"start":{"line":17,"column":0},"end":{"line":17,"column":110}},"11":{"start":{"line":19,"column":0},"end":{"line":21,"column":1}},"12":{"start":{"line":20,"column":4},"end":{"line":20,"column":22}},"13":{"start":{"line":23,"column":0},"end":{"line":29,"column":1}},"14":{"start":{"line":24,"column":4},"end":{"line":28,"column":7}},"15":{"start":{"line":25,"column":8},"end":{"line":27,"column":11}},"16":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"17":{"start":{"line":31,"column":0},"end":{"line":31,"column":11}},"18":{"start":{"line":33,"column":0},"end":{"line":39,"column":1}},"19":{"start":{"line":34,"column":4},"end":{"line":34,"column":26}},"20":{"start":{"line":35,"column":7},"end":{"line":39,"column":1}},"21":{"start":{"line":36,"column":4},"end":{"line":36,"column":30}},"22":{"start":{"line":38,"column":4},"end":{"line":38,"column":22}},"23":{"start":{"line":41,"column":0},"end":{"line":41,"column":31}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]},"3":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":48},"end":{"line":16,"column":82}},{"start":{"line":16,"column":86},"end":{"line":16,"column":98}}]},"4":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":67}},{"start":{"line":17,"column":71},"end":{"line":17,"column":109}}]},"5":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":0},"end":{"line":33,"column":0}},{"start":{"line":33,"column":0},"end":{"line":33,"column":0}}]},"6":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":7},"end":{"line":35,"column":7}},{"start":{"line":35,"column":7},"end":{"line":35,"column":7}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.hasNextTick = exports.hasSetImmediate = undefined;","exports.fallback = fallback;","exports.wrap = wrap;","","var _rest = require('./rest');","","var _rest2 = _interopRequireDefault(_rest);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var hasSetImmediate = exports.hasSetImmediate = typeof setImmediate === 'function' && setImmediate;","var hasNextTick = exports.hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';","","function fallback(fn) {","    setTimeout(fn, 0);","}","","function wrap(defer) {","    return (0, _rest2.default)(function (fn, args) {","        defer(function () {","            fn.apply(null, args);","        });","    });","}","","var _defer;","","if (hasSetImmediate) {","    _defer = setImmediate;","} else if (hasNextTick) {","    _defer = process.nextTick;","} else {","    _defer = fallback;","}","","exports.default = wrap(_defer);"],"l":{"3":1,"6":1,"7":1,"8":1,"10":1,"12":1,"14":1,"16":1,"17":1,"19":1,"20":0,"23":1,"24":2,"25":0,"26":0,"31":1,"33":1,"34":1,"35":0,"36":0,"38":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/DoublyLinkedList.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/DoublyLinkedList.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":0,"48":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"DLL","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":15}}},"2":{"name":"setInitial","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":27},"end":{"line":21,"column":43}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":28},"end":{"line":32,"column":53}}},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":29},"end":{"line":40,"column":54}}},"6":{"name":"(anonymous_6)","line":48,"loc":{"start":{"line":48,"column":24},"end":{"line":48,"column":40}}},"7":{"name":"(anonymous_7)","line":52,"loc":{"start":{"line":52,"column":21},"end":{"line":52,"column":37}}},"8":{"name":"(anonymous_8)","line":56,"loc":{"start":{"line":56,"column":22},"end":{"line":56,"column":34}}},"9":{"name":"(anonymous_9)","line":60,"loc":{"start":{"line":60,"column":20},"end":{"line":60,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"3":{"start":{"line":11,"column":0},"end":{"line":14,"column":1}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":33}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":20}},"6":{"start":{"line":16,"column":0},"end":{"line":19,"column":1}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":19}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":31}},"9":{"start":{"line":21,"column":0},"end":{"line":28,"column":2}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":73}},"11":{"start":{"line":22,"column":19},"end":{"line":22,"column":46}},"12":{"start":{"line":22,"column":51},"end":{"line":22,"column":73}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":73}},"14":{"start":{"line":23,"column":19},"end":{"line":23,"column":46}},"15":{"start":{"line":23,"column":51},"end":{"line":23,"column":73}},"16":{"start":{"line":25,"column":4},"end":{"line":25,"column":33}},"17":{"start":{"line":26,"column":4},"end":{"line":26,"column":21}},"18":{"start":{"line":27,"column":4},"end":{"line":27,"column":16}},"19":{"start":{"line":30,"column":0},"end":{"line":30,"column":26}},"20":{"start":{"line":32,"column":0},"end":{"line":38,"column":2}},"21":{"start":{"line":33,"column":4},"end":{"line":33,"column":24}},"22":{"start":{"line":34,"column":4},"end":{"line":34,"column":29}},"23":{"start":{"line":35,"column":4},"end":{"line":35,"column":69}},"24":{"start":{"line":35,"column":19},"end":{"line":35,"column":44}},"25":{"start":{"line":35,"column":49},"end":{"line":35,"column":69}},"26":{"start":{"line":36,"column":4},"end":{"line":36,"column":24}},"27":{"start":{"line":37,"column":4},"end":{"line":37,"column":21}},"28":{"start":{"line":40,"column":0},"end":{"line":46,"column":2}},"29":{"start":{"line":41,"column":4},"end":{"line":41,"column":29}},"30":{"start":{"line":42,"column":4},"end":{"line":42,"column":24}},"31":{"start":{"line":43,"column":4},"end":{"line":43,"column":69}},"32":{"start":{"line":43,"column":19},"end":{"line":43,"column":44}},"33":{"start":{"line":43,"column":49},"end":{"line":43,"column":69}},"34":{"start":{"line":44,"column":4},"end":{"line":44,"column":24}},"35":{"start":{"line":45,"column":4},"end":{"line":45,"column":21}},"36":{"start":{"line":48,"column":0},"end":{"line":50,"column":2}},"37":{"start":{"line":49,"column":4},"end":{"line":49,"column":82}},"38":{"start":{"line":49,"column":19},"end":{"line":49,"column":54}},"39":{"start":{"line":49,"column":59},"end":{"line":49,"column":82}},"40":{"start":{"line":52,"column":0},"end":{"line":54,"column":2}},"41":{"start":{"line":53,"column":4},"end":{"line":53,"column":81}},"42":{"start":{"line":53,"column":19},"end":{"line":53,"column":53}},"43":{"start":{"line":53,"column":58},"end":{"line":53,"column":81}},"44":{"start":{"line":56,"column":0},"end":{"line":58,"column":2}},"45":{"start":{"line":57,"column":4},"end":{"line":57,"column":51}},"46":{"start":{"line":60,"column":0},"end":{"line":62,"column":2}},"47":{"start":{"line":61,"column":4},"end":{"line":61,"column":51}},"48":{"start":{"line":63,"column":0},"end":{"line":63,"column":36}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"5":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"6":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"7":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":11},"end":{"line":57,"column":20}},{"start":{"line":57,"column":24},"end":{"line":57,"column":50}}]},"8":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":11},"end":{"line":61,"column":20}},{"start":{"line":61,"column":24},"end":{"line":61,"column":50}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = DLL;","// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation","// used for queues. This implementation assumes that the node provided by the user can be modified","// to adjust the next and last properties. We implement only the minimal functionality","// for queue support.","function DLL() {","    this.head = this.tail = null;","    this.length = 0;","}","","function setInitial(dll, node) {","    dll.length = 1;","    dll.head = dll.tail = node;","}","","DLL.prototype.removeLink = function (node) {","    if (node.prev) node.prev.next = node.next;else this.head = node.next;","    if (node.next) node.next.prev = node.prev;else this.tail = node.prev;","","    node.prev = node.next = null;","    this.length -= 1;","    return node;","};","","DLL.prototype.empty = DLL;","","DLL.prototype.insertAfter = function (node, newNode) {","    newNode.prev = node;","    newNode.next = node.next;","    if (node.next) node.next.prev = newNode;else this.tail = newNode;","    node.next = newNode;","    this.length += 1;","};","","DLL.prototype.insertBefore = function (node, newNode) {","    newNode.prev = node.prev;","    newNode.next = node;","    if (node.prev) node.prev.next = newNode;else this.head = newNode;","    node.prev = newNode;","    this.length += 1;","};","","DLL.prototype.unshift = function (node) {","    if (this.head) this.insertBefore(this.head, node);else setInitial(this, node);","};","","DLL.prototype.push = function (node) {","    if (this.tail) this.insertAfter(this.tail, node);else setInitial(this, node);","};","","DLL.prototype.shift = function () {","    return this.head && this.removeLink(this.head);","};","","DLL.prototype.pop = function () {","    return this.tail && this.removeLink(this.tail);","};","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"11":1,"12":0,"13":0,"16":1,"17":0,"18":0,"21":1,"22":0,"23":0,"25":0,"26":0,"27":0,"30":1,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"48":1,"49":0,"52":1,"53":0,"56":1,"57":0,"60":1,"61":0,"63":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/compose.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/compose.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":0,"10":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}},"2":{"name":"(anonymous_2)","line":52,"loc":{"start":{"line":52,"column":38},"end":{"line":52,"column":54}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":43}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":52,"column":0},"end":{"line":54,"column":3}},"9":{"start":{"line":53,"column":2},"end":{"line":53,"column":51}},"10":{"start":{"line":55,"column":0},"end":{"line":55,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _seq = require('./seq');","","var _seq2 = _interopRequireDefault(_seq);","","var _rest = require('./internal/rest');","","var _rest2 = _interopRequireDefault(_rest);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Creates a function which is a composition of the passed asynchronous"," * functions. Each function consumes the return value of the function that"," * follows. Composing functions `f()`, `g()`, and `h()` would produce the result"," * of `f(g(h()))`, only this version uses callbacks to obtain the return values."," *"," * Each function is executed with the `this` binding of the composed function."," *"," * @name compose"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {...AsyncFunction} functions - the asynchronous functions to compose"," * @returns {Function} an asynchronous function that is the composed"," * asynchronous `functions`"," * @example"," *"," * function add1(n, callback) {"," *     setTimeout(function () {"," *         callback(null, n + 1);"," *     }, 10);"," * }"," *"," * function mul3(n, callback) {"," *     setTimeout(function () {"," *         callback(null, n * 3);"," *     }, 10);"," * }"," *"," * var add1mul3 = async.compose(mul3, add1);"," * add1mul3(4, function (err, result) {"," *     // result now equals 15"," * });"," */","exports.default = (0, _rest2.default)(function (args) {","  return _seq2.default.apply(null, args.reverse());","});","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"52":1,"53":0,"55":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/seq.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/seq.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":5,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[1,4],"2":[5,5],"3":[0,0]},"f":{"1":5,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":37}}},"2":{"name":"seq","line":67,"loc":{"start":{"line":67,"column":38},"end":{"line":67,"column":62}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":47}}},"4":{"name":"(anonymous_4)","line":79,"loc":{"start":{"line":79,"column":48},"end":{"line":79,"column":75}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":62},"end":{"line":80,"column":87}}},"6":{"name":"(anonymous_6)","line":83,"loc":{"start":{"line":83,"column":11},"end":{"line":83,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":43}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":47}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":49}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":53}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":44}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":51}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":95}},"13":{"start":{"line":27,"column":39},"end":{"line":27,"column":93}},"14":{"start":{"line":67,"column":0},"end":{"line":87,"column":3}},"15":{"start":{"line":68,"column":4},"end":{"line":68,"column":77}},"16":{"start":{"line":69,"column":4},"end":{"line":86,"column":7}},"17":{"start":{"line":70,"column":8},"end":{"line":70,"column":24}},"18":{"start":{"line":72,"column":8},"end":{"line":72,"column":39}},"19":{"start":{"line":73,"column":8},"end":{"line":77,"column":9}},"20":{"start":{"line":74,"column":12},"end":{"line":74,"column":23}},"21":{"start":{"line":76,"column":12},"end":{"line":76,"column":32}},"22":{"start":{"line":79,"column":8},"end":{"line":85,"column":11}},"23":{"start":{"line":80,"column":12},"end":{"line":82,"column":17}},"24":{"start":{"line":81,"column":16},"end":{"line":81,"column":34}},"25":{"start":{"line":84,"column":12},"end":{"line":84,"column":50}},"26":{"start":{"line":88,"column":0},"end":{"line":88,"column":36}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":70},"end":{"line":27,"column":73}},{"start":{"line":27,"column":76},"end":{"line":27,"column":92}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":46},"end":{"line":27,"column":49}},{"start":{"line":27,"column":53},"end":{"line":27,"column":67}}]},"3":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":8}},{"start":{"line":73,"column":8},"end":{"line":73,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _rest = require('./internal/rest');","","var _rest2 = _interopRequireDefault(_rest);","","var _reduce = require('./reduce');","","var _reduce2 = _interopRequireDefault(_reduce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","var _arrayMap = require('lodash/_arrayMap');","","var _arrayMap2 = _interopRequireDefault(_arrayMap);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Version of the compose function that is more natural to read. Each function"," * consumes the return value of the previous function. It is the equivalent of"," * [compose]{@link module:ControlFlow.compose} with the arguments reversed."," *"," * Each function is executed with the `this` binding of the composed function."," *"," * @name seq"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.compose]{@link module:ControlFlow.compose}"," * @category Control Flow"," * @param {...AsyncFunction} functions - the asynchronous functions to compose"," * @returns {Function} a function that composes the `functions` in order"," * @example"," *"," * // Requires lodash (or underscore), express3 and dresende's orm2."," * // Part of an app, that fetches cats of the logged user."," * // This example uses `seq` function to avoid overnesting and error"," * // handling clutter."," * app.get('/cats', function(request, response) {"," *     var User = request.models.User;"," *     async.seq("," *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))"," *         function(user, fn) {"," *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))"," *         }"," *     )(req.session.user_id, function (err, cats) {"," *         if (err) {"," *             console.error(err);"," *             response.json({ status: 'error', message: err.message });"," *         } else {"," *             response.json({ status: 'ok', message: 'Cats found', data: cats });"," *         }"," *     });"," * });"," */","exports.default = (0, _rest2.default)(function seq(functions) {","    var _functions = (0, _arrayMap2.default)(functions, _wrapAsync2.default);","    return (0, _rest2.default)(function (args) {","        var that = this;","","        var cb = args[args.length - 1];","        if (typeof cb == 'function') {","            args.pop();","        } else {","            cb = _noop2.default;","        }","","        (0, _reduce2.default)(_functions, args, function (newargs, fn, cb) {","            fn.apply(that, newargs.concat((0, _rest2.default)(function (err, nextargs) {","                cb(err, nextargs);","            })));","        }, function (err, results) {","            cb.apply(that, [err].concat(results));","        });","    });","});","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":5,"67":1,"68":0,"69":0,"70":0,"72":0,"73":0,"74":0,"76":0,"79":0,"80":0,"81":0,"84":0,"88":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reduce.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reduce.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"reduce","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":48}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":38},"end":{"line":69,"column":64}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":27},"end":{"line":70,"column":45}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":7},"end":{"line":74,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":59}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":39}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":66,"column":0},"end":{"line":77,"column":1}},"14":{"start":{"line":67,"column":4},"end":{"line":67,"column":63}},"15":{"start":{"line":68,"column":4},"end":{"line":68,"column":55}},"16":{"start":{"line":69,"column":4},"end":{"line":76,"column":7}},"17":{"start":{"line":70,"column":8},"end":{"line":73,"column":11}},"18":{"start":{"line":71,"column":12},"end":{"line":71,"column":21}},"19":{"start":{"line":72,"column":12},"end":{"line":72,"column":26}},"20":{"start":{"line":75,"column":8},"end":{"line":75,"column":28}},"21":{"start":{"line":78,"column":0},"end":{"line":78,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":35},"end":{"line":67,"column":43}},{"start":{"line":67,"column":47},"end":{"line":67,"column":61}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = reduce;","","var _eachOfSeries = require('./eachOfSeries');","","var _eachOfSeries2 = _interopRequireDefault(_eachOfSeries);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Reduces `coll` into a single value using an async `iteratee` to return each"," * successive step. `memo` is the initial state of the reduction. This function"," * only operates in series."," *"," * For performance reasons, it may make sense to split a call to this function"," * into a parallel map, and then use the normal `Array.prototype.reduce` on the"," * results. This function is for situations where each step in the reduction"," * needs to be async; if you can get the data before reducing it, then it's"," * probably a good idea to do so."," *"," * @name reduce"," * @static"," * @memberOf module:Collections"," * @method"," * @alias inject"," * @alias foldl"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {*} memo - The initial state of the reduction."," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * array to produce the next step in the reduction."," * The `iteratee` should complete with the next state of the reduction."," * If the iteratee complete with an error, the reduction is stopped and the"," * main `callback` is immediately called with the error."," * Invoked with (memo, item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the reduced value. Invoked with"," * (err, result)."," * @example"," *"," * async.reduce([1,2,3], 0, function(memo, item, callback) {"," *     // pointless async:"," *     process.nextTick(function() {"," *         callback(null, memo + item)"," *     });"," * }, function(err, result) {"," *     // result is now equal to the last value of memo, which is 6"," * });"," */","function reduce(coll, memo, iteratee, callback) {","    callback = (0, _once2.default)(callback || _noop2.default);","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    (0, _eachOfSeries2.default)(coll, function (x, i, callback) {","        _iteratee(memo, x, function (err, v) {","            memo = v;","            callback(err);","        });","    }, function (err) {","        callback(err, memo);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"75":0,"78":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachOfSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachOfSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":67}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _eachOfLimit = require('./eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time."," *"," * @name eachOfSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.eachOf]{@link module:Collections.eachOf}"," * @alias forEachOfSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * Invoked with (item, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Invoked with (err)."," */","exports.default = (0, _doLimit2.default)(_eachOfLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"34":1,"35":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/concat.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/concat.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":42,"column":0},"end":{"line":42,"column":62}},"9":{"start":{"line":43,"column":0},"end":{"line":43,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _concat = require('./internal/concat');","","var _concat2 = _interopRequireDefault(_concat);","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Applies `iteratee` to each item in `coll`, concatenating the results. Returns"," * the concatenated list. The `iteratee`s are called in parallel, and the"," * results are concatenated as they return. There is no guarantee that the"," * results array will be returned in the original order of `coll` passed to the"," * `iteratee` function."," *"," * @name concat"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,"," * which should use an array as its result. Invoked with (item, callback)."," * @param {Function} [callback(err)] - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is an array"," * containing the concatenated results of the `iteratee` function. Invoked with"," * (err, results)."," * @example"," *"," * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {"," *     // files is now a list of filenames that exist in the 3 directories"," * });"," */","exports.default = (0, _doParallel2.default)(_concat2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"42":1,"43":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/concat.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/concat.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"concat","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":16},"end":{"line":9,"column":40}}},"3":{"name":"(anonymous_3)","line":10,"loc":{"start":{"line":10,"column":14},"end":{"line":10,"column":32}}},"4":{"name":"(anonymous_4)","line":14,"loc":{"start":{"line":14,"column":7},"end":{"line":14,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":7,"column":0},"end":{"line":17,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":20}},"5":{"start":{"line":9,"column":4},"end":{"line":16,"column":7}},"6":{"start":{"line":10,"column":8},"end":{"line":13,"column":11}},"7":{"start":{"line":11,"column":12},"end":{"line":11,"column":44}},"8":{"start":{"line":12,"column":12},"end":{"line":12,"column":20}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":30}},"10":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}}},"branchMap":{"1":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":35},"end":{"line":11,"column":36}},{"start":{"line":11,"column":40},"end":{"line":11,"column":42}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = concat;","function concat(eachfn, arr, fn, callback) {","    var result = [];","    eachfn(arr, function (x, index, cb) {","        fn(x, function (err, y) {","            result = result.concat(y || []);","            cb(err);","        });","    }, function (err) {","        callback(err, result);","    });","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"15":0,"18":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/concatSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/concatSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":47}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":51}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":35,"column":0},"end":{"line":35,"column":60}},"9":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _concat = require('./internal/concat');","","var _concat2 = _interopRequireDefault(_concat);","","var _doSeries = require('./internal/doSeries');","","var _doSeries2 = _interopRequireDefault(_doSeries);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time."," *"," * @name concatSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.concat]{@link module:Collections.concat}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`."," * The iteratee should complete with an array an array of results."," * Invoked with (item, callback)."," * @param {Function} [callback(err)] - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is an array"," * containing the concatenated results of the `iteratee` function. Invoked with"," * (err, results)."," */","exports.default = (0, _doSeries2.default)(_concat2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"35":1,"36":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/doSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/doSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":1,"11":0,"12":1},"b":{"1":[1,1],"2":[2,2]},"f":{"1":2,"2":1,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"doSeries","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":22}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":11},"end":{"line":19,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":59}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":18,"column":0},"end":{"line":22,"column":1}},"10":{"start":{"line":19,"column":4},"end":{"line":21,"column":6}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":93}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = doSeries;","","var _eachOfSeries = require('../eachOfSeries');","","var _eachOfSeries2 = _interopRequireDefault(_eachOfSeries);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function doSeries(fn) {","    return function (obj, iteratee, callback) {","        return fn(_eachOfSeries2.default, obj, (0, _wrapAsync2.default)(iteratee), callback);","    };","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"18":1,"19":1,"20":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/constant.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/constant.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}},"2":{"name":"(anonymous_2)","line":59,"loc":{"start":{"line":59,"column":38},"end":{"line":59,"column":56}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":40},"end":{"line":61,"column":73}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":57}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":61}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":59,"column":0},"end":{"line":64,"column":3}},"9":{"start":{"line":60,"column":4},"end":{"line":60,"column":37}},"10":{"start":{"line":61,"column":4},"end":{"line":63,"column":7}},"11":{"start":{"line":62,"column":8},"end":{"line":62,"column":42}},"12":{"start":{"line":65,"column":0},"end":{"line":65,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","var _rest = require('./internal/rest');","","var _rest2 = _interopRequireDefault(_rest);","","var _initialParams = require('./internal/initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns a function that when called, calls-back with the values provided."," * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to"," * [`auto`]{@link module:ControlFlow.auto}."," *"," * @name constant"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {...*} arguments... - Any number of arguments to automatically invoke"," * callback with."," * @returns {AsyncFunction} Returns a function that when invoked, automatically"," * invokes the callback with the previous given arguments."," * @example"," *"," * async.waterfall(["," *     async.constant(42),"," *     function (value, next) {"," *         // value === 42"," *     },"," *     //..."," * ], callback);"," *"," * async.waterfall(["," *     async.constant(filename, \"utf8\"),"," *     fs.readFile,"," *     function (fileData, next) {"," *         //..."," *     }"," *     //..."," * ], callback);"," *"," * async.auto({"," *     hostname: async.constant(\"https://server.net/\"),"," *     port: findFreePort,"," *     launchServer: [\"hostname\", \"port\", function (options, cb) {"," *         startServer(options, cb);"," *     }],"," *     //..."," * }, callback);"," */","exports.default = (0, _rest2.default)(function (values) {","    var args = [null].concat(values);","    return (0, _initialParams2.default)(function (ignoredArgs, callback) {","        return callback.apply(this, args);","    });","});","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"59":1,"60":0,"61":0,"62":0,"65":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/detect.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/detect.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":4,"12":1,"13":1},"b":{"1":[0,4],"2":[4,4]},"f":{"1":4},"fnMap":{"1":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":59}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":51}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":55}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":57}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":61}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":95}},"11":{"start":{"line":23,"column":39},"end":{"line":23,"column":93}},"12":{"start":{"line":60,"column":0},"end":{"line":60,"column":118}},"13":{"start":{"line":61,"column":0},"end":{"line":61,"column":36}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":92}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","var _findGetResult = require('./internal/findGetResult');","","var _findGetResult2 = _interopRequireDefault(_findGetResult);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns the first value in `coll` that passes an async truth test. The"," * `iteratee` is applied in parallel, meaning the first iteratee to return"," * `true` will fire the detect `callback` with that result. That means the"," * result might not be the first item in the original `coll` (in terms of order)"," * that passes the test.",""," * If order within the original `coll` is important, then look at"," * [`detectSeries`]{@link module:Collections.detectSeries}."," *"," * @name detect"," * @static"," * @memberOf module:Collections"," * @method"," * @alias find"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," * @example"," *"," * async.detect(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // result now equals the first file in the list that exists"," * });"," */","exports.default = (0, _doParallel2.default)((0, _createTester2.default)(_identity2.default, _findGetResult2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":4,"60":1,"61":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/createTester.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/createTester.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":6,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":2,"2":6,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"_createTester","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":11},"end":{"line":19,"column":48}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":20},"end":{"line":23,"column":50}}},"5":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":28},"end":{"line":24,"column":51}}},"6":{"name":"(anonymous_6)","line":35,"loc":{"start":{"line":35,"column":11},"end":{"line":35,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":18,"column":0},"end":{"line":43,"column":1}},"10":{"start":{"line":19,"column":4},"end":{"line":42,"column":6}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":34}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":31}},"13":{"start":{"line":22,"column":8},"end":{"line":22,"column":23}},"14":{"start":{"line":23,"column":8},"end":{"line":41,"column":11}},"15":{"start":{"line":24,"column":12},"end":{"line":34,"column":15}},"16":{"start":{"line":25,"column":16},"end":{"line":33,"column":17}},"17":{"start":{"line":26,"column":20},"end":{"line":26,"column":34}},"18":{"start":{"line":27,"column":23},"end":{"line":33,"column":17}},"19":{"start":{"line":28,"column":20},"end":{"line":28,"column":38}},"20":{"start":{"line":29,"column":20},"end":{"line":29,"column":56}},"21":{"start":{"line":30,"column":20},"end":{"line":30,"column":56}},"22":{"start":{"line":32,"column":20},"end":{"line":32,"column":31}},"23":{"start":{"line":36,"column":12},"end":{"line":40,"column":13}},"24":{"start":{"line":37,"column":16},"end":{"line":37,"column":24}},"25":{"start":{"line":39,"column":16},"end":{"line":39,"column":69}},"26":{"start":{"line":44,"column":0},"end":{"line":44,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":13},"end":{"line":20,"column":15}},{"start":{"line":20,"column":19},"end":{"line":20,"column":33}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":16},"end":{"line":25,"column":16}},{"start":{"line":25,"column":16},"end":{"line":25,"column":16}}]},"5":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":23},"end":{"line":27,"column":23}},{"start":{"line":27,"column":23},"end":{"line":27,"column":23}}]},"6":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":27},"end":{"line":27,"column":40}},{"start":{"line":27,"column":44},"end":{"line":27,"column":55}}]},"7":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":12}},{"start":{"line":36,"column":12},"end":{"line":36,"column":12}}]},"8":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":38},"end":{"line":39,"column":48}},{"start":{"line":39,"column":51},"end":{"line":39,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = _createTester;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _breakLoop = require('./breakLoop');","","var _breakLoop2 = _interopRequireDefault(_breakLoop);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _createTester(check, getResult) {","    return function (eachfn, arr, iteratee, cb) {","        cb = cb || _noop2.default;","        var testPassed = false;","        var testResult;","        eachfn(arr, function (value, _, callback) {","            iteratee(value, function (err, result) {","                if (err) {","                    callback(err);","                } else if (check(result) && !testResult) {","                    testPassed = true;","                    testResult = getResult(true, value);","                    callback(null, _breakLoop2.default);","                } else {","                    callback();","                }","            });","        }, function (err) {","            if (err) {","                cb(err);","            } else {","                cb(null, testPassed ? testResult : getResult(false));","            }","        });","    };","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"18":1,"19":6,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"32":0,"36":0,"37":0,"39":0,"44":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/findGetResult.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/findGetResult.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"_findGetResult","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":13}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}}},"branchMap":{},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = _findGetResult;","function _findGetResult(v, x) {","    return x;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"7":1,"8":0,"10":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/detectLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/detectLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":4,"12":1,"13":1},"b":{"1":[0,4],"2":[4,4]},"f":{"1":4},"fnMap":{"1":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":59}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":61}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":65}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":57}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":61}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":95}},"11":{"start":{"line":23,"column":39},"end":{"line":23,"column":93}},"12":{"start":{"line":47,"column":0},"end":{"line":47,"column":123}},"13":{"start":{"line":48,"column":0},"end":{"line":48,"column":36}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":92}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","var _findGetResult = require('./internal/findGetResult');","","var _findGetResult2 = _interopRequireDefault(_findGetResult);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name detectLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.detect]{@link module:Collections.detect}"," * @alias findLimit"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," */","exports.default = (0, _doParallelLimit2.default)((0, _createTester2.default)(_identity2.default, _findGetResult2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":4,"47":1,"48":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/detectSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/detectSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":37,"column":0},"end":{"line":37,"column":67}},"9":{"start":{"line":38,"column":0},"end":{"line":38,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _detectLimit = require('./detectLimit');","","var _detectLimit2 = _interopRequireDefault(_detectLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time."," *"," * @name detectSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.detect]{@link module:Collections.detect}"," * @alias findSeries"," * @category Collections"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`."," * The iteratee must complete with a boolean value as its result."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the `iteratee` functions have finished."," * Result will be the first item in the array that passes the truth test"," * (iteratee) or the value `undefined` if none passed. Invoked with"," * (err, result)."," */","exports.default = (0, _doLimit2.default)(_detectLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"37":1,"38":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/dir.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/dir.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1},"fnMap":{"1":{"name":"_interopRequireDefault","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":53}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":95}},"5":{"start":{"line":11,"column":39},"end":{"line":11,"column":93}},"6":{"start":{"line":42,"column":0},"end":{"line":42,"column":52}},"7":{"start":{"line":43,"column":0},"end":{"line":43,"column":36}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":70},"end":{"line":11,"column":73}},{"start":{"line":11,"column":76},"end":{"line":11,"column":92}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _consoleFunc = require('./internal/consoleFunc');","","var _consoleFunc2 = _interopRequireDefault(_consoleFunc);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Logs the result of an [`async` function]{@link AsyncFunction} to the"," * `console` using `console.dir` to display the properties of the resulting object."," * Only works in Node.js or in browsers that support `console.dir` and"," * `console.error` (such as FF and Chrome)."," * If multiple arguments are returned from the async function,"," * `console.dir` is called on each argument in order."," *"," * @name dir"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} function - The function you want to eventually apply"," * all arguments to."," * @param {...*} arguments... - Any number of arguments to apply to the function."," * @example"," *"," * // in a module"," * var hello = function(name, callback) {"," *     setTimeout(function() {"," *         callback(null, {hello: name});"," *     }, 1000);"," * };"," *"," * // in the node repl"," * node> async.dir(hello, 'world');"," * {hello: 'world'}"," */","exports.default = (0, _consoleFunc2.default)('dir');","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"42":1,"43":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/consoleFunc.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/consoleFunc.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[1,2],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":3,"2":1,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"consoleFunc","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":27}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":31},"end":{"line":23,"column":51}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":81},"end":{"line":24,"column":102}}},"5":{"name":"(anonymous_5)","line":31,"loc":{"start":{"line":31,"column":51},"end":{"line":31,"column":64}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":53}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":40}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":22,"column":0},"end":{"line":38,"column":1}},"12":{"start":{"line":23,"column":4},"end":{"line":37,"column":7}},"13":{"start":{"line":24,"column":8},"end":{"line":36,"column":13}},"14":{"start":{"line":25,"column":12},"end":{"line":35,"column":13}},"15":{"start":{"line":26,"column":16},"end":{"line":34,"column":17}},"16":{"start":{"line":27,"column":20},"end":{"line":29,"column":21}},"17":{"start":{"line":28,"column":24},"end":{"line":28,"column":43}},"18":{"start":{"line":30,"column":23},"end":{"line":34,"column":17}},"19":{"start":{"line":31,"column":20},"end":{"line":33,"column":23}},"20":{"start":{"line":32,"column":24},"end":{"line":32,"column":41}},"21":{"start":{"line":39,"column":0},"end":{"line":39,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":12}},{"start":{"line":25,"column":12},"end":{"line":25,"column":12}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":16},"end":{"line":26,"column":16}},{"start":{"line":26,"column":16},"end":{"line":26,"column":16}}]},"5":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":20},"end":{"line":27,"column":20}},{"start":{"line":27,"column":20},"end":{"line":27,"column":20}}]},"6":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":23}},{"start":{"line":30,"column":23},"end":{"line":30,"column":23}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = consoleFunc;","","var _arrayEach = require('lodash/_arrayEach');","","var _arrayEach2 = _interopRequireDefault(_arrayEach);","","var _rest = require('./rest');","","var _rest2 = _interopRequireDefault(_rest);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function consoleFunc(name) {","    return (0, _rest2.default)(function (fn, args) {","        (0, _wrapAsync2.default)(fn).apply(null, args.concat((0, _rest2.default)(function (err, args) {","            if (typeof console === 'object') {","                if (err) {","                    if (console.error) {","                        console.error(err);","                    }","                } else if (console[name]) {","                    (0, _arrayEach2.default)(args, function (x) {","                        console[name](x);","                    });","                }","            }","        })));","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"39":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/doDuring.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/doDuring.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"doDuring","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":38}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":35},"end":{"line":51,"column":56}}},"4":{"name":"check","line":57,"loc":{"start":{"line":57,"column":4},"end":{"line":57,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":47}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":46,"column":0},"end":{"line":64,"column":1}},"14":{"start":{"line":47,"column":4},"end":{"line":47,"column":67}},"15":{"start":{"line":48,"column":4},"end":{"line":48,"column":43}},"16":{"start":{"line":49,"column":4},"end":{"line":49,"column":47}},"17":{"start":{"line":51,"column":4},"end":{"line":55,"column":7}},"18":{"start":{"line":52,"column":8},"end":{"line":52,"column":38}},"19":{"start":{"line":52,"column":17},"end":{"line":52,"column":38}},"20":{"start":{"line":53,"column":8},"end":{"line":53,"column":25}},"21":{"start":{"line":54,"column":8},"end":{"line":54,"column":32}},"22":{"start":{"line":57,"column":4},"end":{"line":61,"column":5}},"23":{"start":{"line":58,"column":8},"end":{"line":58,"column":38}},"24":{"start":{"line":58,"column":17},"end":{"line":58,"column":38}},"25":{"start":{"line":59,"column":8},"end":{"line":59,"column":42}},"26":{"start":{"line":59,"column":20},"end":{"line":59,"column":42}},"27":{"start":{"line":60,"column":8},"end":{"line":60,"column":18}},"28":{"start":{"line":63,"column":4},"end":{"line":63,"column":22}},"29":{"start":{"line":65,"column":0},"end":{"line":65,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":39},"end":{"line":47,"column":47}},{"start":{"line":47,"column":51},"end":{"line":47,"column":65}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":8}},{"start":{"line":58,"column":8},"end":{"line":58,"column":8}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":8}},{"start":{"line":59,"column":8},"end":{"line":59,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = doDuring;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _rest = require('./internal/rest');","","var _rest2 = _interopRequireDefault(_rest);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in"," * the order of operations, the arguments `test` and `fn` are switched."," *"," * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function."," * @name doDuring"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.during]{@link module:ControlFlow.during}"," * @category Control Flow"," * @param {AsyncFunction} fn - An async function which is called each time"," * `test` passes. Invoked with (callback)."," * @param {AsyncFunction} test - asynchronous truth test to perform before each"," * execution of `fn`. Invoked with (...args, callback), where `...args` are the"," * non-error args from the previous callback of `fn`."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `fn` has stopped. `callback`"," * will be passed an error if one occurred, otherwise `null`."," */","function doDuring(fn, test, callback) {","    callback = (0, _onlyOnce2.default)(callback || _noop2.default);","    var _fn = (0, _wrapAsync2.default)(fn);","    var _test = (0, _wrapAsync2.default)(test);","","    var next = (0, _rest2.default)(function (err, args) {","        if (err) return callback(err);","        args.push(check);","        _test.apply(this, args);","    });","","    function check(err, truth) {","        if (err) return callback(err);","        if (!truth) return callback(null);","        _fn(next);","    }","","    check(null, true);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"46":1,"47":0,"48":0,"49":0,"51":0,"52":0,"53":0,"54":0,"57":1,"58":0,"59":0,"60":0,"63":0,"65":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/doUntil.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/doUntil.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"doUntil","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":43}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":38},"end":{"line":35,"column":50}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":34,"column":0},"end":{"line":38,"column":1}},"8":{"start":{"line":35,"column":4},"end":{"line":37,"column":17}},"9":{"start":{"line":36,"column":8},"end":{"line":36,"column":44}},"10":{"start":{"line":39,"column":0},"end":{"line":39,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = doUntil;","","var _doWhilst = require('./doWhilst');","","var _doWhilst2 = _interopRequireDefault(_doWhilst);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the"," * argument ordering differs from `until`."," *"," * @name doUntil"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}"," * @category Control Flow"," * @param {AsyncFunction} iteratee - An async function which is called each time"," * `test` fails. Invoked with (callback)."," * @param {Function} test - synchronous truth test to perform after each"," * execution of `iteratee`. Invoked with any non-error callback results of"," * `iteratee`."," * @param {Function} [callback] - A callback which is called after the test"," * function has passed and repeated execution of `iteratee` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `iteratee`'s"," * callback. Invoked with (err, [results]);"," */","function doUntil(iteratee, test, callback) {","    (0, _doWhilst2.default)(iteratee, function () {","        return !test.apply(this, arguments);","    }, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"34":1,"35":0,"36":0,"39":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/doWhilst.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/doWhilst.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":4,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"doWhilst","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":44}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":35},"end":{"line":51,"column":56}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":47}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":48,"column":0},"end":{"line":57,"column":1}},"14":{"start":{"line":49,"column":4},"end":{"line":49,"column":67}},"15":{"start":{"line":50,"column":4},"end":{"line":50,"column":55}},"16":{"start":{"line":51,"column":4},"end":{"line":55,"column":7}},"17":{"start":{"line":52,"column":8},"end":{"line":52,"column":38}},"18":{"start":{"line":52,"column":17},"end":{"line":52,"column":38}},"19":{"start":{"line":53,"column":8},"end":{"line":53,"column":59}},"20":{"start":{"line":53,"column":36},"end":{"line":53,"column":59}},"21":{"start":{"line":54,"column":8},"end":{"line":54,"column":50}},"22":{"start":{"line":56,"column":4},"end":{"line":56,"column":20}},"23":{"start":{"line":58,"column":0},"end":{"line":58,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":39},"end":{"line":49,"column":47}},{"start":{"line":49,"column":51},"end":{"line":49,"column":65}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = doWhilst;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _rest = require('./internal/rest');","","var _rest2 = _interopRequireDefault(_rest);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in"," * the order of operations, the arguments `test` and `iteratee` are switched."," *"," * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript."," *"," * @name doWhilst"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {AsyncFunction} iteratee - A function which is called each time `test`"," * passes. Invoked with (callback)."," * @param {Function} test - synchronous truth test to perform after each"," * execution of `iteratee`. Invoked with any non-error callback results of"," * `iteratee`."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `iteratee` has stopped."," * `callback` will be passed an error and any arguments passed to the final"," * `iteratee`'s callback. Invoked with (err, [results]);"," */","function doWhilst(iteratee, test, callback) {","    callback = (0, _onlyOnce2.default)(callback || _noop2.default);","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    var next = (0, _rest2.default)(function (err, args) {","        if (err) return callback(err);","        if (test.apply(this, args)) return _iteratee(next);","        callback.apply(null, [null].concat(args));","    });","    _iteratee(next);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/during.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/during.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[1,2],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"during","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":36}}},"3":{"name":"next","line":63,"loc":{"start":{"line":63,"column":4},"end":{"line":63,"column":23}}},"4":{"name":"check","line":68,"loc":{"start":{"line":68,"column":4},"end":{"line":68,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":58,"column":0},"end":{"line":75,"column":1}},"12":{"start":{"line":59,"column":4},"end":{"line":59,"column":67}},"13":{"start":{"line":60,"column":4},"end":{"line":60,"column":43}},"14":{"start":{"line":61,"column":4},"end":{"line":61,"column":47}},"15":{"start":{"line":63,"column":4},"end":{"line":66,"column":5}},"16":{"start":{"line":64,"column":8},"end":{"line":64,"column":38}},"17":{"start":{"line":64,"column":17},"end":{"line":64,"column":38}},"18":{"start":{"line":65,"column":8},"end":{"line":65,"column":21}},"19":{"start":{"line":68,"column":4},"end":{"line":72,"column":5}},"20":{"start":{"line":69,"column":8},"end":{"line":69,"column":38}},"21":{"start":{"line":69,"column":17},"end":{"line":69,"column":38}},"22":{"start":{"line":70,"column":8},"end":{"line":70,"column":42}},"23":{"start":{"line":70,"column":20},"end":{"line":70,"column":42}},"24":{"start":{"line":71,"column":8},"end":{"line":71,"column":18}},"25":{"start":{"line":74,"column":4},"end":{"line":74,"column":17}},"26":{"start":{"line":76,"column":0},"end":{"line":76,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":39},"end":{"line":59,"column":47}},{"start":{"line":59,"column":51},"end":{"line":59,"column":65}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":8}},{"start":{"line":69,"column":8},"end":{"line":69,"column":8}}]},"6":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":8}},{"start":{"line":70,"column":8},"end":{"line":70,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = during;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that"," * is passed a callback in the form of `function (err, truth)`. If error is"," * passed to `test` or `fn`, the main callback is immediately called with the"," * value of the error."," *"," * @name during"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {AsyncFunction} test - asynchronous truth test to perform before each"," * execution of `fn`. Invoked with (callback)."," * @param {AsyncFunction} fn - An async function which is called each time"," * `test` passes. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `fn` has stopped. `callback`"," * will be passed an error, if one occurred, otherwise `null`."," * @example"," *"," * var count = 0;"," *"," * async.during("," *     function (callback) {"," *         return callback(null, count < 5);"," *     },"," *     function (callback) {"," *         count++;"," *         setTimeout(callback, 1000);"," *     },"," *     function (err) {"," *         // 5 seconds have passed"," *     }"," * );"," */","function during(test, fn, callback) {","    callback = (0, _onlyOnce2.default)(callback || _noop2.default);","    var _fn = (0, _wrapAsync2.default)(fn);","    var _test = (0, _wrapAsync2.default)(test);","","    function next(err) {","        if (err) return callback(err);","        _test(check);","    }","","    function check(err, truth) {","        if (err) return callback(err);","        if (!truth) return callback(null);","        _fn(next);","    }","","    _test(check);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"58":1,"59":0,"60":0,"61":0,"63":1,"64":0,"65":0,"68":1,"69":0,"70":0,"71":0,"74":0,"76":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/each.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/each.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":1},"b":{"1":[1,2],"2":[3,3]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"eachLimit","line":79,"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":59}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":79,"column":0},"end":{"line":81,"column":1}},"12":{"start":{"line":80,"column":2},"end":{"line":80,"column":105}},"13":{"start":{"line":82,"column":0},"end":{"line":82,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = eachLimit;","","var _eachOf = require('./eachOf');","","var _eachOf2 = _interopRequireDefault(_eachOf);","","var _withoutIndex = require('./internal/withoutIndex');","","var _withoutIndex2 = _interopRequireDefault(_withoutIndex);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Applies the function `iteratee` to each item in `coll`, in parallel."," * The `iteratee` is called with an item from the list, and a callback for when"," * it has finished. If the `iteratee` passes an error to its `callback`, the"," * main `callback` (for the `each` function) is immediately called with the"," * error."," *"," * Note, that since this function applies `iteratee` to each item in parallel,"," * there is no guarantee that the iteratee functions will complete in order."," *"," * @name each"," * @static"," * @memberOf module:Collections"," * @method"," * @alias forEach"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to"," * each item in `coll`. Invoked with (item, callback)."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOf`."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," * @example"," *"," * // assuming openFiles is an array of file names and saveFile is a function"," * // to save the modified contents of that file:"," *"," * async.each(openFiles, saveFile, function(err){"," *   // if any of the saves produced an error, err would equal that error"," * });"," *"," * // assuming openFiles is an array of file names"," * async.each(openFiles, function(file, callback) {"," *"," *     // Perform operation on file here."," *     console.log('Processing file ' + file);"," *"," *     if( file.length > 32 ) {"," *       console.log('This file name is too long');"," *       callback('File name too long');"," *     } else {"," *       // Do work to process file here"," *       console.log('File processed');"," *       callback();"," *     }"," * }, function(err) {"," *     // if any of the file processing produced an error, err would equal that error"," *     if( err ) {"," *       // One of the iterations produced an error."," *       // All processing will now stop."," *       console.log('A file failed to process');"," *     } else {"," *       console.log('All files have been processed successfully');"," *     }"," * });"," */","function eachLimit(coll, iteratee, callback) {","  (0, _eachOf2.default)(coll, (0, _withoutIndex2.default)((0, _wrapAsync2.default)(iteratee)), callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"79":1,"80":0,"82":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/withoutIndex.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/withoutIndex.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"_withoutIndex","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":11},"end":{"line":8,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":10,"column":6}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":41}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}}},"branchMap":{},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = _withoutIndex;","function _withoutIndex(iteratee) {","    return function (value, index, callback) {","        return iteratee(value, callback);","    };","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"7":1,"8":0,"9":0,"12":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":1},"b":{"1":[1,2],"2":[3,3]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"eachLimit","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":53}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":59}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":42,"column":0},"end":{"line":44,"column":1}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":117}},"13":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = eachLimit;","","var _eachOfLimit = require('./internal/eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _withoutIndex = require('./internal/withoutIndex');","","var _withoutIndex2 = _interopRequireDefault(_withoutIndex);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time."," *"," * @name eachLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.each]{@link module:Collections.each}"," * @alias forEachLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOfLimit`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","function eachLimit(coll, limit, iteratee, callback) {","  (0, _eachOfLimit2.default)(limit)(coll, (0, _withoutIndex2.default)((0, _wrapAsync2.default)(iteratee)), callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"42":1,"43":0,"45":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/eachSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":65}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _eachLimit = require('./eachLimit');","","var _eachLimit2 = _interopRequireDefault(_eachLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time."," *"," * @name eachSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.each]{@link module:Collections.each}"," * @alias forEachSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each"," * item in `coll`."," * The array index is not passed to the iteratee."," * If you need the index, use `eachOfSeries`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called when all"," * `iteratee` functions have finished, or an error occurs. Invoked with (err)."," */","exports.default = (0, _doLimit2.default)(_eachLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/ensureAsync.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/ensureAsync.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[1,1],"2":[2,2],"3":[0,0],"4":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}}},"2":{"name":"ensureAsync","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":25}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":40},"end":{"line":57,"column":66}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":18},"end":{"line":59,"column":30}}},"5":{"name":"(anonymous_5)","line":62,"loc":{"start":{"line":62,"column":44},"end":{"line":62,"column":56}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":55}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":59}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":61}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":95}},"9":{"start":{"line":18,"column":39},"end":{"line":18,"column":93}},"10":{"start":{"line":55,"column":0},"end":{"line":72,"column":1}},"11":{"start":{"line":56,"column":4},"end":{"line":56,"column":47}},"12":{"start":{"line":56,"column":37},"end":{"line":56,"column":47}},"13":{"start":{"line":57,"column":4},"end":{"line":71,"column":7}},"14":{"start":{"line":58,"column":8},"end":{"line":58,"column":24}},"15":{"start":{"line":59,"column":8},"end":{"line":68,"column":11}},"16":{"start":{"line":60,"column":12},"end":{"line":60,"column":38}},"17":{"start":{"line":61,"column":12},"end":{"line":67,"column":13}},"18":{"start":{"line":62,"column":16},"end":{"line":64,"column":19}},"19":{"start":{"line":63,"column":20},"end":{"line":63,"column":52}},"20":{"start":{"line":66,"column":16},"end":{"line":66,"column":48}},"21":{"start":{"line":69,"column":8},"end":{"line":69,"column":29}},"22":{"start":{"line":70,"column":8},"end":{"line":70,"column":21}},"23":{"start":{"line":73,"column":0},"end":{"line":73,"column":36}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":70},"end":{"line":18,"column":73}},{"start":{"line":18,"column":76},"end":{"line":18,"column":92}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":46},"end":{"line":18,"column":49}},{"start":{"line":18,"column":53},"end":{"line":18,"column":67}}]},"3":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"4":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":12}},{"start":{"line":61,"column":12},"end":{"line":61,"column":12}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = ensureAsync;","","var _setImmediate = require('./internal/setImmediate');","","var _setImmediate2 = _interopRequireDefault(_setImmediate);","","var _initialParams = require('./internal/initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","var _wrapAsync = require('./internal/wrapAsync');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Wrap an async function and ensure it calls its callback on a later tick of"," * the event loop.  If the function already calls its callback on a next tick,"," * no extra deferral is added. This is useful for preventing stack overflows"," * (`RangeError: Maximum call stack size exceeded`) and generally keeping"," * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)"," * contained. ES2017 `async` functions are returned as-is -- they are immune"," * to Zalgo's corrupting influences, as they always resolve on a later tick."," *"," * @name ensureAsync"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} fn - an async function, one that expects a node-style"," * callback as its last argument."," * @returns {AsyncFunction} Returns a wrapped function with the exact same call"," * signature as the function passed in."," * @example"," *"," * function sometimesAsync(arg, callback) {"," *     if (cache[arg]) {"," *         return callback(null, cache[arg]); // this would be synchronous!!"," *     } else {"," *         doSomeIO(arg, callback); // this IO would be asynchronous"," *     }"," * }"," *"," * // this has a risk of stack overflows if many results are cached in a row"," * async.mapSeries(args, sometimesAsync, done);"," *"," * // this will defer sometimesAsync's callback if necessary,"," * // preventing stack overflows"," * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);"," */","function ensureAsync(fn) {","    if ((0, _wrapAsync.isAsync)(fn)) return fn;","    return (0, _initialParams2.default)(function (args, callback) {","        var sync = true;","        args.push(function () {","            var innerArgs = arguments;","            if (sync) {","                (0, _setImmediate2.default)(function () {","                    callback.apply(null, innerArgs);","                });","            } else {","                callback.apply(null, innerArgs);","            }","        });","        fn.apply(this, args);","        sync = false;","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":2,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"66":0,"69":0,"70":0,"73":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/every.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/every.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":1,"11":1},"b":{"1":[0,3],"2":[3,3]},"f":{"1":3},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"9":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"10":{"start":{"line":49,"column":0},"end":{"line":49,"column":107}},"11":{"start":{"line":50,"column":0},"end":{"line":50,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","var _notId = require('./internal/notId');","","var _notId2 = _interopRequireDefault(_notId);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns `true` if every element in `coll` satisfies an async test. If any"," * iteratee call returns `false`, the main `callback` is immediately called."," *"," * @name every"," * @static"," * @memberOf module:Collections"," * @method"," * @alias all"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in parallel."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," * @example"," *"," * async.every(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // if result is true then every file exists"," * });"," */","exports.default = (0, _doParallel2.default)((0, _createTester2.default)(_notId2.default, _notId2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":3,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/notId.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/notId.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"notId","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":14}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}}},"branchMap":{},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = notId;","function notId(v) {","    return !v;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"7":1,"8":0,"10":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/everyLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/everyLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":1,"11":1},"b":{"1":[0,3],"2":[3,3]},"f":{"1":3},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":65}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":45}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"9":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"10":{"start":{"line":41,"column":0},"end":{"line":41,"column":112}},"11":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","var _notId = require('./internal/notId');","","var _notId2 = _interopRequireDefault(_notId);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time."," *"," * @name everyLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.every]{@link module:Collections.every}"," * @alias allLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in parallel."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," */","exports.default = (0, _doParallelLimit2.default)((0, _createTester2.default)(_notId2.default, _notId2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":3,"41":1,"42":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/everySeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/everySeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":55}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":66}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _everyLimit = require('./everyLimit');","","var _everyLimit2 = _interopRequireDefault(_everyLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time."," *"," * @name everySeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.every]{@link module:Collections.every}"," * @alias allSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collection in series."," * The iteratee must complete with a boolean result value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result will be either `true` or `false`"," * depending on the values of the async tests. Invoked with (err, result)."," */","exports.default = (0, _doLimit2.default)(_everyLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/filter.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/filter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":44,"column":0},"end":{"line":44,"column":62}},"9":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _filter = require('./internal/filter');","","var _filter2 = _interopRequireDefault(_filter);","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns a new array of all the values in `coll` which pass an async truth"," * test. This operation is performed in parallel, but the results array will be"," * in the same order as the original."," *"," * @name filter"," * @static"," * @memberOf module:Collections"," * @method"," * @alias select"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," * @example"," *"," * async.filter(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, results) {"," *     // results now equals an array of the existing files"," * });"," */","exports.default = (0, _doParallel2.default)(_filter2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"44":1,"45":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/filter.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/filter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1},"b":{"1":[1,4],"2":[5,5],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"2":{"name":"filterArray","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":54}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":16},"end":{"line":32,"column":46}}},"4":{"name":"(anonymous_4)","line":33,"loc":{"start":{"line":33,"column":20},"end":{"line":33,"column":38}}},"5":{"name":"(anonymous_5)","line":37,"loc":{"start":{"line":37,"column":7},"end":{"line":37,"column":22}}},"6":{"name":"filterGeneric","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":57}}},"7":{"name":"(anonymous_7)","line":49,"loc":{"start":{"line":49,"column":17},"end":{"line":49,"column":47}}},"8":{"name":"(anonymous_8)","line":50,"loc":{"start":{"line":50,"column":20},"end":{"line":50,"column":38}}},"9":{"name":"(anonymous_9)","line":60,"loc":{"start":{"line":60,"column":7},"end":{"line":60,"column":22}}},"10":{"name":"(anonymous_10)","line":64,"loc":{"start":{"line":64,"column":64},"end":{"line":64,"column":80}}},"11":{"name":"_filter","line":71,"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":52}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":59}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":35}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":43}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":53}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":95}},"14":{"start":{"line":28,"column":39},"end":{"line":28,"column":93}},"15":{"start":{"line":30,"column":0},"end":{"line":45,"column":1}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":44}},"17":{"start":{"line":32,"column":4},"end":{"line":44,"column":7}},"18":{"start":{"line":33,"column":8},"end":{"line":36,"column":11}},"19":{"start":{"line":34,"column":12},"end":{"line":34,"column":37}},"20":{"start":{"line":35,"column":12},"end":{"line":35,"column":26}},"21":{"start":{"line":38,"column":8},"end":{"line":38,"column":38}},"22":{"start":{"line":38,"column":17},"end":{"line":38,"column":38}},"23":{"start":{"line":39,"column":8},"end":{"line":39,"column":25}},"24":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"25":{"start":{"line":41,"column":12},"end":{"line":41,"column":53}},"26":{"start":{"line":41,"column":32},"end":{"line":41,"column":53}},"27":{"start":{"line":43,"column":8},"end":{"line":43,"column":32}},"28":{"start":{"line":47,"column":0},"end":{"line":69,"column":1}},"29":{"start":{"line":48,"column":4},"end":{"line":48,"column":21}},"30":{"start":{"line":49,"column":4},"end":{"line":68,"column":7}},"31":{"start":{"line":50,"column":8},"end":{"line":59,"column":11}},"32":{"start":{"line":51,"column":12},"end":{"line":58,"column":13}},"33":{"start":{"line":52,"column":16},"end":{"line":52,"column":30}},"34":{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},"35":{"start":{"line":55,"column":20},"end":{"line":55,"column":61}},"36":{"start":{"line":57,"column":16},"end":{"line":57,"column":27}},"37":{"start":{"line":61,"column":8},"end":{"line":67,"column":9}},"38":{"start":{"line":62,"column":12},"end":{"line":62,"column":26}},"39":{"start":{"line":64,"column":12},"end":{"line":66,"column":55}},"40":{"start":{"line":65,"column":16},"end":{"line":65,"column":41}},"41":{"start":{"line":71,"column":0},"end":{"line":74,"column":1}},"42":{"start":{"line":72,"column":4},"end":{"line":72,"column":80}},"43":{"start":{"line":73,"column":4},"end":{"line":73,"column":89}},"44":{"start":{"line":75,"column":0},"end":{"line":75,"column":36}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":70},"end":{"line":28,"column":73}},{"start":{"line":28,"column":76},"end":{"line":28,"column":92}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":12}},{"start":{"line":41,"column":12},"end":{"line":41,"column":12}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":12}},{"start":{"line":51,"column":12},"end":{"line":51,"column":12}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":16},"end":{"line":54,"column":16}},{"start":{"line":54,"column":16},"end":{"line":54,"column":16}}]},"7":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":8}},{"start":{"line":61,"column":8},"end":{"line":61,"column":8}}]},"8":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":52},"end":{"line":72,"column":63}},{"start":{"line":72,"column":66},"end":{"line":72,"column":79}}]},"9":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":61},"end":{"line":73,"column":69}},{"start":{"line":73,"column":73},"end":{"line":73,"column":87}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = _filter;","","var _arrayMap = require('lodash/_arrayMap');","","var _arrayMap2 = _interopRequireDefault(_arrayMap);","","var _isArrayLike = require('lodash/isArrayLike');","","var _isArrayLike2 = _interopRequireDefault(_isArrayLike);","","var _baseProperty = require('lodash/_baseProperty');","","var _baseProperty2 = _interopRequireDefault(_baseProperty);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function filterArray(eachfn, arr, iteratee, callback) {","    var truthValues = new Array(arr.length);","    eachfn(arr, function (x, index, callback) {","        iteratee(x, function (err, v) {","            truthValues[index] = !!v;","            callback(err);","        });","    }, function (err) {","        if (err) return callback(err);","        var results = [];","        for (var i = 0; i < arr.length; i++) {","            if (truthValues[i]) results.push(arr[i]);","        }","        callback(null, results);","    });","}","","function filterGeneric(eachfn, coll, iteratee, callback) {","    var results = [];","    eachfn(coll, function (x, index, callback) {","        iteratee(x, function (err, v) {","            if (err) {","                callback(err);","            } else {","                if (v) {","                    results.push({ index: index, value: x });","                }","                callback();","            }","        });","    }, function (err) {","        if (err) {","            callback(err);","        } else {","            callback(null, (0, _arrayMap2.default)(results.sort(function (a, b) {","                return a.index - b.index;","            }), (0, _baseProperty2.default)('value')));","        }","    });","}","","function _filter(eachfn, coll, iteratee, callback) {","    var filter = (0, _isArrayLike2.default)(coll) ? filterArray : filterGeneric;","    filter(eachfn, coll, (0, _wrapAsync2.default)(iteratee), callback || _noop2.default);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":5,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"38":0,"39":0,"40":0,"41":0,"43":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"55":0,"57":0,"61":0,"62":0,"64":0,"65":0,"71":1,"72":0,"73":0,"75":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/filterLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/filterLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":65}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":67}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _filter = require('./internal/filter');","","var _filter2 = _interopRequireDefault(_filter);","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name filterLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @alias selectLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","exports.default = (0, _doParallelLimit2.default)(_filter2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/filterSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/filterSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":67}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _filterLimit = require('./filterLimit');","","var _filterLimit2 = _interopRequireDefault(_filterLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time."," *"," * @name filterSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.filter]{@link module:Collections.filter}"," * @alias selectSeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - A truth test to apply to each item in `coll`."," * The `iteratee` is passed a `callback(err, truthValue)`, which must be called"," * with a boolean argument once it has completed. Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)"," */","exports.default = (0, _doLimit2.default)(_filterLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"34":1,"35":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forever.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/forever.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0]},"f":{"1":4,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"forever","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":30}}},"3":{"name":"next","line":59,"loc":{"start":{"line":59,"column":4},"end":{"line":59,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":57}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":55,"column":0},"end":{"line":64,"column":1}},"14":{"start":{"line":56,"column":4},"end":{"line":56,"column":66}},"15":{"start":{"line":57,"column":4},"end":{"line":57,"column":72}},"16":{"start":{"line":59,"column":4},"end":{"line":62,"column":5}},"17":{"start":{"line":60,"column":8},"end":{"line":60,"column":34}},"18":{"start":{"line":60,"column":17},"end":{"line":60,"column":34}},"19":{"start":{"line":61,"column":8},"end":{"line":61,"column":19}},"20":{"start":{"line":63,"column":4},"end":{"line":63,"column":11}},"21":{"start":{"line":65,"column":0},"end":{"line":65,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":39},"end":{"line":56,"column":46}},{"start":{"line":56,"column":50},"end":{"line":56,"column":64}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = forever;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _ensureAsync = require('./ensureAsync');","","var _ensureAsync2 = _interopRequireDefault(_ensureAsync);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Calls the asynchronous function `fn` with a callback parameter that allows it"," * to call itself again, in series, indefinitely.",""," * If an error is passed to the callback then `errback` is called with the"," * error, and execution stops, otherwise it will never be called."," *"," * @name forever"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {AsyncFunction} fn - an async function to call repeatedly."," * Invoked with (next)."," * @param {Function} [errback] - when `fn` passes an error to it's callback,"," * this function will be called, and execution stops. Invoked with (err)."," * @example"," *"," * async.forever("," *     function(next) {"," *         // next is suitable for passing to things that need a callback(err [, whatever]);"," *         // it will result in this function being called again."," *     },"," *     function(err) {"," *         // if next is called with a value in its first parameter, it will appear"," *         // in here as 'err', and execution will stop."," *     }"," * );"," */","function forever(fn, errback) {","    var done = (0, _onlyOnce2.default)(errback || _noop2.default);","    var task = (0, _wrapAsync2.default)((0, _ensureAsync2.default)(fn));","","    function next(err) {","        if (err) return done(err);","        task(next);","    }","    next();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"55":1,"56":0,"57":0,"59":1,"60":0,"61":0,"63":0,"65":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/groupBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/groupBy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":49}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":46}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":59}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":53,"column":0},"end":{"line":53,"column":75}},"9":{"start":{"line":54,"column":0},"end":{"line":54,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","var _groupByLimit = require('./groupByLimit');","","var _groupByLimit2 = _interopRequireDefault(_groupByLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns a new object, where each value corresponds to an array of items, from"," * `coll`, that returned the corresponding key. That is, the keys of the object"," * correspond to the values passed to the `iteratee` callback."," *"," * Note: Since this function applies the `iteratee` to each item in parallel,"," * there is no guarantee that the `iteratee` functions will complete in order."," * However, the values for each key in the `result` will be in the same order as"," * the original `coll`. For Objects, the values will roughly be in the order of"," * the original Objects' keys (but this can vary across JavaScript engines)."," *"," * @name groupBy"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a `key` to group the value under."," * Invoked with (value, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Result is an `Object` whoses"," * properties are arrays of values which returned the corresponding key."," * @example"," *"," * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {"," *     db.findById(userId, function(err, user) {"," *         if (err) return callback(err);"," *         return callback(null, user.age);"," *     });"," * }, function(err, result) {"," *     // result is object containing the userIds grouped by age"," *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};"," * });"," */","exports.default = (0, _doLimit2.default)(_groupByLimit2.default, Infinity);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"53":1,"54":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/groupByLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/groupByLimit.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":3,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,2],"6":[3,3]},"f":{"1":0,"2":0,"3":0,"4":0,"5":3},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":61}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":41},"end":{"line":10,"column":66}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":23},"end":{"line":11,"column":43}}},"4":{"name":"(anonymous_4)","line":15,"loc":{"start":{"line":15,"column":7},"end":{"line":15,"column":34}}},"5":{"name":"_interopRequireDefault","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":35,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":42}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":55}},"5":{"start":{"line":10,"column":4},"end":{"line":34,"column":7}},"6":{"start":{"line":11,"column":8},"end":{"line":14,"column":11}},"7":{"start":{"line":12,"column":12},"end":{"line":12,"column":42}},"8":{"start":{"line":12,"column":21},"end":{"line":12,"column":42}},"9":{"start":{"line":13,"column":12},"end":{"line":13,"column":58}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":24}},"11":{"start":{"line":18,"column":8},"end":{"line":18,"column":61}},"12":{"start":{"line":20,"column":8},"end":{"line":31,"column":9}},"13":{"start":{"line":21,"column":12},"end":{"line":30,"column":13}},"14":{"start":{"line":22,"column":16},"end":{"line":22,"column":44}},"15":{"start":{"line":23,"column":16},"end":{"line":23,"column":44}},"16":{"start":{"line":25,"column":16},"end":{"line":29,"column":17}},"17":{"start":{"line":26,"column":20},"end":{"line":26,"column":42}},"18":{"start":{"line":28,"column":20},"end":{"line":28,"column":40}},"19":{"start":{"line":33,"column":8},"end":{"line":33,"column":37}},"20":{"start":{"line":37,"column":0},"end":{"line":37,"column":35}},"21":{"start":{"line":39,"column":0},"end":{"line":39,"column":43}},"22":{"start":{"line":41,"column":0},"end":{"line":41,"column":38}},"23":{"start":{"line":43,"column":0},"end":{"line":43,"column":51}},"24":{"start":{"line":45,"column":0},"end":{"line":45,"column":49}},"25":{"start":{"line":47,"column":0},"end":{"line":47,"column":53}},"26":{"start":{"line":49,"column":0},"end":{"line":49,"column":95}},"27":{"start":{"line":49,"column":39},"end":{"line":49,"column":93}},"28":{"start":{"line":71,"column":0},"end":{"line":71,"column":36}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":15},"end":{"line":8,"column":23}},{"start":{"line":8,"column":27},"end":{"line":8,"column":41}}]},"2":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":12}},{"start":{"line":12,"column":12},"end":{"line":12,"column":12}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":21,"column":12}},{"start":{"line":21,"column":12},"end":{"line":21,"column":12}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":16},"end":{"line":25,"column":16}},{"start":{"line":25,"column":16},"end":{"line":25,"column":16}}]},"5":{"line":49,"type":"cond-expr","locations":[{"start":{"line":49,"column":70},"end":{"line":49,"column":73}},{"start":{"line":49,"column":76},"end":{"line":49,"column":92}}]},"6":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":46},"end":{"line":49,"column":49}},{"start":{"line":49,"column":53},"end":{"line":49,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (coll, limit, iteratee, callback) {","    callback = callback || _noop2.default;","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    (0, _mapLimit2.default)(coll, limit, function (val, callback) {","        _iteratee(val, function (err, key) {","            if (err) return callback(err);","            return callback(null, { key: key, val: val });","        });","    }, function (err, mapResults) {","        var result = {};","        // from MDN, handle object having an `hasOwnProperty` prop","        var hasOwnProperty = Object.prototype.hasOwnProperty;","","        for (var i = 0; i < mapResults.length; i++) {","            if (mapResults[i]) {","                var key = mapResults[i].key;","                var val = mapResults[i].val;","","                if (hasOwnProperty.call(result, key)) {","                    result[key].push(val);","                } else {","                    result[key] = [val];","                }","            }","        }","","        return callback(err, result);","    });","};","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _mapLimit = require('./mapLimit');","","var _mapLimit2 = _interopRequireDefault(_mapLimit);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","",";","/**"," * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time."," *"," * @name groupByLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.groupBy]{@link module:Collections.groupBy}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a `key` to group the value under."," * Invoked with (value, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Result is an `Object` whoses"," * properties are arrays of values which returned the corresponding key."," */","module.exports = exports['default'];"],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"16":0,"18":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"28":0,"33":0,"37":1,"39":1,"41":1,"43":1,"45":1,"47":1,"49":3,"71":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/groupBySeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/groupBySeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":49}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":46}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":59}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":68}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","var _groupByLimit = require('./groupByLimit');","","var _groupByLimit2 = _interopRequireDefault(_groupByLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time."," *"," * @name groupBySeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.groupBy]{@link module:Collections.groupBy}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a `key` to group the value under."," * Invoked with (value, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. Result is an `Object` whoses"," * properties are arrays of values which returned the corresponding key."," */","exports.default = (0, _doLimit2.default)(_groupByLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/parallel.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/parallel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"_parallel","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":44}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":18},"end":{"line":30,"column":49}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":59},"end":{"line":31,"column":80}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":7},"end":{"line":38,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":57}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":40}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":26,"column":0},"end":{"line":41,"column":1}},"14":{"start":{"line":27,"column":4},"end":{"line":27,"column":42}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":62}},"16":{"start":{"line":30,"column":4},"end":{"line":40,"column":7}},"17":{"start":{"line":31,"column":8},"end":{"line":37,"column":12}},"18":{"start":{"line":32,"column":12},"end":{"line":34,"column":13}},"19":{"start":{"line":33,"column":16},"end":{"line":33,"column":31}},"20":{"start":{"line":35,"column":12},"end":{"line":35,"column":32}},"21":{"start":{"line":36,"column":12},"end":{"line":36,"column":26}},"22":{"start":{"line":39,"column":8},"end":{"line":39,"column":31}},"23":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":15},"end":{"line":27,"column":23}},{"start":{"line":27,"column":27},"end":{"line":27,"column":41}}]},"4":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":54},"end":{"line":28,"column":56}},{"start":{"line":28,"column":59},"end":{"line":28,"column":61}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":12}},{"start":{"line":32,"column":12},"end":{"line":32,"column":12}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = _parallel;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _isArrayLike = require('lodash/isArrayLike');","","var _isArrayLike2 = _interopRequireDefault(_isArrayLike);","","var _rest = require('./rest');","","var _rest2 = _interopRequireDefault(_rest);","","var _wrapAsync = require('./wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _parallel(eachfn, tasks, callback) {","    callback = callback || _noop2.default;","    var results = (0, _isArrayLike2.default)(tasks) ? [] : {};","","    eachfn(tasks, function (task, key, callback) {","        (0, _wrapAsync2.default)(task)((0, _rest2.default)(function (err, args) {","            if (args.length <= 1) {","                args = args[0];","            }","            results[key] = args;","            callback(err);","        }));","    }, function (err) {","        callback(err, results);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"26":1,"27":0,"28":0,"30":0,"31":0,"32":0,"33":0,"35":0,"36":0,"39":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/reject.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/internal/reject.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"reject","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":49}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":39},"end":{"line":15,"column":60}}},"4":{"name":"(anonymous_4)","line":16,"loc":{"start":{"line":16,"column":24},"end":{"line":16,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":14,"column":0},"end":{"line":20,"column":1}},"8":{"start":{"line":15,"column":4},"end":{"line":19,"column":17}},"9":{"start":{"line":16,"column":8},"end":{"line":18,"column":11}},"10":{"start":{"line":17,"column":12},"end":{"line":17,"column":24}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = reject;","","var _filter = require('./filter');","","var _filter2 = _interopRequireDefault(_filter);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function reject(eachfn, arr, iteratee, callback) {","    (0, _filter2.default)(eachfn, arr, function (value, cb) {","        iteratee(value, function (err, v) {","            cb(err, !v);","        });","    }, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"15":0,"16":0,"17":0,"21":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapValues.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapValues.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":63}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":62,"column":0},"end":{"line":62,"column":77}},"9":{"start":{"line":63,"column":0},"end":{"line":63,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _mapValuesLimit = require('./mapValuesLimit');","","var _mapValuesLimit2 = _interopRequireDefault(_mapValuesLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * A relative of [`map`]{@link module:Collections.map}, designed for use with objects."," *"," * Produces a new Object by mapping each value of `obj` through the `iteratee`"," * function. The `iteratee` is called each `value` and `key` from `obj` and a"," * callback for when it has finished processing. Each of these callbacks takes"," * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`"," * passes an error to its callback, the main `callback` (for the `mapValues`"," * function) is immediately called with the error."," *"," * Note, the order of the keys in the result is not guaranteed.  The keys will"," * be roughly in the order they complete, (but this is very engine-specific)"," *"," * @name mapValues"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each value and key"," * in `coll`."," * The iteratee should complete with the transformed value as its result."," * Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," * @example"," *"," * async.mapValues({"," *     f1: 'file1',"," *     f2: 'file2',"," *     f3: 'file3'"," * }, function (file, key, callback) {"," *   fs.stat(file, callback);"," * }, function(err, result) {"," *     // result is now a map of stats for each file, e.g."," *     // {"," *     //     f1: [stats for file1],"," *     //     f2: [stats for file2],"," *     //     f3: [stats for file3]"," *     // }"," * });"," */","","exports.default = (0, _doLimit2.default)(_mapValuesLimit2.default, Infinity);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"62":1,"63":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapValuesLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapValuesLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"mapValuesLimit","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":56}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":43},"end":{"line":51,"column":69}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":28},"end":{"line":52,"column":51}}},"5":{"name":"(anonymous_5)","line":57,"loc":{"start":{"line":57,"column":7},"end":{"line":57,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":39}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":47,"column":0},"end":{"line":60,"column":1}},"14":{"start":{"line":48,"column":4},"end":{"line":48,"column":63}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":20}},"16":{"start":{"line":50,"column":4},"end":{"line":50,"column":55}},"17":{"start":{"line":51,"column":4},"end":{"line":59,"column":7}},"18":{"start":{"line":52,"column":8},"end":{"line":56,"column":11}},"19":{"start":{"line":53,"column":12},"end":{"line":53,"column":38}},"20":{"start":{"line":53,"column":21},"end":{"line":53,"column":38}},"21":{"start":{"line":54,"column":12},"end":{"line":54,"column":33}},"22":{"start":{"line":55,"column":12},"end":{"line":55,"column":19}},"23":{"start":{"line":58,"column":8},"end":{"line":58,"column":30}},"24":{"start":{"line":61,"column":0},"end":{"line":61,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":35},"end":{"line":48,"column":43}},{"start":{"line":48,"column":47},"end":{"line":48,"column":61}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":12}},{"start":{"line":53,"column":12},"end":{"line":53,"column":12}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = mapValuesLimit;","","var _eachOfLimit = require('./eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name mapValuesLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.mapValues]{@link module:Collections.mapValues}"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - A function to apply to each value and key"," * in `coll`."," * The iteratee should complete with the transformed value as its result."," * Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," */","function mapValuesLimit(obj, limit, iteratee, callback) {","    callback = (0, _once2.default)(callback || _noop2.default);","    var newObj = {};","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    (0, _eachOfLimit2.default)(obj, limit, function (val, key, next) {","        _iteratee(val, key, function (err, result) {","            if (err) return next(err);","            newObj[key] = result;","            next();","        });","    }, function (err) {","        callback(err, newObj);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"58":0,"61":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapValuesSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/mapValuesSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":63}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":70}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _mapValuesLimit = require('./mapValuesLimit');","","var _mapValuesLimit2 = _interopRequireDefault(_mapValuesLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time."," *"," * @name mapValuesSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.mapValues]{@link module:Collections.mapValues}"," * @category Collection"," * @param {Object} obj - A collection to iterate over."," * @param {AsyncFunction} iteratee - A function to apply to each value and key"," * in `coll`."," * The iteratee should complete with the transformed value as its result."," * Invoked with (value, key, callback)."," * @param {Function} [callback] - A callback which is called when all `iteratee`"," * functions have finished, or an error occurs. `result` is a new object consisting"," * of each key from `obj`, with each transformed value on the right-hand side."," * Invoked with (err, result)."," */","exports.default = (0, _doLimit2.default)(_mapValuesLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/memoize.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/memoize.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1},"b":{"1":[2,3],"2":[5,5],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":5,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"2":{"name":"has","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":23}}},"3":{"name":"memoize","line":71,"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":29}}},"4":{"name":"memoized","line":76,"loc":{"start":{"line":76,"column":48},"end":{"line":76,"column":82}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":40},"end":{"line":79,"column":52}}},"6":{"name":"(anonymous_6)","line":86,"loc":{"start":{"line":86,"column":60},"end":{"line":86,"column":76}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":55}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":59}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":57}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":61}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":49}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":53}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":95}},"14":{"start":{"line":28,"column":39},"end":{"line":28,"column":93}},"15":{"start":{"line":30,"column":0},"end":{"line":32,"column":1}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":22}},"17":{"start":{"line":71,"column":0},"end":{"line":99,"column":1}},"18":{"start":{"line":72,"column":4},"end":{"line":72,"column":35}},"19":{"start":{"line":73,"column":4},"end":{"line":73,"column":37}},"20":{"start":{"line":74,"column":4},"end":{"line":74,"column":42}},"21":{"start":{"line":75,"column":4},"end":{"line":75,"column":43}},"22":{"start":{"line":76,"column":4},"end":{"line":95,"column":7}},"23":{"start":{"line":77,"column":8},"end":{"line":77,"column":43}},"24":{"start":{"line":78,"column":8},"end":{"line":94,"column":9}},"25":{"start":{"line":79,"column":12},"end":{"line":81,"column":15}},"26":{"start":{"line":80,"column":16},"end":{"line":80,"column":48}},"27":{"start":{"line":82,"column":15},"end":{"line":94,"column":9}},"28":{"start":{"line":83,"column":12},"end":{"line":83,"column":39}},"29":{"start":{"line":85,"column":12},"end":{"line":85,"column":37}},"30":{"start":{"line":86,"column":12},"end":{"line":93,"column":17}},"31":{"start":{"line":87,"column":16},"end":{"line":87,"column":33}},"32":{"start":{"line":88,"column":16},"end":{"line":88,"column":36}},"33":{"start":{"line":89,"column":16},"end":{"line":89,"column":35}},"34":{"start":{"line":90,"column":16},"end":{"line":92,"column":17}},"35":{"start":{"line":91,"column":20},"end":{"line":91,"column":43}},"36":{"start":{"line":96,"column":4},"end":{"line":96,"column":25}},"37":{"start":{"line":97,"column":4},"end":{"line":97,"column":29}},"38":{"start":{"line":98,"column":4},"end":{"line":98,"column":20}},"39":{"start":{"line":100,"column":0},"end":{"line":100,"column":36}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":70},"end":{"line":28,"column":73}},{"start":{"line":28,"column":76},"end":{"line":28,"column":92}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}]},"3":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":13},"end":{"line":74,"column":19}},{"start":{"line":74,"column":23},"end":{"line":74,"column":41}}]},"4":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":8}},{"start":{"line":78,"column":8},"end":{"line":78,"column":8}}]},"5":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":15},"end":{"line":82,"column":15}},{"start":{"line":82,"column":15},"end":{"line":82,"column":15}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = memoize;","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","var _rest = require('./internal/rest');","","var _rest2 = _interopRequireDefault(_rest);","","var _setImmediate = require('./internal/setImmediate');","","var _setImmediate2 = _interopRequireDefault(_setImmediate);","","var _initialParams = require('./internal/initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function has(obj, key) {","    return key in obj;","}","","/**"," * Caches the results of an async function. When creating a hash to store"," * function results against, the callback is omitted from the hash and an"," * optional hash function can be used."," *"," * If no hash function is specified, the first argument is used as a hash key,"," * which may work reasonably if it is a string or a data type that converts to a"," * distinct string. Note that objects and arrays will not behave reasonably."," * Neither will cases where the other arguments are significant. In such cases,"," * specify your own hash function."," *"," * The cache of results is exposed as the `memo` property of the function"," * returned by `memoize`."," *"," * @name memoize"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} fn - The async function to proxy and cache results from."," * @param {Function} hasher - An optional function for generating a custom hash"," * for storing results. It has all the arguments applied to it apart from the"," * callback, and must be synchronous."," * @returns {AsyncFunction} a memoized version of `fn`"," * @example"," *"," * var slow_fn = function(name, callback) {"," *     // do something"," *     callback(null, result);"," * };"," * var fn = async.memoize(slow_fn);"," *"," * // fn can now be used as if it were slow_fn"," * fn('some name', function() {"," *     // callback"," * });"," */","function memoize(fn, hasher) {","    var memo = Object.create(null);","    var queues = Object.create(null);","    hasher = hasher || _identity2.default;","    var _fn = (0, _wrapAsync2.default)(fn);","    var memoized = (0, _initialParams2.default)(function memoized(args, callback) {","        var key = hasher.apply(null, args);","        if (has(memo, key)) {","            (0, _setImmediate2.default)(function () {","                callback.apply(null, memo[key]);","            });","        } else if (has(queues, key)) {","            queues[key].push(callback);","        } else {","            queues[key] = [callback];","            _fn.apply(null, args.concat((0, _rest2.default)(function (args) {","                memo[key] = args;","                var q = queues[key];","                delete queues[key];","                for (var i = 0, l = q.length; i < l; i++) {","                    q[i].apply(null, args);","                }","            })));","        }","    });","    memoized.memo = memo;","    memoized.unmemoized = fn;","    return memoized;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":5,"30":1,"31":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"82":0,"83":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"96":0,"97":0,"98":0,"100":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/nextTick.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/nextTick.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":1},"b":{"1":[1,0],"2":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":40,"column":0},"end":{"line":40,"column":11}},"4":{"start":{"line":42,"column":0},"end":{"line":48,"column":1}},"5":{"start":{"line":43,"column":4},"end":{"line":43,"column":30}},"6":{"start":{"line":44,"column":7},"end":{"line":48,"column":1}},"7":{"start":{"line":45,"column":4},"end":{"line":45,"column":26}},"8":{"start":{"line":47,"column":4},"end":{"line":47,"column":36}},"9":{"start":{"line":50,"column":0},"end":{"line":50,"column":50}},"10":{"start":{"line":51,"column":0},"end":{"line":51,"column":36}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":0},"end":{"line":42,"column":0}},{"start":{"line":42,"column":0},"end":{"line":42,"column":0}}]},"2":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":7},"end":{"line":44,"column":7}},{"start":{"line":44,"column":7},"end":{"line":44,"column":7}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","var _setImmediate = require('./internal/setImmediate');","","/**"," * Calls `callback` on a later loop around the event loop. In Node.js this just"," * calls `setImmediate`.  In the browser it will use `setImmediate` if"," * available, otherwise `setTimeout(callback, 0)`, which means other higher"," * priority events may precede the execution of `callback`."," *"," * This is used internally for browser-compatibility purposes."," *"," * @name nextTick"," * @static"," * @memberOf module:Utils"," * @method"," * @alias setImmediate"," * @category Util"," * @param {Function} callback - The function to call on a later loop around"," * the event loop. Invoked with (args...)."," * @param {...*} args... - any number of additional arguments to pass to the"," * callback on the next tick."," * @example"," *"," * var call_order = [];"," * async.nextTick(function() {"," *     call_order.push('two');"," *     // call_order now equals ['one','two']"," * });"," * call_order.push('one');"," *"," * async.setImmediate(function (a, b, c) {"," *     // a, b, and c equal 1, 2, and 3"," * }, 1, 2, 3);"," */","var _defer;","","if (_setImmediate.hasNextTick) {","    _defer = process.nextTick;","} else if (_setImmediate.hasSetImmediate) {","    _defer = setImmediate;","} else {","    _defer = _setImmediate.fallback;","}","","exports.default = (0, _setImmediate.wrap)(_defer);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"40":1,"42":1,"43":1,"44":0,"45":0,"47":0,"50":1,"51":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/parallelLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/parallelLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"parallelLimit","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":53}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":37,"column":0},"end":{"line":39,"column":1}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":78}},"11":{"start":{"line":40,"column":0},"end":{"line":40,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = parallelLimit;","","var _eachOfLimit = require('./internal/eachOfLimit');","","var _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);","","var _parallel = require('./internal/parallel');","","var _parallel2 = _interopRequireDefault(_parallel);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name parallelLimit"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.parallel]{@link module:ControlFlow.parallel}"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection of"," * [async functions]{@link AsyncFunction} to run."," * Each async function can complete with any number of optional `result` values."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed successfully. This function gets a results array"," * (or object) containing all the result arguments passed to the task callbacks."," * Invoked with (err, results)."," */","function parallelLimit(tasks, limit, callback) {","  (0, _parallel2.default)((0, _eachOfLimit2.default)(limit), tasks, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"37":1,"38":0,"40":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/priorityQueue.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/priorityQueue.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":4,"37":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,4],"9":[4,4]},"f":{"1":0,"2":0,"3":0,"4":4},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":49}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":13},"end":{"line":12,"column":49}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":47},"end":{"line":23,"column":59}}},"4":{"name":"_interopRequireDefault","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":54,"column":2}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":54}},"4":{"start":{"line":12,"column":4},"end":{"line":48,"column":6}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":56}},"6":{"start":{"line":13,"column":30},"end":{"line":13,"column":56}},"7":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"8":{"start":{"line":15,"column":12},"end":{"line":15,"column":64}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"10":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"11":{"start":{"line":19,"column":12},"end":{"line":19,"column":26}},"12":{"start":{"line":21,"column":8},"end":{"line":26,"column":9}},"13":{"start":{"line":23,"column":12},"end":{"line":25,"column":15}},"14":{"start":{"line":24,"column":16},"end":{"line":24,"column":26}},"15":{"start":{"line":28,"column":8},"end":{"line":28,"column":33}},"16":{"start":{"line":29,"column":8},"end":{"line":29,"column":37}},"17":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"18":{"start":{"line":31,"column":12},"end":{"line":31,"column":37}},"19":{"start":{"line":34,"column":8},"end":{"line":46,"column":9}},"20":{"start":{"line":35,"column":12},"end":{"line":39,"column":14}},"21":{"start":{"line":41,"column":12},"end":{"line":45,"column":13}},"22":{"start":{"line":42,"column":16},"end":{"line":42,"column":54}},"23":{"start":{"line":44,"column":16},"end":{"line":44,"column":36}},"24":{"start":{"line":47,"column":8},"end":{"line":47,"column":47}},"25":{"start":{"line":51,"column":4},"end":{"line":51,"column":21}},"26":{"start":{"line":53,"column":4},"end":{"line":53,"column":13}},"27":{"start":{"line":56,"column":0},"end":{"line":56,"column":41}},"28":{"start":{"line":58,"column":0},"end":{"line":58,"column":49}},"29":{"start":{"line":60,"column":0},"end":{"line":60,"column":35}},"30":{"start":{"line":62,"column":0},"end":{"line":62,"column":43}},"31":{"start":{"line":64,"column":0},"end":{"line":64,"column":46}},"32":{"start":{"line":66,"column":0},"end":{"line":66,"column":59}},"33":{"start":{"line":68,"column":0},"end":{"line":68,"column":32}},"34":{"start":{"line":70,"column":0},"end":{"line":70,"column":45}},"35":{"start":{"line":72,"column":0},"end":{"line":72,"column":95}},"36":{"start":{"line":72,"column":39},"end":{"line":72,"column":93}},"37":{"start":{"line":74,"column":0},"end":{"line":74,"column":36}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":8}},{"start":{"line":13,"column":8},"end":{"line":13,"column":8}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":8}},{"start":{"line":14,"column":8},"end":{"line":14,"column":8}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":8}},{"start":{"line":18,"column":8},"end":{"line":18,"column":8}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":8}},{"start":{"line":21,"column":8},"end":{"line":21,"column":8}}]},"5":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":19},"end":{"line":28,"column":27}},{"start":{"line":28,"column":31},"end":{"line":28,"column":32}}]},"6":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":15},"end":{"line":30,"column":23}},{"start":{"line":30,"column":27},"end":{"line":30,"column":56}}]},"7":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":12}},{"start":{"line":41,"column":12},"end":{"line":41,"column":12}}]},"8":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":70},"end":{"line":72,"column":73}},{"start":{"line":72,"column":76},"end":{"line":72,"column":92}}]},"9":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":46},"end":{"line":72,"column":49}},{"start":{"line":72,"column":53},"end":{"line":72,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (worker, concurrency) {","    // Start with a normal queue","    var q = (0, _queue2.default)(worker, concurrency);","","    // Override push to accept second parameter representing priority","    q.push = function (data, priority, callback) {","        if (callback == null) callback = _noop2.default;","        if (typeof callback !== 'function') {","            throw new Error('task callback must be a function');","        }","        q.started = true;","        if (!(0, _isArray2.default)(data)) {","            data = [data];","        }","        if (data.length === 0) {","            // call drain immediately if there are no tasks","            return (0, _setImmediate2.default)(function () {","                q.drain();","            });","        }","","        priority = priority || 0;","        var nextNode = q._tasks.head;","        while (nextNode && priority >= nextNode.priority) {","            nextNode = nextNode.next;","        }","","        for (var i = 0, l = data.length; i < l; i++) {","            var item = {","                data: data[i],","                priority: priority,","                callback: callback","            };","","            if (nextNode) {","                q._tasks.insertBefore(nextNode, item);","            } else {","                q._tasks.push(item);","            }","        }","        (0, _setImmediate2.default)(q.process);","    };","","    // Remove unshift function","    delete q.unshift;","","    return q;","};","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _setImmediate = require('./setImmediate');","","var _setImmediate2 = _interopRequireDefault(_setImmediate);","","var _queue = require('./queue');","","var _queue2 = _interopRequireDefault(_queue);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","module.exports = exports['default'];","","/**"," * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and"," * completed in ascending priority order."," *"," * @name priorityQueue"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.queue]{@link module:ControlFlow.queue}"," * @category Control Flow"," * @param {AsyncFunction} worker - An async function for processing a queued task."," * If you want to handle errors from an individual task, pass a callback to"," * `q.push()`."," * Invoked with (task, callback)."," * @param {number} concurrency - An `integer` for determining how many `worker`"," * functions should be run in parallel.  If omitted, the concurrency defaults to"," * `1`.  If the concurrency is `0`, an error is thrown."," * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two"," * differences between `queue` and `priorityQueue` objects:"," * * `push(task, priority, [callback])` - `priority` should be a number. If an"," *   array of `tasks` is given, all tasks will be assigned the same priority."," * * The `unshift` method was removed."," */"],"l":{"3":1,"7":1,"9":0,"12":0,"13":0,"14":0,"15":0,"17":0,"18":0,"19":0,"21":0,"23":0,"24":0,"28":0,"29":0,"30":0,"31":0,"34":0,"35":0,"41":0,"42":0,"44":0,"47":0,"51":0,"53":0,"56":1,"58":1,"60":1,"62":1,"64":1,"66":1,"68":1,"70":1,"72":4,"74":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/setImmediate.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/setImmediate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{"1":[1,0],"2":[1,1]},"f":{"1":1},"fnMap":{"1":{"name":"_interopRequireDefault","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":95}},"5":{"start":{"line":11,"column":39},"end":{"line":11,"column":93}},"6":{"start":{"line":44,"column":0},"end":{"line":44,"column":41}},"7":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":70},"end":{"line":11,"column":73}},{"start":{"line":11,"column":76},"end":{"line":11,"column":92}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _setImmediate = require('./internal/setImmediate');","","var _setImmediate2 = _interopRequireDefault(_setImmediate);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Calls `callback` on a later loop around the event loop. In Node.js this just"," * calls `setImmediate`.  In the browser it will use `setImmediate` if"," * available, otherwise `setTimeout(callback, 0)`, which means other higher"," * priority events may precede the execution of `callback`."," *"," * This is used internally for browser-compatibility purposes."," *"," * @name setImmediate"," * @static"," * @memberOf module:Utils"," * @method"," * @alias nextTick"," * @category Util"," * @param {Function} callback - The function to call on a later loop around"," * the event loop. Invoked with (args...)."," * @param {...*} args... - any number of additional arguments to pass to the"," * callback on the next tick."," * @example"," *"," * var call_order = [];"," * async.nextTick(function() {"," *     call_order.push('two');"," *     // call_order now equals ['one','two']"," * });"," * call_order.push('one');"," *"," * async.setImmediate(function (a, b, c) {"," *     // a, b, and c equal 1, 2, and 3"," * }, 1, 2, 3);"," */","exports.default = _setImmediate2.default;","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"44":1,"45":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/queue.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/queue.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":1,"9":1,"10":1,"11":2,"12":1},"b":{"1":[1,1],"2":[2,2]},"f":{"1":0,"2":0,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":49}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":30},"end":{"line":9,"column":51}}},"3":{"name":"_interopRequireDefault","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":49}},"4":{"start":{"line":9,"column":2},"end":{"line":11,"column":21}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":26}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":45}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":49}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":95}},"11":{"start":{"line":22,"column":39},"end":{"line":22,"column":93}},"12":{"start":{"line":24,"column":0},"end":{"line":24,"column":36}}},"branchMap":{"1":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":70},"end":{"line":22,"column":73}},{"start":{"line":22,"column":76},"end":{"line":22,"column":92}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":46},"end":{"line":22,"column":49}},{"start":{"line":22,"column":53},"end":{"line":22,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","exports.default = function (worker, concurrency) {","  var _worker = (0, _wrapAsync2.default)(worker);","  return (0, _queue2.default)(function (items, cb) {","    _worker(items[0], cb);","  }, concurrency, 1);","};","","var _queue = require('./internal/queue');","","var _queue2 = _interopRequireDefault(_queue);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","module.exports = exports['default'];","","/**"," * A queue of tasks for the worker function to complete."," * @typedef {Object} QueueObject"," * @memberOf module:ControlFlow"," * @property {Function} length - a function returning the number of items"," * waiting to be processed. Invoke with `queue.length()`."," * @property {boolean} started - a boolean indicating whether or not any"," * items have been pushed and processed by the queue."," * @property {Function} running - a function returning the number of items"," * currently being processed. Invoke with `queue.running()`."," * @property {Function} workersList - a function returning the array of items"," * currently being processed. Invoke with `queue.workersList()`."," * @property {Function} idle - a function returning false if there are items"," * waiting or being processed, or true if not. Invoke with `queue.idle()`."," * @property {number} concurrency - an integer for determining how many `worker`"," * functions should be run in parallel. This property can be changed after a"," * `queue` is created to alter the concurrency on-the-fly."," * @property {Function} push - add a new task to the `queue`. Calls `callback`"," * once the `worker` has finished processing the task. Instead of a single task,"," * a `tasks` array can be submitted. The respective callback is used for every"," * task in the list. Invoke with `queue.push(task, [callback])`,"," * @property {Function} unshift - add a new task to the front of the `queue`."," * Invoke with `queue.unshift(task, [callback])`."," * @property {Function} saturated - a callback that is called when the number of"," * running workers hits the `concurrency` limit, and further tasks will be"," * queued."," * @property {Function} unsaturated - a callback that is called when the number"," * of running workers is less than the `concurrency` & `buffer` limits, and"," * further tasks will not be queued."," * @property {number} buffer - A minimum threshold buffer in order to say that"," * the `queue` is `unsaturated`."," * @property {Function} empty - a callback that is called when the last item"," * from the `queue` is given to a `worker`."," * @property {Function} drain - a callback that is called when the last item"," * from the `queue` has returned from the `worker`."," * @property {Function} error - a callback that is called when a task errors."," * Has the signature `function(error, task)`."," * @property {boolean} paused - a boolean for determining whether the queue is"," * in a paused state."," * @property {Function} pause - a function that pauses the processing of tasks"," * until `resume()` is called. Invoke with `queue.pause()`."," * @property {Function} resume - a function that resumes the processing of"," * queued tasks when the queue is paused. Invoke with `queue.resume()`."," * @property {Function} kill - a function that removes the `drain` callback and"," * empties remaining tasks from the queue forcing it to go idle. Invoke with `queue.kill()`."," */","","/**"," * Creates a `queue` object with the specified `concurrency`. Tasks added to the"," * `queue` are processed in parallel (up to the `concurrency` limit). If all"," * `worker`s are in progress, the task is queued until one becomes available."," * Once a `worker` completes a `task`, that `task`'s callback is called."," *"," * @name queue"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {AsyncFunction} worker - An async function for processing a queued task."," * If you want to handle errors from an individual task, pass a callback to"," * `q.push()`. Invoked with (task, callback)."," * @param {number} [concurrency=1] - An `integer` for determining how many"," * `worker` functions should be run in parallel.  If omitted, the concurrency"," * defaults to `1`.  If the concurrency is `0`, an error is thrown."," * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can"," * attached as certain properties to listen for specific events during the"," * lifecycle of the queue."," * @example"," *"," * // create a queue object with concurrency 2"," * var q = async.queue(function(task, callback) {"," *     console.log('hello ' + task.name);"," *     callback();"," * }, 2);"," *"," * // assign a callback"," * q.drain = function() {"," *     console.log('all items have been processed');"," * };"," *"," * // add some items to the queue"," * q.push({name: 'foo'}, function(err) {"," *     console.log('finished processing foo');"," * });"," * q.push({name: 'bar'}, function (err) {"," *     console.log('finished processing bar');"," * });"," *"," * // add some items to the queue (batch-wise)"," * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {"," *     console.log('finished processing item');"," * });"," *"," * // add some items to the front of the queue"," * q.unshift({name: 'bar'}, function (err) {"," *     console.log('finished processing bar');"," * });"," */"],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"14":1,"16":1,"18":1,"20":1,"22":2,"24":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/race.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/race.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":4,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"race","line":62,"loc":{"start":{"line":62,"column":0},"end":{"line":62,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":49}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":39}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":62,"column":0},"end":{"line":69,"column":1}},"14":{"start":{"line":63,"column":4},"end":{"line":63,"column":63}},"15":{"start":{"line":64,"column":4},"end":{"line":64,"column":127}},"16":{"start":{"line":64,"column":40},"end":{"line":64,"column":127}},"17":{"start":{"line":65,"column":4},"end":{"line":65,"column":41}},"18":{"start":{"line":65,"column":23},"end":{"line":65,"column":41}},"19":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"20":{"start":{"line":67,"column":8},"end":{"line":67,"column":53}},"21":{"start":{"line":70,"column":0},"end":{"line":70,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":35},"end":{"line":63,"column":43}},{"start":{"line":63,"column":47},"end":{"line":63,"column":61}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"5":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = race;","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Runs the `tasks` array of functions in parallel, without waiting until the"," * previous function has completed. Once any of the `tasks` complete or pass an"," * error to its callback, the main `callback` is immediately called. It's"," * equivalent to `Promise.race()`."," *"," * @name race"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}"," * to run. Each function can complete with an optional `result` value."," * @param {Function} callback - A callback to run once any of the functions have"," * completed. This function gets an error or result from the first function that"," * completed. Invoked with (err, result)."," * @returns undefined"," * @example"," *"," * async.race(["," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'two');"," *         }, 100);"," *     }"," * ],"," * // main callback"," * function(err, result) {"," *     // the result will be equal to 'two' as it finishes earlier"," * });"," */","function race(tasks, callback) {","    callback = (0, _once2.default)(callback || _noop2.default);","    if (!(0, _isArray2.default)(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));","    if (!tasks.length) return callback();","    for (var i = 0, l = tasks.length; i < l; i++) {","        (0, _wrapAsync2.default)(tasks[i])(callback);","    }","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"70":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reduceRight.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reduceRight.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"reduceRight","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":54}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}},"8":{"start":{"line":38,"column":0},"end":{"line":41,"column":1}},"9":{"start":{"line":39,"column":2},"end":{"line":39,"column":45}},"10":{"start":{"line":40,"column":2},"end":{"line":40,"column":60}},"11":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = reduceRight;","","var _reduce = require('./reduce');","","var _reduce2 = _interopRequireDefault(_reduce);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var slice = Array.prototype.slice;","","/**"," * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order."," *"," * @name reduceRight"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reduce]{@link module:Collections.reduce}"," * @alias foldr"," * @category Collection"," * @param {Array} array - A collection to iterate over."," * @param {*} memo - The initial state of the reduction."," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * array to produce the next step in the reduction."," * The `iteratee` should complete with the next state of the reduction."," * If the iteratee complete with an error, the reduction is stopped and the"," * main `callback` is immediately called with the error."," * Invoked with (memo, item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the reduced value. Invoked with"," * (err, result)."," */","function reduceRight(array, memo, iteratee, callback) {","  var reversed = slice.call(array).reverse();","  (0, _reduce2.default)(reversed, memo, iteratee, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"38":1,"39":0,"40":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reflect.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reflect.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[1,2],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"reflect","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":21}}},"3":{"name":"reflectOn","line":63,"loc":{"start":{"line":63,"column":40},"end":{"line":63,"column":82}}},"4":{"name":"callback","line":64,"loc":{"start":{"line":64,"column":38},"end":{"line":64,"column":69}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":57}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":61}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":61,"column":0},"end":{"line":84,"column":1}},"12":{"start":{"line":62,"column":4},"end":{"line":62,"column":43}},"13":{"start":{"line":63,"column":4},"end":{"line":83,"column":7}},"14":{"start":{"line":64,"column":8},"end":{"line":80,"column":12}},"15":{"start":{"line":65,"column":12},"end":{"line":79,"column":13}},"16":{"start":{"line":66,"column":16},"end":{"line":68,"column":19}},"17":{"start":{"line":70,"column":16},"end":{"line":70,"column":33}},"18":{"start":{"line":71,"column":16},"end":{"line":75,"column":17}},"19":{"start":{"line":72,"column":20},"end":{"line":72,"column":38}},"20":{"start":{"line":73,"column":23},"end":{"line":75,"column":17}},"21":{"start":{"line":74,"column":20},"end":{"line":74,"column":35}},"22":{"start":{"line":76,"column":16},"end":{"line":78,"column":19}},"23":{"start":{"line":82,"column":8},"end":{"line":82,"column":37}},"24":{"start":{"line":85,"column":0},"end":{"line":85,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":12}},{"start":{"line":65,"column":12},"end":{"line":65,"column":12}}]},"4":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":16},"end":{"line":71,"column":16}},{"start":{"line":71,"column":16},"end":{"line":71,"column":16}}]},"5":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":23},"end":{"line":73,"column":23}},{"start":{"line":73,"column":23},"end":{"line":73,"column":23}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = reflect;","","var _initialParams = require('./internal/initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","var _rest = require('./internal/rest');","","var _rest2 = _interopRequireDefault(_rest);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Wraps the async function in another function that always completes with a"," * result object, even when it errors."," *"," * The result object has either the property `error` or `value`."," *"," * @name reflect"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} fn - The async function you want to wrap"," * @returns {Function} - A function that always passes null to it's callback as"," * the error. The second argument to the callback will be an `object` with"," * either an `error` or a `value` property."," * @example"," *"," * async.parallel(["," *     async.reflect(function(callback) {"," *         // do some stuff ..."," *         callback(null, 'one');"," *     }),"," *     async.reflect(function(callback) {"," *         // do some more stuff but error ..."," *         callback('bad stuff happened');"," *     }),"," *     async.reflect(function(callback) {"," *         // do some more stuff ..."," *         callback(null, 'two');"," *     })"," * ],"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results[0].value = 'one'"," *     // results[1].error = 'bad stuff happened'"," *     // results[2].value = 'two'"," * });"," */","function reflect(fn) {","    var _fn = (0, _wrapAsync2.default)(fn);","    return (0, _initialParams2.default)(function reflectOn(args, reflectCallback) {","        args.push((0, _rest2.default)(function callback(err, cbArgs) {","            if (err) {","                reflectCallback(null, {","                    error: err","                });","            } else {","                var value = null;","                if (cbArgs.length === 1) {","                    value = cbArgs[0];","                } else if (cbArgs.length > 1) {","                    value = cbArgs;","                }","                reflectCallback(null, {","                    value: value","                });","            }","        }));","","        return _fn.apply(this, args);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"70":0,"71":0,"72":0,"73":0,"74":0,"76":0,"82":0,"85":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reflectAll.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/reflectAll.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,4],"2":[4,4],"3":[0,0]},"f":{"1":4,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"reflectAll","line":93,"loc":{"start":{"line":93,"column":0},"end":{"line":93,"column":27}}},"3":{"name":"(anonymous_3)","line":99,"loc":{"start":{"line":99,"column":41},"end":{"line":99,"column":62}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":49}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":49}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":45}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":52}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":48}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":55}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":93,"column":0},"end":{"line":104,"column":1}},"14":{"start":{"line":94,"column":4},"end":{"line":94,"column":16}},"15":{"start":{"line":95,"column":4},"end":{"line":102,"column":5}},"16":{"start":{"line":96,"column":8},"end":{"line":96,"column":68}},"17":{"start":{"line":98,"column":8},"end":{"line":98,"column":21}},"18":{"start":{"line":99,"column":8},"end":{"line":101,"column":11}},"19":{"start":{"line":100,"column":12},"end":{"line":100,"column":62}},"20":{"start":{"line":103,"column":4},"end":{"line":103,"column":19}},"21":{"start":{"line":105,"column":0},"end":{"line":105,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = reflectAll;","","var _reflect = require('./reflect');","","var _reflect2 = _interopRequireDefault(_reflect);","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _arrayMap2 = require('lodash/_arrayMap');","","var _arrayMap3 = _interopRequireDefault(_arrayMap2);","","var _baseForOwn = require('lodash/_baseForOwn');","","var _baseForOwn2 = _interopRequireDefault(_baseForOwn);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * A helper function that wraps an array or an object of functions with `reflect`."," *"," * @name reflectAll"," * @static"," * @memberOf module:Utils"," * @method"," * @see [async.reflect]{@link module:Utils.reflect}"," * @category Util"," * @param {Array|Object|Iterable} tasks - The collection of"," * [async functions]{@link AsyncFunction} to wrap in `async.reflect`."," * @returns {Array} Returns an array of async functions, each wrapped in"," * `async.reflect`"," * @example"," *"," * let tasks = ["," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     function(callback) {"," *         // do some more stuff but error ..."," *         callback(new Error('bad stuff happened'));"," *     },"," *     function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'two');"," *         }, 100);"," *     }"," * ];"," *"," * async.parallel(async.reflectAll(tasks),"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results[0].value = 'one'"," *     // results[1].error = Error('bad stuff happened')"," *     // results[2].value = 'two'"," * });"," *"," * // an example using an object instead of an array"," * let tasks = {"," *     one: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'one');"," *         }, 200);"," *     },"," *     two: function(callback) {"," *         callback('two');"," *     },"," *     three: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 'three');"," *         }, 100);"," *     }"," * };"," *"," * async.parallel(async.reflectAll(tasks),"," * // optional callback"," * function(err, results) {"," *     // values"," *     // results.one.value = 'one'"," *     // results.two.error = 'two'"," *     // results.three.value = 'three'"," * });"," */","function reflectAll(tasks) {","    var results;","    if ((0, _isArray2.default)(tasks)) {","        results = (0, _arrayMap3.default)(tasks, _reflect2.default);","    } else {","        results = {};","        (0, _baseForOwn2.default)(tasks, function (task, key) {","            results[key] = _reflect2.default.call(this, task);","        });","    }","    return results;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"93":1,"94":0,"95":0,"96":0,"98":0,"99":0,"100":0,"103":0,"105":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/rejectLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/rejectLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":65}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":67}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _reject = require('./internal/reject');","","var _reject2 = _interopRequireDefault(_reject);","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name rejectLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reject]{@link module:Collections.reject}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {Function} iteratee - An async truth test to apply to each item in"," * `coll`."," * The should complete with a boolean value as its `result`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","exports.default = (0, _doParallelLimit2.default)(_reject2.default);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/rejectSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/rejectSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":67}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _rejectLimit = require('./rejectLimit');","","var _rejectLimit2 = _interopRequireDefault(_rejectLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time."," *"," * @name rejectSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.reject]{@link module:Collections.reject}"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {Function} iteratee - An async truth test to apply to each item in"," * `coll`."," * The should complete with a boolean value as its `result`."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Invoked with (err, results)."," */","exports.default = (0, _doLimit2.default)(_rejectLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"34":1,"35":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/retry.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/retry.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1},"b":{"1":[1,2],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0]},"f":{"1":3,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"retry","line":106,"loc":{"start":{"line":106,"column":0},"end":{"line":106,"column":37}}},"3":{"name":"parseTimes","line":115,"loc":{"start":{"line":115,"column":4},"end":{"line":115,"column":32}}},"4":{"name":"retryAttempt","line":144,"loc":{"start":{"line":144,"column":4},"end":{"line":144,"column":28}}},"5":{"name":"(anonymous_5)","line":145,"loc":{"start":{"line":145,"column":14},"end":{"line":145,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":106,"column":0},"end":{"line":155,"column":1}},"12":{"start":{"line":107,"column":4},"end":{"line":107,"column":26}},"13":{"start":{"line":108,"column":4},"end":{"line":108,"column":29}},"14":{"start":{"line":110,"column":4},"end":{"line":113,"column":6}},"15":{"start":{"line":115,"column":4},"end":{"line":127,"column":5}},"16":{"start":{"line":116,"column":8},"end":{"line":126,"column":9}},"17":{"start":{"line":117,"column":12},"end":{"line":117,"column":50}},"18":{"start":{"line":119,"column":12},"end":{"line":119,"column":136}},"19":{"start":{"line":121,"column":12},"end":{"line":121,"column":44}},"20":{"start":{"line":122,"column":15},"end":{"line":126,"column":9}},"21":{"start":{"line":123,"column":12},"end":{"line":123,"column":44}},"22":{"start":{"line":125,"column":12},"end":{"line":125,"column":65}},"23":{"start":{"line":129,"column":4},"end":{"line":135,"column":5}},"24":{"start":{"line":130,"column":8},"end":{"line":130,"column":42}},"25":{"start":{"line":131,"column":8},"end":{"line":131,"column":20}},"26":{"start":{"line":133,"column":8},"end":{"line":133,"column":34}},"27":{"start":{"line":134,"column":8},"end":{"line":134,"column":46}},"28":{"start":{"line":137,"column":4},"end":{"line":139,"column":5}},"29":{"start":{"line":138,"column":8},"end":{"line":138,"column":61}},"30":{"start":{"line":141,"column":4},"end":{"line":141,"column":47}},"31":{"start":{"line":143,"column":4},"end":{"line":143,"column":20}},"32":{"start":{"line":144,"column":4},"end":{"line":152,"column":5}},"33":{"start":{"line":145,"column":8},"end":{"line":151,"column":11}},"34":{"start":{"line":146,"column":12},"end":{"line":150,"column":13}},"35":{"start":{"line":147,"column":16},"end":{"line":147,"column":72}},"36":{"start":{"line":149,"column":16},"end":{"line":149,"column":48}},"37":{"start":{"line":154,"column":4},"end":{"line":154,"column":19}},"38":{"start":{"line":156,"column":0},"end":{"line":156,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]},"3":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":8}},{"start":{"line":116,"column":8},"end":{"line":116,"column":8}}]},"4":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":24},"end":{"line":117,"column":32}},{"start":{"line":117,"column":36},"end":{"line":117,"column":49}}]},"5":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":66},"end":{"line":119,"column":76}},{"start":{"line":119,"column":79},"end":{"line":119,"column":135}}]},"6":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":103},"end":{"line":119,"column":114}},{"start":{"line":119,"column":118},"end":{"line":119,"column":134}}]},"7":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":15},"end":{"line":122,"column":15}},{"start":{"line":122,"column":15},"end":{"line":122,"column":15}}]},"8":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":19},"end":{"line":122,"column":40}},{"start":{"line":122,"column":44},"end":{"line":122,"column":65}}]},"9":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":24},"end":{"line":123,"column":26}},{"start":{"line":123,"column":30},"end":{"line":123,"column":43}}]},"10":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":4}},{"start":{"line":129,"column":4},"end":{"line":129,"column":4}}]},"11":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":8},"end":{"line":129,"column":28}},{"start":{"line":129,"column":32},"end":{"line":129,"column":58}}]},"12":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":19},"end":{"line":130,"column":23}},{"start":{"line":130,"column":27},"end":{"line":130,"column":41}}]},"13":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":19},"end":{"line":134,"column":27}},{"start":{"line":134,"column":31},"end":{"line":134,"column":45}}]},"14":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"15":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":12},"end":{"line":146,"column":12}},{"start":{"line":146,"column":12},"end":{"line":146,"column":12}}]},"16":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":16},"end":{"line":146,"column":19}},{"start":{"line":146,"column":23},"end":{"line":146,"column":48}},{"start":{"line":146,"column":53},"end":{"line":146,"column":93}},{"start":{"line":146,"column":97},"end":{"line":146,"column":121}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = retry;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _constant = require('lodash/constant');","","var _constant2 = _interopRequireDefault(_constant);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Attempts to get a successful response from `task` no more than `times` times"," * before returning an error. If the task is successful, the `callback` will be"," * passed the result of the successful task. If all attempts fail, the callback"," * will be passed the error and result (if any) of the final attempt."," *"," * @name retry"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @see [async.retryable]{@link module:ControlFlow.retryable}"," * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an"," * object with `times` and `interval` or a number."," * * `times` - The number of attempts to make before giving up.  The default"," *   is `5`."," * * `interval` - The time to wait between retries, in milliseconds.  The"," *   default is `0`. The interval may also be specified as a function of the"," *   retry count (see example)."," * * `errorFilter` - An optional synchronous function that is invoked on"," *   erroneous result. If it returns `true` the retry attempts will continue;"," *   if the function returns `false` the retry flow is aborted with the current"," *   attempt's error and result being returned to the final callback."," *   Invoked with (err)."," * * If `opts` is a number, the number specifies the number of times to retry,"," *   with the default interval of `0`."," * @param {AsyncFunction} task - An async function to retry."," * Invoked with (callback)."," * @param {Function} [callback] - An optional callback which is called when the"," * task has succeeded, or after the final failed attempt. It receives the `err`"," * and `result` arguments of the last attempt at completing the `task`. Invoked"," * with (err, results)."," *"," * @example"," *"," * // The `retry` function can be used as a stand-alone control flow by passing"," * // a callback, as shown below:"," *"," * // try calling apiMethod 3 times"," * async.retry(3, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod 3 times, waiting 200 ms between each retry"," * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod 10 times with exponential backoff"," * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)"," * async.retry({"," *   times: 10,"," *   interval: function(retryCount) {"," *     return 50 * Math.pow(2, retryCount);"," *   }"," * }, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod the default 5 times no delay between each retry"," * async.retry(apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // try calling apiMethod only when error condition satisfies, all other"," * // errors will abort the retry control flow and return to final callback"," * async.retry({"," *   errorFilter: function(err) {"," *     return err.message === 'Temporary error'; // only retry on a specific error"," *   }"," * }, apiMethod, function(err, result) {"," *     // do something with the result"," * });"," *"," * // It can also be embedded within other control flow functions to retry"," * // individual methods that are not as reliable, like this:"," * async.auto({"," *     users: api.getUsers.bind(api),"," *     payments: async.retryable(3, api.getPayments.bind(api))"," * }, function(err, results) {"," *     // do something with the results"," * });"," *"," */","function retry(opts, task, callback) {","    var DEFAULT_TIMES = 5;","    var DEFAULT_INTERVAL = 0;","","    var options = {","        times: DEFAULT_TIMES,","        intervalFunc: (0, _constant2.default)(DEFAULT_INTERVAL)","    };","","    function parseTimes(acc, t) {","        if (typeof t === 'object') {","            acc.times = +t.times || DEFAULT_TIMES;","","            acc.intervalFunc = typeof t.interval === 'function' ? t.interval : (0, _constant2.default)(+t.interval || DEFAULT_INTERVAL);","","            acc.errorFilter = t.errorFilter;","        } else if (typeof t === 'number' || typeof t === 'string') {","            acc.times = +t || DEFAULT_TIMES;","        } else {","            throw new Error(\"Invalid arguments for async.retry\");","        }","    }","","    if (arguments.length < 3 && typeof opts === 'function') {","        callback = task || _noop2.default;","        task = opts;","    } else {","        parseTimes(options, opts);","        callback = callback || _noop2.default;","    }","","    if (typeof task !== 'function') {","        throw new Error(\"Invalid arguments for async.retry\");","    }","","    var _task = (0, _wrapAsync2.default)(task);","","    var attempt = 1;","    function retryAttempt() {","        _task(function (err) {","            if (err && attempt++ < options.times && (typeof options.errorFilter != 'function' || options.errorFilter(err))) {","                setTimeout(retryAttempt, options.intervalFunc(attempt));","            } else {","                callback.apply(null, arguments);","            }","        });","    }","","    retryAttempt();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"106":1,"107":0,"108":0,"110":0,"115":1,"116":0,"117":0,"119":0,"121":0,"122":0,"123":0,"125":0,"129":0,"130":0,"131":0,"133":0,"134":0,"137":0,"138":0,"141":0,"143":0,"144":1,"145":0,"146":0,"147":0,"149":0,"154":0,"156":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/retryable.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/retryable.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":3,"21":1},"b":{"1":[0,0],"2":[0,0],"3":[1,2],"4":[3,3]},"f":{"1":0,"2":0,"3":0,"4":3},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":40}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":40},"end":{"line":13,"column":66}}},"3":{"name":"taskFn","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"4":{"name":"_interopRequireDefault","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":11,"column":5}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":20}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":20}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":47}},"7":{"start":{"line":13,"column":4},"end":{"line":19,"column":7}},"8":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"9":{"start":{"line":15,"column":12},"end":{"line":15,"column":47}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":107}},"11":{"start":{"line":18,"column":18},"end":{"line":18,"column":63}},"12":{"start":{"line":18,"column":68},"end":{"line":18,"column":107}},"13":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}},"14":{"start":{"line":24,"column":0},"end":{"line":24,"column":45}},"15":{"start":{"line":26,"column":0},"end":{"line":26,"column":57}},"16":{"start":{"line":28,"column":0},"end":{"line":28,"column":61}},"17":{"start":{"line":30,"column":0},"end":{"line":30,"column":49}},"18":{"start":{"line":32,"column":0},"end":{"line":32,"column":53}},"19":{"start":{"line":34,"column":0},"end":{"line":34,"column":95}},"20":{"start":{"line":34,"column":39},"end":{"line":34,"column":93}},"21":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":8}},{"start":{"line":18,"column":8},"end":{"line":18,"column":8}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":70},"end":{"line":34,"column":73}},{"start":{"line":34,"column":76},"end":{"line":34,"column":92}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":46},"end":{"line":34,"column":49}},{"start":{"line":34,"column":53},"end":{"line":34,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (opts, task) {","    if (!task) {","        task = opts;","        opts = null;","    }","    var _task = (0, _wrapAsync2.default)(task);","    return (0, _initialParams2.default)(function (args, callback) {","        function taskFn(cb) {","            _task.apply(null, args.concat(cb));","        }","","        if (opts) (0, _retry2.default)(opts, taskFn, callback);else (0, _retry2.default)(taskFn, callback);","    });","};","","var _retry = require('./retry');","","var _retry2 = _interopRequireDefault(_retry);","","var _initialParams = require('./internal/initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","module.exports = exports['default'];","","/**"," * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method"," * wraps a task and makes it retryable, rather than immediately calling it"," * with retries."," *"," * @name retryable"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.retry]{@link module:ControlFlow.retry}"," * @category Control Flow"," * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional"," * options, exactly the same as from `retry`"," * @param {AsyncFunction} task - the asynchronous function to wrap."," * This function will be passed any arguments passed to the returned wrapper."," * Invoked with (...args, callback)."," * @returns {AsyncFunction} The wrapped function, which when invoked, will"," * retry on an error, based on the parameters specified in `opts`."," * This function will accept the same parameters as `task`."," * @example"," *"," * async.auto({"," *     dep1: async.retryable(3, getFromFlakyService),"," *     process: [\"dep1\", async.retryable(3, function (results, cb) {"," *         maybeProcessData(results.dep1, cb);"," *     })]"," * }, callback);"," */"],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"12":0,"13":0,"14":1,"15":0,"18":0,"22":1,"24":1,"26":1,"28":1,"30":1,"32":1,"34":3,"36":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/series.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/series.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"series","line":82,"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":59}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":82,"column":0},"end":{"line":84,"column":1}},"10":{"start":{"line":83,"column":2},"end":{"line":83,"column":67}},"11":{"start":{"line":85,"column":0},"end":{"line":85,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = series;","","var _parallel = require('./internal/parallel');","","var _parallel2 = _interopRequireDefault(_parallel);","","var _eachOfSeries = require('./eachOfSeries');","","var _eachOfSeries2 = _interopRequireDefault(_eachOfSeries);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Run the functions in the `tasks` collection in series, each one running once"," * the previous function has completed. If any functions in the series pass an"," * error to its callback, no more functions are run, and `callback` is"," * immediately called with the value of the error. Otherwise, `callback`"," * receives an array of results when `tasks` have completed."," *"," * It is also possible to use an object instead of an array. Each property will"," * be run as a function, and the results will be passed to the final `callback`"," * as an object instead of an array. This can be a more readable way of handling"," *  results from {@link async.series}."," *"," * **Note** that while many implementations preserve the order of object"," * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)"," * explicitly states that"," *"," * > The mechanics and order of enumerating the properties is not specified."," *"," * So if you rely on the order in which your series of functions are executed,"," * and want this to work on all platforms, consider using an array."," *"," * @name series"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array|Iterable|Object} tasks - A collection containing"," * [async functions]{@link AsyncFunction} to run in series."," * Each function can complete with any number of optional `result` values."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed. This function gets a results array (or object)"," * containing all the result arguments passed to the `task` callbacks. Invoked"," * with (err, result)."," * @example"," * async.series(["," *     function(callback) {"," *         // do some stuff ..."," *         callback(null, 'one');"," *     },"," *     function(callback) {"," *         // do some more stuff ..."," *         callback(null, 'two');"," *     }"," * ],"," * // optional callback"," * function(err, results) {"," *     // results is now equal to ['one', 'two']"," * });"," *"," * async.series({"," *     one: function(callback) {"," *         setTimeout(function() {"," *             callback(null, 1);"," *         }, 200);"," *     },"," *     two: function(callback){"," *         setTimeout(function() {"," *             callback(null, 2);"," *         }, 100);"," *     }"," * }, function(err, results) {"," *     // results is now equal to: {one: 1, two: 2}"," * });"," */","function series(tasks, callback) {","  (0, _parallel2.default)(_eachOfSeries2.default, tasks, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"82":1,"83":0,"85":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/some.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/some.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":1,"11":1},"b":{"1":[0,3],"2":[3,3]},"f":{"1":3},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":51}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"9":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"10":{"start":{"line":51,"column":0},"end":{"line":51,"column":102}},"11":{"start":{"line":52,"column":0},"end":{"line":52,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallel = require('./internal/doParallel');","","var _doParallel2 = _interopRequireDefault(_doParallel);","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Returns `true` if at least one element in the `coll` satisfies an async test."," * If any iteratee call returns `true`, the main `callback` is immediately"," * called."," *"," * @name some"," * @static"," * @memberOf module:Collections"," * @method"," * @alias any"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in parallel."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," * @example"," *"," * async.some(['file1','file2','file3'], function(filePath, callback) {"," *     fs.access(filePath, function(err) {"," *         callback(null, !err)"," *     });"," * }, function(err, result) {"," *     // if result is true then at least one of the files exists"," * });"," */","exports.default = (0, _doParallel2.default)((0, _createTester2.default)(Boolean, _identity2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":3,"51":1,"52":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/someLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/someLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":1,"11":1},"b":{"1":[0,3],"2":[3,3]},"f":{"1":3},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":65}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":51}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"9":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"10":{"start":{"line":42,"column":0},"end":{"line":42,"column":107}},"11":{"start":{"line":43,"column":0},"end":{"line":43,"column":36}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _createTester = require('./internal/createTester');","","var _createTester2 = _interopRequireDefault(_createTester);","","var _doParallelLimit = require('./internal/doParallelLimit');","","var _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);","","var _identity = require('lodash/identity');","","var _identity2 = _interopRequireDefault(_identity);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time."," *"," * @name someLimit"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.some]{@link module:Collections.some}"," * @alias anyLimit"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in parallel."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," */","exports.default = (0, _doParallelLimit2.default)((0, _createTester2.default)(Boolean, _identity2.default));","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":3,"42":1,"43":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/someSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/someSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":37,"column":0},"end":{"line":37,"column":65}},"9":{"start":{"line":38,"column":0},"end":{"line":38,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _someLimit = require('./someLimit');","","var _someLimit2 = _interopRequireDefault(_someLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time."," *"," * @name someSeries"," * @static"," * @memberOf module:Collections"," * @method"," * @see [async.some]{@link module:Collections.some}"," * @alias anySeries"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async truth test to apply to each item"," * in the collections in series."," * The iteratee should complete with a boolean `result` value."," * Invoked with (item, callback)."," * @param {Function} [callback] - A callback which is called as soon as any"," * iteratee returns `true`, or after all the iteratee functions have finished."," * Result will be either `true` or `false` depending on the values of the async"," * tests. Invoked with (err, result)."," */","exports.default = (0, _doLimit2.default)(_someLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"37":1,"38":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/sortBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/sortBy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":4,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"sortBy","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":42}}},"3":{"name":"(anonymous_3)","line":75,"loc":{"start":{"line":75,"column":29},"end":{"line":75,"column":52}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":21},"end":{"line":76,"column":46}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":7},"end":{"line":80,"column":31}}},"6":{"name":"comparator","line":85,"loc":{"start":{"line":85,"column":4},"end":{"line":85,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":52}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":59}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":28}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":73,"column":0},"end":{"line":90,"column":1}},"14":{"start":{"line":74,"column":4},"end":{"line":74,"column":55}},"15":{"start":{"line":75,"column":4},"end":{"line":83,"column":7}},"16":{"start":{"line":76,"column":8},"end":{"line":79,"column":11}},"17":{"start":{"line":77,"column":12},"end":{"line":77,"column":42}},"18":{"start":{"line":77,"column":21},"end":{"line":77,"column":42}},"19":{"start":{"line":78,"column":12},"end":{"line":78,"column":61}},"20":{"start":{"line":81,"column":8},"end":{"line":81,"column":38}},"21":{"start":{"line":81,"column":17},"end":{"line":81,"column":38}},"22":{"start":{"line":82,"column":8},"end":{"line":82,"column":112}},"23":{"start":{"line":85,"column":4},"end":{"line":89,"column":5}},"24":{"start":{"line":86,"column":8},"end":{"line":87,"column":31}},"25":{"start":{"line":88,"column":8},"end":{"line":88,"column":42}},"26":{"start":{"line":91,"column":0},"end":{"line":91,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":12},"end":{"line":77,"column":12}},{"start":{"line":77,"column":12},"end":{"line":77,"column":12}}]},"4":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":8}},{"start":{"line":81,"column":8},"end":{"line":81,"column":8}}]},"5":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":23},"end":{"line":88,"column":25}},{"start":{"line":88,"column":28},"end":{"line":88,"column":41}}]},"6":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":36},"end":{"line":88,"column":37}},{"start":{"line":88,"column":40},"end":{"line":88,"column":41}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = sortBy;","","var _arrayMap = require('lodash/_arrayMap');","","var _arrayMap2 = _interopRequireDefault(_arrayMap);","","var _baseProperty = require('lodash/_baseProperty');","","var _baseProperty2 = _interopRequireDefault(_baseProperty);","","var _map = require('./map');","","var _map2 = _interopRequireDefault(_map);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Sorts a list by the results of running each `coll` value through an async"," * `iteratee`."," *"," * @name sortBy"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {AsyncFunction} iteratee - An async function to apply to each item in"," * `coll`."," * The iteratee should complete with a value to use as the sort criteria as"," * its `result`."," * Invoked with (item, callback)."," * @param {Function} callback - A callback which is called after all the"," * `iteratee` functions have finished, or an error occurs. Results is the items"," * from the original `coll` sorted by the values returned by the `iteratee`"," * calls. Invoked with (err, results)."," * @example"," *"," * async.sortBy(['file1','file2','file3'], function(file, callback) {"," *     fs.stat(file, function(err, stats) {"," *         callback(err, stats.mtime);"," *     });"," * }, function(err, results) {"," *     // results is now the original array of files sorted by"," *     // modified date"," * });"," *"," * // By modifying the callback parameter the"," * // sorting order can be influenced:"," *"," * // ascending order"," * async.sortBy([1,9,3,5], function(x, callback) {"," *     callback(null, x);"," * }, function(err,result) {"," *     // result callback"," * });"," *"," * // descending order"," * async.sortBy([1,9,3,5], function(x, callback) {"," *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around"," * }, function(err,result) {"," *     // result callback"," * });"," */","function sortBy(coll, iteratee, callback) {","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    (0, _map2.default)(coll, function (x, callback) {","        _iteratee(x, function (err, criteria) {","            if (err) return callback(err);","            callback(null, { value: x, criteria: criteria });","        });","    }, function (err, results) {","        if (err) return callback(err);","        callback(null, (0, _arrayMap2.default)(results.sort(comparator), (0, _baseProperty2.default)('value')));","    });","","    function comparator(left, right) {","        var a = left.criteria,","            b = right.criteria;","        return a < b ? -1 : a > b ? 1 : 0;","    }","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"81":0,"82":0,"85":1,"86":0,"88":0,"91":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/timeout.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/timeout.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[1,1],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"timeout","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":46}}},"3":{"name":"injectedCallback","line":63,"loc":{"start":{"line":63,"column":4},"end":{"line":63,"column":32}}},"4":{"name":"timeoutCallback","line":70,"loc":{"start":{"line":70,"column":4},"end":{"line":70,"column":31}}},"5":{"name":"(anonymous_5)","line":83,"loc":{"start":{"line":83,"column":40},"end":{"line":83,"column":70}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":57}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":61}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":59,"column":0},"end":{"line":89,"column":1}},"10":{"start":{"line":60,"column":4},"end":{"line":60,"column":32}},"11":{"start":{"line":61,"column":4},"end":{"line":61,"column":25}},"12":{"start":{"line":63,"column":4},"end":{"line":68,"column":5}},"13":{"start":{"line":64,"column":8},"end":{"line":67,"column":9}},"14":{"start":{"line":65,"column":12},"end":{"line":65,"column":52}},"15":{"start":{"line":66,"column":12},"end":{"line":66,"column":32}},"16":{"start":{"line":70,"column":4},"end":{"line":79,"column":5}},"17":{"start":{"line":71,"column":8},"end":{"line":71,"column":47}},"18":{"start":{"line":72,"column":8},"end":{"line":72,"column":77}},"19":{"start":{"line":73,"column":8},"end":{"line":73,"column":33}},"20":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"21":{"start":{"line":75,"column":12},"end":{"line":75,"column":30}},"22":{"start":{"line":77,"column":8},"end":{"line":77,"column":24}},"23":{"start":{"line":78,"column":8},"end":{"line":78,"column":32}},"24":{"start":{"line":81,"column":4},"end":{"line":81,"column":47}},"25":{"start":{"line":83,"column":4},"end":{"line":88,"column":7}},"26":{"start":{"line":84,"column":8},"end":{"line":84,"column":40}},"27":{"start":{"line":86,"column":8},"end":{"line":86,"column":58}},"28":{"start":{"line":87,"column":8},"end":{"line":87,"column":54}},"29":{"start":{"line":90,"column":0},"end":{"line":90,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]},"3":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]},"4":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":19},"end":{"line":71,"column":31}},{"start":{"line":71,"column":35},"end":{"line":71,"column":46}}]},"5":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":8}},{"start":{"line":74,"column":8},"end":{"line":74,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = timeout;","","var _initialParams = require('./internal/initialParams');","","var _initialParams2 = _interopRequireDefault(_initialParams);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Sets a time limit on an asynchronous function. If the function does not call"," * its callback within the specified milliseconds, it will be called with a"," * timeout error. The code property for the error object will be `'ETIMEDOUT'`."," *"," * @name timeout"," * @static"," * @memberOf module:Utils"," * @method"," * @category Util"," * @param {AsyncFunction} asyncFn - The async function to limit in time."," * @param {number} milliseconds - The specified time limit."," * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)"," * to timeout Error for more information.."," * @returns {AsyncFunction} Returns a wrapped function that can be used with any"," * of the control flow functions."," * Invoke this function with the same parameters as you would `asyncFunc`."," * @example"," *"," * function myFunction(foo, callback) {"," *     doAsyncTask(foo, function(err, data) {"," *         // handle errors"," *         if (err) return callback(err);"," *"," *         // do some stuff ..."," *"," *         // return processed data"," *         return callback(null, data);"," *     });"," * }"," *"," * var wrapped = async.timeout(myFunction, 1000);"," *"," * // call `wrapped` as you would `myFunction`"," * wrapped({ bar: 'bar' }, function(err, data) {"," *     // if `myFunction` takes < 1000 ms to execute, `err`"," *     // and `data` will have their expected values"," *"," *     // else `err` will be an Error with the code 'ETIMEDOUT'"," * });"," */","function timeout(asyncFn, milliseconds, info) {","    var originalCallback, timer;","    var timedOut = false;","","    function injectedCallback() {","        if (!timedOut) {","            originalCallback.apply(null, arguments);","            clearTimeout(timer);","        }","    }","","    function timeoutCallback() {","        var name = asyncFn.name || 'anonymous';","        var error = new Error('Callback function \"' + name + '\" timed out.');","        error.code = 'ETIMEDOUT';","        if (info) {","            error.info = info;","        }","        timedOut = true;","        originalCallback(error);","    }","","    var fn = (0, _wrapAsync2.default)(asyncFn);","","    return (0, _initialParams2.default)(function (args, origCallback) {","        originalCallback = origCallback;","        // setup timer and call original function","        timer = setTimeout(timeoutCallback, milliseconds);","        fn.apply(null, args.concat(injectedCallback));","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"59":1,"60":0,"61":0,"63":1,"64":0,"65":0,"66":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"77":0,"78":0,"81":0,"83":0,"84":0,"86":0,"87":0,"90":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/times.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/times.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":55}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":49,"column":0},"end":{"line":49,"column":73}},"9":{"start":{"line":50,"column":0},"end":{"line":50,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _timesLimit = require('./timesLimit');","","var _timesLimit2 = _interopRequireDefault(_timesLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Calls the `iteratee` function `n` times, and accumulates results in the same"," * manner you would use with [map]{@link module:Collections.map}."," *"," * @name times"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.map]{@link module:Collections.map}"," * @category Control Flow"," * @param {number} n - The number of times to run the function."," * @param {AsyncFunction} iteratee - The async function to call `n` times."," * Invoked with the iteration index and a callback: (n, next)."," * @param {Function} callback - see {@link module:Collections.map}."," * @example"," *"," * // Pretend this is some complicated async factory"," * var createUser = function(id, callback) {"," *     callback(null, {"," *         id: 'user' + id"," *     });"," * };"," *"," * // generate 5 users"," * async.times(5, function(n, next) {"," *     createUser(n, function(err, user) {"," *         next(err, user);"," *     });"," * }, function(err, users) {"," *     // we should now have 5 users"," * });"," */","exports.default = (0, _doLimit2.default)(_timesLimit2.default, Infinity);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/timesLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/timesLimit.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":1},"b":{"1":[1,2],"2":[3,3]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}}},"2":{"name":"timeLimit","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":53}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":20,"column":39},"end":{"line":20,"column":93}},"11":{"start":{"line":38,"column":0},"end":{"line":41,"column":1}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":53}},"13":{"start":{"line":40,"column":2},"end":{"line":40,"column":93}},"14":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":70},"end":{"line":20,"column":73}},{"start":{"line":20,"column":76},"end":{"line":20,"column":92}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = timeLimit;","","var _mapLimit = require('./mapLimit');","","var _mapLimit2 = _interopRequireDefault(_mapLimit);","","var _baseRange = require('lodash/_baseRange');","","var _baseRange2 = _interopRequireDefault(_baseRange);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a"," * time."," *"," * @name timesLimit"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.times]{@link module:ControlFlow.times}"," * @category Control Flow"," * @param {number} count - The number of times to run the function."," * @param {number} limit - The maximum number of async operations at a time."," * @param {AsyncFunction} iteratee - The async function to call `n` times."," * Invoked with the iteration index and a callback: (n, next)."," * @param {Function} callback - see [async.map]{@link module:Collections.map}."," */","function timeLimit(count, limit, iteratee, callback) {","  var _iteratee = (0, _wrapAsync2.default)(iteratee);","  (0, _mapLimit2.default)((0, _baseRange2.default)(0, count, 1), limit, _iteratee, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":3,"38":1,"39":0,"40":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/timesSeries.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/timesSeries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":1,"9":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":55}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"7":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"8":{"start":{"line":31,"column":0},"end":{"line":31,"column":66}},"9":{"start":{"line":32,"column":0},"end":{"line":32,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _timesLimit = require('./timesLimit');","","var _timesLimit2 = _interopRequireDefault(_timesLimit);","","var _doLimit = require('./internal/doLimit');","","var _doLimit2 = _interopRequireDefault(_doLimit);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time."," *"," * @name timesSeries"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.times]{@link module:ControlFlow.times}"," * @category Control Flow"," * @param {number} n - The number of times to run the function."," * @param {AsyncFunction} iteratee - The async function to call `n` times."," * Invoked with the iteration index and a callback: (n, next)."," * @param {Function} callback - see {@link module:Collections.map}."," */","exports.default = (0, _doLimit2.default)(_timesLimit2.default, 1);","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":2,"31":1,"32":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/transform.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/transform.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":5,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[1,4],"2":[5,5],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":5,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"2":{"name":"transform","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":58}}},"3":{"name":"(anonymous_3)","line":81,"loc":{"start":{"line":81,"column":32},"end":{"line":81,"column":52}}},"4":{"name":"(anonymous_4)","line":83,"loc":{"start":{"line":83,"column":7},"end":{"line":83,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":49}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":39}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":43}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":49}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":53}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":95}},"14":{"start":{"line":28,"column":39},"end":{"line":28,"column":93}},"15":{"start":{"line":72,"column":0},"end":{"line":86,"column":1}},"16":{"start":{"line":73,"column":4},"end":{"line":77,"column":5}},"17":{"start":{"line":74,"column":8},"end":{"line":74,"column":28}},"18":{"start":{"line":75,"column":8},"end":{"line":75,"column":31}},"19":{"start":{"line":76,"column":8},"end":{"line":76,"column":61}},"20":{"start":{"line":78,"column":4},"end":{"line":78,"column":63}},"21":{"start":{"line":79,"column":4},"end":{"line":79,"column":55}},"22":{"start":{"line":81,"column":4},"end":{"line":85,"column":7}},"23":{"start":{"line":82,"column":8},"end":{"line":82,"column":41}},"24":{"start":{"line":84,"column":8},"end":{"line":84,"column":35}},"25":{"start":{"line":87,"column":0},"end":{"line":87,"column":36}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":70},"end":{"line":28,"column":73}},{"start":{"line":28,"column":76},"end":{"line":28,"column":92}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":49}},{"start":{"line":28,"column":53},"end":{"line":28,"column":67}}]},"3":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"4":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":53},"end":{"line":76,"column":55}},{"start":{"line":76,"column":58},"end":{"line":76,"column":60}}]},"5":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":35},"end":{"line":78,"column":43}},{"start":{"line":78,"column":47},"end":{"line":78,"column":61}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = transform;","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _eachOf = require('./eachOf');","","var _eachOf2 = _interopRequireDefault(_eachOf);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * A relative of `reduce`.  Takes an Object or Array, and iterates over each"," * element in series, each step potentially mutating an `accumulator` value."," * The type of the accumulator defaults to the type of collection passed in."," *"," * @name transform"," * @static"," * @memberOf module:Collections"," * @method"," * @category Collection"," * @param {Array|Iterable|Object} coll - A collection to iterate over."," * @param {*} [accumulator] - The initial state of the transform.  If omitted,"," * it will default to an empty Object or Array, depending on the type of `coll`"," * @param {AsyncFunction} iteratee - A function applied to each item in the"," * collection that potentially modifies the accumulator."," * Invoked with (accumulator, item, key, callback)."," * @param {Function} [callback] - A callback which is called after all the"," * `iteratee` functions have finished. Result is the transformed accumulator."," * Invoked with (err, result)."," * @example"," *"," * async.transform([1,2,3], function(acc, item, index, callback) {"," *     // pointless async:"," *     process.nextTick(function() {"," *         acc.push(item * 2)"," *         callback(null)"," *     });"," * }, function(err, result) {"," *     // result is now equal to [2, 4, 6]"," * });"," *"," * @example"," *"," * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {"," *     setImmediate(function () {"," *         obj[key] = val * 2;"," *         callback();"," *     })"," * }, function (err, result) {"," *     // result is equal to {a: 2, b: 4, c: 6}"," * })"," */","function transform(coll, accumulator, iteratee, callback) {","    if (arguments.length <= 3) {","        callback = iteratee;","        iteratee = accumulator;","        accumulator = (0, _isArray2.default)(coll) ? [] : {};","    }","    callback = (0, _once2.default)(callback || _noop2.default);","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","","    (0, _eachOf2.default)(coll, function (v, k, cb) {","        _iteratee(accumulator, v, k, cb);","    }, function (err) {","        callback(err, accumulator);","    });","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"28":5,"72":1,"73":0,"74":0,"75":0,"76":0,"78":0,"79":0,"81":0,"82":0,"84":0,"87":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/unmemoize.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/unmemoize.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"unmemoize","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":23}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":11},"end":{"line":21,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":20,"column":0},"end":{"line":24,"column":1}},"4":{"start":{"line":21,"column":4},"end":{"line":23,"column":6}},"5":{"start":{"line":22,"column":8},"end":{"line":22,"column":60}},"6":{"start":{"line":25,"column":0},"end":{"line":25,"column":36}}},"branchMap":{"1":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":16},"end":{"line":22,"column":29}},{"start":{"line":22,"column":33},"end":{"line":22,"column":35}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = unmemoize;","/**"," * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,"," * unmemoized form. Handy for testing."," *"," * @name unmemoize"," * @static"," * @memberOf module:Utils"," * @method"," * @see [async.memoize]{@link module:Utils.memoize}"," * @category Util"," * @param {AsyncFunction} fn - the memoized function"," * @returns {AsyncFunction} a function that calls the original unmemoized function"," */","function unmemoize(fn) {","    return function () {","        return (fn.unmemoized || fn).apply(null, arguments);","    };","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"20":1,"21":0,"22":0,"25":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/until.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/until.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"until","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":41}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":26},"end":{"line":37,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":36,"column":0},"end":{"line":40,"column":1}},"8":{"start":{"line":37,"column":4},"end":{"line":39,"column":27}},"9":{"start":{"line":38,"column":8},"end":{"line":38,"column":44}},"10":{"start":{"line":41,"column":0},"end":{"line":41,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = until;","","var _whilst = require('./whilst');","","var _whilst2 = _interopRequireDefault(_whilst);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when"," * stopped, or an error occurs. `callback` will be passed an error and any"," * arguments passed to the final `iteratee`'s callback."," *"," * The inverse of [whilst]{@link module:ControlFlow.whilst}."," *"," * @name until"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @see [async.whilst]{@link module:ControlFlow.whilst}"," * @category Control Flow"," * @param {Function} test - synchronous truth test to perform before each"," * execution of `iteratee`. Invoked with ()."," * @param {AsyncFunction} iteratee - An async function which is called each time"," * `test` fails. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has passed and repeated execution of `iteratee` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `iteratee`'s"," * callback. Invoked with (err, [results]);"," */","function until(test, iteratee, callback) {","    (0, _whilst2.default)(function () {","        return !test.apply(this, arguments);","    }, iteratee, callback);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"36":1,"37":0,"38":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/whilst.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/whilst.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[1,3],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":4,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"2":{"name":"whilst","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":42}}},"3":{"name":"(anonymous_3)","line":64,"loc":{"start":{"line":64,"column":35},"end":{"line":64,"column":56}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":47}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":51}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":49}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"12":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"13":{"start":{"line":60,"column":0},"end":{"line":70,"column":1}},"14":{"start":{"line":61,"column":4},"end":{"line":61,"column":67}},"15":{"start":{"line":62,"column":4},"end":{"line":62,"column":55}},"16":{"start":{"line":63,"column":4},"end":{"line":63,"column":39}},"17":{"start":{"line":63,"column":17},"end":{"line":63,"column":39}},"18":{"start":{"line":64,"column":4},"end":{"line":68,"column":7}},"19":{"start":{"line":65,"column":8},"end":{"line":65,"column":38}},"20":{"start":{"line":65,"column":17},"end":{"line":65,"column":38}},"21":{"start":{"line":66,"column":8},"end":{"line":66,"column":43}},"22":{"start":{"line":66,"column":20},"end":{"line":66,"column":43}},"23":{"start":{"line":67,"column":8},"end":{"line":67,"column":50}},"24":{"start":{"line":69,"column":4},"end":{"line":69,"column":20}},"25":{"start":{"line":71,"column":0},"end":{"line":71,"column":36}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"3":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":39},"end":{"line":61,"column":47}},{"start":{"line":61,"column":51},"end":{"line":61,"column":65}}]},"4":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"5":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"6":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":8}},{"start":{"line":66,"column":8},"end":{"line":66,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","exports.default = whilst;","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _rest = require('./internal/rest');","","var _rest2 = _interopRequireDefault(_rest);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when"," * stopped, or an error occurs."," *"," * @name whilst"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Function} test - synchronous truth test to perform before each"," * execution of `iteratee`. Invoked with ()."," * @param {AsyncFunction} iteratee - An async function which is called each time"," * `test` passes. Invoked with (callback)."," * @param {Function} [callback] - A callback which is called after the test"," * function has failed and repeated execution of `iteratee` has stopped. `callback`"," * will be passed an error and any arguments passed to the final `iteratee`'s"," * callback. Invoked with (err, [results]);"," * @returns undefined"," * @example"," *"," * var count = 0;"," * async.whilst("," *     function() { return count < 5; },"," *     function(callback) {"," *         count++;"," *         setTimeout(function() {"," *             callback(null, count);"," *         }, 1000);"," *     },"," *     function (err, n) {"," *         // 5 seconds have passed, n = 5"," *     }"," * );"," */","function whilst(test, iteratee, callback) {","    callback = (0, _onlyOnce2.default)(callback || _noop2.default);","    var _iteratee = (0, _wrapAsync2.default)(iteratee);","    if (!test()) return callback(null);","    var next = (0, _rest2.default)(function (err, args) {","        if (err) return callback(err);","        if (test()) return _iteratee(next);","        callback.apply(null, [null].concat(args));","    });","    _iteratee(next);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":4,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"69":0,"71":1}},"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/waterfall.js":{"path":"/home/travis/build/npmtest/node-npmtest-async/node_modules/async/waterfall.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":6,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[1,5],"7":[6,6]},"f":{"1":0,"2":0,"3":0,"4":6},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":45}}},"2":{"name":"nextTask","line":13,"loc":{"start":{"line":13,"column":4},"end":{"line":13,"column":28}}},"3":{"name":"(anonymous_3)","line":18,"loc":{"start":{"line":18,"column":71},"end":{"line":18,"column":92}}},"4":{"name":"_interopRequireDefault","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":32,"column":2}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":63}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":128}},"5":{"start":{"line":9,"column":40},"end":{"line":9,"column":128}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":41}},"7":{"start":{"line":10,"column":23},"end":{"line":10,"column":41}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":22}},"9":{"start":{"line":13,"column":4},"end":{"line":29,"column":5}},"10":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"11":{"start":{"line":15,"column":12},"end":{"line":15,"column":61}},"12":{"start":{"line":18,"column":8},"end":{"line":23,"column":12}},"13":{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},"14":{"start":{"line":20,"column":16},"end":{"line":20,"column":64}},"15":{"start":{"line":22,"column":12},"end":{"line":22,"column":27}},"16":{"start":{"line":25,"column":8},"end":{"line":25,"column":32}},"17":{"start":{"line":27,"column":8},"end":{"line":27,"column":64}},"18":{"start":{"line":28,"column":8},"end":{"line":28,"column":31}},"19":{"start":{"line":31,"column":4},"end":{"line":31,"column":17}},"20":{"start":{"line":34,"column":0},"end":{"line":34,"column":41}},"21":{"start":{"line":36,"column":0},"end":{"line":36,"column":49}},"22":{"start":{"line":38,"column":0},"end":{"line":38,"column":35}},"23":{"start":{"line":40,"column":0},"end":{"line":40,"column":43}},"24":{"start":{"line":42,"column":0},"end":{"line":42,"column":39}},"25":{"start":{"line":44,"column":0},"end":{"line":44,"column":43}},"26":{"start":{"line":46,"column":0},"end":{"line":46,"column":39}},"27":{"start":{"line":48,"column":0},"end":{"line":48,"column":43}},"28":{"start":{"line":50,"column":0},"end":{"line":50,"column":47}},"29":{"start":{"line":52,"column":0},"end":{"line":52,"column":51}},"30":{"start":{"line":54,"column":0},"end":{"line":54,"column":49}},"31":{"start":{"line":56,"column":0},"end":{"line":56,"column":53}},"32":{"start":{"line":58,"column":0},"end":{"line":58,"column":95}},"33":{"start":{"line":58,"column":39},"end":{"line":58,"column":93}},"34":{"start":{"line":60,"column":0},"end":{"line":60,"column":36}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":35},"end":{"line":8,"column":43}},{"start":{"line":8,"column":47},"end":{"line":8,"column":61}}]},"2":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":4}},{"start":{"line":9,"column":4},"end":{"line":9,"column":4}}]},"3":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]},"4":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":8}},{"start":{"line":14,"column":8},"end":{"line":14,"column":8}}]},"5":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":12}},{"start":{"line":19,"column":12},"end":{"line":19,"column":12}}]},"6":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":70},"end":{"line":58,"column":73}},{"start":{"line":58,"column":76},"end":{"line":58,"column":92}}]},"7":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":46},"end":{"line":58,"column":49}},{"start":{"line":58,"column":53},"end":{"line":58,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","    value: true","});","","exports.default = function (tasks, callback) {","    callback = (0, _once2.default)(callback || _noop2.default);","    if (!(0, _isArray2.default)(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));","    if (!tasks.length) return callback();","    var taskIndex = 0;","","    function nextTask(args) {","        if (taskIndex === tasks.length) {","            return callback.apply(null, [null].concat(args));","        }","","        var taskCallback = (0, _onlyOnce2.default)((0, _rest2.default)(function (err, args) {","            if (err) {","                return callback.apply(null, [err].concat(args));","            }","            nextTask(args);","        }));","","        args.push(taskCallback);","","        var task = (0, _wrapAsync2.default)(tasks[taskIndex++]);","        task.apply(null, args);","    }","","    nextTask([]);","};","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _noop = require('lodash/noop');","","var _noop2 = _interopRequireDefault(_noop);","","var _once = require('./internal/once');","","var _once2 = _interopRequireDefault(_once);","","var _rest = require('./internal/rest');","","var _rest2 = _interopRequireDefault(_rest);","","var _onlyOnce = require('./internal/onlyOnce');","","var _onlyOnce2 = _interopRequireDefault(_onlyOnce);","","var _wrapAsync = require('./internal/wrapAsync');","","var _wrapAsync2 = _interopRequireDefault(_wrapAsync);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","module.exports = exports['default'];","","/**"," * Runs the `tasks` array of functions in series, each passing their results to"," * the next in the array. However, if any of the `tasks` pass an error to their"," * own callback, the next function is not executed, and the main `callback` is"," * immediately called with the error."," *"," * @name waterfall"," * @static"," * @memberOf module:ControlFlow"," * @method"," * @category Control Flow"," * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}"," * to run."," * Each function should complete with any number of `result` values."," * The `result` values will be passed as arguments, in order, to the next task."," * @param {Function} [callback] - An optional callback to run once all the"," * functions have completed. This will be passed the results of the last task's"," * callback. Invoked with (err, [results])."," * @returns undefined"," * @example"," *"," * async.waterfall(["," *     function(callback) {"," *         callback(null, 'one', 'two');"," *     },"," *     function(arg1, arg2, callback) {"," *         // arg1 now equals 'one' and arg2 now equals 'two'"," *         callback(null, 'three');"," *     },"," *     function(arg1, callback) {"," *         // arg1 now equals 'three'"," *         callback(null, 'done');"," *     }"," * ], function (err, result) {"," *     // result now equals 'done'"," * });"," *"," * // Or, with named functions:"," * async.waterfall(["," *     myFirstFunction,"," *     mySecondFunction,"," *     myLastFunction,"," * ], function (err, result) {"," *     // result now equals 'done'"," * });"," * function myFirstFunction(callback) {"," *     callback(null, 'one', 'two');"," * }"," * function mySecondFunction(arg1, arg2, callback) {"," *     // arg1 now equals 'one' and arg2 now equals 'two'"," *     callback(null, 'three');"," * }"," * function myLastFunction(arg1, callback) {"," *     // arg1 now equals 'three'"," *     callback(null, 'done');"," * }"," */"],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"11":0,"13":1,"14":0,"15":0,"18":0,"19":0,"20":0,"22":0,"25":0,"27":0,"28":0,"31":0,"34":1,"36":1,"38":1,"40":1,"42":1,"44":1,"46":1,"48":1,"50":1,"52":1,"54":1,"56":1,"58":6,"60":1}}}